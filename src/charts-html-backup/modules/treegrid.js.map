{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/treegrid\n * @requires highcharts\n *\n * Tree Grid\n *\n * (c) 2016-2025 Jon Arild Nygard\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(root[\"_Highcharts\"], root[\"_Highcharts\"][\"StackItem\"], root[\"_Highcharts\"][\"Axis\"], root[\"_Highcharts\"][\"Color\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/treegrid\", [\"highcharts/highcharts\"], function (amd1) {return factory(amd1,amd1[\"StackItem\"],amd1[\"Axis\"],amd1[\"Color\"]);});\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/treegrid\"] = factory(root[\"_Highcharts\"], root[\"_Highcharts\"][\"StackItem\"], root[\"_Highcharts\"][\"Axis\"], root[\"_Highcharts\"][\"Color\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"StackItem\"], root[\"Highcharts\"][\"Axis\"], root[\"Highcharts\"][\"Color\"]);\n})(typeof window === 'undefined' ? this : window, (__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__184__, __WEBPACK_EXTERNAL_MODULE__532__, __WEBPACK_EXTERNAL_MODULE__620__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 184:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__184__;\n\n/***/ }),\n\n/***/ 532:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__532__;\n\n/***/ }),\n\n/***/ 620:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__620__;\n\n/***/ }),\n\n/***/ 944:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ treegrid_src)\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"StackItem\"],\"commonjs\":[\"highcharts\",\"StackItem\"],\"commonjs2\":[\"highcharts\",\"StackItem\"],\"root\":[\"Highcharts\",\"StackItem\"]}\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_ = __webpack_require__(184);\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default = /*#__PURE__*/__webpack_require__.n(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_);\n;// ./code/es-modules/Core/Axis/BrokenAxis.js\n/* *\n *\n *  (c) 2009-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { addEvent, find, fireEvent, isArray, isNumber, pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Axis with support of broken data rows.\n * @private\n */\nvar BrokenAxis;\n(function (BrokenAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds support for broken axes.\n     * @private\n     */\n    function compose(AxisClass, SeriesClass) {\n        if (!AxisClass.keepProps.includes('brokenAxis')) {\n            AxisClass.keepProps.push('brokenAxis');\n            addEvent(AxisClass, 'init', onAxisInit);\n            addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n            addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            const seriesProto = SeriesClass.prototype;\n            seriesProto.drawBreaks = seriesDrawBreaks;\n            seriesProto.gappedPath = seriesGappedPath;\n            addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n            addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n        }\n        return AxisClass;\n    }\n    BrokenAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAxisAfterInit() {\n        if (typeof this.brokenAxis !== 'undefined') {\n            this.brokenAxis.setBreaks(this.options.breaks, false);\n        }\n    }\n    /**\n     * Force Axis to be not-ordinal when breaks are defined.\n     * @private\n     */\n    function onAxisAfterSetOptions() {\n        const axis = this;\n        // Too early for axis.brokenAxis?.hasBreaks.\n        if (Object.keys(axis.options.breaks?.[0] || {}).length) {\n            axis.options.ordinal = false;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisAfterSetTickPositions() {\n        const axis = this, brokenAxis = axis.brokenAxis;\n        if (brokenAxis?.hasBreaks) {\n            const tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n            for (let i = 0; i < tickPositions.length; i++) {\n                if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                    newPositions.push(tickPositions[i]);\n                }\n            }\n            axis.tickPositions = newPositions;\n            axis.tickPositions.info = info;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInit() {\n        const axis = this;\n        if (!axis.brokenAxis) {\n            axis.brokenAxis = new Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterGeneratePoints() {\n        const { isDirty, options: { connectNulls }, points, xAxis, yAxis } = this;\n        // Set, or reset visibility of the points. Axis.setBreaks marks\n        // the series as isDirty\n        if (isDirty) {\n            let i = points.length;\n            while (i--) {\n                const point = points[i];\n                // Respect nulls inside the break (#4275)\n                const nullGap = point.y === null && connectNulls === false;\n                const isPointInBreak = (!nullGap && (xAxis?.brokenAxis?.isInAnyBreak(point.x, true) ||\n                    yAxis?.brokenAxis?.isInAnyBreak(point.y, true)));\n                // Set point.visible if in any break.\n                // If not in break, reset visible to original value.\n                point.visible = isPointInBreak ?\n                    false :\n                    point.options.visible !== false;\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterRender() {\n        this.drawBreaks(this.xAxis, ['x']);\n        this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n    }\n    /**\n     * @private\n     */\n    function seriesDrawBreaks(axis, keys) {\n        const series = this, points = series.points;\n        let breaks, threshold, y;\n        if (axis?.brokenAxis?.hasBreaks) {\n            const brokenAxis = axis.brokenAxis;\n            keys.forEach(function (key) {\n                breaks = brokenAxis?.breakArray || [];\n                threshold = axis.isXAxis ?\n                    axis.min :\n                    pick(series.options.threshold, axis.min);\n                points.forEach(function (point) {\n                    y = point['stack' + key.toUpperCase()] ??\n                        point[key];\n                    breaks.forEach(function (brk) {\n                        if (isNumber(threshold) && isNumber(y)) {\n                            let eventName = '';\n                            if ((threshold < brk.from && y > brk.to) ||\n                                (threshold > brk.from && y < brk.from)) {\n                                eventName = 'pointBreak';\n                            }\n                            else if ((threshold < brk.from &&\n                                y > brk.from &&\n                                y < brk.to) || (threshold > brk.from &&\n                                y > brk.to &&\n                                y < brk.from)) {\n                                eventName = 'pointInBreak';\n                            }\n                            if (eventName) {\n                                fireEvent(axis, eventName, { point, brk });\n                            }\n                        }\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * Extend getGraphPath by identifying gaps in the data so that we\n     * can draw a gap in the line or area. This was moved from ordinal\n     * axis module to broken axis module as of #5045.\n     *\n     * @private\n     * @function Highcharts.Series#gappedPath\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Gapped path\n     */\n    function seriesGappedPath() {\n        const currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping?.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n        let gapSize = this.options.gapSize, i = points.length - 1, stack;\n        /**\n         * Defines when to display a gap in the graph, together with the\n         * [gapUnit](plotOptions.series.gapUnit) option.\n         *\n         * In case when `dataGrouping` is enabled, points can be grouped\n         * into a larger time span. This can make the grouped points to\n         * have a greater distance than the absolute value of `gapSize`\n         * property, which will result in disappearing graph completely.\n         * To prevent this situation the mentioned distance between\n         * grouped points is used instead of previously defined\n         * `gapSize`.\n         *\n         * In practice, this option is most often used to visualize gaps\n         * in time series. In a stock chart, intraday data is available\n         * for daytime hours, while gaps will appear in nights and\n         * weekends.\n         *\n         * @see [gapUnit](plotOptions.series.gapUnit)\n         * @see [xAxis.breaks](#xAxis.breaks)\n         *\n         * @sample {highstock} stock/plotoptions/series-gapsize/\n         * Setting the gap size to 2 introduces gaps for weekends in\n         * daily datasets.\n         *\n         * @type      {number}\n         * @default   0\n         * @product   highstock\n         * @requires  modules/broken-axis\n         * @apioption plotOptions.series.gapSize\n         */\n        /**\n         * Together with [gapSize](plotOptions.series.gapSize), this\n         * option defines where to draw gaps in the graph.\n         *\n         * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n         * means that if the distance between two points is greater than\n         * 5 times that of the two closest points, the graph will be\n         * broken.\n         *\n         * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n         * axis values, which on a datetime axis is milliseconds. This\n         * also applies to the navigator series that inherits gap\n         * options from the base series.\n         *\n         * @see [gapSize](plotOptions.series.gapSize)\n         *\n         * @type       {string}\n         * @default    relative\n         * @since      5.0.13\n         * @product    highstock\n         * @validvalue [\"relative\", \"value\"]\n         * @requires   modules/broken-axis\n         * @apioption  plotOptions.series.gapUnit\n         */\n        if (gapSize && i > 0) { // #5008\n            // Gap unit is relative\n            if (this.options.gapUnit !== 'value') {\n                gapSize *= this.basePointRange;\n            }\n            // Setting a new gapSize in case dataGrouping is enabled\n            // (#7686)\n            if (groupingSize &&\n                groupingSize > gapSize &&\n                // Except when DG is forced (e.g. from other series)\n                // and has lower granularity than actual points (#11351)\n                groupingSize >= this.basePointRange) {\n                gapSize = groupingSize;\n            }\n            // Extension for ordinal breaks\n            let current, next;\n            while (i--) {\n                // Reassign next if it is not visible\n                if (!(next && next.visible !== false)) {\n                    next = points[i + 1];\n                }\n                current = points[i];\n                // Skip iteration if one of the points is not visible\n                if (next.visible === false || current.visible === false) {\n                    continue;\n                }\n                if (next.x - current.x > gapSize) {\n                    const xRange = (current.x + next.x) / 2;\n                    points.splice(// Insert after this one\n                    i + 1, 0, {\n                        isNull: true,\n                        x: xRange\n                    });\n                    // For stacked chart generate empty stack items, #6546\n                    if (yAxis.stacking && this.options.stacking) {\n                        stack = yAxis.stacking.stacks[this.stackKey][xRange] = new (highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default())(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                        stack.total = 0;\n                    }\n                }\n                // Assign current to next for the upcoming iteration\n                next = current;\n            }\n        }\n        // Call base method\n        return this.getGraphPath(points);\n    }\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Provides support for broken axes.\n     * @private\n     * @class\n     */\n    class Additions {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        static isInBreak(brk, val) {\n            const repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                (val - from) % repeat :\n                repeat - ((from - val) % repeat));\n            let ret;\n            if (!brk.inclusive) {\n                ret = test < length && test !== 0;\n            }\n            else {\n                ret = test <= length;\n            }\n            return ret;\n        }\n        /**\n         * @private\n         */\n        static lin2Val(val) {\n            const axis = this, threshold = axis.min || 0, brokenAxis = axis.brokenAxis, breakArray = brokenAxis?.breakArray;\n            if (!breakArray?.length || !isNumber(val)) {\n                return val;\n            }\n            let nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from > nval) {\n                        // Skip all breaks after the nval.\n                        break;\n                    }\n                    else if (brk.to <= nval && brk.to > threshold) {\n                        nval += brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval += brk.len;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from > threshold) {\n                        // Skip all breaks above the threshold.\n                        break;\n                    }\n                    else if (brk.from >= nval && brk.from < threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval -= brk.len;\n                    }\n                }\n            }\n            return nval;\n        }\n        /**\n         * @private\n         */\n        static val2Lin(val) {\n            const axis = this, threshold = axis.min || 0, brokenAxis = axis.brokenAxis, breakArray = brokenAxis?.breakArray;\n            if (!breakArray?.length || !isNumber(val)) {\n                return val;\n            }\n            let nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (const brk of breakArray) {\n                    if (brk.to <= val && brk.to > threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (brk.from > val) {\n                        // Skip all breaks after the val.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval -= (val - brk.from);\n                        break;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from >= val && brk.from < threshold) {\n                        nval += brk.len;\n                    }\n                    else if (brk.from > threshold) {\n                        // Skip all breaks before the threshold.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval += (brk.to - val);\n                        break;\n                    }\n                }\n            }\n            return nval;\n        }\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        constructor(axis) {\n            this.axis = axis;\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first break found where the x is larger then break.from\n         * and smaller then break.to.\n         *\n         * @param {number} x\n         * The number which should be within a break.\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n         * The array of breaks to search within.\n         *\n         * @return {Highcharts.XAxisBreaksOptions|undefined}\n         * Returns the first break found that matches, returns false if no break\n         * is found.\n         */\n        findBreakAt(x, breaks) {\n            return find(breaks, function (b) {\n                return b.from < x && x < b.to;\n            });\n        }\n        /**\n         * @private\n         */\n        isInAnyBreak(val, testKeep) {\n            const brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n            let i = breaks.length, inbrk, keep, ret;\n            if (i && isNumber(val)) {\n                while (i--) {\n                    if (Additions.isInBreak(breaks[i], val)) {\n                        inbrk = true;\n                        if (!keep) {\n                            keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                        }\n                    }\n                }\n                if (inbrk && testKeep) {\n                    ret = inbrk && !keep;\n                }\n                else {\n                    ret = inbrk;\n                }\n            }\n            return ret;\n        }\n        /**\n         * Dynamically set or unset breaks in an axis. This function in lighter\n         * than using Axis.update, and it also preserves animation.\n         *\n         * @private\n         * @function Highcharts.Axis#setBreaks\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n         * The breaks to add. When `undefined` it removes existing breaks.\n         *\n         * @param {boolean} [redraw=true]\n         * Whether to redraw the chart immediately.\n         */\n        setBreaks(breaks, redraw) {\n            const brokenAxis = this, axis = brokenAxis.axis, time = axis.chart.time, hasBreaks = isArray(breaks) &&\n                !!Object.keys(breaks?.[0] || {}).length;\n            axis.isDirty = (brokenAxis.hasBreaks ?? false) !== hasBreaks;\n            brokenAxis.hasBreaks = hasBreaks;\n            // Compile string dates\n            breaks?.forEach((brk) => {\n                brk.from = time.parse(brk.from) || 0;\n                brk.to = time.parse(brk.to) || 0;\n            });\n            if (breaks !== axis.options.breaks) {\n                axis.options.breaks = axis.userOptions.breaks = breaks;\n            }\n            axis.forceRedraw = true; // Force recalculation in setScale\n            // Recalculate series related to the axis.\n            axis.series.forEach(function (series) {\n                series.isDirty = true;\n            });\n            if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                // Revert to prototype functions\n                delete axis.val2lin;\n                delete axis.lin2val;\n            }\n            if (hasBreaks) {\n                axis.userOptions.ordinal = false;\n                axis.lin2val = Additions.lin2Val;\n                axis.val2lin = Additions.val2Lin;\n                axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                    // If trying to set extremes inside a break, extend min to\n                    // after, and max to before the break ( #3857 )\n                    // but not for gantt (#13898);\n                    if (brokenAxis.hasBreaks && !axis.treeGrid?.tree) {\n                        const breaks = (this.brokenAxis.breakArray || []);\n                        let axisBreak;\n                        while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks))) {\n                            newMin = axisBreak.to;\n                        }\n                        while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks))) {\n                            newMax = axisBreak.from;\n                        }\n                        // If both min and max is within the same break.\n                        if (newMax < newMin) {\n                            newMax = newMin;\n                        }\n                    }\n                    axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                };\n                axis.setAxisTranslation = function () {\n                    axis.constructor.prototype.setAxisTranslation.call(this);\n                    brokenAxis.unitLength = void 0;\n                    if (brokenAxis.hasBreaks) {\n                        const breaks = axis.options.breaks || [], breakArrayTemp = [], breakArray = [], pointRangePadding = axis.pointRangePadding ?? 0;\n                        let length = 0, inBrk, repeat, min = axis.userMin ?? axis.min, max = axis.userMax ?? axis.max, dataMin = axis.dataMin ?? min, dataMax = axis.dataMax ?? max, start, i;\n                        if (isNumber(axis.threshold)) {\n                            dataMin = Math.min(dataMin ?? axis.threshold, axis.threshold);\n                            dataMax = Math.max(dataMax ?? axis.threshold, axis.threshold);\n                        }\n                        // Min & max check (#4247) but not for gantt (#13898)\n                        if (!axis.treeGrid?.tree) {\n                            breaks.forEach(function (brk) {\n                                repeat = brk.repeat || Infinity;\n                                if (isNumber(min) && isNumber(max)) {\n                                    if (Additions.isInBreak(brk, min)) {\n                                        min += ((brk.to % repeat) -\n                                            (min % repeat));\n                                    }\n                                    if (Additions.isInBreak(brk, max)) {\n                                        max -= ((max % repeat) -\n                                            (brk.from % repeat));\n                                    }\n                                }\n                            });\n                        }\n                        // Construct an array holding all breaks in the axis\n                        // for the current data range.\n                        if (isNumber(dataMin) && isNumber(dataMax)) {\n                            breaks.forEach(function (brk) {\n                                start = brk.from;\n                                repeat = brk.repeat || Infinity;\n                                while (start - repeat > dataMin) {\n                                    start -= repeat;\n                                }\n                                while (start < dataMin) {\n                                    start += repeat;\n                                }\n                                for (i = start; i < dataMax; i += repeat) {\n                                    breakArrayTemp.push({\n                                        value: i,\n                                        move: 'in'\n                                    });\n                                    breakArrayTemp.push({\n                                        value: i + brk.to - brk.from,\n                                        move: 'out',\n                                        size: brk.breakSize\n                                    });\n                                }\n                            });\n                        }\n                        breakArrayTemp.sort(function (a, b) {\n                            return ((a.value === b.value) ?\n                                ((a.move === 'in' ? 0 : 1) -\n                                    (b.move === 'in' ? 0 : 1)) :\n                                a.value - b.value);\n                        });\n                        // Simplify the breaks\n                        inBrk = 0;\n                        start = dataMin;\n                        breakArrayTemp.forEach((brk) => {\n                            inBrk += (brk.move === 'in' ? 1 : -1);\n                            if (inBrk === 1 && brk.move === 'in') {\n                                start = brk.value;\n                            }\n                            if (inBrk === 0 && isNumber(start)) {\n                                breakArray.push({\n                                    from: start,\n                                    to: brk.value,\n                                    len: brk.value - start - (brk.size || 0)\n                                });\n                                if (isNumber(min) && isNumber(max) &&\n                                    start < max && brk.value > min) {\n                                    // Sum break gaps in the visible range\n                                    length += (brk.value -\n                                        start -\n                                        (brk.size || 0));\n                                }\n                            }\n                        });\n                        brokenAxis.breakArray = breakArray;\n                        // Used with staticScale, and below the actual axis\n                        // length, when breaks are subtracted.\n                        if (isNumber(min) &&\n                            isNumber(max) &&\n                            isNumber(axis.min)) {\n                            brokenAxis.unitLength = max - min - length +\n                                pointRangePadding;\n                            fireEvent(axis, 'afterBreaks');\n                            if (axis.staticScale) {\n                                axis.transA = axis.staticScale;\n                            }\n                            else if (brokenAxis.unitLength) {\n                                axis.transA *=\n                                    (max - axis.min + pointRangePadding) /\n                                        brokenAxis.unitLength;\n                            }\n                            if (pointRangePadding) {\n                                axis.minPixelPadding =\n                                    axis.transA * (axis.minPointOffset || 0);\n                            }\n                            axis.min = min;\n                            axis.max = max;\n                        }\n                    }\n                };\n            }\n            if (pick(redraw, true)) {\n                axis.chart.redraw();\n            }\n        }\n    }\n    BrokenAxis.Additions = Additions;\n})(BrokenAxis || (BrokenAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_BrokenAxis = (BrokenAxis);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Axis\"],\"commonjs\":[\"highcharts\",\"Axis\"],\"commonjs2\":[\"highcharts\",\"Axis\"],\"root\":[\"Highcharts\",\"Axis\"]}\nvar highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_ = __webpack_require__(532);\nvar highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default = /*#__PURE__*/__webpack_require__.n(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_);\n;// ./code/es-modules/Core/Axis/GridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { dateFormats } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { addEvent: GridAxis_addEvent, defined, erase, find: GridAxis_find, isArray: GridAxis_isArray, isNumber: GridAxis_isNumber, merge, pick: GridAxis_pick, timeUnits, wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Enums\n *\n * */\n/**\n * Enum for which side the axis is on. Maps to axis.side.\n * @private\n */\nvar GridAxisSide;\n(function (GridAxisSide) {\n    GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n    GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n    GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n    GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n})(GridAxisSide || (GridAxisSide = {}));\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction argsToArray(args) {\n    return Array.prototype.slice.call(args, 1);\n}\n/**\n * @private\n */\nfunction isObject(x) {\n    // Always use strict mode\n    return highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject(x, true);\n}\n/**\n * @private\n */\nfunction applyGridOptions(axis) {\n    const options = axis.options;\n    // Center-align by default\n    /*\n    if (!options.labels) {\n        options.labels = {};\n    }\n    */\n    options.labels.align = GridAxis_pick(options.labels.align, 'center');\n    // @todo: Check against tickLabelPlacement between/on etc\n    /* Prevents adding the last tick label if the axis is not a category\n       axis.\n       Since numeric labels are normally placed at starts and ends of a\n       range of value, and this module makes the label point at the value,\n       an \"extra\" label would appear. */\n    if (!axis.categories) {\n        options.showLastLabel = false;\n    }\n    // Prevents rotation of labels when squished, as rotating them would not\n    // help.\n    axis.labelRotation = 0;\n    options.labels.rotation = 0;\n    // Allow putting ticks closer than their data points.\n    options.minTickInterval = 1;\n}\n/**\n * Extends axis class with grid support.\n * @private\n */\nfunction compose(AxisClass, ChartClass, TickClass) {\n    if (!AxisClass.keepProps.includes('grid')) {\n        AxisClass.keepProps.push('grid');\n        AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n        wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n        wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n        // Add event handlers\n        GridAxis_addEvent(AxisClass, 'init', onInit);\n        GridAxis_addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n        GridAxis_addEvent(AxisClass, 'afterInit', onAfterInit);\n        GridAxis_addEvent(AxisClass, 'afterRender', onAfterRender);\n        GridAxis_addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n        GridAxis_addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n        GridAxis_addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n        GridAxis_addEvent(AxisClass, 'trimTicks', onTrimTicks);\n        GridAxis_addEvent(AxisClass, 'destroy', onDestroy);\n        GridAxis_addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n        GridAxis_addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n        GridAxis_addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n    }\n    return AxisClass;\n}\n/**\n * Get the largest label width and height.\n *\n * @private\n * @function Highcharts.Axis#getMaxLabelDimensions\n *\n * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n * All the ticks on one axis.\n *\n * @param {Array<number|string>} tickPositions\n * All the tick positions on one axis.\n *\n * @return {Highcharts.SizeObject}\n * Object containing the properties height and width.\n *\n * @todo Move this to the generic axis implementation, as it is used there.\n */\nfunction getMaxLabelDimensions(ticks, tickPositions) {\n    const dimensions = {\n        width: 0,\n        height: 0\n    };\n    tickPositions.forEach(function (pos) {\n        const tick = ticks[pos];\n        let labelHeight = 0, labelWidth = 0, label;\n        if (isObject(tick)) {\n            label = isObject(tick.label) ? tick.label : {};\n            // Find width and height of label\n            labelHeight = label.getBBox ? label.getBBox().height : 0;\n            if (label.textStr && !GridAxis_isNumber(label.textPxLength)) {\n                label.textPxLength = label.getBBox().width;\n            }\n            labelWidth = GridAxis_isNumber(label.textPxLength) ?\n                // Math.round ensures crisp lines\n                Math.round(label.textPxLength) :\n                0;\n            if (label.textStr) {\n                // Set the tickWidth same as the label width after ellipsis\n                // applied #10281\n                labelWidth = Math.round(label.getBBox().width);\n            }\n            // Update the result if width and/or height are larger\n            dimensions.height = Math.max(labelHeight, dimensions.height);\n            dimensions.width = Math.max(labelWidth, dimensions.width);\n        }\n    });\n    // For tree grid, add indentation\n    if (this.type === 'treegrid' &&\n        this.treeGrid &&\n        this.treeGrid.mapOfPosToGridNode) {\n        const treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n        dimensions.width += (this.options.labels.indentation *\n            (treeDepth - 1));\n    }\n    return dimensions;\n}\n/**\n * Handle columns and getOffset.\n * @private\n */\nfunction wrapGetOffset(proceed) {\n    const { grid } = this, \n    // On the left side we handle the columns first because the offset is\n    // calculated from the plot area and out\n    columnsFirst = this.side === 3;\n    if (!columnsFirst) {\n        proceed.apply(this);\n    }\n    if (!grid?.isColumn) {\n        let columns = grid?.columns || [];\n        if (columnsFirst) {\n            columns = columns.slice().reverse();\n        }\n        columns\n            .forEach((column) => {\n            column.getOffset();\n        });\n    }\n    if (columnsFirst) {\n        proceed.apply(this);\n    }\n}\n/**\n * @private\n */\nfunction onAfterGetTitlePosition(e) {\n    const axis = this;\n    const options = axis.options;\n    const gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        // Compute anchor points for each of the title align options\n        const { axisTitle, height: axisHeight, horiz, left: axisLeft, offset, opposite, options, top: axisTop, width: axisWidth } = axis;\n        const tickSize = axis.tickSize();\n        const titleWidth = axisTitle?.getBBox().width;\n        const xOption = options.title.x;\n        const yOption = options.title.y;\n        const titleMargin = GridAxis_pick(options.title.margin, horiz ? 5 : 10);\n        const titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n        const crispCorr = tickSize ? tickSize[0] / 2 : 0;\n        // TODO account for alignment\n        // the position in the perpendicular direction of the axis\n        const offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n            (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                (opposite ? -1 : 1) * // So does opposite axes\n                crispCorr +\n            (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n        e.titlePosition.x = horiz ?\n            axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n            offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n        e.titlePosition.y = horiz ?\n            (offAxis -\n                (opposite ? axisHeight : 0) +\n                (opposite ? titleFontSize : -titleFontSize) / 2 +\n                offset +\n                yOption) :\n            axisTop - titleMargin + yOption;\n    }\n}\n/**\n * @private\n */\nfunction onAfterInit() {\n    const axis = this;\n    const { chart, options: { grid: gridOptions = {} }, userOptions } = axis;\n    if (gridOptions.enabled) {\n        applyGridOptions(axis);\n    }\n    if (gridOptions.columns) {\n        const columns = axis.grid.columns = [];\n        let columnIndex = axis.grid.columnIndex = 0;\n        // Handle columns, each column is a grid axis\n        while (++columnIndex < gridOptions.columns.length) {\n            const columnOptions = merge(userOptions, gridOptions.columns[columnIndex], {\n                isInternal: true,\n                linkedTo: 0,\n                // Disable by default the scrollbar on the grid axis\n                scrollbar: {\n                    enabled: false\n                }\n            }, \n            // Avoid recursion\n            {\n                grid: {\n                    columns: void 0\n                }\n            });\n            const column = new (highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default())(axis.chart, columnOptions, 'yAxis');\n            column.grid.isColumn = true;\n            column.grid.columnIndex = columnIndex;\n            // Remove column axis from chart axes array, and place it\n            // in the columns array.\n            erase(chart.axes, column);\n            erase(chart[axis.coll] || [], column);\n            columns.push(column);\n        }\n    }\n}\n/**\n * Draw an extra line on the far side of the outermost axis,\n * creating floor/roof/wall of a grid. And some padding.\n * ```\n * Make this:\n *             (axis.min) __________________________ (axis.max)\n *                           |    |    |    |    |\n * Into this:\n *             (axis.min) __________________________ (axis.max)\n *                        ___|____|____|____|____|__\n * ```\n * @private\n */\nfunction onAfterRender() {\n    const axis = this, { axisTitle, grid, options } = axis, gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        const min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n        // Adjust the title max width to the column width (#19657)\n        if (axisTitle &&\n            !axis.chart.styledMode &&\n            firstTick?.slotWidth &&\n            !axis.options.title.style.width) {\n            axisTitle.css({ width: `${firstTick.slotWidth}px` });\n        }\n        // @todo actual label padding (top, bottom, left, right)\n        axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n        // Remove right wall before rendering if updating\n        if (axis.rightWall) {\n            axis.rightWall.destroy();\n        }\n        /*\n        Draw an extra axis line on outer axes\n                    >\n        Make this:    |______|______|______|___\n\n                    > _________________________\n        Into this:    |______|______|______|__|\n                                                */\n        if (axis.grid?.isOuterAxis() && axis.axisLine) {\n            const lineWidth = options.lineWidth;\n            if (lineWidth) {\n                const linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                // Negate distance if top or left axis\n                // Subtract 1px to draw the line at the end of the tick\n                tickLength = (axis.tickSize('tick') || [1])[0], distance = tickLength * ((axis.side === GridAxisSide.top ||\n                    axis.side === GridAxisSide.left) ? -1 : 1);\n                // If axis is horizontal, reposition line path vertically\n                if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                    if (axis.horiz) {\n                        startPoint[2] += distance;\n                        endPoint[2] += distance;\n                    }\n                    else {\n                        startPoint[1] += distance;\n                        endPoint[1] += distance;\n                    }\n                }\n                // If it doesn't exist, add an upper and lower border\n                // for the vertical grid axis.\n                if (!axis.horiz && axis.chart.marginRight) {\n                    const upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                        'L',\n                        axis.left,\n                        startPoint[2] || 0\n                    ], upperBorderPath = [\n                        upperBorderStartPoint,\n                        upperBorderEndPoint\n                    ], lowerBorderEndPoint = [\n                        'L',\n                        axis.chart.chartWidth - axis.chart.marginRight,\n                        axis.toPixels(max + axis.tickmarkOffset)\n                    ], lowerBorderStartPoint = [\n                        'M',\n                        endPoint[1] || 0,\n                        axis.toPixels(max + axis.tickmarkOffset)\n                    ], lowerBorderPath = [\n                        lowerBorderStartPoint,\n                        lowerBorderEndPoint\n                    ];\n                    if (!axis.grid.upperBorder && min % 1 !== 0) {\n                        axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                    }\n                    if (axis.grid.upperBorder) {\n                        axis.grid.upperBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.upperBorder.animate({\n                            d: upperBorderPath\n                        });\n                    }\n                    if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                        axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                    }\n                    if (axis.grid.lowerBorder) {\n                        axis.grid.lowerBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.lowerBorder.animate({\n                            d: lowerBorderPath\n                        });\n                    }\n                }\n                // Render an extra line parallel to the existing axes, to\n                // close the grid.\n                if (!axis.grid.axisLineExtra) {\n                    axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                }\n                else {\n                    axis.grid.axisLineExtra.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth\n                    });\n                    axis.grid.axisLineExtra.animate({\n                        d: linePath\n                    });\n                }\n                // Show or hide the line depending on options.showEmpty\n                axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n            }\n        }\n        (grid?.columns || []).forEach((column) => column.render());\n        // Manipulate the tick mark visibility\n        // based on the axis.max- allows smooth scrolling.\n        if (!axis.horiz &&\n            axis.chart.hasRendered &&\n            (axis.scrollbar || axis.linkedParent?.scrollbar) &&\n            axis.tickPositions.length) {\n            const tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick = axis.tickPositions[0];\n            let label, tickMark;\n            while ((label = axis.hiddenLabels.pop()) && label.element) {\n                label.show(); // #15453\n            }\n            while ((tickMark = axis.hiddenMarks.pop()) &&\n                tickMark.element) {\n                tickMark.show(); // #16439\n            }\n            // Hide/show first tick label.\n            label = axis.ticks[firstTick].label;\n            if (label) {\n                if (min - firstTick > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            // Hide/show last tick mark/label.\n            label = axis.ticks[lastTick].label;\n            if (label) {\n                if (lastTick - max > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            const mark = axis.ticks[lastTick].mark;\n            if (mark &&\n                lastTick - max < tickmarkOffset &&\n                lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                axis.hiddenMarks.push(mark.hide());\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetAxisTranslation() {\n    const axis = this;\n    const tickInfo = axis.tickPositions?.info;\n    const options = axis.options;\n    const gridOptions = options.grid || {};\n    const userLabels = axis.userOptions.labels || {};\n    // Fire this only for the Gantt type chart, #14868.\n    if (gridOptions.enabled) {\n        if (axis.horiz) {\n            axis.series.forEach((series) => {\n                series.options.pointRange = 0;\n            });\n            // Lower level time ticks, like hours or minutes, represent\n            // points in time and not ranges. These should be aligned\n            // left in the grid cell by default. The same applies to\n            // years of higher order.\n            if (tickInfo &&\n                options.dateTimeLabelFormats &&\n                options.labels &&\n                !defined(userLabels.align) &&\n                (options.dateTimeLabelFormats[tickInfo.unitName]\n                    .range === false ||\n                    tickInfo.count > 1 // Years\n                )) {\n                options.labels.align = 'left';\n                if (!defined(userLabels.x)) {\n                    options.labels.x = 3;\n                }\n            }\n        }\n        else {\n            // Don't trim ticks which not in min/max range but\n            // they are still in the min/max plus tickInterval.\n            if (this.type !== 'treegrid' &&\n                axis.grid &&\n                axis.grid.columns) {\n                this.minPointOffset = this.tickInterval;\n            }\n        }\n    }\n}\n/**\n * Creates a left and right wall on horizontal axes:\n * - Places leftmost tick at the start of the axis, to create a left\n *   wall\n * - Ensures that the rightmost tick is at the end of the axis, to\n *   create a right wall.\n * @private\n */\nfunction onAfterSetOptions(e) {\n    const options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n    let gridAxisOptions;\n    if (gridOptions.enabled === true) {\n        // Merge the user options into default grid axis options so\n        // that when a user option is set, it takes precedence.\n        gridAxisOptions = merge(true, {\n            className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n            dateTimeLabelFormats: {\n                hour: {\n                    list: ['%[HM]', '%[H]']\n                },\n                day: {\n                    list: ['%[AeB]', '%[aeb]', '%[E]']\n                },\n                week: {\n                    list: ['Week %W', 'W%W']\n                },\n                month: {\n                    list: ['%[B]', '%[b]', '%o']\n                }\n            },\n            grid: {\n                borderWidth: 1\n            },\n            labels: {\n                padding: 2,\n                style: {\n                    fontSize: '0.9em'\n                }\n            },\n            margin: 0,\n            title: {\n                text: null,\n                reserveSpace: false,\n                rotation: 0,\n                style: {\n                    textOverflow: 'ellipsis'\n                }\n            },\n            // In a grid axis, only allow one unit of certain types,\n            // for example we shouldn't have one grid cell spanning\n            // two days.\n            units: [[\n                    'millisecond', // Unit name\n                    [1, 10, 100]\n                ], [\n                    'second',\n                    [1, 10]\n                ], [\n                    'minute',\n                    [1, 5, 15]\n                ], [\n                    'hour',\n                    [1, 6]\n                ], [\n                    'day',\n                    [1]\n                ], [\n                    'week',\n                    [1]\n                ], [\n                    'month',\n                    [1]\n                ], [\n                    'year',\n                    null\n                ]]\n        }, userOptions);\n        // X-axis specific options\n        if (this.coll === 'xAxis') {\n            // For linked axes, tickPixelInterval is used only if\n            // the tickPositioner below doesn't run or returns\n            // undefined (like multiple years)\n            if (defined(userOptions.linkedTo) &&\n                !defined(userOptions.tickPixelInterval)) {\n                gridAxisOptions.tickPixelInterval = 350;\n            }\n            // For the secondary grid axis, use the primary axis'\n            // tick intervals and return ticks one level higher.\n            if (\n            // Check for tick pixel interval in options\n            !defined(userOptions.tickPixelInterval) &&\n                // Only for linked axes\n                defined(userOptions.linkedTo) &&\n                !defined(userOptions.tickPositioner) &&\n                !defined(userOptions.tickInterval) &&\n                !defined(userOptions.units)) {\n                gridAxisOptions.tickPositioner = function (min, max) {\n                    const parentInfo = this.linkedParent?.tickPositions?.info;\n                    if (parentInfo) {\n                        const units = (gridAxisOptions.units || []);\n                        let unitIdx, count = 1, unitName = 'year';\n                        for (let i = 0; i < units.length; i++) {\n                            const unit = units[i];\n                            if (unit && unit[0] === parentInfo.unitName) {\n                                unitIdx = i;\n                                break;\n                            }\n                        }\n                        // Get the first allowed count on the next unit.\n                        const unit = (GridAxis_isNumber(unitIdx) && units[unitIdx + 1]);\n                        if (unit) {\n                            unitName = unit[0] || 'year';\n                            const counts = unit[1];\n                            count = counts?.[0] || 1;\n                            // In case the base X axis shows years, make the\n                            // secondary axis show ten times the years (#11427)\n                        }\n                        else if (parentInfo.unitName === 'year') {\n                            // `unitName` is 'year'\n                            count = parentInfo.count * 10;\n                        }\n                        const unitRange = timeUnits[unitName];\n                        this.tickInterval = unitRange * count;\n                        return this.chart.time.getTimeTicks({ unitRange, count, unitName }, min, max, this.options.startOfWeek);\n                    }\n                };\n            }\n        }\n        // Now merge the combined options into the axis options\n        merge(true, this.options, gridAxisOptions);\n        if (this.horiz) {\n            /*               _________________________\n            Make this:    ___|_____|_____|_____|__|\n                            ^                     ^\n                            _________________________\n            Into this:    |_____|_____|_____|_____|\n                                ^                 ^    */\n            options.minPadding = GridAxis_pick(userOptions.minPadding, 0);\n            options.maxPadding = GridAxis_pick(userOptions.maxPadding, 0);\n        }\n        // If borderWidth is set, then use its value for tick and\n        // line width.\n        if (GridAxis_isNumber(options.grid.borderWidth)) {\n            options.tickWidth = options.lineWidth =\n                gridOptions.borderWidth;\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetOptions2(e) {\n    const axis = this;\n    const userOptions = e.userOptions;\n    const gridOptions = userOptions?.grid || {};\n    const columns = gridOptions.columns;\n    // Add column options to the parent axis. Children has their column options\n    // set on init in onGridAxisAfterInit.\n    if (gridOptions.enabled && columns) {\n        merge(true, axis.options, columns[0]);\n    }\n}\n/**\n * Handle columns and setScale.\n * @private\n */\nfunction onAfterSetScale() {\n    const axis = this;\n    (axis.grid.columns || []).forEach((column) => column.setScale());\n}\n/**\n * Draw vertical axis ticks extra long to create cell floors and roofs.\n * Overrides the tickLength for vertical axes.\n * @private\n */\nfunction onAfterTickSize(e) {\n    const { horiz, maxLabelDimensions, options: { grid: gridOptions = {} } } = this;\n    if (gridOptions.enabled && maxLabelDimensions) {\n        const labelPadding = this.options.labels.distance * 2;\n        const distance = horiz ?\n            (gridOptions.cellHeight ||\n                labelPadding + maxLabelDimensions.height) :\n            labelPadding + maxLabelDimensions.width;\n        if (GridAxis_isArray(e.tickSize)) {\n            e.tickSize[0] = distance;\n        }\n        else {\n            e.tickSize = [distance, 0];\n        }\n    }\n}\n/**\n * @private\n */\nfunction onChartAfterSetChartSize() {\n    this.axes.forEach((axis) => {\n        (axis.grid?.columns || []).forEach((column) => {\n            column.setAxisSize();\n            column.setAxisTranslation();\n        });\n    });\n}\n/**\n * @private\n */\nfunction onDestroy(e) {\n    const { grid } = this;\n    (grid.columns || []).forEach((column) => column.destroy(e.keepEvents));\n    grid.columns = void 0;\n}\n/**\n * Wraps axis init to draw cell walls on vertical axes.\n * @private\n */\nfunction onInit(e) {\n    const axis = this;\n    const userOptions = e.userOptions || {};\n    const gridOptions = userOptions.grid || {};\n    if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n        userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n    }\n    if (!axis.grid) {\n        axis.grid = new GridAxisAdditions(axis);\n    }\n    axis.hiddenLabels = [];\n    axis.hiddenMarks = [];\n}\n/**\n * Center tick labels in cells.\n * @private\n */\nfunction onTickAfterGetLabelPosition(e) {\n    const tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n    // `verticalAlign` is currently not supported for axis.labels.\n    verticalAlign = 'middle', // LabelOpts.verticalAlign,\n    side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (GridAxis_isNumber(tickPositions[e.index + 1]) ?\n        tickPositions[e.index + 1] - tickmarkOffset :\n        (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n    // Only center tick labels in grid axes\n    if (gridOptions.enabled === true) {\n        let bottom, top, left, right;\n        // Calculate top and bottom positions of the cell.\n        if (side === 'top') {\n            bottom = axis.top + axis.offset;\n            top = bottom - tickWidth;\n        }\n        else if (side === 'bottom') {\n            top = chart.chartHeight - axis.bottom + axis.offset;\n            bottom = top + tickWidth;\n        }\n        else {\n            bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n            top = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n        }\n        // Calculate left and right positions of the cell.\n        if (side === 'right') {\n            left = chart.chartWidth - axis.right + axis.offset;\n            right = left + tickWidth;\n        }\n        else if (side === 'left') {\n            right = axis.left + axis.offset;\n            left = right - tickWidth;\n        }\n        else {\n            left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n            right = Math.min(// #15742\n            Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n        }\n        tick.slotWidth = right - left;\n        // Calculate the positioning of the label based on\n        // alignment.\n        e.pos.x = (align === 'left' ?\n            left :\n            align === 'right' ?\n                right :\n                left + ((right - left) / 2) // Default to center\n        );\n        e.pos.y = (verticalAlign === 'top' ?\n            top :\n            verticalAlign === 'bottom' ?\n                bottom :\n                top + ((bottom - top) / 2) // Default to middle\n        );\n        if (label) {\n            const lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n            // Adjustment to y position to align the label correctly.\n            // Would be better to have a setter or similar for this.\n            if (!labelOpts.useHTML) {\n                const lines = Math.round(labelHeight / lblMetrics.h);\n                e.pos.y += (\n                // Center the label\n                // TODO: why does this actually center the label?\n                ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                    // Adjust for height of additional lines.\n                    -(((lines - 1) * lblMetrics.h) / 2));\n            }\n            else {\n                e.pos.y += (\n                // Readjust yCorr in htmlUpdateTransform\n                lblMetrics.b +\n                    // Adjust for height of html label\n                    -(labelHeight / 2));\n            }\n        }\n        e.pos.x += (axis.horiz && labelOpts.x) || 0;\n    }\n}\n/**\n * @private\n */\nfunction onTickLabelFormat(ctx) {\n    const { axis, value } = ctx;\n    if (axis.options.grid?.enabled) {\n        const tickPos = axis.tickPositions;\n        const series = (axis.linkedParent || axis).series[0];\n        const isFirst = value === tickPos[0];\n        const isLast = value === tickPos[tickPos.length - 1];\n        const point = series && GridAxis_find(series.options.data, function (p) {\n            return p[axis.isXAxis ? 'x' : 'y'] === value;\n        });\n        let pointCopy;\n        if (point && series.is('gantt')) {\n            // For the Gantt set point aliases to the pointCopy\n            // to do not change the original point\n            pointCopy = merge(point);\n            highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().seriesTypes.gantt.prototype.pointClass\n                .setGanttPointAliases(pointCopy, axis.chart);\n        }\n        // Make additional properties available for the\n        // formatter\n        ctx.isFirst = isFirst;\n        ctx.isLast = isLast;\n        ctx.point = pointCopy;\n    }\n}\n/**\n * Makes tick labels which are usually ignored in a linked axis\n * displayed if they are within range of linkedParent.min.\n * ```\n *                        _____________________________\n *                        |   |       |       |       |\n * Make this:             |   |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n *                        _____________________________\n *                        |   |       |       |       |\n * Into this:             | 1 |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n * ```\n * @private\n * @todo Does this function do what the drawing says? Seems to affect\n *       ticks and not the labels directly?\n */\nfunction onTrimTicks() {\n    const axis = this, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent?.min, linkedMax = axis.linkedParent?.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n    GridAxis_isNumber(min) &&\n        min >= firstPos + tickInterval &&\n        min < secondPos), endMoreThanMin = (GridAxis_isNumber(min) &&\n        firstPos < min &&\n        firstPos + tickInterval > min), startLessThanMax = (GridAxis_isNumber(max) &&\n        lastPos > max &&\n        lastPos - tickInterval < max), endMoreThanMax = (GridAxis_isNumber(max) &&\n        max <= lastPos - tickInterval &&\n        max > beforeLastPos);\n    if (gridOptions.enabled === true &&\n        !categoryAxis &&\n        (axis.isXAxis || axis.isLinked)) {\n        if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n            tickPositions[0] = min;\n        }\n        if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n            tickPositions[tickPositions.length - 1] = max;\n        }\n    }\n}\n/**\n * Avoid altering tickInterval when reserving space.\n * @private\n */\nfunction wrapUnsquish(proceed) {\n    const axis = this;\n    const { options: { grid: gridOptions = {} } } = axis;\n    if (gridOptions.enabled === true && axis.categories) {\n        return axis.tickInterval;\n    }\n    return proceed.apply(axis, argsToArray(arguments));\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Additions for grid axes.\n * @private\n * @class\n */\nclass GridAxisAdditions {\n    /* *\n    *\n    *  Constructors\n    *\n    * */\n    constructor(axis) {\n        this.axis = axis;\n    }\n    /* *\n    *\n    *  Functions\n    *\n    * */\n    /**\n     * Checks if an axis is the outer axis in its dimension. Since\n     * axes are placed outwards in order, the axis with the highest\n     * index is the outermost axis.\n     *\n     * Example: If there are multiple x-axes at the top of the chart,\n     * this function returns true if the axis supplied is the last\n     * of the x-axes.\n     *\n     * @private\n     *\n     * @return {boolean}\n     * True if the axis is the outermost axis in its dimension; false if\n     * not.\n     */\n    isOuterAxis() {\n        const axis = this.axis;\n        const chart = axis.chart;\n        const columnIndex = axis.grid.columnIndex;\n        const columns = (axis.linkedParent?.grid.columns ||\n            axis.grid.columns ||\n            []);\n        const parentAxis = columnIndex ? axis.linkedParent : axis;\n        let thisIndex = -1, lastIndex = 0;\n        // On the left side, when we have columns (not only multiple axes), the\n        // main axis is to the left\n        if (axis.side === 3 && !chart.inverted && columns.length) {\n            return !axis.linkedParent;\n        }\n        (chart[axis.coll] || []).forEach((otherAxis, index) => {\n            if (otherAxis.side === axis.side &&\n                !otherAxis.options.isInternal) {\n                lastIndex = index;\n                if (otherAxis === parentAxis) {\n                    // Get the index of the axis in question\n                    thisIndex = index;\n                }\n            }\n        });\n        return (lastIndex === thisIndex &&\n            (GridAxis_isNumber(columnIndex) ?\n                columns.length === columnIndex :\n                true));\n    }\n    /**\n     * Add extra border based on the provided path.\n     * @private\n     * @param {SVGPath} path\n     * The path of the border.\n     * @return {Highcharts.SVGElement}\n     * Border\n     */\n    renderBorder(path) {\n        const axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n            .addClass('highcharts-axis-line')\n            .add(axis.axisGroup);\n        if (!renderer.styledMode) {\n            extraBorderLine.attr({\n                stroke: options.lineColor,\n                'stroke-width': options.lineWidth,\n                zIndex: 7\n            });\n        }\n        return extraBorderLine;\n    }\n}\n/* *\n *\n *  Registry\n *\n * */\n// First letter of the day of the week, e.g. 'M' for 'Monday'.\ndateFormats.E = function (timestamp) {\n    return this.dateFormat('%a', timestamp, true).charAt(0);\n};\n// Adds week date format\ndateFormats.W = function (timestamp) {\n    const d = this.toParts(timestamp), firstDay = (d[7] + 6) % 7, thursday = d.slice(0);\n    thursday[2] = d[2] - firstDay + 3;\n    const firstThursday = this.toParts(this.makeTime(thursday[0], 0, 1));\n    if (firstThursday[7] !== 4) {\n        d[1] = 0; // Set month to January\n        d[2] = 1 + (11 - firstThursday[7]) % 7;\n    }\n    const thursdayTS = this.makeTime(thursday[0], thursday[1], thursday[2]), firstThursdayTS = this.makeTime(firstThursday[0], firstThursday[1], firstThursday[2]);\n    return (1 +\n        Math.floor((thursdayTS - firstThursdayTS) / 604800000)).toString();\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst GridAxis = {\n    compose\n};\n/* harmony default export */ const Axis_GridAxis = (GridAxis);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * @productdesc {gantt}\n * For grid axes (like in Gantt charts),\n * it is possible to declare as a list to provide different\n * formats depending on available space.\n *\n * Defaults to:\n * ```js\n * {\n *     hour: { list: ['%H:%M', '%H'] },\n *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n *     week: { list: ['Week %W', 'W%W'] },\n *     month: { list: ['%B', '%b', '%o'] }\n * }\n * ```\n *\n * @sample {gantt} gantt/grid-axis/date-time-label-formats\n *         Gantt chart with custom axis date format.\n *\n * @apioption xAxis.dateTimeLabelFormats\n */\n/**\n * Set grid options for the axis labels. Requires Highcharts Gantt.\n *\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid\n */\n/**\n * Enable grid on the axis labels. Defaults to true for Gantt charts.\n *\n * @type      {boolean}\n * @default   true\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid.enabled\n */\n/**\n * Set specific options for each column (or row for horizontal axes) in the\n * grid. Each extra column/row is its own axis, and the axis options can be set\n * here.\n *\n * @sample gantt/demo/left-axis-table\n *         Left axis as a table\n * @sample gantt/demo/treegrid-columns\n *         Collapsible tree grid with columns\n *\n * @type      {Array<Highcharts.XAxisOptions>}\n * @apioption xAxis.grid.columns\n */\n/**\n * Set border color for the label grid lines.\n *\n * @type      {Highcharts.ColorString}\n * @default   #e6e6e6\n * @apioption xAxis.grid.borderColor\n */\n/**\n * Set border width of the label grid lines.\n *\n * @type      {number}\n * @default   1\n * @apioption xAxis.grid.borderWidth\n */\n/**\n * Set cell height for grid axis labels. By default this is calculated from font\n * size. This option only applies to horizontal axes. For vertical axes, check\n * the [#yAxis.staticScale](yAxis.staticScale) option.\n *\n * @sample gantt/grid-axis/cellheight\n *         Gant chart with custom cell height\n * @type      {number}\n * @apioption xAxis.grid.cellHeight\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Gantt/Tree.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\nconst { extend, isNumber: Tree_isNumber, pick: Tree_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates an object map from parent id to children's index.\n *\n * @private\n * @function Highcharts.Tree#getListOfParents\n *\n * @param {Array<*>} data\n *        List of points set in options. `Array.parent` is parent id of point.\n *\n * @return {Highcharts.Dictionary<Array<*>>}\n * Map from parent id to children index in data\n */\nfunction getListOfParents(data) {\n    const root = '', ids = [], listOfParents = data.reduce((prev, curr) => {\n        const { parent = '', id } = curr;\n        if (typeof prev[parent] === 'undefined') {\n            prev[parent] = [];\n        }\n        prev[parent].push(curr);\n        if (id) {\n            ids.push(id);\n        }\n        return prev;\n    }, {});\n    Object.keys(listOfParents).forEach((node) => {\n        if ((node !== root) && (ids.indexOf(node) === -1)) {\n            const adoptedByRoot = listOfParents[node].map(function (orphan) {\n                const { ...parentExcluded } = orphan; // #15196\n                return parentExcluded;\n            });\n            listOfParents[root].push(...adoptedByRoot);\n            delete listOfParents[node];\n        }\n    });\n    return listOfParents;\n}\n/** @private */\nfunction getNode(id, parent, level, data, mapOfIdToChildren, options) {\n    const after = options && options.after, before = options && options.before, node = {\n        data,\n        depth: level - 1,\n        id,\n        level,\n        parent: (parent || '')\n    };\n    let descendants = 0, height = 0, start, end;\n    // Allow custom logic before the children has been created.\n    if (typeof before === 'function') {\n        before(node, options);\n    }\n    // Call getNode recursively on the children. Calculate the height of the\n    // node, and the number of descendants.\n    const children = ((mapOfIdToChildren[id] || [])).map((child) => {\n        const node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n            childStart :\n            child.end ||\n                NaN);\n        // Start should be the lowest child.start.\n        start = ((!Tree_isNumber(start) || childStart < start) ?\n            childStart :\n            start);\n        // End should be the largest child.end.\n        // If child is milestone, then use start as end.\n        end = ((!Tree_isNumber(end) || childEnd > end) ?\n            childEnd :\n            end);\n        descendants = descendants + 1 + node.descendants;\n        height = Math.max(node.height + 1, height);\n        return node;\n    });\n    // Calculate start and end for point if it is not already explicitly set.\n    if (data) {\n        data.start = Tree_pick(data.start, start);\n        data.end = Tree_pick(data.end, end);\n    }\n    extend(node, {\n        children: children,\n        descendants: descendants,\n        height: height\n    });\n    // Allow custom logic after the children has been created.\n    if (typeof after === 'function') {\n        after(node, options);\n    }\n    return node;\n}\n/** @private */\nfunction getTree(data, options) {\n    return getNode('', null, 1, null, getListOfParents(data), options);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst Tree = {\n    getNode,\n    getTree\n};\n/* harmony default export */ const Gantt_Tree = (Tree);\n\n;// ./code/es-modules/Core/Axis/TreeGrid/TreeGridTick.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { addEvent: TreeGridTick_addEvent, correctFloat, removeEvent, isObject: TreeGridTick_isObject, isNumber: TreeGridTick_isNumber, pick: TreeGridTick_pick, wrap: TreeGridTick_wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onTickInit() {\n    const tick = this;\n    if (!tick.treeGrid) {\n        tick.treeGrid = new TreeGridTickAdditions(tick);\n    }\n}\n/**\n * @private\n */\nfunction onTickHover(label) {\n    label.addClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({\n            textDecoration: 'underline'\n        });\n    }\n}\n/**\n * @private\n */\nfunction onTickHoverExit(label, options) {\n    const css = TreeGridTick_isObject(options.style) ? options.style : {};\n    label.removeClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({ textDecoration: (css.textDecoration || 'none') });\n    }\n}\n/**\n * @private\n */\nfunction renderLabelIcon(tick, params) {\n    const treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, padding = options.padding ?? tick.axis.linkedParent ? 0 : 5, iconCenter = {\n        x: labelBox.x - (width / 2) - padding,\n        y: labelBox.y - (height / 2)\n    }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && TreeGridTick_isNumber(iconCenter.y);\n    let icon = treeGrid.labelIcon;\n    if (!icon) {\n        treeGrid.labelIcon = icon = renderer\n            .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n            .addClass('highcharts-label-icon')\n            .add(params.group);\n    }\n    // Set the new position, and show or hide\n    icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n    // Presentational attributes\n    if (!renderer.styledMode) {\n        icon\n            .attr({\n            cursor: 'pointer',\n            'fill': TreeGridTick_pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n            'stroke-width': 1,\n            stroke: options.lineColor,\n            strokeWidth: options.lineWidth || 0\n        });\n    }\n    // Update the icon positions\n    icon[isNew ? 'attr' : 'animate']({\n        translateX: iconCenter.x,\n        translateY: iconCenter.y,\n        rotation: rotation\n    });\n}\n/**\n * @private\n */\nfunction wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n    const tick = this, lbOptions = TreeGridTick_pick(tick.options?.labels, labelOptions), pos = tick.pos, axis = tick.axis, isTreeGrid = axis.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n    let mapOfPosToGridNode, node, level;\n    if (isTreeGrid) {\n        const { width = 0, padding = axis.linkedParent ? 0 : 5 } = (lbOptions && TreeGridTick_isObject(lbOptions.symbol, true) ?\n            lbOptions.symbol :\n            {}), indentation = (lbOptions && TreeGridTick_isNumber(lbOptions.indentation) ?\n            lbOptions.indentation :\n            0);\n        mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n        node = mapOfPosToGridNode?.[pos];\n        level = node?.depth || 1;\n        result.x += (\n        // Add space for symbols\n        (width + (padding * 2)) +\n            // Apply indentation\n            ((level - 1) * indentation));\n    }\n    return result;\n}\n/**\n * @private\n */\nfunction wrapRenderLabel(proceed) {\n    const tick = this, { pos, axis, label, treeGrid: tickGrid, options: tickOptions } = tick, icon = tickGrid?.labelIcon, labelElement = label?.element, { treeGrid: axisGrid, options: axisOptions, chart, tickPositions } = axis, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = TreeGridTick_pick(tickOptions?.labels, axisOptions?.labels), symbolOptions = (labelOptions && TreeGridTick_isObject(labelOptions.symbol, true) ?\n        labelOptions.symbol :\n        {}), node = mapOfPosToGridNode?.[pos], { descendants, depth } = node || {}, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axis.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n    let collapsed, addClassName, removeClassName;\n    if (isTreeGridElement && node) {\n        // Add class name for hierarchical styling.\n        label\n            .removeClass(new RegExp(prefixLevelClass + '.*'))\n            .addClass(prefixLevelClass + level);\n    }\n    proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n    if (isTreeGridElement && hasDescendants) {\n        collapsed = axisGrid.isCollapsed(node);\n        renderLabelIcon(tick, {\n            color: (!styledMode &&\n                label.styles.color ||\n                ''),\n            collapsed: collapsed,\n            group: label.parentGroup,\n            options: symbolOptions,\n            renderer: label.renderer,\n            show: shouldRender,\n            xy: label.xy\n        });\n        // Add class name for the node.\n        addClassName = prefixClassName +\n            (collapsed ? 'collapsed' : 'expanded');\n        removeClassName = prefixClassName +\n            (collapsed ? 'expanded' : 'collapsed');\n        label\n            .addClass(addClassName)\n            .removeClass(removeClassName);\n        if (!styledMode) {\n            label.css({\n                cursor: 'pointer'\n            });\n        }\n        // Add events to both label text and icon\n        [label, icon].forEach((object) => {\n            if (object && !object.attachedTreeGridEvents) {\n                // On hover\n                TreeGridTick_addEvent(object.element, 'mouseover', function () {\n                    onTickHover(label);\n                });\n                // On hover out\n                TreeGridTick_addEvent(object.element, 'mouseout', function () {\n                    onTickHoverExit(label, labelOptions);\n                });\n                TreeGridTick_addEvent(object.element, 'click', function () {\n                    tickGrid.toggleCollapse();\n                });\n                object.attachedTreeGridEvents = true;\n            }\n        });\n    }\n    else if (icon) {\n        removeEvent(labelElement);\n        label?.css({ cursor: 'default' });\n        icon.destroy();\n        tickGrid.labelIcon = void 0;\n    }\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nclass TreeGridTickAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(TickClass) {\n        const tickProto = TickClass.prototype;\n        if (!tickProto.toggleCollapse) {\n            TreeGridTick_addEvent(TickClass, 'init', onTickInit);\n            TreeGridTick_wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n            TreeGridTick_wrap(tickProto, 'renderLabel', wrapRenderLabel);\n            // Backwards compatibility\n            tickProto.collapse = function (redraw) {\n                this.treeGrid.collapse(redraw);\n            };\n            tickProto.expand = function (redraw) {\n                this.treeGrid.expand(redraw);\n            };\n            tickProto.toggleCollapse = function (redraw) {\n                this.treeGrid.toggleCollapse(redraw);\n            };\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    constructor(tick) {\n        this.tick = tick;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Collapse the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#collapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    collapse(redraw) {\n        const { pos, axis } = this.tick, { treeGrid, brokenAxis } = axis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.collapse(posMappedNodes[pos]), redraw ?? true);\n        }\n    }\n    /**\n     * Destroy remaining labelIcon if exist.\n     *\n     * @private\n     * @function Highcharts.Tick#destroy\n     */\n    destroy() {\n        this.labelIcon?.destroy();\n    }\n    /**\n     * Expand the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#expand\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    expand(redraw) {\n        const { pos, axis } = this.tick, { treeGrid, brokenAxis } = axis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.expand(posMappedNodes[pos]), redraw ?? true);\n        }\n    }\n    /**\n     * Toggle the collapse/expand state of the grid cell. Used when axis is\n     * of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#toggleCollapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    toggleCollapse(redraw = true) {\n        const { axis, pos } = this.tick, { brokenAxis, treeGrid } = axis;\n        if (brokenAxis && treeGrid.mapOfPosToGridNode) {\n            const scrollMode = !!(axis.scrollbar && axis.staticScale), maxPx = axis.pos + axis.len +\n                (treeGrid.pendingSizeAdjustment || 0);\n            treeGrid.pendingSizeAdjustment = 0;\n            brokenAxis.setBreaks(treeGrid.toggleCollapse(treeGrid.mapOfPosToGridNode[pos]), scrollMode && redraw);\n            if (scrollMode) {\n                const adjustedMax = axis.toValue(axis.toPixels(axis.dataMax));\n                let newMaxVal = axis.toValue(maxPx) - axis.tickmarkOffset, newMinVal = axis.userMin ?? axis.min;\n                // If dataMax is in a break.\n                treeGrid.adjustedMax = adjustedMax !== axis.dataMax ?\n                    adjustedMax - axis.tickmarkOffset :\n                    void 0;\n                if (newMaxVal > axis.dataMax) {\n                    let missingPx = maxPx -\n                        axis.toPixels(axis.dataMax + axis.tickmarkOffset);\n                    newMaxVal = treeGrid.adjustedMax ?? axis.dataMax;\n                    // Check if enough space available on the min end.\n                    newMinVal = axis.toValue(axis.toPixels(newMinVal - axis.tickmarkOffset) - missingPx) + axis.tickmarkOffset;\n                    if (newMinVal < axis.dataMin) {\n                        missingPx = axis.toPixels(axis.dataMin) -\n                            axis.toPixels(newMinVal);\n                        newMinVal = axis.dataMin;\n                        treeGrid.pendingSizeAdjustment = missingPx;\n                    }\n                }\n                axis.setExtremes(correctFloat(newMinVal), correctFloat(newMaxVal), false, false, { trigger: 'toggleCollapse' });\n            }\n            if (redraw) {\n                axis.chart.redraw();\n            }\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const TreeGridTick = (TreeGridTickAdditions);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Color\"],\"commonjs\":[\"highcharts\",\"Color\"],\"commonjs2\":[\"highcharts\",\"Color\"],\"root\":[\"Highcharts\",\"Color\"]}\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_ = __webpack_require__(620);\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default = /*#__PURE__*/__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);\n;// ./code/es-modules/Series/TreeUtilities.js\n/* *\n *\n *  (c) 2014-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard / Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { extend: TreeUtilities_extend, isArray: TreeUtilities_isArray, isNumber: TreeUtilities_isNumber, isObject: TreeUtilities_isObject, merge: TreeUtilities_merge, pick: TreeUtilities_pick, relativeLength } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable valid-jsdoc */\n/**\n * @private\n */\nfunction getColor(node, options) {\n    const index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n    let getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n    /**\n     * @private\n     */\n    const variateColor = (color) => {\n        const colorVariation = level && level.colorVariation;\n        if (colorVariation &&\n            colorVariation.key === 'brightness' &&\n            index &&\n            siblings) {\n            return highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse(color).brighten(colorVariation.to * (index / siblings)).get();\n        }\n        return color;\n    };\n    if (node) {\n        point = points[node.i];\n        level = mapOptionsToLevel[node.level] || {};\n        getColorByPoint = point && level.colorByPoint;\n        if (getColorByPoint) {\n            colorIndexByPoint = point.index % (colors ?\n                colors.length :\n                chartOptionsChart.colorCount);\n            colorByPoint = colors && colors[colorIndexByPoint];\n        }\n        // Select either point color, level color or inherited color.\n        if (!series.chart.styledMode) {\n            color = TreeUtilities_pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n        }\n        colorIndex = TreeUtilities_pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n    }\n    return {\n        color: color,\n        colorIndex: colorIndex\n    };\n}\n/**\n * Creates a map from level number to its given options.\n *\n * @private\n *\n * @param {Object} params\n * Object containing parameters.\n * - `defaults` Object containing default options. The default options are\n *   merged with the userOptions to get the final options for a specific\n *   level.\n * - `from` The lowest level number.\n * - `levels` User options from series.levels.\n * - `to` The highest level number.\n *\n * @return {Highcharts.Dictionary<object>|null}\n * Returns a map from level number to its given options.\n */\nfunction getLevelOptions(params) {\n    const result = {};\n    let defaults, converted, i, from, to, levels;\n    if (TreeUtilities_isObject(params)) {\n        from = TreeUtilities_isNumber(params.from) ? params.from : 1;\n        levels = params.levels;\n        converted = {};\n        defaults = TreeUtilities_isObject(params.defaults) ? params.defaults : {};\n        if (TreeUtilities_isArray(levels)) {\n            converted = levels.reduce((obj, item) => {\n                let level, levelIsConstant, options;\n                if (TreeUtilities_isObject(item) && TreeUtilities_isNumber(item.level)) {\n                    options = TreeUtilities_merge({}, item);\n                    levelIsConstant = TreeUtilities_pick(options.levelIsConstant, defaults.levelIsConstant);\n                    // Delete redundant properties.\n                    delete options.levelIsConstant;\n                    delete options.level;\n                    // Calculate which level these options apply to.\n                    level = item.level + (levelIsConstant ? 0 : from - 1);\n                    if (TreeUtilities_isObject(obj[level])) {\n                        TreeUtilities_merge(true, obj[level], options); // #16329\n                    }\n                    else {\n                        obj[level] = options;\n                    }\n                }\n                return obj;\n            }, {});\n        }\n        to = TreeUtilities_isNumber(params.to) ? params.to : 1;\n        for (i = 0; i <= to; i++) {\n            result[i] = TreeUtilities_merge({}, defaults, TreeUtilities_isObject(converted[i]) ? converted[i] : {});\n        }\n    }\n    return result;\n}\n/**\n * @private\n * @todo Combine buildTree and buildNode with setTreeValues\n * @todo Remove logic from Treemap and make it utilize this mixin.\n */\nfunction setTreeValues(tree, options) {\n    const before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n    let childrenTotal = 0;\n    tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n    tree.name = TreeUtilities_pick(point && point.name, '');\n    tree.visible = (idRoot === tree.id ||\n        options.visible === true);\n    if (typeof before === 'function') {\n        tree = before(tree, options);\n    }\n    // First give the children some values\n    tree.children.forEach((child, i) => {\n        const newOptions = TreeUtilities_extend({}, options);\n        TreeUtilities_extend(newOptions, {\n            index: i,\n            siblings: tree.children.length,\n            visible: tree.visible\n        });\n        child = setTreeValues(child, newOptions);\n        children.push(child);\n        if (child.visible) {\n            childrenTotal += child.val;\n        }\n    });\n    // Set the values\n    const value = TreeUtilities_pick(optionsPoint.value, childrenTotal);\n    tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n    tree.children = children;\n    tree.childrenTotal = childrenTotal;\n    tree.isLeaf = tree.visible && !childrenTotal;\n    tree.val = value;\n    return tree;\n}\n/**\n * Update the rootId property on the series. Also makes sure that it is\n * accessible to exporting.\n *\n * @private\n *\n * @param {Object} series\n * The series to operate on.\n *\n * @return {string}\n * Returns the resulting rootId after update.\n */\nfunction updateRootId(series) {\n    let rootId, options;\n    if (TreeUtilities_isObject(series)) {\n        // Get the series options.\n        options = TreeUtilities_isObject(series.options) ? series.options : {};\n        // Calculate the rootId.\n        rootId = TreeUtilities_pick(series.rootNode, options.rootId, '');\n        // Set rootId on series.userOptions to pick it up in exporting.\n        if (TreeUtilities_isObject(series.userOptions)) {\n            series.userOptions.rootId = rootId;\n        }\n        // Set rootId on series to pick it up on next update.\n        series.rootNode = rootId;\n    }\n    return rootId;\n}\n/**\n * Get the node width, which relies on the plot width and the nodeDistance\n * option.\n *\n * @private\n */\nfunction getNodeWidth(series, columnCount) {\n    const { chart, options } = series, { nodeDistance = 0, nodeWidth = 0 } = options, { plotSizeX = 1 } = chart;\n    // Node width auto means they are evenly distributed along the width of\n    // the plot area\n    if (nodeWidth === 'auto') {\n        if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n            const fraction = parseFloat(nodeDistance) / 100, total = columnCount + fraction * (columnCount - 1);\n            return plotSizeX / total;\n        }\n        const nDistance = Number(nodeDistance);\n        return ((plotSizeX + nDistance) /\n            (columnCount || 1)) - nDistance;\n    }\n    return relativeLength(nodeWidth, plotSizeX);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst TreeUtilities = {\n    getColor,\n    getLevelOptions,\n    getNodeWidth,\n    setTreeValues,\n    updateRootId\n};\n/* harmony default export */ const Series_TreeUtilities = (TreeUtilities);\n\n;// ./code/es-modules/Core/Axis/TreeGrid/TreeGridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\n\nconst { getLevelOptions: TreeGridAxis_getLevelOptions } = Series_TreeUtilities;\n\nconst { addEvent: TreeGridAxis_addEvent, isArray: TreeGridAxis_isArray, splat, find: TreeGridAxis_find, fireEvent: TreeGridAxis_fireEvent, isObject: TreeGridAxis_isObject, isString, merge: TreeGridAxis_merge, removeEvent: TreeGridAxis_removeEvent, wrap: TreeGridAxis_wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Variables\n *\n * */\nlet TickConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates a break object from a node.\n *\n * @param {Object} node\n * The node to create a break object from.\n *\n * @private\n */\nfunction getBreakFromNode(node) {\n    return {\n        from: node.collapseStart || 0,\n        to: node.collapseEnd || 0,\n        showPoints: false\n    };\n}\n/**\n * Creates a tree structure of the data, and the treegrid. Calculates\n * categories, and y-values of points based on the tree.\n *\n * @private\n * @function getTreeGridFromData\n *\n * @param {Array<Highcharts.GanttPointOptions>} data\n * All the data points to display in the axis.\n *\n * @param {boolean} uniqueNames\n * Whether or not the data node with the same name should share grid cell. If\n * true they do share cell. False by default.\n *\n * @param {number} numberOfSeries\n *\n * @return {Object}\n * Returns an object containing categories, mapOfIdToNode,\n * mapOfPosToGridNode, and tree.\n *\n * @todo There should be only one point per line.\n * @todo It should be optional to have one category per point, or merge\n *       cells\n * @todo Add unit-tests.\n */\nfunction getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n    const categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = uniqueNames || false;\n    let mapOfPosToGridNode = {}, posIterator = -1;\n    // Build the tree from the series data.\n    const treeParams = {\n        // After the children has been created.\n        after: function (node) {\n            const gridNode = mapOfPosToGridNode[node.pos];\n            let height = 0, descendants = 0;\n            gridNode.children.forEach(function (child) {\n                descendants += (child.descendants || 0) + 1;\n                height = Math.max((child.height || 0) + 1, height);\n            });\n            gridNode.descendants = descendants;\n            gridNode.height = height;\n            if (gridNode.collapsed) {\n                collapsedNodes.push(gridNode);\n            }\n        },\n        // Before the children has been created.\n        before: function (node) {\n            const data = TreeGridAxis_isObject(node.data, true) ?\n                node.data :\n                {}, name = isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (TreeGridAxis_isObject(parentNode, true) ?\n                mapOfPosToGridNode[parentNode.pos] :\n                null), hasSameName = function (x) {\n                return x.name === name;\n            };\n            let gridNode, pos;\n            // If not unique names, look for sibling node with the same name\n            if (uniqueNamesEnabled &&\n                TreeGridAxis_isObject(parentGridNode, true) &&\n                !!(gridNode = TreeGridAxis_find(parentGridNode.children, hasSameName))) {\n                // If there is a gridNode with the same name, reuse position\n                pos = gridNode.pos;\n                // Add data node to list of nodes in the grid node.\n                gridNode.nodes.push(node);\n            }\n            else {\n                // If it is a new grid node, increment position.\n                pos = posIterator++;\n            }\n            // Add new grid node to map.\n            if (!mapOfPosToGridNode[pos]) {\n                mapOfPosToGridNode[pos] = gridNode = {\n                    depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                    name: name,\n                    id: data.id,\n                    nodes: [node],\n                    children: [],\n                    pos: pos\n                };\n                // If not root, then add name to categories.\n                if (pos !== -1) {\n                    categories.push(name);\n                }\n                // Add name to list of children.\n                if (TreeGridAxis_isObject(parentGridNode, true)) {\n                    parentGridNode.children.push(gridNode);\n                }\n            }\n            // Add data node to map\n            if (isString(node.id)) {\n                mapOfIdToNode[node.id] = node;\n            }\n            // If one of the points are collapsed, then start the grid node\n            // in collapsed state.\n            if (gridNode && data.collapsed === true) {\n                gridNode.collapsed = true;\n            }\n            // Assign pos to data node\n            node.pos = pos;\n        }\n    };\n    const updateYValuesAndTickPos = function (map, numberOfSeries) {\n        const setValues = function (gridNode, start, result) {\n            const nodes = gridNode.nodes, padding = 0.5;\n            let end = start + (start === -1 ? 0 : numberOfSeries - 1);\n            const diff = (end - start) / 2, pos = start + diff;\n            nodes.forEach(function (node) {\n                const data = node.data;\n                if (TreeGridAxis_isObject(data, true)) {\n                    // Update point\n                    data.y = start + (data.seriesIndex || 0);\n                    // Remove the property once used\n                    delete data.seriesIndex;\n                }\n                node.pos = pos;\n            });\n            result[pos] = gridNode;\n            gridNode.pos = pos;\n            gridNode.tickmarkOffset = diff + padding;\n            gridNode.collapseStart = end + padding;\n            gridNode.children.forEach(function (child) {\n                setValues(child, end + 1, result);\n                end = (child.collapseEnd || 0) - padding;\n            });\n            // Set collapseEnd to the end of the last child node.\n            gridNode.collapseEnd = end + padding;\n            return result;\n        };\n        return setValues(map['-1'], -1, {});\n    };\n    // Create tree from data\n    const tree = Gantt_Tree.getTree(data, treeParams);\n    // Update y values of data, and set calculate tick positions.\n    mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n    // Return the resulting data.\n    return {\n        categories: categories,\n        mapOfIdToNode: mapOfIdToNode,\n        mapOfPosToGridNode: mapOfPosToGridNode,\n        collapsedNodes: collapsedNodes,\n        tree: tree\n    };\n}\n/**\n * Builds the tree of categories and calculates its positions.\n * @private\n * @param {Object} e Event object\n * @param {Object} e.target The chart instance which the event was fired on.\n * @param {object[]} e.target.axes The axes of the chart.\n */\nfunction onBeforeRender(e) {\n    const chart = e.target, axes = chart.axes;\n    axes.filter((axis) => axis.type === 'treegrid').forEach(function (axis) {\n        const options = axis.options, labelOptions = options.labels, uniqueNames = axis.uniqueNames, max = chart.time.parse(options.max), \n        // Check whether any of series is rendering for the first\n        // time, visibility has changed, or its data is dirty, and\n        // only then update. #10570, #10580. Also check if\n        // mapOfPosToGridNode exists. #10887\n        isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n            axis.series.some(function (series) {\n                return !series.hasRendered ||\n                    series.isDirtyData ||\n                    series.isDirty;\n            }));\n        let numberOfSeries = 0, data, treeGrid;\n        if (isDirty) {\n            const seriesHasPrimitivePoints = [];\n            // Concatenate data from all series assigned to this axis.\n            data = axis.series.reduce(function (arr, s) {\n                const seriesData = (s.options.data || []), firstPoint = seriesData[0], \n                // Check if the first point is a simple array of values.\n                // If so we assume that this is the case for all points.\n                foundPrimitivePoint = Array.isArray(firstPoint) &&\n                    !firstPoint.find((value) => (typeof value === 'object'));\n                seriesHasPrimitivePoints.push(foundPrimitivePoint);\n                if (s.visible) {\n                    // Push all data to array\n                    seriesData.forEach(function (pointOptions) {\n                        // For using keys, or when using primitive points,\n                        // rebuild the data structure\n                        if (foundPrimitivePoint || s.options.keys?.length) {\n                            pointOptions = s.pointClass.prototype\n                                .optionsToObject\n                                .call({ series: s }, pointOptions);\n                            s.pointClass.setGanttPointAliases(pointOptions, chart);\n                        }\n                        if (TreeGridAxis_isObject(pointOptions, true)) {\n                            // Set series index on data. Removed again\n                            // after use.\n                            pointOptions.seriesIndex = numberOfSeries;\n                            arr.push(pointOptions);\n                        }\n                    });\n                    // Increment series index\n                    if (uniqueNames === true) {\n                        numberOfSeries++;\n                    }\n                }\n                return arr;\n            }, []);\n            // If max is higher than set data - add a\n            // dummy data to render categories #10779\n            if (max && data.length < max) {\n                for (let i = data.length; i <= max; i++) {\n                    data.push({\n                        // Use the zero-width character\n                        // to avoid conflict with uniqueNames\n                        name: i + '\\u200B'\n                    });\n                }\n            }\n            // `setScale` is fired after all the series is initialized,\n            // which is an ideal time to update the axis.categories.\n            treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n            // Assign values to the axis.\n            axis.categories = treeGrid.categories;\n            axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n            axis.hasNames = true;\n            axis.treeGrid.tree = treeGrid.tree;\n            // Update yData now that we have calculated the y values\n            axis.series.forEach(function (series, index) {\n                const axisData = (series.options.data || []).map(function (d) {\n                    if (seriesHasPrimitivePoints[index] ||\n                        (TreeGridAxis_isArray(d) && series.options.keys?.length)) {\n                        // Get the axisData from the data array used to\n                        // build the treeGrid where has been modified\n                        data.forEach(function (point) {\n                            const toArray = splat(d);\n                            if (toArray.indexOf(point.x || 0) >= 0 &&\n                                toArray.indexOf(point.x2 || 0) >= 0) {\n                                d = point;\n                            }\n                        });\n                    }\n                    return TreeGridAxis_isObject(d, true) ? TreeGridAxis_merge(d) : d;\n                });\n                // Avoid destroying points when series is not visible\n                if (series.visible) {\n                    series.setData(axisData, false);\n                }\n            });\n            // Calculate the label options for each level in the tree.\n            axis.treeGrid.mapOptionsToLevel =\n                TreeGridAxis_getLevelOptions({\n                    defaults: labelOptions,\n                    from: 1,\n                    levels: labelOptions?.levels,\n                    to: axis.treeGrid.tree?.height\n                });\n            // Setting initial collapsed nodes\n            if (e.type === 'beforeRender') {\n                axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n            }\n        }\n    });\n}\n/**\n * Generates a tick for initial positioning.\n *\n * @private\n * @function Highcharts.GridAxis#generateTick\n *\n * @param {Function} proceed\n * The original generateTick function.\n *\n * @param {number} pos\n * The tick position in axis values.\n */\nfunction wrapGenerateTick(proceed, pos) {\n    const axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.type === 'treegrid', ticks = axis.ticks;\n    let tick = ticks[pos], levelOptions, options, gridNode;\n    if (isTreeGrid &&\n        axis.treeGrid.mapOfPosToGridNode) {\n        gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n        levelOptions = mapOptionsToLevel[gridNode.depth];\n        if (levelOptions) {\n            options = {\n                labels: levelOptions\n            };\n        }\n        if (!tick &&\n            TickConstructor) {\n            ticks[pos] = tick =\n                new TickConstructor(axis, pos, void 0, void 0, {\n                    category: gridNode.name,\n                    tickmarkOffset: gridNode.tickmarkOffset,\n                    options: options\n                });\n        }\n        else {\n            // Update labels depending on tick interval\n            tick.parameters.category = gridNode.name;\n            tick.options = options;\n            tick.addLabel();\n        }\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * @private\n */\nfunction wrapInit(proceed, chart, userOptions, coll) {\n    const axis = this, isTreeGrid = userOptions.type === 'treegrid';\n    if (!axis.treeGrid) {\n        axis.treeGrid = new TreeGridAxisAdditions(axis);\n    }\n    // Set default and forced options for TreeGrid\n    if (isTreeGrid) {\n        // Add event for updating the categories of a treegrid.\n        // NOTE Preferably these events should be set on the axis.\n        TreeGridAxis_addEvent(chart, 'beforeRender', onBeforeRender);\n        TreeGridAxis_addEvent(chart, 'beforeRedraw', onBeforeRender);\n        // Add new collapsed nodes on addseries\n        TreeGridAxis_addEvent(chart, 'addSeries', function (e) {\n            if (e.options.data) {\n                const treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n            }\n        });\n        // Collapse all nodes in axis.treegrid.collapsednodes\n        // where collapsed equals true.\n        TreeGridAxis_addEvent(axis, 'foundExtremes', function () {\n            axis.treeGrid.collapsedNodes?.forEach(function (node) {\n                const breaks = axis.treeGrid.collapse(node);\n                if (axis.brokenAxis) {\n                    axis.brokenAxis.setBreaks(breaks, false);\n                    // Remove the node from the axis collapsedNodes\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes = axis.treeGrid\n                            .collapsedNodes\n                            .filter((n) => ((node.collapseStart !==\n                            n.collapseStart) ||\n                            node.collapseEnd !== n.collapseEnd));\n                    }\n                }\n            });\n        });\n        // If staticScale is not defined on the yAxis\n        // and chart height is set, set axis.isDirty\n        // to ensure collapsing works (#12012)\n        TreeGridAxis_addEvent(axis, 'afterBreaks', function () {\n            if (axis.coll === 'yAxis' &&\n                !axis.staticScale &&\n                axis.chart.options.chart.height) {\n                axis.isDirty = true;\n            }\n        });\n        userOptions = TreeGridAxis_merge({\n            // Default options\n            grid: {\n                enabled: true\n            },\n            // TODO: add support for align in treegrid.\n            labels: {\n                align: 'left',\n                /**\n                * Set options on specific levels in a tree grid axis. Takes\n                * precedence over labels options.\n                *\n                * @sample {gantt} gantt/treegrid-axis/labels-levels\n                *         Levels on TreeGrid Labels\n                *\n                * @type      {Array<*>}\n                * @product   gantt\n                * @apioption yAxis.labels.levels\n                *\n                * @private\n                */\n                levels: [{\n                        /**\n                        * Specify the level which the options within this object\n                        * applies to.\n                        *\n                        * @type      {number}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels.level\n                        *\n                        * @private\n                        */\n                        level: void 0\n                    }, {\n                        level: 1,\n                        /**\n                         * @type      {Highcharts.CSSObject}\n                         * @product   gantt\n                         * @apioption yAxis.labels.levels.style\n                         *\n                         * @private\n                         */\n                        style: {\n                            /** @ignore-option */\n                            fontWeight: 'bold'\n                        }\n                    }],\n                /**\n                 * The symbol for the collapse and expand icon in a\n                 * treegrid.\n                 *\n                 * @product      gantt\n                 * @optionparent yAxis.labels.symbol\n                 *\n                 * @private\n                 */\n                symbol: {\n                    /**\n                     * The symbol type. Points to a definition function in\n                     * the `Highcharts.Renderer.symbols` collection.\n                     *\n                     * @type {Highcharts.SymbolKeyValue}\n                     *\n                     * @private\n                     */\n                    type: 'triangle',\n                    x: -5,\n                    y: -5,\n                    height: 10,\n                    width: 10\n                }\n            },\n            uniqueNames: false\n        }, userOptions, {\n            // Forced options\n            reversed: true\n        });\n    }\n    // Now apply the original function with the original arguments, which are\n    // sliced off this function's arguments\n    proceed.apply(axis, [chart, userOptions, coll]);\n    if (isTreeGrid) {\n        axis.hasNames = true;\n        axis.options.showLastLabel = true;\n    }\n}\n/**\n * Set the tick positions, tickInterval, axis min and max.\n *\n * @private\n * @function Highcharts.GridAxis#setTickInterval\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapSetTickInterval(proceed) {\n    const axis = this, options = axis.options, time = axis.chart.time, linkedParent = typeof options.linkedTo === 'number' ?\n        this.chart[axis.coll]?.[options.linkedTo] :\n        void 0, isTreeGrid = axis.type === 'treegrid';\n    if (isTreeGrid) {\n        axis.min = axis.userMin ?? time.parse(options.min) ?? axis.dataMin;\n        axis.max = axis.userMax ?? time.parse(options.max) ?? axis.dataMax;\n        TreeGridAxis_fireEvent(axis, 'foundExtremes');\n        // `setAxisTranslation` modifies the min and max according to axis\n        // breaks.\n        axis.setAxisTranslation();\n        axis.tickInterval = 1;\n        axis.tickmarkOffset = 0.5;\n        axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n            axis.treeGrid.getTickPositions() :\n            [];\n        if (linkedParent) {\n            const linkedParentExtremes = linkedParent.getExtremes();\n            axis.min = linkedParentExtremes.min ?? linkedParentExtremes.dataMin;\n            axis.max = linkedParentExtremes.max ?? linkedParentExtremes.dataMax;\n            axis.tickPositions = linkedParent.tickPositions;\n        }\n        axis.linkedParent = linkedParent;\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * Wrap axis redraw to remove TreeGrid events from ticks\n *\n * @private\n * @function Highcharts.GridAxis#redraw\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapRedraw(proceed) {\n    const axis = this, isTreeGrid = this.type === 'treegrid';\n    if (isTreeGrid && axis.visible) {\n        axis.tickPositions.forEach(function (pos) {\n            const tick = axis.ticks[pos];\n            if (tick.label?.attachedTreeGridEvents) {\n                TreeGridAxis_removeEvent(tick.label.element);\n                tick.label.attachedTreeGridEvents = false;\n            }\n        });\n    }\n    proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nclass TreeGridAxisAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass, ChartClass, SeriesClass, TickClass) {\n        if (!AxisClass.keepProps.includes('treeGrid')) {\n            const axisProps = AxisClass.prototype;\n            AxisClass.keepProps.push('treeGrid');\n            TreeGridAxis_wrap(axisProps, 'generateTick', wrapGenerateTick);\n            TreeGridAxis_wrap(axisProps, 'init', wrapInit);\n            TreeGridAxis_wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n            TreeGridAxis_wrap(axisProps, 'redraw', wrapRedraw);\n            // Make utility functions available for testing.\n            axisProps.utils = {\n                getNode: Gantt_Tree.getNode\n            };\n            if (!TickConstructor) {\n                TickConstructor = TickClass;\n            }\n        }\n        Axis_GridAxis.compose(AxisClass, ChartClass, TickClass);\n        Axis_BrokenAxis.compose(AxisClass, SeriesClass);\n        TreeGridTick.compose(TickClass);\n        return AxisClass;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    constructor(axis) {\n        this.pendingSizeAdjustment = 0;\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set the collapse status.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     */\n    setCollapsedStatus(node) {\n        const axis = this.axis, chart = axis.chart;\n        axis.series.forEach(function (series) {\n            const data = series.options.data;\n            if (node.id && data) {\n                const point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                if (point && dataPoint) {\n                    point.collapsed = node.collapsed;\n                    dataPoint.collapsed = node.collapsed;\n                }\n            }\n        });\n    }\n    /**\n     * Calculates the new axis breaks to collapse a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     *\n     * @param {number} pos\n     * The tick position to collapse.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    collapse(node) {\n        const axis = this.axis, breaks = axis.options.breaks || [], obj = getBreakFromNode(node);\n        breaks.push(obj);\n        // Change the collapsed flag #13838\n        node.collapsed = true;\n        axis.treeGrid.setCollapsedStatus(node);\n        return breaks;\n    }\n    /**\n     * Calculates the new axis breaks to expand a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to expand.\n     *\n     * @param {number} pos\n     * The tick position to expand.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    expand(node) {\n        const axis = this.axis, obj = getBreakFromNode(node);\n        // Change the collapsed flag #13838\n        node.collapsed = false;\n        axis.treeGrid.setCollapsedStatus(node);\n        // Remove the break from the axis breaks array.\n        return axis.options.breaks?.reduce(function (arr, b) {\n            if (b.to !== obj.to || b.from !== obj.from) {\n                arr.push(b);\n            }\n            return arr;\n        }, []) || [];\n    }\n    /**\n     * Creates a list of positions for the ticks on the axis. Filters out\n     * positions that are outside min and max, or is inside an axis break.\n     *\n     * @private\n     *\n     * @return {Array<number>}\n     * List of positions.\n     */\n    getTickPositions() {\n        const axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n        return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n            const pos = +key;\n            if (pos >= roundedMin &&\n                pos <= roundedMax &&\n                !axis.brokenAxis?.isInAnyBreak(pos)) {\n                arr.push(pos);\n            }\n            return arr;\n        }, []);\n    }\n    /**\n     * Check if a node is collapsed.\n     *\n     * @private\n     *\n     * @param {Object} node\n     * The node to check if is collapsed.\n     *\n     * @return {boolean}\n     * Returns true if collapsed, false if expanded.\n     */\n    isCollapsed(node) {\n        const axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node);\n        return breaks.some(function (b) {\n            return b.from === obj.from && b.to === obj.to;\n        });\n    }\n    /**\n     * Calculates the new axis breaks after toggling the collapse/expand\n     * state of a node. If it is collapsed it will be expanded, and if it is\n     * expanded it will be collapsed.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to toggle.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    toggleCollapse(node) {\n        return (this.isCollapsed(node) ?\n            this.expand(node) :\n            this.collapse(node));\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const TreeGridAxis = (TreeGridAxisAdditions);\n\n;// ./code/es-modules/masters/modules/treegrid.js\n\n\n\n\nconst G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nTreeGridAxis.compose(G.Axis, G.Chart, G.Series, G.Tick);\n/* harmony default export */ const treegrid_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","define","amd","amd1","window","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__184__","__WEBPACK_EXTERNAL_MODULE__532__","__WEBPACK_EXTERNAL_MODULE__620__","TickConstructor","BrokenAxis","GridAxisSide","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","treegrid_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default","addEvent","find","fireEvent","isArray","isNumber","pick","onAxisAfterInit","brokenAxis","setBreaks","options","breaks","onAxisAfterSetOptions","keys","axis","length","ordinal","onAxisAfterSetTickPositions","hasBreaks","tickPositions","info","newPositions","i","isInAnyBreak","push","onAxisInit","Additions","onSeriesAfterGeneratePoints","isDirty","connectNulls","points","xAxis","yAxis","point","isPointInBreak","y","x","visible","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","threshold","series","forEach","breakArray","isXAxis","min","toUpperCase","brk","eventName","from","to","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","slice","current","next","gapUnit","basePointRange","xRange","splice","isNull","stacking","stack","stacks","stackKey","stackLabels","total","getGraphPath","compose","AxisClass","SeriesClass","keepProps","includes","seriesProto","gappedPath","isInBreak","val","ret","repeat","Infinity","test","inclusive","lin2Val","nval","len","val2Lin","constructor","findBreakAt","b","testKeep","inbrk","keep","showPoints","redraw","time","chart","parse","userOptions","forceRedraw","val2lin","lin2val","setExtremes","newMin","newMax","animation","eventArguments","treeGrid","tree","axisBreak","setAxisTranslation","unitLength","breakArrayTemp","pointRangePadding","inBrk","userMin","max","userMax","dataMin","dataMax","start","Math","value","move","size","breakSize","sort","staticScale","transA","minPixelPadding","minPointOffset","Axis_BrokenAxis","highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_","highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default","dateFormats","GridAxis_addEvent","defined","erase","GridAxis_find","GridAxis_isArray","GridAxis_isNumber","merge","GridAxis_pick","timeUnits","wrap","isObject","getMaxLabelDimensions","ticks","dimensions","width","height","pos","tick","labelHeight","labelWidth","label","getBBox","textStr","textPxLength","round","type","mapOfPosToGridNode","treeDepth","labels","indentation","wrapGetOffset","proceed","grid","columnsFirst","side","apply","isColumn","columns","reverse","column","getOffset","onAfterGetTitlePosition","e","gridOptions","enabled","axisTitle","axisHeight","horiz","left","axisLeft","offset","opposite","top","axisTop","axisWidth","tickSize","titleWidth","xOption","title","yOption","titleMargin","margin","titleFontSize","renderer","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","applyGridOptions","align","categories","showLastLabel","labelRotation","rotation","minTickInterval","columnIndex","columnOptions","isInternal","linkedTo","scrollbar","axes","coll","onAfterRender","firstTick","styledMode","slotWidth","style","css","maxLabelDimensions","rightWall","destroy","isOuterAxis","axisLine","lineWidth","linePath","getLinePath","startPoint","endPoint","distance","tickLength","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","chartWidth","toPixels","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","attr","stroke","lineColor","animate","lowerBorder","axisLineExtra","showAxis","render","hasRendered","linkedParent","tickMark","lastTick","hiddenLabels","pop","element","show","hiddenMarks","hide","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","pointRange","dateTimeLabelFormats","unitName","range","count","tickInterval","onAfterSetOptions","gridAxisOptions","className","hour","list","day","week","month","borderWidth","padding","fontSize","text","reserveSpace","textOverflow","units","tickPixelInterval","tickPositioner","parentInfo","unitIdx","unit","counts","unitRange","getTimeTicks","startOfWeek","minPadding","maxPadding","tickWidth","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","labelPadding","cellHeight","onChartAfterSetChartSize","setAxisSize","onDestroy","keepEvents","onInit","borderColor","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","reversed","labelOpts","tickPos","nextTickPos","index","crispCorr","right","chartHeight","translate","lblMetrics","useHTML","lines","h","onTickLabelFormat","ctx","pointCopy","isFirst","data","p","is","seriesTypes","gantt","pointClass","setGanttPointAliases","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","startOnTick","endOnTick","wrapUnsquish","args","arguments","Array","parentAxis","thisIndex","lastIndex","inverted","otherAxis","path","extraBorderLine","addClass","add","axisGroup","zIndex","E","timestamp","dateFormat","charAt","W","toParts","firstDay","thursday","firstThursday","makeTime","floor","thursdayTS","toString","Axis_GridAxis","ChartClass","TickClass","extend","Tree_isNumber","Tree_pick","getNode","id","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","end","children","map","child","childStart","NaN","childEnd","milestone","Gantt_Tree","getTree","getListOfParents","ids","listOfParents","reduce","prev","curr","indexOf","adoptedByRoot","orphan","parentExcluded","TreeGridTick_addEvent","correctFloat","removeEvent","TreeGridTick_isObject","TreeGridTick_isNumber","TreeGridTick_pick","TreeGridTick_wrap","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","step","lbOptions","isTreeGrid","result","symbol","wrapRenderLabel","collapsed","tickGrid","tickOptions","icon","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","shouldRender","prefixClassName","prefixLevelClass","removeClass","RegExp","isCollapsed","renderLabelIcon","params","isNew","labelBox","xy","iconCenter","symbols","group","cursor","color","strokeWidth","translateX","translateY","styles","parentGroup","object","attachedTreeGridEvents","textDecoration","toggleCollapse","tickProto","collapse","expand","posMappedNodes","scrollMode","maxPx","pendingSizeAdjustment","adjustedMax","toValue","newMaxVal","newMinVal","missingPx","trigger","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default","TreeUtilities_extend","TreeUtilities_isArray","TreeUtilities_isNumber","TreeUtilities_isObject","TreeUtilities_merge","TreeUtilities_pick","relativeLength","getLevelOptions","TreeGridAxis_getLevelOptions","getColor","colorByPoint","colorIndexByPoint","colorIndex","mapOptionsToLevel","parentColor","parentColorIndex","colors","siblings","chartOptionsChart","colorCount","variateColor","colorVariation","brighten","defaults","converted","levels","item","levelIsConstant","getNodeWidth","columnCount","nodeDistance","nodeWidth","plotSizeX","fraction","parseFloat","nDistance","Number","setTreeValues","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","name","newOptions","isLeaf","updateRootId","rootId","rootNode","TreeGridAxis_addEvent","TreeGridAxis_isArray","splat","TreeGridAxis_find","TreeGridAxis_fireEvent","TreeGridAxis_isObject","isString","TreeGridAxis_merge","TreeGridAxis_removeEvent","TreeGridAxis_wrap","getBreakFromNode","collapseStart","collapseEnd","getTreeGridFromData","uniqueNames","numberOfSeries","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentNode","parentGridNode","nodes","updateYValuesAndTickPos","setValues","diff","seriesIndex","onBeforeRender","target","filter","some","isDirtyData","seriesHasPrimitivePoints","arr","s","seriesData","firstPoint","foundPrimitivePoint","pointOptions","optionsToObject","hasNames","axisData","toArray","x2","setData","wrapGenerateTick","levelOptions","category","parameters","addLabel","wrapInit","TreeGridAxisAdditions","concat","fontWeight","wrapSetTickInterval","getTickPositions","linkedParentExtremes","getExtremes","wrapRedraw","axisProps","utils","TreeGridTick","setCollapsedStatus","dataPoint","roundedMin","roundedMax","ceil","G","TreeGridAxis","Axis","Chart","Series","Tick"],"mappings":"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"}