{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/gantt\n * @requires highcharts\n *\n * Gantt series\n *\n * (c) 2016-2025 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__pathfinder_src_js_33aeac6b__ from \"./pathfinder.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__static_scale_src_js_77bdd82a__ from \"./static-scale.js\";\nimport * as __WEBPACK_EXTERNAL_MODULE__xrange_src_js_9610b67c__ from \"./xrange.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// ./code/es-modules/Extensions/ArrowSymbols.js\n/* *\n *\n *  (c) 2017 Highsoft AS\n *  Authors: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates an arrow symbol. Like a triangle, except not filled.\n * ```\n *                   o\n *             o\n *       o\n * o\n *       o\n *             o\n *                   o\n * ```\n *\n * @private\n * @function\n *\n * @param {number} x\n *        x position of the arrow\n *\n * @param {number} y\n *        y position of the arrow\n *\n * @param {number} w\n *        width of the arrow\n *\n * @param {number} h\n *        height of the arrow\n *\n * @return {Highcharts.SVGPathArray}\n *         Path array\n */\nfunction arrow(x, y, w, h) {\n    return [\n        ['M', x, y + h / 2],\n        ['L', x + w, y],\n        ['L', x, y + h / 2],\n        ['L', x + w, y + h]\n    ];\n}\n/**\n * Creates a half-width arrow symbol. Like a triangle, except not filled.\n * ```\n *       o\n *    o\n * o\n *    o\n *       o\n * ```\n *\n * @private\n * @function\n *\n * @param {number} x\n *        x position of the arrow\n *\n * @param {number} y\n *        y position of the arrow\n *\n * @param {number} w\n *        width of the arrow\n *\n * @param {number} h\n *        height of the arrow\n *\n * @return {Highcharts.SVGPathArray}\n *         Path array\n */\nfunction arrowHalf(x, y, w, h) {\n    return arrow(x, y, w / 2, h);\n}\n/**\n * @private\n */\nfunction compose(SVGRendererClass) {\n    const symbols = SVGRendererClass.prototype.symbols;\n    symbols.arrow = arrow;\n    symbols['arrow-filled'] = triangleLeft;\n    symbols['arrow-filled-half'] = triangleLeftHalf;\n    symbols['arrow-half'] = arrowHalf;\n    symbols['triangle-left'] = triangleLeft;\n    symbols['triangle-left-half'] = triangleLeftHalf;\n}\n/**\n * Creates a left-oriented triangle.\n * ```\n *             o\n *       ooooooo\n * ooooooooooooo\n *       ooooooo\n *             o\n * ```\n *\n * @private\n * @function\n *\n * @param {number} x\n *        x position of the triangle\n *\n * @param {number} y\n *        y position of the triangle\n *\n * @param {number} w\n *        width of the triangle\n *\n * @param {number} h\n *        height of the triangle\n *\n * @return {Highcharts.SVGPathArray}\n *         Path array\n */\nfunction triangleLeft(x, y, w, h) {\n    return [\n        ['M', x + w, y],\n        ['L', x, y + h / 2],\n        ['L', x + w, y + h],\n        ['Z']\n    ];\n}\n/**\n * Creates a half-width, left-oriented triangle.\n * ```\n *       o\n *    oooo\n * ooooooo\n *    oooo\n *       o\n * ```\n *\n * @private\n * @function\n *\n * @param {number} x\n *        x position of the triangle\n *\n * @param {number} y\n *        y position of the triangle\n *\n * @param {number} w\n *        width of the triangle\n *\n * @param {number} h\n *        height of the triangle\n *\n * @return {Highcharts.SVGPathArray}\n *         Path array\n */\nfunction triangleLeftHalf(x, y, w, h) {\n    return triangleLeft(x, y, w / 2, h);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst ArrowSymbols = {\n    compose\n};\n/* harmony default export */ const Extensions_ArrowSymbols = (ArrowSymbols);\n\n;// ./code/es-modules/Gantt/Connection.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defined, error, merge, objectEach } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst deg2rad = (external_highcharts_src_js_default_default()).deg2rad, max = Math.max, min = Math.min;\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Connection class. Used internally to represent a connection between two\n * points.\n *\n * @private\n * @class\n * @name Highcharts.Connection\n *\n * @param {Highcharts.Point} from\n *        Connection runs from this Point.\n *\n * @param {Highcharts.Point} to\n *        Connection runs to this Point.\n *\n * @param {Highcharts.ConnectorsOptions} [options]\n *        Connection options.\n */\nclass Connection {\n    constructor(from, to, options) {\n        this.init(from, to, options);\n    }\n    /**\n     * Initialize the Connection object. Used as constructor only.\n     *\n     * @function Highcharts.Connection#init\n     *\n     * @param {Highcharts.Point} from\n     *        Connection runs from this Point.\n     *\n     * @param {Highcharts.Point} to\n     *        Connection runs to this Point.\n     *\n     * @param {Highcharts.ConnectorsOptions} [options]\n     *        Connection options.\n     */\n    init(from, to, options) {\n        this.fromPoint = from;\n        this.toPoint = to;\n        this.options = options;\n        this.chart = from.series.chart;\n        this.pathfinder = this.chart.pathfinder;\n    }\n    /**\n     * Add (or update) this connection's path on chart. Stores reference to the\n     * created element on this.graphics.path.\n     *\n     * @function Highcharts.Connection#renderPath\n     *\n     * @param {Highcharts.SVGPathArray} path\n     *        Path to render, in array format. E.g. ['M', 0, 0, 'L', 10, 10]\n     *\n     * @param {Highcharts.SVGAttributes} [attribs]\n     *        SVG attributes for the path.\n     *\n     * @param {Partial<Highcharts.AnimationOptionsObject>} [animation]\n     *        Animation options for the rendering.\n     */\n    renderPath(path, attribs) {\n        const connection = this, chart = this.chart, styledMode = chart.styledMode, pathfinder = this.pathfinder, anim = {};\n        let pathGraphic = connection.graphics && connection.graphics.path;\n        // Add the SVG element of the pathfinder group if it doesn't exist\n        if (!pathfinder.group) {\n            pathfinder.group = chart.renderer.g()\n                .addClass('highcharts-pathfinder-group')\n                .attr({ zIndex: -1 })\n                .add(chart.seriesGroup);\n        }\n        // Shift the group to compensate for plot area.\n        // Note: Do this always (even when redrawing a path) to avoid issues\n        // when updating chart in a way that changes plot metrics.\n        pathfinder.group.translate(chart.plotLeft, chart.plotTop);\n        // Create path if does not exist\n        if (!(pathGraphic && pathGraphic.renderer)) {\n            pathGraphic = chart.renderer.path()\n                .add(pathfinder.group);\n            if (!styledMode) {\n                pathGraphic.attr({\n                    opacity: 0\n                });\n            }\n        }\n        // Set path attribs and animate to the new path\n        pathGraphic.attr(attribs);\n        anim.d = path;\n        if (!styledMode) {\n            anim.opacity = 1;\n        }\n        pathGraphic.animate(anim);\n        // Store reference on connection\n        this.graphics = this.graphics || {};\n        this.graphics.path = pathGraphic;\n    }\n    /**\n     * Calculate and add marker graphics for connection to the chart. The\n     * created/updated elements are stored on this.graphics.start and\n     * this.graphics.end.\n     *\n     * @function Highcharts.Connection#addMarker\n     *\n     * @param {string} type\n     *        Marker type, either 'start' or 'end'.\n     *\n     * @param {Highcharts.ConnectorsMarkerOptions} options\n     *        All options for this marker. Not calculated or merged with other\n     *        options.\n     *\n     * @param {Highcharts.SVGPathArray} path\n     *        Connection path in array format. This is used to calculate the\n     *        rotation angle of the markers.\n     */\n    addMarker(type, options, path) {\n        const connection = this, chart = connection.fromPoint.series.chart, pathfinder = chart.pathfinder, renderer = chart.renderer, point = (type === 'start' ?\n            connection.fromPoint :\n            connection.toPoint), anchor = point.getPathfinderAnchorPoint(options);\n        let markerVector, radians, rotation, box, width, height, pathVector, segment;\n        if (!options.enabled) {\n            return;\n        }\n        // Last vector before start/end of path, used to get angle\n        if (type === 'start') {\n            segment = path[1];\n        }\n        else { // 'end'\n            segment = path[path.length - 2];\n        }\n        if (segment && segment[0] === 'M' || segment[0] === 'L') {\n            pathVector = {\n                x: segment[1],\n                y: segment[2]\n            };\n            // Get angle between pathVector and anchor point and use it to\n            // create marker position.\n            radians = point.getRadiansToVector(pathVector, anchor);\n            markerVector = point.getMarkerVector(radians, options.radius, anchor);\n            // Rotation of marker is calculated from angle between pathVector\n            // and markerVector.\n            // (Note:\n            //  Used to recalculate radians between markerVector and pathVector,\n            //  but this should be the same as between pathVector and anchor.)\n            rotation = -radians / deg2rad;\n            if (options.width && options.height) {\n                width = options.width;\n                height = options.height;\n            }\n            else {\n                width = height = options.radius * 2;\n            }\n            // Add graphics object if it does not exist\n            connection.graphics = connection.graphics || {};\n            box = {\n                x: markerVector.x - (width / 2),\n                y: markerVector.y - (height / 2),\n                width: width,\n                height: height,\n                rotation: rotation,\n                rotationOriginX: markerVector.x,\n                rotationOriginY: markerVector.y\n            };\n            if (!connection.graphics[type]) {\n                // Create new marker element\n                connection.graphics[type] = renderer\n                    .symbol(options.symbol)\n                    .addClass('highcharts-point-connecting-path-' + type + '-marker' +\n                    ' highcharts-color-' + this.fromPoint.colorIndex)\n                    .attr(box)\n                    .add(pathfinder.group);\n                if (!renderer.styledMode) {\n                    connection.graphics[type].attr({\n                        fill: options.color || connection.fromPoint.color,\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        opacity: 0\n                    })\n                        .animate({\n                        opacity: 1\n                    }, point.series.options.animation);\n                }\n            }\n            else {\n                connection.graphics[type].animate(box);\n            }\n        }\n    }\n    /**\n     * Calculate and return connection path.\n     * Note: Recalculates chart obstacles on demand if they aren't calculated.\n     *\n     * @function Highcharts.Connection#getPath\n     *\n     * @param {Highcharts.ConnectorsOptions} options\n     *        Connector options. Not calculated or merged with other options.\n     *\n     * @return {object|undefined}\n     *         Calculated SVG path data in array format.\n     */\n    getPath(options) {\n        const pathfinder = this.pathfinder, chart = this.chart, algorithm = pathfinder.algorithms[options.type];\n        let chartObstacles = pathfinder.chartObstacles;\n        if (typeof algorithm !== 'function') {\n            error('\"' + options.type + '\" is not a Pathfinder algorithm.');\n            return {\n                path: [],\n                obstacles: []\n            };\n        }\n        // This function calculates obstacles on demand if they don't exist\n        if (algorithm.requiresObstacles && !chartObstacles) {\n            chartObstacles =\n                pathfinder.chartObstacles =\n                    pathfinder.getChartObstacles(options);\n            // If the algorithmMargin was computed, store the result in default\n            // options.\n            chart.options.connectors.algorithmMargin =\n                options.algorithmMargin;\n            // Cache some metrics too\n            pathfinder.chartObstacleMetrics =\n                pathfinder.getObstacleMetrics(chartObstacles);\n        }\n        // Get the SVG path\n        return algorithm(\n        // From\n        this.fromPoint.getPathfinderAnchorPoint(options.startMarker), \n        // To\n        this.toPoint.getPathfinderAnchorPoint(options.endMarker), merge({\n            chartObstacles: chartObstacles,\n            lineObstacles: pathfinder.lineObstacles || [],\n            obstacleMetrics: pathfinder.chartObstacleMetrics,\n            hardBounds: {\n                xMin: 0,\n                xMax: chart.plotWidth,\n                yMin: 0,\n                yMax: chart.plotHeight\n            },\n            obstacleOptions: {\n                margin: options.algorithmMargin\n            },\n            startDirectionX: pathfinder.getAlgorithmStartDirection(options.startMarker)\n        }, options));\n    }\n    /**\n     * (re)Calculate and (re)draw the connection.\n     *\n     * @function Highcharts.Connection#render\n     */\n    render() {\n        const connection = this, fromPoint = connection.fromPoint, series = fromPoint.series, chart = series.chart, pathfinder = chart.pathfinder, attribs = {};\n        let options = merge(chart.options.connectors, series.options.connectors, fromPoint.options.connectors, connection.options);\n        // Set path attribs\n        if (!chart.styledMode) {\n            attribs.stroke = options.lineColor || fromPoint.color;\n            attribs['stroke-width'] = options.lineWidth;\n            if (options.dashStyle) {\n                attribs.dashstyle = options.dashStyle;\n            }\n        }\n        attribs['class'] = // eslint-disable-line dot-notation\n            'highcharts-point-connecting-path ' +\n                'highcharts-color-' + fromPoint.colorIndex;\n        options = merge(attribs, options);\n        // Set common marker options\n        if (!defined(options.marker.radius)) {\n            options.marker.radius = min(max(Math.ceil((options.algorithmMargin || 8) / 2) - 1, 1), 5);\n        }\n        // Get the path\n        const pathResult = connection.getPath(options), path = pathResult.path;\n        // Always update obstacle storage with obstacles from this path.\n        // We don't know if future calls will need this for their algorithm.\n        if (pathResult.obstacles) {\n            pathfinder.lineObstacles =\n                pathfinder.lineObstacles || [];\n            pathfinder.lineObstacles =\n                pathfinder.lineObstacles.concat(pathResult.obstacles);\n        }\n        // Add the calculated path to the pathfinder group\n        connection.renderPath(path, attribs);\n        // Render the markers\n        connection.addMarker('start', merge(options.marker, options.startMarker), path);\n        connection.addMarker('end', merge(options.marker, options.endMarker), path);\n    }\n    /**\n     * Destroy connection by destroying the added graphics elements.\n     *\n     * @function Highcharts.Connection#destroy\n     */\n    destroy() {\n        if (this.graphics) {\n            objectEach(this.graphics, function (val) {\n                val.destroy();\n            });\n            delete this.graphics;\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gantt_Connection = (Connection);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * The default pathfinder algorithm to use for a chart. It is possible to define\n * your own algorithms by adding them to the\n * `Highcharts.Pathfinder.prototype.algorithms`\n * object before the chart has been created.\n *\n * The default algorithms are as follows:\n *\n * `straight`:      Draws a straight line between the connecting\n *                  points. Does not avoid other points when drawing.\n *\n * `simpleConnect`: Finds a path between the points using right angles\n *                  only. Takes only starting/ending points into\n *                  account, and will not avoid other points.\n *\n * `fastAvoid`:     Finds a path between the points using right angles\n *                  only. Will attempt to avoid other points, but its\n *                  focus is performance over accuracy. Works well with\n *                  less dense datasets.\n *\n * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Extensions/CurrentDateIndication.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed } = (external_highcharts_src_js_default_default());\n\nconst { addEvent, merge: CurrentDateIndication_merge, pushUnique, wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Show an indicator on the axis for the current date and time. Can be a\n * boolean or a configuration object similar to\n * [xAxis.plotLines](#xAxis.plotLines).\n *\n * @sample gantt/current-date-indicator/demo\n *         Current date indicator enabled\n * @sample gantt/current-date-indicator/object-config\n *         Current date indicator with custom options\n *\n * @declare   Highcharts.CurrentDateIndicatorOptions\n * @type      {boolean|CurrentDateIndicatorOptions}\n * @default   true\n * @extends   xAxis.plotLines\n * @excluding value\n * @product   gantt\n * @apioption xAxis.currentDateIndicator\n */\nconst defaultOptions = {\n    color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n    width: 2,\n    /**\n     * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n     */\n    label: {\n        /**\n         * Format of the label. This options is passed as the first argument to\n         * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n         *\n         * @type      {string|Intl.DateTimeFormatOptions}\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator.label.format\n         */\n        format: '%[abdYHM]',\n        formatter: function (value, format) {\n            return this.axis.chart.time.dateFormat(format || '', value, true);\n        },\n        rotation: 0,\n        /**\n         * @type {Highcharts.CSSObject}\n         */\n        style: {\n            /** @internal */\n            fontSize: '0.7em'\n        }\n    }\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction CurrentDateIndication_compose(AxisClass, PlotLineOrBandClass) {\n    if (pushUnique(composed, 'CurrentDateIndication')) {\n        addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n        addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n        wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n    }\n}\n/**\n * @private\n */\nfunction onAxisAfterSetOptions() {\n    const options = this.options, cdiOptions = options.currentDateIndicator;\n    if (cdiOptions) {\n        const plotLineOptions = typeof cdiOptions === 'object' ?\n            CurrentDateIndication_merge(defaultOptions, cdiOptions) :\n            CurrentDateIndication_merge(defaultOptions);\n        plotLineOptions.value = Date.now();\n        plotLineOptions.className = 'highcharts-current-date-indicator';\n        if (!options.plotLines) {\n            options.plotLines = [];\n        }\n        options.plotLines.push(plotLineOptions);\n    }\n}\n/**\n * @private\n */\nfunction onPlotLineOrBandRender() {\n    // If the label already exists, update its text\n    if (this.label) {\n        this.label.attr({\n            text: this.getLabelText(this.options.label)\n        });\n    }\n}\n/**\n * @private\n */\nfunction wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n    const options = this.options;\n    if (options &&\n        options.className &&\n        options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n        options.label &&\n        typeof options.label.formatter === 'function') {\n        options.value = Date.now();\n        return options.label.formatter\n            .call(this, options.value, options.label.format);\n    }\n    return defaultMethod.call(this, defaultLabelOptions);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst CurrentDateIndication = {\n    compose: CurrentDateIndication_compose\n};\n/* harmony default export */ const Extensions_CurrentDateIndication = (CurrentDateIndication);\n\n;// external [\"../highcharts.js\",\"default\",\"Chart\"]\nconst external_highcharts_src_js_default_Chart_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Chart;\nvar external_highcharts_src_js_default_Chart_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Chart_namespaceObject);\n;// ./code/es-modules/Core/Chart/GanttChart.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defaultOptions: GanttChart_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { isArray, merge: GanttChart_merge, splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * Gantt-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n *\n * @requires modules/gantt\n *\n * @class\n * @name Highcharts.GanttChart\n * @extends Highcharts.Chart\n */\nclass GanttChart extends (external_highcharts_src_js_default_Chart_default()) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initializes the chart. The constructor's arguments are passed on\n     * directly.\n     *\n     * @function Highcharts.GanttChart#init\n     *\n     * @param {Highcharts.Options} userOptions\n     *        Custom options.\n     *\n     * @param {Function} [callback]\n     *        Function to run when the chart has loaded and all external\n     *        images are loaded.\n     *\n     *\n     * @emits Highcharts.GanttChart#event:init\n     * @emits Highcharts.GanttChart#event:afterInit\n     */\n    init(userOptions, callback) {\n        const xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis;\n        let defaultLinkedTo;\n        // Avoid doing these twice\n        userOptions.xAxis = userOptions.yAxis = void 0;\n        const options = GanttChart_merge(true, {\n            chart: {\n                type: 'gantt'\n            },\n            title: {\n                text: ''\n            },\n            legend: {\n                enabled: false\n            },\n            navigator: {\n                series: { type: 'gantt' },\n                // Bars were clipped, #14060.\n                yAxis: {\n                    type: 'category'\n                }\n            }\n        }, userOptions, // User's options\n        // forced options\n        {\n            isGantt: true\n        });\n        userOptions.xAxis = xAxisOptions;\n        userOptions.yAxis = yAxisOptions;\n        // Apply X axis options to both single and multi x axes If user hasn't\n        // defined axes as array, make it into an array and add a second axis by\n        // default.\n        options.xAxis = (!isArray(userOptions.xAxis) ?\n            [userOptions.xAxis || {}, {}] :\n            userOptions.xAxis).map((xAxisOptions, i) => {\n            if (i === 1) { // Second xAxis\n                defaultLinkedTo = 0;\n            }\n            return GanttChart_merge(\n            // Defaults\n            {\n                grid: {\n                    borderColor: GanttChart_defaultOptions.xAxis?.grid?.borderColor ||\n                        \"#cccccc\" /* Palette.neutralColor20 */,\n                    enabled: true\n                },\n                opposite: GanttChart_defaultOptions.xAxis?.opposite ??\n                    xAxisOptions.opposite ??\n                    true,\n                linkedTo: defaultLinkedTo\n            }, \n            // User options\n            xAxisOptions, \n            // Forced options\n            {\n                type: 'datetime'\n            });\n        });\n        // Apply Y axis options to both single and multi y axes\n        options.yAxis = (splat(userOptions.yAxis || {})).map((yAxisOptions) => GanttChart_merge(\n        // Defaults\n        {\n            grid: {\n                borderColor: GanttChart_defaultOptions.yAxis?.grid?.borderColor ||\n                    \"#cccccc\" /* Palette.neutralColor20 */,\n                enabled: true\n            },\n            staticScale: 50,\n            reversed: true,\n            // Set default type treegrid, but only if 'categories' is\n            // undefined\n            type: yAxisOptions.categories ? yAxisOptions.type : 'treegrid'\n        }, \n        // User options\n        yAxisOptions));\n        super.init(options, callback);\n    }\n}\n/* *\n *\n *  Class Namespace\n *\n * */\n(function (GanttChart) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable jsdoc/check-param-names */\n    /**\n     * The factory function for creating new gantt charts. Creates a new {@link\n     * Highcharts.GanttChart|GanttChart} object with different default options\n     * than the basic Chart.\n     *\n     * @example\n     * // Render a chart in to div#container\n     * let chart = Highcharts.ganttChart('container', {\n     *     title: {\n     *         text: 'My chart'\n     *     },\n     *     series: [{\n     *         data: ...\n     *     }]\n     * });\n     *\n     * @function Highcharts.ganttChart\n     *\n     * @param {string|Highcharts.HTMLDOMElement} renderTo\n     *        The DOM element to render to, or its id.\n     *\n     * @param {Highcharts.Options} options\n     *        The chart options structure.\n     *\n     * @param {Highcharts.ChartCallbackFunction} [callback]\n     *        Function to run when the chart has loaded and all external\n     *        images are loaded. Defining a\n     *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n     *        handler is equivalent.\n     *\n     * @return {Highcharts.GanttChart}\n     *         Returns the Chart object.\n     */\n    function ganttChart(a, b, c) {\n        return new GanttChart(a, b, c);\n    }\n    GanttChart.ganttChart = ganttChart;\n    /* eslint-enable jsdoc/check-param-names */\n})(GanttChart || (GanttChart = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Chart_GanttChart = (GanttChart);\n\n;// external [\"../highcharts.js\",\"default\",\"Axis\"]\nconst external_highcharts_src_js_default_Axis_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Axis;\nvar external_highcharts_src_js_default_Axis_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Axis_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/ChartNavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: ChartNavigatorComposition_addEvent, merge: ChartNavigatorComposition_merge, pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst composedMembers = [];\n/* *\n *\n *  Variables\n *\n * */\nlet NavigatorConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction ChartNavigatorComposition_compose(ChartClass, NavigatorClass) {\n    if (external_highcharts_src_js_default_default().pushUnique(composedMembers, ChartClass)) {\n        const chartProto = ChartClass.prototype;\n        NavigatorConstructor = NavigatorClass;\n        chartProto.callbacks.push(onChartCallback);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n        ChartNavigatorComposition_addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n        ChartNavigatorComposition_addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n        ChartNavigatorComposition_addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n        ChartNavigatorComposition_addEvent(ChartClass, 'update', onChartUpdate);\n    }\n}\n/**\n * Handle adding new series.\n * @private\n */\nfunction onChartAfterAddSeries() {\n    if (this.navigator) {\n        // Recompute which series should be shown in navigator, and add them\n        this.navigator.setBaseSeries(null, false);\n    }\n}\n/**\n * For stock charts, extend the Chart.setChartSize method so that we can set the\n * final top position of the navigator once the height of the chart, including\n * the legend, is determined. #367. We can't use Chart.getMargins, because\n * labels offsets are not calculated yet.\n * @private\n */\nfunction onChartAfterSetChartSize() {\n    const legend = this.legend, navigator = this.navigator;\n    let legendOptions, xAxis, yAxis;\n    if (navigator) {\n        legendOptions = legend && legend.options;\n        xAxis = navigator.xAxis;\n        yAxis = navigator.yAxis;\n        const { scrollbarHeight, scrollButtonSize } = navigator;\n        // Compute the top position\n        if (this.inverted) {\n            navigator.left = navigator.opposite ?\n                this.chartWidth - scrollbarHeight -\n                    navigator.height :\n                this.spacing[3] + scrollbarHeight;\n            navigator.top = this.plotTop + scrollButtonSize;\n        }\n        else {\n            navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n            navigator.top = navigator.navigatorOptions.top ||\n                this.chartHeight -\n                    navigator.height -\n                    scrollbarHeight -\n                    (this.scrollbar?.options.margin || 0) -\n                    this.spacing[2] -\n                    (this.rangeSelector && this.extraBottomMargin ?\n                        this.rangeSelector.getHeight() :\n                        0) -\n                    ((legendOptions &&\n                        legendOptions.verticalAlign === 'bottom' &&\n                        legendOptions.layout !== 'proximate' && // #13392\n                        legendOptions.enabled &&\n                        !legendOptions.floating) ?\n                        legend.legendHeight +\n                            pick(legendOptions.margin, 10) :\n                        0) -\n                    (this.titleOffset ? this.titleOffset[2] : 0);\n        }\n        if (xAxis && yAxis) { // False if navigator is disabled (#904)\n            if (this.inverted) {\n                xAxis.options.left = yAxis.options.left = navigator.left;\n            }\n            else {\n                xAxis.options.top = yAxis.options.top = navigator.top;\n            }\n            xAxis.setAxisSize();\n            yAxis.setAxisSize();\n        }\n    }\n}\n/**\n * Initialize navigator, if no scrolling exists yet.\n * @private\n */\nfunction onChartAfterUpdate(event) {\n    if (!this.navigator && !this.scroller &&\n        (this.options.navigator.enabled ||\n            this.options.scrollbar.enabled)) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n        if (pick(event.redraw, true)) {\n            this.redraw(event.animation); // #7067\n        }\n    }\n}\n/**\n * Initialize navigator for stock charts\n * @private\n */\nfunction onChartBeforeRender() {\n    const options = this.options;\n    if (options.navigator.enabled ||\n        options.scrollbar.enabled) {\n        this.scroller = this.navigator = new NavigatorConstructor(this);\n    }\n}\n/**\n * For Stock charts. For x only zooming, do not to create the zoom button\n * because X axis zooming is already allowed by the Navigator and Range\n * selector. (#9285)\n * @private\n */\nfunction onChartBeforeShowResetZoom() {\n    const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n    if (((navigator && navigator.enabled) ||\n        (rangeSelector && rangeSelector.enabled)) &&\n        ((!isTouchDevice &&\n            this.zooming.type === 'x') ||\n            (isTouchDevice && this.zooming.pinchType === 'x'))) {\n        return false;\n    }\n}\n/**\n * @private\n */\nfunction onChartCallback(chart) {\n    const navigator = chart.navigator;\n    // Initialize the navigator\n    if (navigator && chart.xAxis[0]) {\n        const extremes = chart.xAxis[0].getExtremes();\n        navigator.render(extremes.min, extremes.max);\n    }\n}\n/**\n * Merge options, if no scrolling exists yet\n * @private\n */\nfunction onChartUpdate(e) {\n    const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n    if (!this.navigator && !this.scroller &&\n        (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n        ChartNavigatorComposition_merge(true, this.options.navigator, navigatorOptions);\n        ChartNavigatorComposition_merge(true, this.options.scrollbar, scrollbarOptions);\n        delete e.options.navigator;\n        delete e.options.scrollbar;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst ChartNavigatorComposition = {\n    compose: ChartNavigatorComposition_compose\n};\n/* harmony default export */ const Navigator_ChartNavigatorComposition = (ChartNavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/NavigatorAxisComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isTouchDevice: NavigatorAxisComposition_isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: NavigatorAxisComposition_addEvent, correctFloat, defined: NavigatorAxisComposition_defined, isNumber, pick: NavigatorAxisComposition_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onAxisInit() {\n    const axis = this;\n    if (!axis.navigatorAxis) {\n        axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n    }\n}\n/**\n * For Stock charts, override selection zooming with some special features\n * because X axis zooming is already allowed by the Navigator and Range\n * selector.\n * @private\n */\nfunction onAxisSetExtremes(e) {\n    const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n    let zoomed;\n    if (axis.isXAxis &&\n        (navigator?.enabled || rangeSelector?.enabled)) {\n        // For y only zooming, ignore the X axis completely\n        if (zoomType === 'y' && e.trigger === 'zoom') {\n            zoomed = false;\n            // For xy zooming, record the state of the zoom before zoom selection,\n            // then when the reset button is pressed, revert to this state. This\n            // should apply only if the chart is initialized with a range (#6612),\n            // otherwise zoom all the way out.\n        }\n        else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n            (NavigatorAxisComposition_isTouchDevice && pinchType === 'xy')) &&\n            axis.options.range) {\n            const previousZoom = navigatorAxis.previousZoom;\n            // Minimum defined, zooming in\n            if (NavigatorAxisComposition_defined(e.min)) {\n                navigatorAxis.previousZoom = [axis.min, axis.max];\n                // Minimum undefined, resetting zoom\n            }\n            else if (previousZoom) {\n                e.min = previousZoom[0];\n                e.max = previousZoom[1];\n                navigatorAxis.previousZoom = void 0;\n            }\n        }\n    }\n    if (typeof zoomed !== 'undefined') {\n        e.preventDefault();\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nclass NavigatorAxisAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass) {\n        if (!AxisClass.keepProps.includes('navigatorAxis')) {\n            AxisClass.keepProps.push('navigatorAxis');\n            NavigatorAxisComposition_addEvent(AxisClass, 'init', onAxisInit);\n            NavigatorAxisComposition_addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(axis) {\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    destroy() {\n        this.axis = void 0;\n    }\n    /**\n     * Add logic to normalize the zoomed range in order to preserve the pressed\n     * state of range selector buttons\n     *\n     * @private\n     * @function Highcharts.Axis#toFixedRange\n     */\n    toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n        const axis = this.axis, halfPointRange = (axis.pointRange || 0) / 2;\n        let newMin = NavigatorAxisComposition_pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = NavigatorAxisComposition_pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n        // Add/remove half point range to/from the extremes (#1172)\n        if (!NavigatorAxisComposition_defined(fixedMin)) {\n            newMin = correctFloat(newMin + halfPointRange);\n        }\n        if (!NavigatorAxisComposition_defined(fixedMax)) {\n            newMax = correctFloat(newMax - halfPointRange);\n        }\n        if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n            newMin = newMax = void 0;\n        }\n        return {\n            min: newMin,\n            max: newMax\n        };\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const NavigatorAxisComposition = (NavigatorAxisAdditions);\n\n;// external [\"../highcharts.js\",\"default\",\"Color\"]\nconst external_highcharts_src_js_default_Color_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Color;\nvar external_highcharts_src_js_default_Color_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Color_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/NavigatorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { parse: color } = (external_highcharts_src_js_default_Color_default());\n\nconst { seriesTypes } = (external_highcharts_src_js_default_SeriesRegistry_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The navigator is a small series below the main series, displaying\n * a view of the entire data set. It provides tools to zoom in and\n * out on parts of the data as well as panning across the dataset.\n *\n * @product      highstock gantt\n * @optionparent navigator\n */\nconst NavigatorDefaults = {\n    /**\n     * Whether the navigator and scrollbar should adapt to updated data\n     * in the base X axis. When loading data async, as in the demo below,\n     * this should be `false`. Otherwise new data will trigger navigator\n     * redraw, which will cause unwanted looping. In the demo below, the\n     * data in the navigator is set only once. On navigating, only the main\n     * chart content is updated.\n     *\n     * @sample {highstock} stock/demo/lazy-loading/\n     *         Set to false with async data loading\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.adaptToUpdatedData\n     */\n    /**\n     * An integer identifying the index to use for the base series, or a\n     * string representing the id of the series.\n     *\n     * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n     * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n     *\n     * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n     *\n     * @deprecated\n     * @type      {number|string}\n     * @default   0\n     * @apioption navigator.baseSeries\n     */\n    /**\n     * Enable or disable the navigator.\n     *\n     * @sample {highstock} stock/navigator/enabled/\n     *         Disable the navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption navigator.enabled\n     */\n    /**\n     * When the chart is inverted, whether to draw the navigator on the\n     * opposite side.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     5.0.8\n     * @apioption navigator.opposite\n     */\n    /**\n     * The height of the navigator.\n     *\n     * @sample {highstock} stock/navigator/height/\n     *         A higher navigator\n     */\n    height: 40,\n    /**\n     * The distance from the nearest element, the X axis or X axis labels.\n     *\n     * @sample {highstock} stock/navigator/margin/\n     *         A margin of 2 draws the navigator closer to the X axis labels\n     */\n    margin: 22,\n    /**\n     * Whether the mask should be inside the range marking the zoomed\n     * range, or outside. In Highcharts Stock 1.x it was always `false`.\n     *\n     * @sample {highstock} stock/demo/maskinside-false/\n     *         False, mask outside\n     *\n     * @since   2.0\n     */\n    maskInside: true,\n    /**\n     * Options for the handles for dragging the zoomed area.\n     *\n     * @sample {highstock} stock/navigator/handles/\n     *         Colored handles\n     */\n    handles: {\n        /**\n         * Width for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        width: 7,\n        /**\n         * Border radius of the handles.\n         *\n         * @sample {highstock} stock/navigator/handles-border-radius/\n         *      Border radius on the navigator handles.\n         *\n         * @since 11.4.2\n         */\n        borderRadius: 0,\n        /**\n         * Height for handles.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since   6.0.0\n         */\n        height: 15,\n        /**\n         * Array to define shapes of handles. 0-index for left, 1-index for\n         * right.\n         *\n         * Additionally, the URL to a graphic can be given on this form:\n         * `url(graphic.png)`. Note that for the image to be applied to\n         * exported charts, its URL needs to be accessible by the export\n         * server.\n         *\n         * Custom callbacks for symbol path generation can also be added to\n         * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n         * used by its method name, as shown in the demo.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @type    {Array<string>}\n         * @default [\"navigator-handle\", \"navigator-handle\"]\n         * @since   6.0.0\n         */\n        symbols: ['navigator-handle', 'navigator-handle'],\n        /**\n         * Allows to enable/disable handles.\n         *\n         * @since   6.0.0\n         */\n        enabled: true,\n        /**\n         * The width for the handle border and the stripes inside.\n         *\n         * @sample {highstock} stock/navigator/styled-handles/\n         *         Styled handles\n         *\n         * @since     6.0.0\n         * @apioption navigator.handles.lineWidth\n         */\n        lineWidth: 1,\n        /**\n         * The fill for the handle.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n        /**\n         * The stroke for the handle border and the stripes inside.\n         *\n         * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        borderColor: \"#999999\" /* Palette.neutralColor40 */\n    },\n    /**\n     * The color of the mask covering the areas of the navigator series\n     * that are currently not visible in the main series. The default\n     * color is bluish with an opacity of 0.3 to see the series below.\n     *\n     * @see In styled mode, the mask is styled with the\n     *      `.highcharts-navigator-mask` and\n     *      `.highcharts-navigator-mask-inside` classes.\n     *\n     * @sample {highstock} stock/navigator/maskfill/\n     *         Blue, semi transparent mask\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default rgba(102,133,194,0.3)\n     */\n    maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n    /**\n     * The color of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #cccccc\n     */\n    outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n    /**\n     * The width of the line marking the currently zoomed area in the\n     * navigator.\n     *\n     * @see In styled mode, the outline stroke width is set with the\n     *      `.highcharts-navigator-outline` class.\n     *\n     * @sample {highstock} stock/navigator/outline/\n     *         2px blue outline\n     *\n     * @type    {number}\n     */\n    outlineWidth: 1,\n    /**\n     * Options for the navigator series. Available options are the same\n     * as any series, documented at [plotOptions](#plotOptions.series)\n     * and [series](#series).\n     *\n     * Unless data is explicitly defined on navigator.series, the data\n     * is borrowed from the first series in the chart.\n     *\n     * Default series options for the navigator series are:\n     * ```js\n     * series: {\n     *     type: 'areaspline',\n     *     fillOpacity: 0.05,\n     *     dataGrouping: {\n     *         smoothed: true\n     *     },\n     *     lineWidth: 1,\n     *     marker: {\n     *         enabled: false\n     *     }\n     * }\n     * ```\n     *\n     * @see In styled mode, the navigator series is styled with the\n     *      `.highcharts-navigator-series` class.\n     *\n     * @sample {highstock} stock/navigator/series-data/\n     *         Using a separate data set for the navigator\n     * @sample {highstock} stock/navigator/series/\n     *         A green navigator series\n     *\n     * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n     */\n    series: {\n        /**\n         * The type of the navigator series.\n         *\n         * Heads up:\n         * In column-type navigator, zooming is limited to at least one\n         * point with its `pointRange`.\n         *\n         * @sample {highstock} stock/navigator/column/\n         *         Column type navigator\n         *\n         * @type    {string}\n         * @default {highstock} `areaspline` if defined, otherwise `line`\n         * @default {gantt} gantt\n         */\n        type: (typeof seriesTypes.areaspline === 'undefined' ?\n            'line' :\n            'areaspline'),\n        /**\n         * The fill opacity of the navigator series.\n         */\n        fillOpacity: 0.05,\n        /**\n         * The pixel line width of the navigator series.\n         */\n        lineWidth: 1,\n        /**\n         * @ignore-option\n         */\n        compare: null,\n        /**\n         * @ignore-option\n         */\n        sonification: {\n            enabled: false\n        },\n        /**\n         * Unless data is explicitly defined, the data is borrowed from the\n         * first series in the chart.\n         *\n         * @type      {Array<number|Array<number|string|null>|object|null>}\n         * @product   highstock\n         * @apioption navigator.series.data\n         */\n        /**\n         * Data grouping options for the navigator series.\n         *\n         * @extends plotOptions.series.dataGrouping\n         */\n        dataGrouping: {\n            approximation: 'average',\n            enabled: true,\n            groupPixelWidth: 2,\n            // Replace smoothed property by anchors, #12455.\n            firstAnchor: 'firstPoint',\n            anchor: 'middle',\n            lastAnchor: 'lastPoint',\n            // Day and week differs from plotOptions.series.dataGrouping\n            units: [\n                ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                ['second', [1, 2, 5, 10, 15, 30]],\n                ['minute', [1, 2, 5, 10, 15, 30]],\n                ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                ['day', [1, 2, 3, 4]],\n                ['week', [1, 2, 3]],\n                ['month', [1, 3, 6]],\n                ['year', null]\n            ]\n        },\n        /**\n         * Data label options for the navigator series. Data labels are\n         * disabled by default on the navigator series.\n         *\n         * @extends plotOptions.series.dataLabels\n         */\n        dataLabels: {\n            enabled: false,\n            zIndex: 2 // #1839\n        },\n        id: 'highcharts-navigator-series',\n        className: 'highcharts-navigator-series',\n        /**\n         * Sets the fill color of the navigator series.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption navigator.series.color\n         */\n        /**\n         * Line color for the navigator series. Allows setting the color\n         * while disallowing the default candlestick setting.\n         *\n         * @type {Highcharts.ColorString|null}\n         */\n        lineColor: null, // #4602\n        marker: {\n            enabled: false\n        },\n        /**\n         * Since Highcharts Stock v8, default value is the same as default\n         * `pointRange` defined for a specific type (e.g. `null` for\n         * column type).\n         *\n         * In Highcharts Stock version < 8, defaults to 0.\n         *\n         * @extends plotOptions.series.pointRange\n         * @type {number|null}\n         * @apioption navigator.series.pointRange\n         */\n        /**\n         * The threshold option. Setting it to 0 will make the default\n         * navigator area series draw its area from the 0 value and up.\n         *\n         * @type {number|null}\n         */\n        threshold: null\n    },\n    /**\n     * Enable or disable navigator sticking to right, while adding new\n     * points. If `undefined`, the navigator sticks to the axis maximum only\n     * if it was already at the maximum prior to adding points.\n     *\n     * @type      {boolean}\n     * @default   undefined\n     * @since 10.2.1\n     * @sample {highstock} stock/navigator/sticktomax-false/\n     * stickToMax set to false\n     * @apioption navigator.stickToMax\n     */\n    /**\n     * Options for the navigator X axis. Default series options for the\n     * navigator xAxis are:\n     * ```js\n     * xAxis: {\n     *     tickWidth: 0,\n     *     lineWidth: 0,\n     *     gridLineWidth: 1,\n     *     tickPixelInterval: 200,\n     *     labels: {\n     *            align: 'left',\n     *         style: {\n     *             color: '#888'\n     *         },\n     *         x: 3,\n     *         y: -4\n     *     }\n     * }\n     * ```\n     *\n     * @extends   xAxis\n     * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n     *            showEmpty, maxRange\n     */\n    xAxis: {\n        /**\n         * Additional range on the right side of the xAxis. Works similar to\n         * `xAxis.maxPadding`, but the value is set in terms of axis values,\n         * percentage or pixels.\n         *\n         * If it's a number, it is interpreted as axis values, which in a\n         * datetime axis equals milliseconds.\n         *\n         * If it's a percentage string, is interpreted as percentages of the\n         * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n         *\n         * If it's a pixel string, it is interpreted as a fixed pixel value, but\n         * limited to 90% of the axis length.\n         *\n         * If it's undefined, the value is inherited from `xAxis.overscroll`.\n         *\n         * Can be set for both, main xAxis and navigator's xAxis.\n         *\n         * @type    {number | string | undefined}\n         * @since   6.0.0\n         * @apioption navigator.xAxis.overscroll\n         */\n        className: 'highcharts-navigator-xaxis',\n        tickLength: 0,\n        lineWidth: 0,\n        gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n        id: 'navigator-x-axis',\n        gridLineWidth: 1,\n        tickPixelInterval: 200,\n        labels: {\n            align: 'left',\n            /**\n             * @type {Highcharts.CSSObject}\n             */\n            style: {\n                /** @ignore */\n                color: \"#000000\" /* Palette.neutralColor100 */,\n                /** @ignore */\n                fontSize: '0.7em',\n                /** @ignore */\n                opacity: 0.6,\n                /** @ignore */\n                textOutline: '2px contrast'\n            },\n            x: 3,\n            y: -4\n        },\n        crosshair: false\n    },\n    /**\n     * Options for the navigator Y axis. Default series options for the\n     * navigator yAxis are:\n     * ```js\n     * yAxis: {\n     *     gridLineWidth: 0,\n     *     startOnTick: false,\n     *     endOnTick: false,\n     *     minPadding: 0.1,\n     *     maxPadding: 0.1,\n     *     labels: {\n     *         enabled: false\n     *     },\n     *     title: {\n     *         text: null\n     *     },\n     *     tickWidth: 0\n     * }\n     * ```\n     *\n     * @extends   yAxis\n     * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n     *            showEmpty, scrollbar, top, units, maxRange, minLength,\n     *            maxLength, resize\n     */\n    yAxis: {\n        className: 'highcharts-navigator-yaxis',\n        gridLineWidth: 0,\n        startOnTick: false,\n        endOnTick: false,\n        minPadding: 0.1,\n        id: 'navigator-y-axis',\n        maxPadding: 0.1,\n        labels: {\n            enabled: false\n        },\n        crosshair: false,\n        title: {\n            text: void 0\n        },\n        tickLength: 0,\n        tickWidth: 0\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_NavigatorDefaults = (NavigatorDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Maximum range which can be set using the navigator's handles.\n * Opposite of [xAxis.minRange](#xAxis.minRange).\n *\n * @sample {highstock} stock/navigator/maxrange/\n *         Defined max and min range\n *\n * @type      {number}\n * @since     6.0.0\n * @product   highstock gantt\n * @apioption xAxis.maxRange\n */\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Renderer/SVG/Symbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: Symbols_defined, isNumber: Symbols_isNumber, pick: Symbols_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable require-jsdoc, valid-jsdoc */\n/**\n *\n */\nfunction arc(cx, cy, w, h, options) {\n    const arc = [];\n    if (options) {\n        let start = options.start || 0, end = options.end || 0;\n        const rx = Symbols_pick(options.r, w), ry = Symbols_pick(options.r, h || w), \n        // Subtract a small number to prevent cos and sin of start and end\n        // from becoming equal on 360 arcs (#1561). The size of the circle\n        // affects the constant, therefore the division by `rx`. If the\n        // proximity is too small, the arc disappears. If it is too great, a\n        // gap appears. This can be seen in the animation of the official\n        // bubble demo (#20585).\n        proximity = 0.0002 / (options.borderRadius ? 1 : Math.max(rx, 1)), fullCircle = (Math.abs(end - start - 2 * Math.PI) <\n            proximity);\n        if (fullCircle) {\n            start = Math.PI / 2;\n            end = Math.PI * 2.5 - proximity;\n        }\n        const innerRadius = options.innerR, open = Symbols_pick(options.open, fullCircle), cosStart = Math.cos(start), sinStart = Math.sin(start), cosEnd = Math.cos(end), sinEnd = Math.sin(end), \n        // Proximity takes care of rounding errors around PI (#6971)\n        longArc = Symbols_pick(options.longArc, end - start - Math.PI < proximity ? 0 : 1);\n        let arcSegment = [\n            'A', // ArcTo\n            rx, // X radius\n            ry, // Y radius\n            0, // Slanting\n            longArc, // Long or short arc\n            Symbols_pick(options.clockwise, 1), // Clockwise\n            cx + rx * cosEnd,\n            cy + ry * sinEnd\n        ];\n        arcSegment.params = { start, end, cx, cy }; // Memo for border radius\n        arc.push([\n            'M',\n            cx + rx * cosStart,\n            cy + ry * sinStart\n        ], arcSegment);\n        if (Symbols_defined(innerRadius)) {\n            arcSegment = [\n                'A', // ArcTo\n                innerRadius, // X radius\n                innerRadius, // Y radius\n                0, // Slanting\n                longArc, // Long or short arc\n                // Clockwise - opposite to the outer arc clockwise\n                Symbols_defined(options.clockwise) ? 1 - options.clockwise : 0,\n                cx + innerRadius * cosStart,\n                cy + innerRadius * sinStart\n            ];\n            // Memo for border radius\n            arcSegment.params = {\n                start: end,\n                end: start,\n                cx,\n                cy\n            };\n            arc.push(open ?\n                [\n                    'M',\n                    cx + innerRadius * cosEnd,\n                    cy + innerRadius * sinEnd\n                ] : [\n                'L',\n                cx + innerRadius * cosEnd,\n                cy + innerRadius * sinEnd\n            ], arcSegment);\n        }\n        if (!open) {\n            arc.push(['Z']);\n        }\n    }\n    return arc;\n}\n/**\n * Callout shape used for default tooltips.\n */\nfunction callout(x, y, w, h, options) {\n    const arrowLength = 6, halfDistance = 6, r = Math.min((options?.r) || 0, w, h), safeDistance = r + halfDistance, anchorX = options?.anchorX, anchorY = options?.anchorY || 0;\n    const path = roundedRect(x, y, w, h, { r });\n    if (!Symbols_isNumber(anchorX)) {\n        return path;\n    }\n    // Do not render a connector, if anchor starts inside the label\n    if (anchorX < w && anchorX > 0 && anchorY < h && anchorY > 0) {\n        return path;\n    }\n    // Anchor on right side\n    if (x + anchorX > w - safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(3, 1, ['L', x + w, anchorY - halfDistance], ['L', x + w + arrowLength, anchorY], ['L', x + w, anchorY + halfDistance], ['L', x + w, y + h - r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX < w) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 2 : 5;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + w - r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(3, 1, ['L', x + w, h / 2], ['L', anchorX, anchorY], ['L', x + w, h / 2], ['L', x + w, y + h - r]);\n            }\n        }\n        // Anchor on left side\n    }\n    else if (x + anchorX < safeDistance) {\n        // Chevron\n        if (anchorY > y + safeDistance &&\n            anchorY < y + h - safeDistance) {\n            path.splice(7, 1, ['L', x, anchorY + halfDistance], ['L', x - arrowLength, anchorY], ['L', x, anchorY - halfDistance], ['L', x, y + r]);\n            // Simple connector\n        }\n        else {\n            if (anchorX > 0) { // Corner connector\n                const isTopCorner = anchorY < y + safeDistance, cornerY = isTopCorner ? y : y + h, sliceStart = isTopCorner ? 1 : 6;\n                path.splice(sliceStart, 0, ['L', anchorX, anchorY], ['L', x + r, cornerY]);\n            }\n            else { // Side connector\n                path.splice(7, 1, ['L', x, h / 2], ['L', anchorX, anchorY], ['L', x, h / 2], ['L', x, y + r]);\n            }\n        }\n    }\n    else if ( // Replace bottom\n    anchorY > h &&\n        anchorX < w - safeDistance) {\n        path.splice(5, 1, ['L', anchorX + halfDistance, y + h], ['L', anchorX, y + h + arrowLength], ['L', anchorX - halfDistance, y + h], ['L', x + r, y + h]);\n    }\n    else if ( // Replace top\n    anchorY < 0 &&\n        anchorX > safeDistance) {\n        path.splice(1, 1, ['L', anchorX - halfDistance, y], ['L', anchorX, y - arrowLength], ['L', anchorX + halfDistance, y], ['L', w - r, y]);\n    }\n    return path;\n}\n/**\n *\n */\nfunction circle(x, y, w, h) {\n    // Return a full arc\n    return arc(x + w / 2, y + h / 2, w / 2, h / 2, {\n        start: Math.PI * 0.5,\n        end: Math.PI * 2.5,\n        open: false\n    });\n}\n/**\n *\n */\nfunction diamond(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h / 2],\n        ['L', x + w / 2, y + h],\n        ['L', x, y + h / 2],\n        ['Z']\n    ];\n}\n// #15291\n/**\n *\n */\nfunction rect(x, y, w, h, options) {\n    if (options?.r) {\n        return roundedRect(x, y, w, h, options);\n    }\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction roundedRect(x, y, w, h, options) {\n    const r = options?.r || 0;\n    return [\n        ['M', x + r, y],\n        ['L', x + w - r, y], // Top side\n        ['A', r, r, 0, 0, 1, x + w, y + r], // Top-right corner\n        ['L', x + w, y + h - r], // Right side\n        ['A', r, r, 0, 0, 1, x + w - r, y + h], // Bottom-right corner\n        ['L', x + r, y + h], // Bottom side\n        ['A', r, r, 0, 0, 1, x, y + h - r], // Bottom-left corner\n        ['L', x, y + r], // Left side\n        ['A', r, r, 0, 0, 1, x + r, y],\n        ['Z'] // Top-left corner\n    ];\n}\n/**\n *\n */\nfunction triangle(x, y, w, h) {\n    return [\n        ['M', x + w / 2, y],\n        ['L', x + w, y + h],\n        ['L', x, y + h],\n        ['Z']\n    ];\n}\n/**\n *\n */\nfunction triangleDown(x, y, w, h) {\n    return [\n        ['M', x, y],\n        ['L', x + w, y],\n        ['L', x + w / 2, y + h],\n        ['Z']\n    ];\n}\nconst Symbols = {\n    arc,\n    callout,\n    circle,\n    diamond,\n    rect,\n    roundedRect,\n    square: rect,\n    triangle,\n    'triangle-down': triangleDown\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const SVG_Symbols = (Symbols);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorSymbols.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { relativeLength } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Draw one of the handles on the side of the zoomed range in the navigator.\n * @private\n */\nfunction navigatorHandle(_x, _y, width, height, options = {}) {\n    const halfWidth = options.width ? options.width / 2 : width, markerPosition = 1.5, r = relativeLength(options.borderRadius || 0, Math.min(halfWidth * 2, height));\n    height = options.height || height;\n    return [\n        ['M', -markerPosition, height / 2 - 3.5],\n        ['L', -markerPosition, height / 2 + 4.5],\n        ['M', markerPosition - 1, height / 2 - 3.5],\n        ['L', markerPosition - 1, height / 2 + 4.5],\n        ...SVG_Symbols.rect(-halfWidth - 1, 0.5, halfWidth * 2 + 1, height, { r })\n    ];\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorSymbols = {\n    'navigator-handle': navigatorHandle\n};\n/* harmony default export */ const Navigator_NavigatorSymbols = (NavigatorSymbols);\n\n;// external [\"../highcharts.js\",\"default\",\"RendererRegistry\"]\nconst external_highcharts_src_js_default_RendererRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].RendererRegistry;\nvar external_highcharts_src_js_default_RendererRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_RendererRegistry_namespaceObject);\n;// ./code/es-modules/Stock/Utilities/StockUtilities.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: StockUtilities_defined } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Sets the chart.fixedRange to the specified value. If the value is larger\n * than actual range, sets it to the maximum possible range. (#20327)\n *\n * @private\n * @function Highcharts.StockChart#setFixedRange\n * @param {number|undefined} range\n *        Range to set in axis units.\n */\nfunction setFixedRange(range) {\n    const xAxis = this.xAxis[0];\n    if (StockUtilities_defined(xAxis.dataMax) &&\n        StockUtilities_defined(xAxis.dataMin) &&\n        range) {\n        this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n    }\n    else {\n        this.fixedRange = range;\n    }\n}\nconst StockUtilities = {\n    setFixedRange\n};\n/* harmony default export */ const Utilities_StockUtilities = (StockUtilities);\n\n;// ./code/es-modules/Stock/Navigator/NavigatorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions: NavigatorComposition_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed: NavigatorComposition_composed } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { getRendererType } = (external_highcharts_src_js_default_RendererRegistry_default());\n\nconst { setFixedRange: NavigatorComposition_setFixedRange } = Utilities_StockUtilities;\n\nconst { addEvent: NavigatorComposition_addEvent, extend, pushUnique: NavigatorComposition_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Variables\n *\n * */\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction NavigatorComposition_compose(ChartClass, AxisClass, SeriesClass) {\n    NavigatorAxisComposition.compose(AxisClass);\n    if (NavigatorComposition_pushUnique(NavigatorComposition_composed, 'Navigator')) {\n        ChartClass.prototype.setFixedRange = NavigatorComposition_setFixedRange;\n        extend(getRendererType().prototype.symbols, Navigator_NavigatorSymbols);\n        extend(NavigatorComposition_defaultOptions, { navigator: Navigator_NavigatorDefaults });\n        NavigatorComposition_addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n    }\n}\n/**\n * Handle updating series\n * @private\n */\nfunction onSeriesAfterUpdate() {\n    if (this.chart.navigator && !this.options.isInternal) {\n        this.chart.navigator.setBaseSeries(null, false);\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigatorComposition = {\n    compose: NavigatorComposition_compose\n};\n/* harmony default export */ const Navigator_NavigatorComposition = (NavigatorComposition);\n\n;// ./code/es-modules/Core/Axis/ScrollbarAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: ScrollbarAxis_composed } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: ScrollbarAxis_addEvent, correctFloat: ScrollbarAxis_correctFloat, defined: ScrollbarAxis_defined, pick: ScrollbarAxis_pick, pushUnique: ScrollbarAxis_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\nvar ScrollbarAxis;\n(function (ScrollbarAxis) {\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    let Scrollbar;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Attaches to axis events to create scrollbars if enabled.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} AxisClass\n     * Axis class to extend.\n     *\n     * @param {Highcharts.Scrollbar} ScrollbarClass\n     * Scrollbar class to use.\n     */\n    function compose(AxisClass, ScrollbarClass) {\n        if (ScrollbarAxis_pushUnique(ScrollbarAxis_composed, 'Axis.Scrollbar')) {\n            Scrollbar = ScrollbarClass;\n            ScrollbarAxis_addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n            ScrollbarAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            ScrollbarAxis_addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n        }\n    }\n    ScrollbarAxis.compose = compose;\n    /** @private */\n    function getExtremes(axis) {\n        const axisMin = ScrollbarAxis_pick(axis.options?.min, axis.min);\n        const axisMax = ScrollbarAxis_pick(axis.options?.max, axis.max);\n        return {\n            axisMin,\n            axisMax,\n            scrollMin: ScrollbarAxis_defined(axis.dataMin) ?\n                Math.min(axisMin, axis.min ?? Infinity, axis.dataMin, axis.threshold ?? Infinity) : axisMin,\n            scrollMax: axis.treeGrid?.adjustedMax ?? (ScrollbarAxis_defined(axis.dataMax) ?\n                Math.max(axisMax, axis.max ?? -Infinity, axis.dataMax, axis.threshold ?? -Infinity) :\n                axisMax)\n        };\n    }\n    /**\n     * Make space for a scrollbar.\n     * @private\n     */\n    function onAxisAfterGetOffset() {\n        const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n        if (scrollbar) {\n            // Reset scrollbars offsets\n            axis.chart.scrollbarsOffsets = [0, 0];\n            axis.chart.axisOffset[index] +=\n                scrollbar.size + (scrollbar.options.margin || 0);\n        }\n    }\n    /**\n     * Wrap axis initialization and create scrollbar if enabled.\n     * @private\n     */\n    function onAxisAfterInit() {\n        const axis = this;\n        if (axis.options?.scrollbar?.enabled) {\n            // Predefined options:\n            axis.options.scrollbar.vertical = !axis.horiz;\n            axis.options.startOnTick = axis.options.endOnTick = false;\n            axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n            ScrollbarAxis_addEvent(axis.scrollbar, 'changed', function (e) {\n                const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), minPX = axis.toPixels(unitedMin), maxPX = axis.toPixels(unitedMax), rangePX = maxPX - minPX;\n                let to, from;\n                // #12834, scroll when show/hide series, wrong extremes\n                if (!ScrollbarAxis_defined(axisMin) || !ScrollbarAxis_defined(axisMax)) {\n                    return;\n                }\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    to = Math.min(unitedMax, axis.toValue(minPX + rangePX * this.to));\n                    from = Math.max(unitedMin, axis.toValue(minPX + rangePX * this.from));\n                }\n                else {\n                    // Y-values in browser are reversed, but this also\n                    // applies for reversed horizontal axis:\n                    to = Math.min(unitedMax, axis.toValue(minPX + rangePX * (1 - this.from)));\n                    from = Math.max(unitedMin, axis.toValue(minPX + rangePX * (1 - this.to)));\n                }\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    // #17977, set animation to undefined instead of true\n                    const animate = e.DOMType === 'mousemove' ||\n                        e.DOMType === 'touchmove' ? false : void 0;\n                    axis.setExtremes(ScrollbarAxis_correctFloat(from), ScrollbarAxis_correctFloat(to), true, animate, e);\n                }\n                else {\n                    // When live redraw is disabled, don't change extremes\n                    // Only change the position of the scrollbar thumb\n                    this.setRange(this.from, this.to);\n                }\n            });\n        }\n    }\n    /**\n     * Wrap rendering axis, and update scrollbar if one is created.\n     * @private\n     */\n    function onAxisAfterRender() {\n        const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin || 0) + (axis.titleOffset || 0), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n        let offsetsIndex, from, to;\n        if (scrollbar && scrollbarsOffsets) {\n            if (axis.horiz) {\n                // Reserve space for labels/title\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += offset;\n                }\n                scrollbar.position(axis.left, (axis.top +\n                    axis.height +\n                    2 +\n                    scrollbarsOffsets[1] -\n                    (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (!axis.opposite) {\n                    scrollbarsOffsets[1] += axisMargin;\n                }\n                offsetsIndex = 1;\n            }\n            else {\n                // Reserve space for labels/title\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += offset;\n                }\n                let xPosition;\n                if (!scrollbar.options.opposite) {\n                    xPosition = axis.opposite ? 0 : axisMargin;\n                }\n                else {\n                    xPosition = axis.left +\n                        axis.width +\n                        2 +\n                        scrollbarsOffsets[0] -\n                        (axis.opposite ? 0 : axisMargin);\n                }\n                scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                // Next scrollbar should reserve space for margin (if set)\n                if (axis.opposite) {\n                    scrollbarsOffsets[0] += axisMargin;\n                }\n                offsetsIndex = 0;\n            }\n            scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                (scrollbar.options.margin || 0);\n            if (isNaN(scrollMin) ||\n                isNaN(scrollMax) ||\n                !ScrollbarAxis_defined(axis.min) ||\n                !ScrollbarAxis_defined(axis.max) ||\n                (ScrollbarAxis_defined(axis.dataMin) && // #23335\n                    axis.dataMin === axis.dataMax // #10733\n                )) {\n                // Default action: when data extremes are the same or there is\n                // not extremes on the axis, but scrollbar exists, make it\n                // full size\n                scrollbar.setRange(0, 1);\n            }\n            else if (axis.min === axis.max) { // #20359\n                // When the extremes are the same, set the scrollbar to a point\n                // within the extremes range. Utilize pointRange to perform the\n                // calculations. (#20359)\n                const interval = axis.pointRange / (axis.dataMax +\n                    1);\n                from = interval * axis.min;\n                to = interval * (axis.max + 1);\n                scrollbar.setRange(from, to);\n            }\n            else {\n                from = (axis.toPixels(axis.min) - axis.toPixels(scrollMin)) /\n                    (axis.toPixels(scrollMax) - axis.toPixels(scrollMin));\n                to = (axis.toPixels(axis.max) - axis.toPixels(scrollMin)) /\n                    (axis.toPixels(scrollMax) - axis.toPixels(scrollMin));\n                if ((axis.horiz && !axis.reversed) ||\n                    (!axis.horiz && axis.reversed)) {\n                    scrollbar.setRange(from, to);\n                }\n                else {\n                    // Inverse vertical axis\n                    scrollbar.setRange(1 - to, 1 - from);\n                }\n            }\n        }\n    }\n})(ScrollbarAxis || (ScrollbarAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_ScrollbarAxis = (ScrollbarAxis);\n\n;// ./code/es-modules/Stock/Scrollbar/ScrollbarDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constant\n *\n * */\n/**\n *\n * The scrollbar is a means of panning over the X axis of a stock chart.\n * Scrollbars can also be applied to other types of axes.\n *\n * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n * is especially suitable for simpler cartesian charts on mobile.\n *\n * In styled mode, all the presentational options for the\n * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n *\n * @sample stock/yaxis/inverted-bar-scrollbar/\n *         A scrollbar on a simple bar chart\n *\n * @product highstock gantt\n * @optionparent scrollbar\n *\n * @private\n */\nconst ScrollbarDefaults = {\n    /**\n     * The height of the scrollbar. If `buttonsEnabled` is true , the height\n     * also applies to the width of the scroll arrows so that they are always\n     * squares.\n     *\n     * @sample stock/scrollbar/style/\n     *         Non-default height\n     *\n     * @type    {number}\n     */\n    height: 10,\n    /**\n     * The border rounding radius of the bar.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderRadius: 5,\n    /**\n     * The corner radius of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderRadius: 0,\n    /**\n     * Enable or disable the buttons at the end of the scrollbar.\n     *\n     * @since 11.0.0\n     */\n    buttonsEnabled: false,\n    /**\n     * Enable or disable the scrollbar.\n     *\n     * @sample stock/scrollbar/enabled/\n     *         Disable the scrollbar, only use navigator\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.enabled\n     */\n    /**\n     * Whether to redraw the main chart as the scrollbar or the navigator\n     * zoomed window is moved. Defaults to `true` for modern browsers and\n     * `false` for legacy IE browsers as well as mobile devices.\n     *\n     * @sample stock/scrollbar/liveredraw\n     *         Setting live redraw to false\n     *\n     * @type  {boolean}\n     * @since 1.3\n     */\n    liveRedraw: void 0,\n    /**\n     * The margin between the scrollbar and its axis when the scrollbar is\n     * applied directly to an axis, or the navigator in case that is enabled.\n     * Defaults to 10 for axis, 3 for navigator.\n     *\n     * @type {number|undefined}\n     */\n    margin: void 0,\n    /**\n     * The minimum width of the scrollbar.\n     *\n     * @since 1.2.5\n     */\n    minWidth: 6,\n    /** @ignore-option */\n    opposite: true,\n    /**\n     * Whether to show or hide the scrollbar when the scrolled content is\n     * zoomed out to it full extent.\n     *\n     * @type      {boolean}\n     * @default   true\n     * @apioption scrollbar.showFull\n     */\n    step: 0.2,\n    /**\n     * The z index of the scrollbar group.\n     */\n    zIndex: 3,\n    /**\n     * The background color of the scrollbar itself.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The width of the bar's border.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    barBorderWidth: 0,\n    /**\n     * The color of the scrollbar's border.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The color of the small arrow inside the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n    /**\n     * The color of scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n    /**\n     * The color of the border of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The border width of the scrollbar buttons.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    buttonBorderWidth: 1,\n    /**\n     * The color of the small rifles in the middle of the scrollbar.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    rifleColor: 'none',\n    /**\n     * The color of the track background.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBackgroundColor: 'rgba(255, 255, 255, 0.001)', // #18922\n    /**\n     * The color of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The corner radius of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderRadius: 5,\n    /**\n     * The width of the border of the scrollbar track.\n     *\n     * @sample stock/scrollbar/style/\n     *         Scrollbar styling\n     */\n    trackBorderWidth: 1\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_ScrollbarDefaults = (ScrollbarDefaults);\n\n;// ./code/es-modules/Stock/Scrollbar/Scrollbar.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions: Scrollbar_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed: Scrollbar_composed } = (external_highcharts_src_js_default_default());\n\n\n\nconst { addEvent: Scrollbar_addEvent, correctFloat: Scrollbar_correctFloat, crisp, defined: Scrollbar_defined, destroyObjectProperties, extend: Scrollbar_extend, fireEvent, merge: Scrollbar_merge, pick: Scrollbar_pick, pushUnique: Scrollbar_pushUnique, removeEvent } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/* eslint-disable no-invalid-this, valid-jsdoc */\n/**\n * A reusable scrollbar, internally used in Highcharts Stock's\n * navigator and optionally on individual axes.\n *\n * @private\n * @class\n * @name Highcharts.Scrollbar\n * @param {Highcharts.SVGRenderer} renderer\n * @param {Highcharts.ScrollbarOptions} options\n * @param {Highcharts.Chart} chart\n */\nclass Scrollbar {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass) {\n        Axis_ScrollbarAxis.compose(AxisClass, Scrollbar);\n        if (Scrollbar_pushUnique(Scrollbar_composed, 'Scrollbar')) {\n            Scrollbar_extend(Scrollbar_defaultOptions, { scrollbar: Scrollbar_ScrollbarDefaults });\n        }\n    }\n    /**\n     * When we have vertical scrollbar, rifles and arrow in buttons should be\n     * rotated. The same method is used in Navigator's handles, to rotate them.\n     *\n     * @function Highcharts.swapXY\n     *\n     * @param {Highcharts.SVGPathArray} path\n     * Path to be rotated.\n     *\n     * @param {boolean} [vertical]\n     * If vertical scrollbar, swap x-y values.\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Rotated path.\n     *\n     * @requires modules/stock\n     */\n    static swapXY(path, vertical) {\n        if (vertical) {\n            path.forEach((seg) => {\n                const len = seg.length;\n                let temp;\n                for (let i = 0; i < len; i += 2) {\n                    temp = seg[i + 1];\n                    if (typeof temp === 'number') {\n                        seg[i + 1] = seg[i + 2];\n                        seg[i + 2] = temp;\n                    }\n                }\n            });\n        }\n        return path;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(renderer, options, chart) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this._events = [];\n        this.chartX = 0;\n        this.chartY = 0;\n        this.from = 0;\n        this.scrollbarButtons = [];\n        this.scrollbarLeft = 0;\n        this.scrollbarStrokeWidth = 1;\n        this.scrollbarTop = 0;\n        this.size = 0;\n        this.to = 0;\n        this.trackBorderWidth = 1;\n        this.x = 0;\n        this.y = 0;\n        this.init(renderer, options, chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set up the mouse and touch events for the Scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#addEvents\n     */\n    addEvents() {\n        const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n        const _events = [\n            // Mouse events\n            [\n                buttons[buttonsOrder[0]].element,\n                'click',\n                this.buttonToMinClick.bind(this)\n            ],\n            [\n                buttons[buttonsOrder[1]].element,\n                'click',\n                this.buttonToMaxClick.bind(this)\n            ],\n            [track, 'click', this.trackClick.bind(this)],\n            [bar, 'mousedown', mouseDownHandler],\n            [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n            [bar.ownerDocument, 'mouseup', mouseUpHandler],\n            // Touch events\n            [bar, 'touchstart', mouseDownHandler],\n            [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n            [bar.ownerDocument, 'touchend', mouseUpHandler]\n        ];\n        // Add them all\n        _events.forEach(function (args) {\n            Scrollbar_addEvent.apply(null, args);\n        });\n        this._events = _events;\n    }\n    buttonToMaxClick(e) {\n        const scroller = this;\n        const range = ((scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2));\n        scroller.updatePosition(scroller.from + range, scroller.to + range);\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    buttonToMinClick(e) {\n        const scroller = this;\n        const range = Scrollbar_correctFloat(scroller.to - scroller.from) *\n            Scrollbar_pick(scroller.options.step, 0.2);\n        scroller.updatePosition(Scrollbar_correctFloat(scroller.from - range), Scrollbar_correctFloat(scroller.to - range));\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Get normalized (0-1) cursor position over the scrollbar\n     *\n     * @private\n     * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n     *\n     * @param  {*} normalizedEvent\n     *         normalized event, with chartX and chartY values\n     *\n     * @return {Highcharts.Dictionary<number>}\n     *         Local position {chartX, chartY}\n     */\n    cursorToScrollbarPosition(normalizedEvent) {\n        const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n            options.minWidth :\n            0; // `minWidth` distorts translation\n        return {\n            chartX: (normalizedEvent.chartX - scroller.x -\n                scroller.xOffset) /\n                (scroller.barWidth - minWidthDifference),\n            chartY: (normalizedEvent.chartY - scroller.y -\n                scroller.yOffset) /\n                (scroller.barWidth - minWidthDifference)\n        };\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#destroy\n     */\n    destroy() {\n        const scroller = this, navigator = scroller.chart.scroller;\n        // Disconnect events added in addEvents\n        scroller.removeEvents();\n        // Destroy properties\n        [\n            'track',\n            'scrollbarRifles',\n            'scrollbar',\n            'scrollbarGroup',\n            'group'\n        ].forEach(function (prop) {\n            if (scroller[prop] && scroller[prop].destroy) {\n                scroller[prop] = scroller[prop].destroy();\n            }\n        });\n        // #6421, chart may have more scrollbars\n        if (navigator && scroller === navigator.scrollbar) {\n            navigator.scrollbar = null;\n            // Destroy elements in collection\n            destroyObjectProperties(navigator.scrollbarButtons);\n        }\n    }\n    /**\n     * Draw the scrollbar buttons with arrows\n     *\n     * @private\n     * @function Highcharts.Scrollbar#drawScrollbarButton\n     * @param {number} index\n     *        0 is left, 1 is right\n     */\n    drawScrollbarButton(index) {\n        const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n        scrollbarButtons.push(group);\n        if (options.buttonsEnabled) {\n            // Create a rectangle for the scrollbar button\n            const rect = renderer.rect()\n                .addClass('highcharts-scrollbar-button')\n                .add(group);\n            // Presentational attributes\n            if (!scroller.chart.styledMode) {\n                rect.attr({\n                    stroke: options.buttonBorderColor,\n                    'stroke-width': options.buttonBorderWidth,\n                    fill: options.buttonBackgroundColor\n                });\n            }\n            // Place the rectangle based on the rendered stroke width\n            rect.attr(rect.crisp({\n                x: -0.5,\n                y: -0.5,\n                width: size,\n                height: size,\n                r: options.buttonBorderRadius\n            }, rect.strokeWidth()));\n            // Button arrow\n            const arrow = renderer\n                .path(Scrollbar.swapXY([[\n                    'M',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 - 3\n                ], [\n                    'L',\n                    size / 2 + (index ? -1 : 1),\n                    size / 2 + 3\n                ], [\n                    'L',\n                    size / 2 + (index ? 2 : -2),\n                    size / 2\n                ]], options.vertical))\n                .addClass('highcharts-scrollbar-arrow')\n                .add(scrollbarButtons[index]);\n            if (!scroller.chart.styledMode) {\n                arrow.attr({\n                    fill: options.buttonArrowColor\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.Scrollbar#init\n     * @param {Highcharts.SVGRenderer} renderer\n     * @param {Highcharts.ScrollbarOptions} options\n     * @param {Highcharts.Chart} chart\n     */\n    init(renderer, options, chart) {\n        const scroller = this;\n        scroller.scrollbarButtons = [];\n        scroller.renderer = renderer;\n        scroller.userOptions = options;\n        scroller.options = Scrollbar_merge(Scrollbar_ScrollbarDefaults, Scrollbar_defaultOptions.scrollbar, options);\n        scroller.options.margin = Scrollbar_pick(scroller.options.margin, 10);\n        scroller.chart = chart;\n        // Backward compatibility\n        scroller.size = Scrollbar_pick(scroller.options.size, scroller.options.height);\n        // Init\n        if (options.enabled) {\n            scroller.render();\n            scroller.addEvents();\n        }\n    }\n    mouseDownHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n        scroller.chartX = mousePosition.chartX;\n        scroller.chartY = mousePosition.chartY;\n        scroller.initPositions = [scroller.from, scroller.to];\n        scroller.grabbedCenter = true;\n    }\n    /**\n     * Event handler for the mouse move event.\n     * @private\n     */\n    mouseMoveHandler(e) {\n        const scroller = this, normalizedEvent = scroller.chart.pointer?.normalize(e) || e, options = scroller.options, direction = options.vertical ?\n            'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n        let scrollPosition, chartPosition, change;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when\n        // holding the finger down in the center of the scrollbar. This\n        // should be ignored.\n        if (scroller.grabbedCenter &&\n            // #4696, scrollbar failed on Android\n            (!e.touches || e.touches[0][direction] !== 0)) {\n            chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n            scrollPosition = scroller[direction];\n            change = chartPosition - scrollPosition;\n            scroller.hasDragged = true;\n            scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n            if (scroller.hasDragged) {\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMType: e.type,\n                    DOMEvent: e\n                });\n            }\n        }\n    }\n    /**\n     * Event handler for the mouse up event.\n     * @private\n     */\n    mouseUpHandler(e) {\n        const scroller = this;\n        if (scroller.hasDragged) {\n            fireEvent(scroller, 'changed', {\n                from: scroller.from,\n                to: scroller.to,\n                trigger: 'scrollbar',\n                DOMType: e.type,\n                DOMEvent: e\n            });\n        }\n        scroller.grabbedCenter =\n            scroller.hasDragged =\n                scroller.chartX =\n                    scroller.chartY = null;\n    }\n    /**\n     * Position the scrollbar, method called from a parent with defined\n     * dimensions.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#position\n     * @param {number} x\n     *        x-position on the chart\n     * @param {number} y\n     *        y-position on the chart\n     * @param {number} width\n     *        width of the scrollbar\n     * @param {number} height\n     *        height of the scrollbar\n     */\n    position(x, y, width, height) {\n        const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n        let xOffset = height, yOffset = 0;\n        // Make the scrollbar visible when it is repositioned, #15763.\n        scroller.group.show();\n        scroller.x = x;\n        scroller.y = y + this.trackBorderWidth;\n        scroller.width = width; // Width with buttons\n        scroller.height = height;\n        scroller.xOffset = xOffset;\n        scroller.yOffset = yOffset;\n        // If Scrollbar is a vertical type, swap options:\n        if (vertical) {\n            scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n            scroller.xOffset = xOffset = 0;\n            scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n            scroller.x = x = x + margin;\n        }\n        else {\n            scroller.height = height = scroller.size;\n            scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n            // Width without buttons\n            scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n            scroller.y = scroller.y + margin;\n        }\n        // Set general position for a group:\n        scroller.group[method]({\n            translateX: x,\n            translateY: scroller.y\n        });\n        // Resize background/track:\n        scroller.track[method]({\n            width: width,\n            height: height\n        });\n        // Move right/bottom button to its place:\n        scroller.scrollbarButtons[1][method]({\n            translateX: vertical ? 0 : width - xOffset,\n            translateY: vertical ? height - yOffset : 0\n        });\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#removeEvents\n     */\n    removeEvents() {\n        this._events.forEach(function (args) {\n            removeEvent.apply(null, args);\n        });\n        this._events.length = 0;\n    }\n    /**\n     * Render scrollbar with all required items.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#render\n     */\n    render() {\n        const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n            .attr({\n            zIndex: options.zIndex\n        })\n            .hide() // Initially hide the scrollbar #15863\n            .add();\n        // Draw the scrollbar group\n        scroller.group = group;\n        // Draw the scrollbar track:\n        scroller.track = renderer.rect()\n            .addClass('highcharts-scrollbar-track')\n            .attr({\n            r: options.trackBorderRadius || 0,\n            height: size,\n            width: size\n        }).add(group);\n        if (!styledMode) {\n            scroller.track.attr({\n                fill: options.trackBackgroundColor,\n                stroke: options.trackBorderColor,\n                'stroke-width': options.trackBorderWidth\n            });\n        }\n        const trackBorderWidth = scroller.trackBorderWidth =\n            scroller.track.strokeWidth();\n        scroller.track.attr({\n            x: -crisp(0, trackBorderWidth),\n            y: -crisp(0, trackBorderWidth)\n        });\n        // Draw the scrollbar itself\n        scroller.scrollbarGroup = renderer.g().add(group);\n        scroller.scrollbar = renderer.rect()\n            .addClass('highcharts-scrollbar-thumb')\n            .attr({\n            height: size - trackBorderWidth,\n            width: size - trackBorderWidth,\n            r: options.barBorderRadius || 0\n        }).add(scroller.scrollbarGroup);\n        scroller.scrollbarRifles = renderer\n            .path(Scrollbar.swapXY([\n            ['M', -3, size / 4],\n            ['L', -3, 2 * size / 3],\n            ['M', 0, size / 4],\n            ['L', 0, 2 * size / 3],\n            ['M', 3, size / 4],\n            ['L', 3, 2 * size / 3]\n        ], options.vertical))\n            .addClass('highcharts-scrollbar-rifles')\n            .add(scroller.scrollbarGroup);\n        if (!styledMode) {\n            scroller.scrollbar.attr({\n                fill: options.barBackgroundColor,\n                stroke: options.barBorderColor,\n                'stroke-width': options.barBorderWidth\n            });\n            scroller.scrollbarRifles.attr({\n                stroke: options.rifleColor,\n                'stroke-width': 1\n            });\n        }\n        scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n        scroller.scrollbarGroup.translate(-crisp(0, scroller.scrollbarStrokeWidth), -crisp(0, scroller.scrollbarStrokeWidth));\n        // Draw the buttons:\n        scroller.drawScrollbarButton(0);\n        scroller.drawScrollbarButton(1);\n    }\n    /**\n     * Set scrollbar size, with a given scale.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#setRange\n     * @param {number} from\n     *        scale (0-1) where bar should start\n     * @param {number} to\n     *        scale (0-1) where bar should end\n     */\n    setRange(from, to) {\n        const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n            !this.hasDragged &&\n            !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n        if (!Scrollbar_defined(fullWidth)) {\n            return;\n        }\n        const toPX = fullWidth * Math.min(to, 1);\n        let fromPX, newSize;\n        from = Math.max(from, 0);\n        fromPX = Math.ceil(fullWidth * from);\n        scroller.calculatedWidth = newSize = Scrollbar_correctFloat(toPX - fromPX);\n        // We need to recalculate position, if minWidth is used\n        if (newSize < minWidth) {\n            fromPX = (fullWidth - minWidth + newSize) * from;\n            newSize = minWidth;\n        }\n        const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n        const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n        // Store current position:\n        scroller.from = from;\n        scroller.to = to;\n        if (!vertical) {\n            scroller.scrollbarGroup[method]({\n                translateX: newPos\n            });\n            scroller.scrollbar[method]({\n                width: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateX: newRiflesPos\n            });\n            scroller.scrollbarLeft = newPos;\n            scroller.scrollbarTop = 0;\n        }\n        else {\n            scroller.scrollbarGroup[method]({\n                translateY: newPos\n            });\n            scroller.scrollbar[method]({\n                height: newSize\n            });\n            scroller.scrollbarRifles[method]({\n                translateY: newRiflesPos\n            });\n            scroller.scrollbarTop = newPos;\n            scroller.scrollbarLeft = 0;\n        }\n        if (newSize <= 12) {\n            scroller.scrollbarRifles.hide();\n        }\n        else {\n            scroller.scrollbarRifles.show();\n        }\n        // Show or hide the scrollbar based on the showFull setting\n        if (options.showFull === false) {\n            if (from <= 0 && to >= 1) {\n                scroller.group.hide();\n            }\n            else {\n                scroller.group.show();\n            }\n        }\n        scroller.rendered = true;\n    }\n    /**\n     * Checks if the extremes should be updated in response to a scrollbar\n     * change event.\n     *\n     * @private\n     * @function Highcharts.Scrollbar#shouldUpdateExtremes\n     */\n    shouldUpdateExtremes(eventType) {\n        return (Scrollbar_pick(this.options.liveRedraw, (external_highcharts_src_js_default_default()).svg &&\n            !(external_highcharts_src_js_default_default()).isTouchDevice &&\n            !this.chart.boosted) ||\n            // Mouseup always should change extremes\n            eventType === 'mouseup' ||\n            eventType === 'touchend' ||\n            // Internal events\n            !Scrollbar_defined(eventType));\n    }\n    trackClick(e) {\n        const scroller = this;\n        const normalizedEvent = scroller.chart.pointer?.normalize(e) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n        if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n            (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n            // On the top or on the left side of the track:\n            scroller.updatePosition(scroller.from + range, scroller.to + range);\n        }\n        else {\n            // On the bottom or the right side of the track:\n            scroller.updatePosition(scroller.from - range, scroller.to - range);\n        }\n        fireEvent(scroller, 'changed', {\n            from: scroller.from,\n            to: scroller.to,\n            trigger: 'scrollbar',\n            DOMEvent: e\n        });\n    }\n    /**\n     * Update the scrollbar with new options\n     *\n     * @private\n     * @function Highcharts.Scrollbar#update\n     * @param  {Highcharts.ScrollbarOptions} options\n     */\n    update(options) {\n        this.destroy();\n        this.init(this.chart.renderer, Scrollbar_merge(true, this.options, options), this.chart);\n    }\n    /**\n     * Update position option in the Scrollbar, with normalized 0-1 scale\n     *\n     * @private\n     * @function Highcharts.Scrollbar#updatePosition\n     * @param  {number} from\n     * @param  {number} to\n     */\n    updatePosition(from, to) {\n        if (to > 1) {\n            from = Scrollbar_correctFloat(1 - Scrollbar_correctFloat(to - from));\n            to = 1;\n        }\n        if (from < 0) {\n            to = Scrollbar_correctFloat(to - from);\n            from = 0;\n        }\n        this.from = from;\n        this.to = to;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nScrollbar.defaultOptions = Scrollbar_ScrollbarDefaults;\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Scrollbar_Scrollbar = (Scrollbar);\n\n;// external [\"../highcharts.js\",\"default\",\"SVGRenderer\"]\nconst external_highcharts_src_js_default_SVGRenderer_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGRenderer;\nvar external_highcharts_src_js_default_SVGRenderer_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGRenderer_namespaceObject);\n;// ./code/es-modules/Stock/Navigator/Navigator.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { defaultOptions: Navigator_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { isTouchDevice: Navigator_isTouchDevice } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { prototype: { symbols } } = (external_highcharts_src_js_default_SVGRenderer_default());\n\nconst { addEvent: Navigator_addEvent, clamp, correctFloat: Navigator_correctFloat, defined: Navigator_defined, destroyObjectProperties: Navigator_destroyObjectProperties, erase, extend: Navigator_extend, find, fireEvent: Navigator_fireEvent, isArray: Navigator_isArray, isNumber: Navigator_isNumber, merge: Navigator_merge, pick: Navigator_pick, removeEvent: Navigator_removeEvent, splat: Navigator_splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Finding the min or max of a set of variables where we don't know if they are\n * defined, is a pattern that is repeated several places in Highcharts. Consider\n * making this a global utility method.\n * @private\n */\nfunction numExt(extreme, ...args) {\n    const numbers = [].filter.call(args, Navigator_isNumber);\n    if (numbers.length) {\n        return Math[extreme].apply(0, numbers);\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Navigator class\n *\n * @private\n * @class\n * @name Highcharts.Navigator\n *\n * @param {Highcharts.Chart} chart\n *        Chart object\n */\nclass Navigator {\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    static compose(ChartClass, AxisClass, SeriesClass) {\n        Navigator_ChartNavigatorComposition.compose(ChartClass, Navigator);\n        Navigator_NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.isDirty = false;\n        this.scrollbarHeight = 0;\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Draw one of the handles on the side of the zoomed range in the navigator.\n     *\n     * @private\n     * @function Highcharts.Navigator#drawHandle\n     *\n     * @param {number} x\n     *        The x center for the handle\n     *\n     * @param {number} index\n     *        0 for left and 1 for right\n     *\n     * @param {boolean|undefined} inverted\n     *        Flag for chart.inverted\n     *\n     * @param {string} verb\n     *        Use 'animate' or 'attr'\n     */\n    drawHandle(x, index, inverted, verb) {\n        const navigator = this, height = navigator.navigatorOptions.handles.height;\n        // Place it\n        navigator.handles[index][verb](inverted ? {\n            translateX: Math.round(navigator.left + navigator.height / 2),\n            translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n        } : {\n            translateX: Math.round(navigator.left + parseInt(x, 10)),\n            translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawOutline\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n        scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n        let left = navigator.left, verticalMin, path;\n        if (inverted) {\n            verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n            zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n            path = [\n                [\n                    'M',\n                    left + height,\n                    navigatorTop - scrollButtonSize - outlineCorrection\n                ],\n                // Top right of zoomed range\n                ['L', left + height, verticalMin],\n                ['L', left, verticalMin], // Top left of z.r.\n                ['M', left, zoomedMax], // Bottom left of z.r.\n                ['L', left + height, zoomedMax], // Bottom right of z.r.\n                [\n                    'L',\n                    left + height,\n                    navigatorTop + navigatorSize + scrollButtonSize\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', left + height, verticalMin - halfOutline], \n                // Upper right of z.r.\n                [\n                    'L',\n                    left + height,\n                    zoomedMax + halfOutline\n                ]);\n            }\n        }\n        else {\n            left -= scrollButtonSize;\n            zoomedMin += left + scrollButtonSize - outlineCorrection;\n            zoomedMax += left + scrollButtonSize - outlineCorrection;\n            path = [\n                // Left\n                ['M', left, lineTop],\n                // Upper left of zoomed range\n                ['L', zoomedMin, lineTop],\n                // Lower left of z.r.\n                ['L', zoomedMin, lineBtm],\n                // Lower right of z.r.\n                ['M', zoomedMax, lineBtm],\n                // Upper right of z.r.\n                ['L', zoomedMax, lineTop],\n                // Right\n                [\n                    'L',\n                    left + navigatorSize + scrollButtonSize * 2,\n                    lineTop\n                ]\n            ];\n            if (maskInside) {\n                path.push(\n                // Upper left of zoomed range\n                ['M', zoomedMin - halfOutline, lineTop], \n                // Upper right of z.r.\n                ['L', zoomedMax + halfOutline, lineTop]);\n            }\n        }\n        navigator.outline[verb]({\n            d: path\n        });\n    }\n    /**\n     * Render outline around the zoomed range\n     *\n     * @private\n     * @function Highcharts.Navigator#drawMasks\n     *\n     * @param {number} zoomedMin\n     *        in pixels position where zoomed range starts\n     *\n     * @param {number} zoomedMax\n     *        in pixels position where zoomed range ends\n     *\n     * @param {boolean|undefined} inverted\n     *        flag if chart is inverted\n     *\n     * @param {string} verb\n     *        use 'animate' or 'attr'\n     */\n    drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n        const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n        let height, width, x, y;\n        // Determine rectangle position & size\n        // According to (non)inverted position:\n        if (inverted) {\n            x = [left, left, left];\n            y = [top, top + zoomedMin, top + zoomedMax];\n            width = [navigatorHeight, navigatorHeight, navigatorHeight];\n            height = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n        }\n        else {\n            x = [left, left + zoomedMin, left + zoomedMax];\n            y = [top, top, top];\n            width = [\n                zoomedMin,\n                zoomedMax - zoomedMin,\n                navigator.size - zoomedMax\n            ];\n            height = [navigatorHeight, navigatorHeight, navigatorHeight];\n        }\n        navigator.shades.forEach((shade, i) => {\n            shade[verb]({\n                x: x[i],\n                y: y[i],\n                width: width[i],\n                height: height[i]\n            });\n        });\n    }\n    /**\n     * Generate and update DOM elements for a navigator:\n     *\n     * - main navigator group\n     *\n     * - all shades\n     *\n     * - outline\n     *\n     * - handles\n     *\n     * @private\n     * @function Highcharts.Navigator#renderElements\n     */\n    renderElements() {\n        const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n            cursor: inverted ? 'ns-resize' : 'ew-resize'\n        }, \n        // Create the main navigator group\n        navigatorGroup = navigator.navigatorGroup ??\n            (navigator.navigatorGroup = renderer\n                .g('navigator')\n                .attr({\n                zIndex: 8,\n                visibility: 'hidden'\n            })\n                .add());\n        // Create masks, each mask will get events and fill:\n        [\n            !maskInside,\n            maskInside,\n            !maskInside\n        ].forEach((hasMask, index) => {\n            const shade = navigator.shades[index] ??\n                (navigator.shades[index] = renderer.rect()\n                    .addClass('highcharts-navigator-mask' +\n                    (index === 1 ? '-inside' : '-outside'))\n                    .add(navigatorGroup));\n            if (!chart.styledMode) {\n                shade.attr({\n                    fill: hasMask ? navigatorOptions.maskFill : 'rgba(0,0,0,0)'\n                });\n                if (index === 1) {\n                    shade.css(mouseCursor);\n                }\n            }\n        });\n        // Create the outline:\n        if (!navigator.outline) {\n            navigator.outline = renderer.path()\n                .addClass('highcharts-navigator-outline')\n                .add(navigatorGroup);\n        }\n        if (!chart.styledMode) {\n            navigator.outline.attr({\n                'stroke-width': navigatorOptions.outlineWidth,\n                stroke: navigatorOptions.outlineColor\n            });\n        }\n        // Create the handlers:\n        if (navigatorOptions.handles?.enabled) {\n            const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n            [0, 1].forEach((index) => {\n                const symbolName = handlesOptions.symbols[index];\n                if (!navigator.handles[index] ||\n                    navigator.handles[index].symbolUrl !== symbolName) {\n                    // Generate symbol from scratch if we're dealing with an URL\n                    navigator.handles[index]?.destroy();\n                    navigator.handles[index] = renderer.symbol(symbolName, -width / 2 - 1, 0, width, height, handlesOptions);\n                    // Z index is 6 for right handle, 7 for left. Can't be 10,\n                    // because of the tooltip in inverted chart (#2908).\n                    navigator.handles[index].attr({ zIndex: 7 - index })\n                        .addClass('highcharts-navigator-handle ' +\n                        'highcharts-navigator-handle-' +\n                        ['left', 'right'][index]).add(navigatorGroup);\n                    navigator.addMouseEvents();\n                    // If the navigator symbol changed, update its path and name\n                }\n                else if (!navigator.handles[index].isImg &&\n                    navigator.handles[index].symbolName !== symbolName) {\n                    const symbolFn = symbols[symbolName], path = symbolFn.call(symbols, -width / 2 - 1, 0, width, height);\n                    navigator.handles[index].attr({\n                        d: path\n                    });\n                    navigator.handles[index].symbolName = symbolName;\n                }\n                if (chart.inverted) {\n                    navigator.handles[index].attr({\n                        rotation: 90,\n                        rotationOriginX: Math.floor(-width / 2),\n                        rotationOriginY: (height + width) / 2\n                    });\n                }\n                if (!chart.styledMode) {\n                    navigator.handles[index]\n                        .attr({\n                        fill: handlesOptions.backgroundColor,\n                        stroke: handlesOptions.borderColor,\n                        'stroke-width': handlesOptions.lineWidth,\n                        width: handlesOptions.width,\n                        height: handlesOptions.height,\n                        x: -width / 2 - 1,\n                        y: 0\n                    })\n                        .css(mouseCursor);\n                }\n            });\n        }\n    }\n    /**\n     * Update navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#update\n     *\n     * @param {Highcharts.NavigatorOptions} options\n     *        Options to merge in when updating navigator\n     */\n    update(options, redraw = false) {\n        const chart = this.chart, invertedUpdate = chart.options.chart.inverted !==\n            chart.scrollbar?.options.vertical;\n        Navigator_merge(true, chart.options.navigator, options);\n        this.navigatorOptions = chart.options.navigator || {};\n        this.setOpposite();\n        // Revert to destroy/init for navigator/scrollbar enabled toggle\n        if (Navigator_defined(options.enabled) || invertedUpdate) {\n            this.destroy();\n            this.navigatorEnabled = options.enabled || this.navigatorEnabled;\n            return this.init(chart);\n        }\n        if (this.navigatorEnabled) {\n            this.isDirty = true;\n            if (options.adaptToUpdatedData === false) {\n                this.baseSeries.forEach((series) => {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            if (options.adaptToUpdatedData) {\n                this.baseSeries.forEach((series) => {\n                    series.eventsToUnbind.push(Navigator_addEvent(series, 'updatedData', this.updatedDataHandler));\n                }, this);\n            }\n            // Update navigator series\n            if (options.series || options.baseSeries) {\n                this.setBaseSeries(void 0, false);\n            }\n            // Update navigator axis\n            if (options.height || options.xAxis || options.yAxis) {\n                this.height = options.height ?? this.height;\n                const offsets = this.getXAxisOffsets();\n                this.xAxis.update({\n                    ...options.xAxis,\n                    offsets,\n                    [chart.inverted ? 'width' : 'height']: this.height,\n                    [chart.inverted ? 'height' : 'width']: void 0\n                }, false);\n                this.yAxis.update({\n                    ...options.yAxis,\n                    [chart.inverted ? 'width' : 'height']: this.height\n                }, false);\n            }\n        }\n        if (redraw) {\n            chart.redraw();\n        }\n    }\n    /**\n     * Render the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#render\n     * @param {number} min\n     *        X axis value minimum\n     * @param {number} max\n     *        X axis value maximum\n     * @param {number} [pxMin]\n     *        Pixel value minimum\n     * @param {number} [pxMax]\n     *        Pixel value maximum\n     */\n    render(min, max, pxMin, pxMax) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n        let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n        // Don't redraw while moving the handles (#4703).\n        if (this.hasDragged && !Navigator_defined(pxMin)) {\n            return;\n        }\n        if (this.isDirty) {\n            // Update DOM navigator elements\n            this.renderElements();\n        }\n        min = Navigator_correctFloat(min - pointRange / 2);\n        max = Navigator_correctFloat(max + pointRange / 2);\n        // Don't render the navigator until we have data (#486, #4202, #5172).\n        if (!Navigator_isNumber(min) || !Navigator_isNumber(max)) {\n            // However, if navigator was already rendered, we may need to resize\n            // it. For example hidden series, but visible navigator (#6022).\n            if (rendered) {\n                pxMin = 0;\n                pxMax = Navigator_pick(xAxis.width, scrollbarXAxis.width);\n            }\n            else {\n                return;\n            }\n        }\n        navigator.left = Navigator_pick(xAxis.left, \n        // In case of scrollbar only, without navigator\n        chart.plotLeft + scrollButtonSize +\n            (inverted ? chart.plotWidth : 0));\n        let zoomedMax = navigator.size = navigatorSize = Navigator_pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n            2 * scrollButtonSize);\n        if (inverted) {\n            navigatorWidth = scrollbarHeight;\n        }\n        else {\n            navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n        }\n        // Get the pixel position of the handles\n        pxMin = Navigator_pick(pxMin, xAxis.toPixels(min, true));\n        pxMax = Navigator_pick(pxMax, xAxis.toPixels(max, true));\n        // Verify (#1851, #2238)\n        if (!Navigator_isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n            pxMin = 0;\n            pxMax = navigatorWidth;\n        }\n        // Are we below the minRange? (#2618, #6191)\n        const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(Navigator_correctFloat(newMax - newMin));\n        if (currentRange < minRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n            }\n        }\n        else if (Navigator_defined(maxRange) &&\n            Navigator_correctFloat(currentRange - pointRange) > maxRange) {\n            if (this.grabbedLeft) {\n                pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n            }\n            else if (this.grabbedRight) {\n                pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n            }\n        }\n        // Handles are allowed to cross, but never exceed the plot area\n        navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n        navigator.zoomedMin = clamp(navigator.fixedWidth ?\n            navigator.zoomedMax - navigator.fixedWidth :\n            Math.min(pxMin, pxMax), 0, zoomedMax);\n        navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n        zoomedMax = Math.round(navigator.zoomedMax);\n        const zoomedMin = Math.round(navigator.zoomedMin);\n        if (navigatorEnabled) {\n            navigator.navigatorGroup.attr({\n                visibility: 'inherit'\n            });\n            // Place elements\n            verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n            navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            if (navigator.navigatorOptions.handles.enabled) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n        if (navigator.scrollbar) {\n            if (inverted) {\n                scrollbarTop = navigator.top - scrollButtonSize;\n                scrollbarLeft = navigator.left - scrollbarHeight +\n                    (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                        // Multiple axes has offsets:\n                        (scrollbarXAxis.titleOffset || 0) +\n                            // Self margin from the axis.title\n                            scrollbarXAxis.axisTitleMargin);\n                scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n            }\n            else {\n                scrollbarTop = navigator.top + (navigatorEnabled ?\n                    navigator.height :\n                    -scrollbarHeight);\n                scrollbarLeft = navigator.left - scrollButtonSize;\n            }\n            // Reposition scrollbar\n            navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n            // Keep scale 0-1\n            navigator.scrollbar.setRange(\n            // Use real value, not rounded because range can be very small\n            // (#1716)\n            navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n        }\n        navigator.rendered = true;\n        this.isDirty = false;\n        Navigator_fireEvent(this, 'afterRender');\n    }\n    /**\n     * Set up the mouse and touch events for the navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#addMouseEvents\n     */\n    addMouseEvents() {\n        const navigator = this, chart = navigator.chart, container = chart.container;\n        let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n        /**\n         * Create mouse events' handlers.\n         * Make them as separate functions to enable wrapping them:\n         */\n        navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n            navigator.onMouseMove(e);\n        };\n        navigator.mouseUpHandler = mouseUpHandler = function (e) {\n            navigator.onMouseUp(e);\n        };\n        // Add shades and handles mousedown events\n        eventsToUnbind = navigator.getPartsEvents('mousedown');\n        eventsToUnbind.push(\n        // Add mouse move and mouseup events. These are bind to doc/div,\n        // because Navigator.grabbedSomething flags are stored in mousedown\n        // events\n        Navigator_addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n        // Touch events\n        Navigator_addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), Navigator_addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n        eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n        navigator.eventsToUnbind = eventsToUnbind;\n        // Data events\n        if (navigator.series && navigator.series[0]) {\n            eventsToUnbind.push(Navigator_addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                chart.navigator.modifyNavigatorAxisExtremes();\n            }));\n        }\n    }\n    /**\n     * Generate events for handles and masks\n     *\n     * @private\n     * @function Highcharts.Navigator#getPartsEvents\n     *\n     * @param {string} eventName\n     *        Event name handler, 'mousedown' or 'touchstart'\n     *\n     * @return {Array<Function>}\n     *         An array of functions to remove navigator functions from the\n     *         events again.\n     */\n    getPartsEvents(eventName) {\n        const navigator = this, events = [];\n        ['shades', 'handles'].forEach(function (name) {\n            navigator[name].forEach(function (navigatorItem, index) {\n                events.push(Navigator_addEvent(navigatorItem.element, eventName, function (e) {\n                    navigator[name + 'Mousedown'](e, index);\n                }));\n            });\n        });\n        return events;\n    }\n    /**\n     * Mousedown on a shaded mask, either:\n     *\n     * - will be stored for future drag&drop\n     *\n     * - will directly shift to a new range\n     *\n     * @private\n     * @function Highcharts.Navigator#shadesMousedown\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     *\n     * @param {number} index\n     *        Index of a mask in Navigator.shades array\n     */\n    shadesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n        let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n        // For inverted chart, swap some options:\n        if (chart.inverted) {\n            chartX = e.chartY;\n            navigatorPosition = navigator.top;\n        }\n        if (index === 1) {\n            // Store information for drag&drop\n            navigator.grabbedCenter = chartX;\n            navigator.fixedWidth = range;\n            navigator.dragOffset = chartX - zoomedMin;\n        }\n        else {\n            // Shift the range by clicking on shaded areas\n            left = chartX - navigatorPosition - range / 2;\n            if (index === 0) {\n                left = Math.max(0, left);\n            }\n            else if (index === 2 && left + range >= navigatorSize) {\n                left = navigatorSize - range;\n                if (navigator.reversedExtremes) {\n                    // #7713\n                    left -= range;\n                    fixedMin = navigator.getUnionExtremes().dataMin;\n                }\n                else {\n                    // #2293, #3543\n                    fixedMax = navigator.getUnionExtremes().dataMax;\n                }\n            }\n            if (left !== zoomedMin) { // It has actually moved\n                navigator.fixedWidth = range; // #1370\n                ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                if (Navigator_defined(ext.min)) { // #7411\n                    Navigator_fireEvent(this, 'setRange', {\n                        min: Math.min(ext.min, ext.max),\n                        max: Math.max(ext.min, ext.max),\n                        redraw: true,\n                        eventArguments: {\n                            trigger: 'navigator'\n                        }\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Mousedown on a handle mask.\n     * Will store necessary information for drag&drop.\n     *\n     * @private\n     * @function Highcharts.Navigator#handlesMousedown\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     * @param {number} index\n     *        Index of a handle in Navigator.handles array\n     */\n    handlesMousedown(e, index) {\n        e = this.chart.pointer?.normalize(e) || e;\n        const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n        // For reversed axes, min and max are changed,\n        // so the other extreme should be stored\n        reverse = navigator.reversedExtremes;\n        if (index === 0) {\n            // Grab the left handle\n            navigator.grabbedLeft = true;\n            navigator.otherHandlePos = navigator.zoomedMax;\n            navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n        }\n        else {\n            // Grab the right handle\n            navigator.grabbedRight = true;\n            navigator.otherHandlePos = navigator.zoomedMin;\n            navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n        }\n        chart.setFixedRange(void 0);\n    }\n    /**\n     * Mouse move event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseMove\n     *\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseMove(e) {\n        const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n        let left = navigator.left, chartX;\n        // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n        // the finger down in the center of the scrollbar. This should be\n        // ignored.\n        if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n            e = chart.pointer?.normalize(e) || e;\n            chartX = e.chartX;\n            // Swap some options for inverted chart\n            if (inverted) {\n                left = navigator.top;\n                chartX = e.chartY;\n            }\n            // Drag left handle or top handle\n            if (navigator.grabbedLeft) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                // Drag right handle or bottom handle\n            }\n            else if (navigator.grabbedRight) {\n                navigator.hasDragged = true;\n                navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                // Drag scrollbar or open area in navigator\n            }\n            else if (navigator.grabbedCenter) {\n                navigator.hasDragged = true;\n                if (chartX < dragOffset) { // Outside left\n                    chartX = dragOffset;\n                    // Outside right\n                }\n                else if (chartX >\n                    navigatorSize + dragOffset - range) {\n                    chartX = navigatorSize + dragOffset - range;\n                }\n                navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n            }\n            if (navigator.hasDragged &&\n                navigator.scrollbar &&\n                Navigator_pick(navigator.scrollbar.options.liveRedraw, \n                // By default, don't run live redraw on touch\n                // devices or if the chart is in boost.\n                !Navigator_isTouchDevice &&\n                    !this.chart.boosted)) {\n                e.DOMType = e.type;\n                setTimeout(function () {\n                    navigator.onMouseUp(e);\n                }, 0);\n            }\n        }\n    }\n    /**\n     * Mouse up event based on x/y mouse position.\n     *\n     * @private\n     * @function Highcharts.Navigator#onMouseUp\n     * @param {Highcharts.PointerEventObject} e\n     *        Mouse event\n     */\n    onMouseUp(e) {\n        const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n            'animate' : 'attr';\n        let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n        if (\n        // MouseUp is called for both, navigator and scrollbar (that order),\n        // which causes calling afterSetExtremes twice. Prevent first call\n        // by checking if scrollbar is going to set new extremes (#6334)\n        (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n            e.trigger === 'scrollbar') {\n            unionExtremes = navigator.getUnionExtremes();\n            // When dragging one handle, make sure the other one doesn't change\n            if (navigator.zoomedMin === navigator.otherHandlePos) {\n                fixedMin = navigator.fixedExtreme;\n            }\n            else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                fixedMax = navigator.fixedExtreme;\n            }\n            // Snap to right edge (#4076)\n            if (navigator.zoomedMax === navigator.size) {\n                fixedMax = navigator.reversedExtremes ?\n                    unionExtremes.dataMin :\n                    unionExtremes.dataMax;\n            }\n            // Snap to left edge (#7576)\n            if (navigator.zoomedMin === 0) {\n                fixedMin = navigator.reversedExtremes ?\n                    unionExtremes.dataMax :\n                    unionExtremes.dataMin;\n            }\n            ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n            if (Navigator_defined(ext.min)) {\n                Navigator_fireEvent(this, 'setRange', {\n                    min: Math.min(ext.min, ext.max),\n                    max: Math.max(ext.min, ext.max),\n                    redraw: true,\n                    animation: navigator.hasDragged ? false : null,\n                    eventArguments: {\n                        trigger: 'navigator',\n                        triggerOp: 'navigator-drag',\n                        DOMEvent: DOMEvent // #1838\n                    }\n                });\n            }\n        }\n        if (e.DOMType !== 'mousemove' &&\n            e.DOMType !== 'touchmove') {\n            navigator.grabbedLeft = navigator.grabbedRight =\n                navigator.grabbedCenter = navigator.fixedWidth =\n                    navigator.fixedExtreme = navigator.otherHandlePos =\n                        navigator.hasDragged = navigator.dragOffset = null;\n        }\n        // Update position of navigator shades, outline and handles (#12573)\n        if (navigator.navigatorEnabled &&\n            Navigator_isNumber(navigator.zoomedMin) &&\n            Navigator_isNumber(navigator.zoomedMax)) {\n            zoomedMin = Math.round(navigator.zoomedMin);\n            zoomedMax = Math.round(navigator.zoomedMax);\n            if (navigator.shades) {\n                navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.outline) {\n                navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n            }\n            if (navigator.navigatorOptions.handles.enabled &&\n                Object.keys(navigator.handles).length ===\n                    navigator.handles.length) {\n                navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                navigator.drawHandle(zoomedMax, 1, inverted, verb);\n            }\n        }\n    }\n    /**\n     * Removes the event handlers attached previously with addEvents.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeEvents\n     */\n    removeEvents() {\n        if (this.eventsToUnbind) {\n            this.eventsToUnbind.forEach(function (unbind) {\n                unbind();\n            });\n            this.eventsToUnbind = void 0;\n        }\n        this.removeBaseSeriesEvents();\n    }\n    /**\n     * Remove data events.\n     *\n     * @private\n     * @function Highcharts.Navigator#removeBaseSeriesEvents\n     */\n    removeBaseSeriesEvents() {\n        const baseSeries = this.baseSeries || [];\n        if (this.navigatorEnabled && baseSeries[0]) {\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                baseSeries.forEach(function (series) {\n                    Navigator_removeEvent(series, 'updatedData', this.updatedDataHandler);\n                }, this);\n            }\n            // We only listen for extremes-events on the first baseSeries\n            if (baseSeries[0].xAxis) {\n                Navigator_removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n            }\n        }\n    }\n    /**\n     * Calculate the navigator xAxis offsets\n     *\n     * @private\n     */\n    getXAxisOffsets() {\n        return (this.chart.inverted ?\n            [this.scrollButtonSize, 0, -this.scrollButtonSize, 0] :\n            [0, -this.scrollButtonSize, 0, this.scrollButtonSize]);\n    }\n    /**\n     * Initialize the Navigator object\n     *\n     * @private\n     * @function Highcharts.Navigator#init\n     */\n    init(chart) {\n        const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n        this.handles = [];\n        this.shades = [];\n        this.chart = chart;\n        this.setBaseSeries();\n        this.height = height;\n        this.scrollbarHeight = scrollbarHeight;\n        this.scrollButtonSize = scrollButtonSize;\n        this.scrollbarEnabled = scrollbarEnabled;\n        this.navigatorEnabled = navigatorEnabled;\n        this.navigatorOptions = navigatorOptions;\n        this.scrollbarOptions = scrollbarOptions;\n        this.setOpposite();\n        const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n            chart.xAxis[0] || { options: {} };\n        chart.isDirtyBox = true;\n        if (navigator.navigatorEnabled) {\n            const offsets = this.getXAxisOffsets();\n            // An x axis is required for scrollbar also\n            navigator.xAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge({\n                // Inherit base xAxis' break, ordinal options and overscroll\n                breaks: baseXaxis.options.breaks,\n                ordinal: baseXaxis.options.ordinal,\n                overscroll: baseXaxis.options.overscroll\n            }, navigatorOptions.xAxis, {\n                type: 'datetime',\n                yAxis: navigatorOptions.yAxis?.id,\n                index: xAxisIndex,\n                isInternal: true,\n                offset: 0,\n                keepOrdinalPadding: true, // #2436\n                startOnTick: false,\n                endOnTick: false,\n                // Inherit base xAxis' padding when ordinal is false (#16915).\n                minPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.minPadding,\n                maxPadding: baseXaxis.options.ordinal ? 0 :\n                    baseXaxis.options.maxPadding,\n                zoomEnabled: false\n            }, chart.inverted ? {\n                offsets,\n                width: height\n            } : {\n                offsets,\n                height\n            }), 'xAxis');\n            navigator.yAxis = new (external_highcharts_src_js_default_Axis_default())(chart, Navigator_merge(navigatorOptions.yAxis, {\n                alignTicks: false,\n                offset: 0,\n                index: yAxisIndex,\n                isInternal: true,\n                reversed: Navigator_pick((navigatorOptions.yAxis &&\n                    navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false), // #14060\n                zoomEnabled: false\n            }, chart.inverted ? {\n                width: height\n            } : {\n                height: height\n            }), 'yAxis');\n            // If we have a base series, initialize the navigator series\n            if (baseSeries || navigatorOptions.series.data) {\n                navigator.updateNavigatorSeries(false);\n                // If not, set up an event to listen for added series\n            }\n            else if (chart.series.length === 0) {\n                navigator.unbindRedraw = Navigator_addEvent(chart, 'beforeRedraw', function () {\n                    // We've got one, now add it as base\n                    if (chart.series.length > 0 && !navigator.series) {\n                        navigator.setBaseSeries();\n                        navigator.unbindRedraw(); // Reset\n                    }\n                });\n            }\n            navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n            // Render items, so we can bind events to them:\n            navigator.renderElements();\n            // Add mouse events\n            navigator.addMouseEvents();\n            // In case of scrollbar only, fake an x axis to get translation\n        }\n        else {\n            navigator.xAxis = {\n                chart,\n                navigatorAxis: {\n                    fake: true\n                },\n                translate: function (value, reverse) {\n                    const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                    return reverse ?\n                        // From pixel to value\n                        (value * valueRange / scrollTrackWidth) + min :\n                        // From value to pixel\n                        scrollTrackWidth * (value - min) / valueRange;\n                },\n                toPixels: function (value) {\n                    return this.translate(value);\n                },\n                toValue: function (value) {\n                    return this.translate(value, true);\n                }\n            };\n            navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n            navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisComposition.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n        }\n        // Initialize the scrollbar\n        if (chart.options.scrollbar?.enabled) {\n            const options = Navigator_merge(chart.options.scrollbar, { vertical: chart.inverted });\n            if (!Navigator_isNumber(options.margin)) {\n                options.margin = chart.inverted ? -3 : 3;\n            }\n            chart.scrollbar = navigator.scrollbar = new Scrollbar_Scrollbar(chart.renderer, options, chart);\n            Navigator_addEvent(navigator.scrollbar, 'changed', function (e) {\n                const range = navigator.size, to = range * this.to, from = range * this.from;\n                navigator.hasDragged = navigator.scrollbar.hasDragged;\n                navigator.render(0, 0, from, to);\n                if (this.shouldUpdateExtremes(e.DOMType)) {\n                    setTimeout(function () {\n                        navigator.onMouseUp(e);\n                    });\n                }\n            });\n        }\n        // Add data events\n        navigator.addBaseSeriesEvents();\n        // Add redraw events\n        navigator.addChartEvents();\n    }\n    /**\n     * Set the opposite property on navigator\n     *\n     * @private\n     */\n    setOpposite() {\n        const navigatorOptions = this.navigatorOptions, navigatorEnabled = this.navigatorEnabled, chart = this.chart;\n        this.opposite = Navigator_pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n    }\n    /**\n     * Get the union data extremes of the chart - the outer data extremes of the\n     * base X axis and the navigator axis.\n     *\n     * @private\n     * @function Highcharts.Navigator#getUnionExtremes\n     */\n    getUnionExtremes(returnFalseOnNoBaseSeries) {\n        const baseAxis = this.chart.xAxis[0], time = this.chart.time, navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n        let ret;\n        if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n            ret = {\n                dataMin: Navigator_pick(// #4053\n                time.parse(navAxisOptions?.min), numExt('min', time.parse(baseAxisOptions.min), baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                dataMax: Navigator_pick(time.parse(navAxisOptions?.max), numExt('max', time.parse(baseAxisOptions.max), baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n            };\n        }\n        return ret;\n    }\n    /**\n     * Set the base series and update the navigator series from this. With a bit\n     * of modification we should be able to make this an API method to be called\n     * from the outside\n     *\n     * @private\n     * @function Highcharts.Navigator#setBaseSeries\n     * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n     *        Additional series options for a navigator\n     * @param {boolean} [redraw]\n     *        Whether to redraw after update.\n     */\n    setBaseSeries(baseSeriesOptions, redraw) {\n        const chart = this.chart, baseSeries = this.baseSeries = [];\n        baseSeriesOptions = (baseSeriesOptions ||\n            chart.options && chart.options.navigator.baseSeries ||\n            (chart.series.length ?\n                // Find the first non-navigator series (#8430)\n                find(chart.series, (s) => (!s.options.isInternal)).index :\n                0));\n        // Iterate through series and add the ones that should be shown in\n        // navigator.\n        (chart.series || []).forEach((series, i) => {\n            if (\n            // Don't include existing nav series\n            !series.options.isInternal &&\n                (series.options.showInNavigator ||\n                    (i === baseSeriesOptions ||\n                        series.options.id === baseSeriesOptions) &&\n                        series.options.showInNavigator !== false)) {\n                baseSeries.push(series);\n            }\n        });\n        // When run after render, this.xAxis already exists\n        if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n            this.updateNavigatorSeries(true, redraw);\n        }\n    }\n    /**\n     * Update series in the navigator from baseSeries, adding new if does not\n     * exist.\n     *\n     * @private\n     * @function Highcharts.Navigator.updateNavigatorSeries\n     */\n    updateNavigatorSeries(addEvents, redraw) {\n        const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n            enableMouseTracking: false,\n            index: null, // #6162\n            linkedTo: null, // #6734\n            group: 'nav', // For columns\n            padXAxis: false,\n            xAxis: this.navigatorOptions.xAxis?.id,\n            yAxis: this.navigatorOptions.yAxis?.id,\n            showInLegend: false,\n            stacking: void 0, // #4823\n            isInternal: true,\n            states: {\n                inactive: {\n                    opacity: 1\n                }\n            }\n        }, \n        // Remove navigator series that are no longer in the baseSeries\n        navigatorSeries = navigator.series =\n            (navigator.series || []).filter((navSeries) => {\n                const base = navSeries.baseSeries;\n                if (baseSeries.indexOf(base) < 0) { // Not in array\n                    // If there is still a base series connected to this\n                    // series, remove event handler and reference.\n                    if (base) {\n                        Navigator_removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                        delete base.navigatorSeries;\n                    }\n                    // Kill the nav series. It may already have been\n                    // destroyed (#8715).\n                    if (navSeries.chart) {\n                        navSeries.destroy();\n                    }\n                    return false;\n                }\n                return true;\n            });\n        let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n        // Go through each base series and merge the options to create new\n        // series\n        if (baseSeries && baseSeries.length) {\n            baseSeries.forEach((base) => {\n                const linkedNavSeries = base.navigatorSeries, userNavOptions = Navigator_extend(\n                // Grab color and visibility from base as default\n                {\n                    color: base.color,\n                    visible: base.visible\n                }, !Navigator_isArray(chartNavigatorSeriesOptions) ?\n                    chartNavigatorSeriesOptions :\n                    Navigator_defaultOptions.navigator.series);\n                // Don't update if the series exists in nav and we have disabled\n                // adaptToUpdatedData.\n                if (linkedNavSeries &&\n                    navigator.navigatorOptions.adaptToUpdatedData === false) {\n                    return;\n                }\n                navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                baseOptions = base.options || {};\n                baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                // The dataLabels options are not merged correctly\n                // if the settings are an array, #13847.\n                userNavOptions.dataLabels = Navigator_splat(userNavOptions.dataLabels);\n                mergedNavSeriesOptions = Navigator_merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                // Once nav series type is resolved, pick correct pointRange\n                mergedNavSeriesOptions.pointRange = Navigator_pick(\n                // Stricte set pointRange in options\n                userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                // Fallback to default values, e.g. `null` for column\n                Navigator_defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                // Merge data separately. Do a slice to avoid mutating the\n                // navigator options from base series (#4923).\n                const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                navigator.hasNavigatorData =\n                    navigator.hasNavigatorData || !!navigatorSeriesData;\n                mergedNavSeriesOptions.data = (navigatorSeriesData ||\n                    baseOptions.data?.slice(0));\n                // Update or add the series\n                if (linkedNavSeries && linkedNavSeries.options) {\n                    linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                }\n                else {\n                    base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                    // Set data on initial run with dataSorting enabled (#20318)\n                    chart.setSortedData();\n                    base.navigatorSeries.baseSeries = base; // Store ref\n                    navigatorSeries.push(base.navigatorSeries);\n                }\n            });\n        }\n        // If user has defined data (and no base series) or explicitly defined\n        // navigator.series as an array, we create these series on top of any\n        // base series.\n        if (chartNavigatorSeriesOptions.data &&\n            !(baseSeries && baseSeries.length) ||\n            Navigator_isArray(chartNavigatorSeriesOptions)) {\n            navigator.hasNavigatorData = false;\n            // Allow navigator.series to be an array\n            chartNavigatorSeriesOptions =\n                Navigator_splat(chartNavigatorSeriesOptions);\n            chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                navSeriesMixin.name =\n                    'Navigator ' + (navigatorSeries.length + 1);\n                mergedNavSeriesOptions = Navigator_merge(Navigator_defaultOptions.navigator.series, {\n                    // Since we don't have a base series to pull color from,\n                    // try to fake it by using color from series with same\n                    // index. Otherwise pull from the colors array. We need\n                    // an explicit color as otherwise updates will increment\n                    // color counter and we'll get a new color for each\n                    // update of the nav series.\n                    color: chart.series[i] &&\n                        !chart.series[i].options.isInternal &&\n                        chart.series[i].color ||\n                        chart.options.colors[i] ||\n                        chart.options.colors[0]\n                }, navSeriesMixin, userSeriesOptions);\n                mergedNavSeriesOptions.data = userSeriesOptions.data;\n                if (mergedNavSeriesOptions.data) {\n                    navigator.hasNavigatorData = true;\n                    navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                }\n            });\n        }\n        if (addEvents) {\n            this.addBaseSeriesEvents();\n        }\n    }\n    /**\n     * Add data events.\n     * For example when main series is updated we need to recalculate extremes\n     *\n     * @private\n     * @function Highcharts.Navigator#addBaseSeriesEvent\n     */\n    addBaseSeriesEvents() {\n        const navigator = this, baseSeries = navigator.baseSeries || [];\n        // Bind modified extremes event to first base's xAxis only.\n        // In event of > 1 base-xAxes, the navigator will ignore those.\n        // Adding this multiple times to the same axis is no problem, as\n        // duplicates should be discarded by the browser.\n        if (baseSeries[0] && baseSeries[0].xAxis) {\n            baseSeries[0].eventsToUnbind.push(Navigator_addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n        }\n        baseSeries.forEach((base) => {\n            // Link base series show/hide to navigator series visibility\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'show', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(true, false);\n                }\n            }));\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'hide', function () {\n                if (this.navigatorSeries) {\n                    this.navigatorSeries.setVisible(false, false);\n                }\n            }));\n            // Respond to updated data in the base series, unless explicitly\n            // not adapting to data changes.\n            if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                if (base.xAxis) {\n                    base.eventsToUnbind.push(Navigator_addEvent(base, 'updatedData', this.updatedDataHandler));\n                }\n            }\n            // Handle series removal\n            base.eventsToUnbind.push(Navigator_addEvent(base, 'remove', function () {\n                if (baseSeries) {\n                    erase(baseSeries, base); // #21043\n                }\n                if (this.navigatorSeries && navigator.series) {\n                    erase(navigator.series, this.navigatorSeries);\n                    if (Navigator_defined(this.navigatorSeries.options)) {\n                        this.navigatorSeries.remove(false);\n                    }\n                    delete this.navigatorSeries;\n                }\n            }));\n        });\n    }\n    /**\n     * Get minimum from all base series connected to the navigator\n     * @private\n     * @param {number} currentSeriesMin\n     *        Minium from the current series\n     * @return {number}\n     *         Minimum from all series\n     */\n    getBaseSeriesMin(currentSeriesMin) {\n        return this.baseSeries.reduce(function (min, series) {\n            // #10193\n            return Math.min(min, series.getColumn('x')[0] ?? min);\n        }, currentSeriesMin);\n    }\n    /**\n     * Set the navigator x axis extremes to reflect the total. The navigator\n     * extremes should always be the extremes of the union of all series in the\n     * chart as well as the navigator series.\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n     */\n    modifyNavigatorAxisExtremes() {\n        const xAxis = this.xAxis;\n        if (typeof xAxis.getExtremes !== 'undefined') {\n            const unionExtremes = this.getUnionExtremes(true);\n            if (unionExtremes &&\n                (unionExtremes.dataMin !== xAxis.min ||\n                    unionExtremes.dataMax !== xAxis.max)) {\n                xAxis.min = unionExtremes.dataMin;\n                xAxis.max = unionExtremes.dataMax;\n            }\n        }\n    }\n    /**\n     * Hook to modify the base axis extremes with information from the Navigator\n     *\n     * @private\n     * @function Highcharts.Navigator#modifyBaseAxisExtremes\n     */\n    modifyBaseAxisExtremes() {\n        const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = Navigator_pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n        // When the extremes have been set by range selector button, don't\n        // stick to min or max. The range selector buttons will handle the\n        // extremes. (#5489)\n        unmutable = baseXAxis.eventArgs &&\n            baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n        let newMax, newMin;\n        if (!unmutable) {\n            // If the zoomed range is already at the min, move it to the right\n            // as new data comes in\n            if (stickToMin) {\n                newMin = baseDataMin;\n                newMax = newMin + range;\n            }\n            // If the zoomed range is already at the max, move it to the right\n            // as new data comes in\n            if (stickToMax) {\n                newMax = baseDataMax + overscroll;\n                // If stickToMin is true, the new min value is set above\n                if (!stickToMin) {\n                    newMin = Math.max(baseDataMin, // Don't go below data extremes (#13184)\n                    newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                        navigatorSeries.xData[0] :\n                        -Number.MAX_VALUE));\n                }\n            }\n            // Update the extremes\n            if (hasSetExtremes && (stickToMin || stickToMax)) {\n                if (Navigator_isNumber(newMin)) {\n                    baseXAxis.min = baseXAxis.userMin = newMin;\n                    baseXAxis.max = baseXAxis.userMax = newMax;\n                }\n            }\n        }\n        // Reset\n        navigator.stickToMin =\n            navigator.stickToMax = null;\n    }\n    /**\n     * Handler for updated data on the base series. When data is modified, the\n     * navigator series must reflect it. This is called from the Chart.redraw\n     * function before axis and series extremes are computed.\n     *\n     * @private\n     * @function Highcharts.Navigator#updateDataHandler\n     */\n    updatedDataHandler() {\n        const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n            Math.round(navigator.zoomedMin) === 0 :\n            Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n        // If the scrollbar is scrolled all the way to the right, keep right as\n        // new data comes in, unless user set navigator.stickToMax to false.\n        navigator.stickToMax = Navigator_pick(this.chart.options.navigator &&\n            this.chart.options.navigator.stickToMax, shouldStickToMax);\n        navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n        // Set the navigator series data to the new data of the base series\n        if (navigatorSeries && !navigator.hasNavigatorData) {\n            navigatorSeries.options.pointStart = baseSeries.getColumn('x')[0];\n            navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n        }\n    }\n    /**\n     * Detect if the zoomed area should stick to the minimum, #14742.\n     *\n     * @private\n     * @function Highcharts.Navigator#shouldStickToMin\n     */\n    shouldStickToMin(baseSeries, navigator) {\n        const xDataMin = navigator.getBaseSeriesMin(baseSeries.getColumn('x')[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n        let stickToMin = true;\n        if (Navigator_isNumber(max) && Navigator_isNumber(min)) {\n            // If range declared, stick to the minimum only if the range\n            // is smaller than the data set range.\n            if (range && max - xDataMin > 0) {\n                stickToMin = max - xDataMin < range;\n            }\n            else {\n                // If the current axis minimum falls outside the new\n                // updated dataset, we must adjust.\n                stickToMin = min <= xDataMin;\n            }\n        }\n        else {\n            stickToMin = false; // #15864\n        }\n        return stickToMin;\n    }\n    /**\n     * Add chart events, like redrawing navigator, when chart requires that.\n     *\n     * @private\n     * @function Highcharts.Navigator#addChartEvents\n     */\n    addChartEvents() {\n        if (!this.eventsToUnbind) {\n            this.eventsToUnbind = [];\n        }\n        this.eventsToUnbind.push(\n        // Move the scrollbar after redraw, like after data updata even if\n        // axes don't redraw\n        Navigator_addEvent(this.chart, 'redraw', function () {\n            const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                navigator.baseSeries[0] &&\n                navigator.baseSeries[0].xAxis ||\n                this.xAxis[0]); // #5709, #13114\n            if (xAxis) {\n                navigator.render(xAxis.min, xAxis.max);\n            }\n        }), \n        // Make room for the navigator, can be placed around the chart:\n        Navigator_addEvent(this.chart, 'getMargins', function () {\n            const chart = this, navigator = chart.navigator;\n            let marginName = navigator.opposite ?\n                'plotTop' : 'marginBottom';\n            if (chart.inverted) {\n                marginName = navigator.opposite ?\n                    'marginRight' : 'plotLeft';\n            }\n            chart[marginName] = (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                navigator.height +\n                    (this.scrollbar?.options.margin || 0) +\n                    navigator.scrollbarHeight : 0) + (navigator.navigatorOptions.margin || 0);\n        }), Navigator_addEvent(Navigator, 'setRange', function (e) {\n            this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n        }));\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.Navigator#destroy\n     */\n    destroy() {\n        // Disconnect events added in addEvents\n        this.removeEvents();\n        if (this.xAxis) {\n            erase(this.chart.xAxis, this.xAxis);\n            erase(this.chart.axes, this.xAxis);\n        }\n        if (this.yAxis) {\n            erase(this.chart.yAxis, this.yAxis);\n            erase(this.chart.axes, this.yAxis);\n        }\n        // Destroy series\n        (this.series || []).forEach((s) => {\n            if (s.destroy) {\n                s.destroy();\n            }\n        });\n        // Destroy properties\n        [\n            'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n            'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n            'rendered'\n        ].forEach((prop) => {\n            if (this[prop] && this[prop].destroy) {\n                this[prop].destroy();\n            }\n            this[prop] = null;\n        });\n        // Destroy elements in collection\n        [this.handles].forEach((coll) => {\n            Navigator_destroyObjectProperties(coll);\n        });\n        // Clean up linked series\n        this.baseSeries.forEach((s) => {\n            s.navigatorSeries = void 0;\n        });\n        this.navigatorEnabled = false;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Navigator_Navigator = (Navigator);\n\n;// ./code/es-modules/Stock/RangeSelector/RangeSelectorDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Declarations\n *\n * */\n/**\n * An object containing language-related strings and settings. A typical setup\n * uses `Highcharts.setOptions` to make the options apply to all charts in the\n * same page.\n *\n * ```js\n * Highcharts.setOptions({\n *     lang: {\n *         locale: 'fr'\n *     }\n * });\n * ```\n *\n * @optionparent lang\n */\nconst lang = {\n    /**\n     * The text for the label for the range selector buttons.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorZoom: 'Zoom',\n    /**\n     * The text for the label for the \"from\" input box in the range\n     * selector. Since v9.0, this string is empty as the label is not\n     * rendered by default.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorFrom: '',\n    /**\n     * The text for the label for the \"to\" input box in the range selector.\n     *\n     * @product highstock gantt\n     */\n    rangeSelectorTo: 'â†’',\n    /**\n     * The default text for the rangeselector buttons.\n     *\n     * @since 12.2.0\n     */\n    rangeSelector: {\n        allText: 'All',\n        allTitle: 'View all',\n        monthText: '{count}m',\n        monthTitle: 'View {count} {#eq count 1}month{else}months{/eq}',\n        yearText: '{count}y',\n        yearTitle: 'View {count} {#eq count 1}year{else}years{/eq}',\n        ytdText: 'YTD',\n        ytdTitle: 'View year to date'\n    }\n};\n/**\n * The range selector is a tool for selecting ranges to display within\n * the chart. It provides buttons to select preconfigured ranges in\n * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n * boxes where min and max dates can be manually input.\n *\n * @product      highstock gantt\n * @optionparent rangeSelector\n */\nconst rangeSelector = {\n    /**\n     * Whether to enable all buttons from the start. By default buttons are\n     * only enabled if the corresponding time range exists on the X axis,\n     * but enabling all buttons allows for dynamically loading different\n     * time ranges.\n     *\n     * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n     *         All buttons enabled\n     *\n     * @since     2.0.3\n     */\n    allButtonsEnabled: false,\n    /**\n     * An array of configuration objects for the buttons.\n     *\n     * Defaults to:\n     * ```js\n     * buttons: [{\n     *     type: 'month',\n     *     count: 1,\n     *     text: '1m',\n     *     title: 'View 1 month'\n     * }, {\n     *     type: 'month',\n     *     count: 3,\n     *     text: '3m',\n     *     title: 'View 3 months'\n     * }, {\n     *     type: 'month',\n     *     count: 6,\n     *     text: '6m',\n     *     title: 'View 6 months'\n     * }, {\n     *     type: 'ytd',\n     *     text: 'YTD',\n     *     title: 'View year to date'\n     * }, {\n     *     type: 'year',\n     *     count: 1,\n     *     text: '1y',\n     *     title: 'View 1 year'\n     * }, {\n     *     type: 'all',\n     *     text: 'All',\n     *     title: 'View all'\n     * }]\n     * ```\n     *\n     * @sample {highstock} stock/demo/rangeselector-datagrouping/\n     *         Data grouping by buttons\n     *\n     * @type      {Array<*>}\n     */\n    buttons: [{\n            type: 'month',\n            count: 1\n        }, {\n            type: 'month',\n            count: 3\n        }, {\n            type: 'month',\n            count: 6\n        }, {\n            type: 'ytd'\n        }, {\n            type: 'year',\n            count: 1\n        }, {\n            type: 'all'\n        }],\n    /**\n     * How many units of the defined type the button should span. If `type`\n     * is \"month\" and `count` is 3, the button spans three months.\n     *\n     * @type      {number}\n     * @default   1\n     * @apioption rangeSelector.buttons.count\n     */\n    /**\n     * Fires when clicking on the rangeSelector button. One parameter,\n     * event, is passed to the function, containing common event\n     * information.\n     *\n     * ```js\n     * click: function(e) {\n     *   console.log(this);\n     * }\n     * ```\n     *\n     * Return false to stop default button's click action.\n     *\n     * @sample {highstock} stock/rangeselector/button-click/\n     *         Click event on the button\n     *\n     * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n     * @apioption rangeSelector.buttons.events.click\n     */\n    /**\n     * Additional range (in milliseconds) added to the end of the calculated\n     * time span.\n     *\n     * @sample {highstock} stock/rangeselector/min-max-offsets/\n     *         Button offsets\n     *\n     * @type      {number}\n     * @default   0\n     * @since     6.0.0\n     * @apioption rangeSelector.buttons.offsetMax\n     */\n    /**\n     * Additional range (in milliseconds) added to the start of the\n     * calculated time span.\n     *\n     * @sample {highstock} stock/rangeselector/min-max-offsets/\n     *         Button offsets\n     *\n     * @type      {number}\n     * @default   0\n     * @since     6.0.0\n     * @apioption rangeSelector.buttons.offsetMin\n     */\n    /**\n     * When buttons apply dataGrouping on a series, by default zooming\n     * in/out will deselect buttons and unset dataGrouping. Enable this\n     * option to keep buttons selected when extremes change.\n     *\n     * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n     *         Different preserveDataGrouping settings\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     6.1.2\n     * @apioption rangeSelector.buttons.preserveDataGrouping\n     */\n    /**\n     * A custom data grouping object for each button.\n     *\n     * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n     *\n     * @sample {highstock} stock/demo/rangeselector-datagrouping/\n     *         Data grouping by range selector buttons\n     *\n     * @type      {*}\n     * @extends   plotOptions.series.dataGrouping\n     * @apioption rangeSelector.buttons.dataGrouping\n     */\n    /**\n     * The text for the button itself.\n     *\n     * @type      {string}\n     * @apioption rangeSelector.buttons.text\n     */\n    /**\n     * Explanation for the button, shown as a tooltip on hover, and used by\n     * assistive technology.\n     *\n     * @type      {string}\n     * @apioption rangeSelector.buttons.title\n     */\n    /**\n     * Defined the time span for the button. Can be one of `millisecond`,\n     * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n     * and `all`.\n     *\n     * @type       {Highcharts.RangeSelectorButtonTypeValue}\n     * @apioption  rangeSelector.buttons.type\n     */\n    /**\n     * The space in pixels between the buttons in the range selector.\n     */\n    buttonSpacing: 5,\n    /**\n     * Whether to collapse the range selector buttons into a dropdown when\n     * there is not enough room to show everything in a single row, instead\n     * of dividing the range selector into multiple rows.\n     * Can be one of the following:\n     *  - `always`: Always collapse\n     *  - `responsive`: Only collapse when there is not enough room\n     *  - `never`: Never collapse\n     *\n     * @sample {highstock} stock/rangeselector/dropdown/\n     *         Dropdown option\n     *\n     * @validvalue [\"always\", \"responsive\", \"never\"]\n     * @since 9.0.0\n     */\n    dropdown: 'responsive',\n    /**\n     * Enable or disable the range selector. Default to `true` for stock\n     * charts, using the `stockChart` factory.\n     *\n     * @sample {highstock} stock/rangeselector/enabled/\n     *         Disable the range selector\n     *\n     * @type {boolean|undefined}\n     * @default {highstock} true\n     */\n    enabled: void 0,\n    /**\n     * The vertical alignment of the rangeselector box. Allowed properties\n     * are `top`, `middle`, `bottom`.\n     *\n     * @sample {highstock} stock/rangeselector/vertical-align-middle/\n     *         Middle\n     * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n     *         Bottom\n     *\n     * @type  {Highcharts.VerticalAlignValue}\n     * @since 6.0.0\n     */\n    verticalAlign: 'top',\n    /**\n     * A collection of attributes for the buttons. The object takes SVG\n     * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n     * a collection of CSS properties for the text.\n     *\n     * The object can also be extended with states, so you can set\n     * presentational options for `hover`, `select` or `disabled` button\n     * states.\n     *\n     * CSS styles for the text label.\n     *\n     * In styled mode, the buttons are styled by the\n     * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n     * different states.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type {Highcharts.SVGAttributes}\n     */\n    buttonTheme: {\n        /** @ignore */\n        width: 28,\n        /** @ignore */\n        height: 18,\n        /** @ignore */\n        padding: 2,\n        /** @ignore */\n        zIndex: 7 // #484, #852\n    },\n    /**\n     * When the rangeselector is floating, the plot area does not reserve\n     * space for it. This opens for positioning anywhere on the chart.\n     *\n     * @sample {highstock} stock/rangeselector/floating/\n     *         Placing the range selector between the plot area and the\n     *         navigator\n     *\n     * @since 6.0.0\n     */\n    floating: false,\n    /**\n     * The x offset of the range selector relative to its horizontal\n     * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n     *\n     * @since 6.0.0\n     */\n    x: 0,\n    /**\n     * The y offset of the range selector relative to its horizontal\n     * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n     *\n     * @since 6.0.0\n     */\n    y: 0,\n    /**\n     * Deprecated. The height of the range selector. Currently it is\n     * calculated dynamically.\n     *\n     * @deprecated\n     * @type  {number|undefined}\n     * @since 2.1.9\n     */\n    height: void 0, // Reserved space for buttons and input\n    /**\n     * The border color of the date input boxes.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type      {Highcharts.ColorString}\n     * @since     1.3.7\n     */\n    inputBoxBorderColor: 'none',\n    /**\n     * The pixel height of the date input boxes.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @since     1.3.7\n     */\n    inputBoxHeight: 17,\n    /**\n     * The pixel width of the date input boxes. When `undefined`, the width\n     * is fitted to the rendered content.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type   {number|undefined}\n     * @since  1.3.7\n     */\n    inputBoxWidth: void 0,\n    /**\n     * The date format in the input boxes when not selected for editing.\n     * Defaults to `%e %b %Y`.\n     *\n     * This is used to determine which type of input to show,\n     * `datetime-local`, `date` or `time` and falling back to `text` when\n     * the browser does not support the input type or the format contains\n     * milliseconds.\n     *\n     * @sample {highstock} stock/rangeselector/input-type/\n     *         Input types\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     */\n    inputDateFormat: '%[ebY]',\n    /**\n     * A custom callback function to parse values entered in the input boxes and\n     * return a valid JavaScript time as milliseconds since 1970. The first\n     * argument passed is the value to parse, second is a boolean indicating use\n     * of UTC time. The third is a reference to the `time` object. Time zone can\n     * be read from `time.timezone`.\n     *\n     * This will only get called for inputs of type `text`. Since v8.2.3, the\n     * input type is dynamically determined based on the granularity of the\n     * `inputDateFormat` and the browser support.\n     *\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n     * @since     1.3.3\n     */\n    inputDateParser: void 0,\n    /**\n     * The date format in the input boxes when they are selected for\n     * editing. This must be a format that is recognized by JavaScript\n     * Date.parse.\n     *\n     * This will only be used for inputs of type `text`. Since v8.2.3,\n     * the input type is dynamically determined based on the granularity\n     * of the `inputDateFormat` and the browser support.\n     *\n     * @sample {highstock} stock/rangeselector/input-format/\n     *         Milliseconds in the range selector\n     *\n     */\n    inputEditDateFormat: '%Y-%m-%d',\n    /**\n     * Enable or disable the date input boxes.\n     */\n    inputEnabled: true,\n    /**\n     * Positioning for the input boxes. Allowed properties are `align`,\n     *  `x` and `y`.\n     *\n     * @since 1.2.4\n     */\n    inputPosition: {\n        /**\n         * The alignment of the input box. Allowed properties are `left`,\n         * `center`, `right`.\n         *\n         * @sample {highstock} stock/rangeselector/input-button-opposite-alignment/\n         *         Opposite alignment\n         *\n         * @sample {highstock} stock/rangeselector/input-button-same-alignment/\n         *         Same alignment for buttons and input\n         *\n         * @type  {Highcharts.AlignValue}\n         * @since 6.0.0\n         */\n        align: 'right',\n        /**\n         * X offset of the input row.\n         */\n        x: 0,\n        /**\n         * Y offset of the input row.\n         */\n        y: 0\n    },\n    /**\n     * The space in pixels between the labels and the date input boxes in\n     * the range selector.\n     *\n     * @since 9.0.0\n     */\n    inputSpacing: 5,\n    /**\n     * The index of the button to appear pre-selected. If the selected range\n     * exceeds the total data range and the 'all' option is available,\n     * the 'all' option, showing the full range, is automatically selected.\n     *\n     * @type      {number}\n     */\n    selected: void 0,\n    /**\n     * Positioning for the button row.\n     *\n     * @since 1.2.4\n     */\n    buttonPosition: {\n        /**\n         * The alignment of the input box. Allowed properties are `left`,\n         * `center`, `right`.\n         *\n         * @sample {highstock} stock/rangeselector/input-button-opposite-alignment/\n         *         Opposite alignment\n         *\n         * @sample {highstock} stock/rangeselector/input-button-same-alignment/\n         *         Same alignment for buttons and input\n         *\n         * @type  {Highcharts.AlignValue}\n         * @since 6.0.0\n         */\n        align: 'left',\n        /**\n         * X offset of the button row.\n         */\n        x: 0,\n        /**\n         * Y offset of the button row.\n         */\n        y: 0\n    },\n    /**\n     * CSS for the HTML inputs in the range selector.\n     *\n     * In styled mode, the inputs are styled by the\n     * `.highcharts-range-input text` rule in SVG mode, and\n     * `input.highcharts-range-selector` when active.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type      {Highcharts.CSSObject}\n     * @apioption rangeSelector.inputStyle\n     */\n    inputStyle: {\n        /** @ignore */\n        color: \"#334eff\" /* Palette.highlightColor80 */,\n        /** @ignore */\n        cursor: 'pointer',\n        /** @ignore */\n        fontSize: '0.8em'\n    },\n    /**\n     * CSS styles for the labels - the Zoom, From and To texts.\n     *\n     * In styled mode, the labels are styled by the\n     * `.highcharts-range-label` class.\n     *\n     * @sample {highstock} stock/rangeselector/styling/\n     *         Styling the buttons and inputs\n     *\n     * @type {Highcharts.CSSObject}\n     */\n    labelStyle: {\n        /** @ignore */\n        color: \"#666666\" /* Palette.neutralColor60 */,\n        /** @ignore */\n        fontSize: '0.8em'\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst RangeSelectorDefaults = {\n    lang,\n    rangeSelector\n};\n/* harmony default export */ const RangeSelector_RangeSelectorDefaults = (RangeSelectorDefaults);\n\n;// ./code/es-modules/Stock/RangeSelector/RangeSelectorComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions: RangeSelectorComposition_defaultOptions } = (external_highcharts_src_js_default_default());\n\nconst { composed: RangeSelectorComposition_composed } = (external_highcharts_src_js_default_default());\n\n\nconst { addEvent: RangeSelectorComposition_addEvent, defined: RangeSelectorComposition_defined, extend: RangeSelectorComposition_extend, isNumber: RangeSelectorComposition_isNumber, merge: RangeSelectorComposition_merge, pick: RangeSelectorComposition_pick, pushUnique: RangeSelectorComposition_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst chartDestroyEvents = [];\n/* *\n *\n *  Variables\n *\n * */\nlet RangeSelectorConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get the axis min value based on the range option and the current max. For\n * stock charts this is extended via the {@link RangeSelector} so that if the\n * selected range is a multiple of months or years, it is compensated for\n * various month lengths.\n *\n * @private\n * @function Highcharts.Axis#minFromRange\n * @return {number|undefined}\n *         The new minimum value.\n */\nfunction axisMinFromRange() {\n    const rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n    // Get the true range from a start date\n    getTrueRange = function (base, count) {\n        const original = time.toParts(base), modified = original.slice();\n        if (type === 'year') {\n            modified[0] += count;\n        }\n        else {\n            modified[1] += count;\n        }\n        let d = time.makeTime.apply(time, modified);\n        const numbers = time.toParts(d);\n        // When subtracting a month still places us in the same month, like\n        // subtracting one month from March 31 places us on February 31,\n        // which translates to March 3 (#6537)\n        if (type === 'month' &&\n            original[1] === numbers[1] &&\n            Math.abs(count) === 1) {\n            modified[0] = original[0];\n            modified[1] = original[1];\n            // 0 is the last day of the previous month\n            modified[2] = 0;\n        }\n        d = time.makeTime.apply(time, modified);\n        return d - base;\n    };\n    let min, range;\n    if (RangeSelectorComposition_isNumber(rangeOptions)) {\n        min = max - rangeOptions;\n        range = rangeOptions;\n    }\n    else if (rangeOptions) {\n        min = max + getTrueRange(max, -(rangeOptions.count || 1));\n        // Let the fixedRange reflect initial settings (#5930)\n        if (this.chart) {\n            this.chart.setFixedRange(max - min);\n        }\n    }\n    const dataMin = RangeSelectorComposition_pick(this.dataMin, Number.MIN_VALUE);\n    if (!RangeSelectorComposition_isNumber(min)) {\n        min = dataMin;\n    }\n    if (min <= dataMin) {\n        min = dataMin;\n        if (typeof range === 'undefined') { // #4501\n            range = getTrueRange(min, rangeOptions.count);\n        }\n        this.newMax = Math.min(min + range, RangeSelectorComposition_pick(this.dataMax, Number.MAX_VALUE));\n    }\n    if (!RangeSelectorComposition_isNumber(max)) {\n        min = void 0;\n    }\n    else if (!RangeSelectorComposition_isNumber(rangeOptions) &&\n        rangeOptions &&\n        rangeOptions._offsetMin) {\n        min += rangeOptions._offsetMin;\n    }\n    return min;\n}\n/**\n * @private\n */\nfunction updateRangeSelectorButtons() {\n    this.rangeSelector?.redrawElements();\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_compose(AxisClass, ChartClass, RangeSelectorClass) {\n    RangeSelectorConstructor = RangeSelectorClass;\n    if (RangeSelectorComposition_pushUnique(RangeSelectorComposition_composed, 'RangeSelector')) {\n        const chartProto = ChartClass.prototype;\n        AxisClass.prototype.minFromRange = axisMinFromRange;\n        RangeSelectorComposition_addEvent(ChartClass, 'afterGetContainer', createRangeSelector);\n        RangeSelectorComposition_addEvent(ChartClass, 'beforeRender', RangeSelectorComposition_onChartBeforeRender);\n        RangeSelectorComposition_addEvent(ChartClass, 'destroy', onChartDestroy);\n        RangeSelectorComposition_addEvent(ChartClass, 'getMargins', onChartGetMargins);\n        RangeSelectorComposition_addEvent(ChartClass, 'redraw', redrawRangeSelector);\n        RangeSelectorComposition_addEvent(ChartClass, 'update', RangeSelectorComposition_onChartUpdate);\n        RangeSelectorComposition_addEvent(ChartClass, 'beforeRedraw', updateRangeSelectorButtons);\n        chartProto.callbacks.push(redrawRangeSelector);\n        RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions, { rangeSelector: RangeSelector_RangeSelectorDefaults.rangeSelector });\n        RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions.lang, RangeSelector_RangeSelectorDefaults.lang);\n    }\n}\n/**\n * Initialize rangeselector for stock charts\n * @private\n */\nfunction createRangeSelector() {\n    if (this.options.rangeSelector &&\n        this.options.rangeSelector.enabled) {\n        this.rangeSelector = new RangeSelectorConstructor(this);\n    }\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_onChartBeforeRender() {\n    const chart = this, rangeSelector = chart.rangeSelector;\n    if (rangeSelector) {\n        if (RangeSelectorComposition_isNumber(rangeSelector.deferredYTDClick)) {\n            rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n            delete rangeSelector.deferredYTDClick;\n        }\n        const verticalAlign = rangeSelector.options.verticalAlign;\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.extraBottomMargin = true;\n            }\n            else if (verticalAlign === 'top') {\n                this.extraTopMargin = true;\n            }\n        }\n    }\n}\nfunction redrawRangeSelector() {\n    const chart = this;\n    const rangeSelector = this.rangeSelector;\n    if (!rangeSelector) {\n        return;\n    }\n    let alignTo;\n    const extremes = chart.xAxis[0].getExtremes();\n    const legend = chart.legend;\n    const verticalAlign = (rangeSelector &&\n        rangeSelector.options.verticalAlign);\n    if (RangeSelectorComposition_isNumber(extremes.min)) {\n        rangeSelector.render(extremes.min, extremes.max);\n    }\n    // Re-align the legend so that it's below the rangeselector\n    if (legend.display &&\n        verticalAlign === 'top' &&\n        verticalAlign === legend.options.verticalAlign) {\n        // Create a new alignment box for the legend.\n        alignTo = RangeSelectorComposition_merge(chart.spacingBox);\n        if (legend.options.layout === 'vertical') {\n            alignTo.y = chart.plotTop;\n        }\n        else {\n            alignTo.y += rangeSelector.getHeight();\n        }\n        legend.group.placed = false; // Don't animate the alignment.\n        legend.align(alignTo);\n    }\n}\n/**\n * Remove resize/afterSetExtremes at chart destroy.\n * @private\n */\nfunction onChartDestroy() {\n    for (let i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n        const events = chartDestroyEvents[i];\n        if (events[0] === this) {\n            events[1].forEach((unbind) => unbind());\n            chartDestroyEvents.splice(i, 1);\n            return;\n        }\n    }\n}\n/**\n *\n */\nfunction onChartGetMargins() {\n    const rangeSelector = this.rangeSelector;\n    if (rangeSelector?.options?.enabled) {\n        const rangeSelectorHeight = rangeSelector.getHeight();\n        const verticalAlign = rangeSelector.options.verticalAlign;\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.marginBottom += rangeSelectorHeight;\n            }\n            else if (verticalAlign !== 'middle') {\n                this.plotTop += rangeSelectorHeight;\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction RangeSelectorComposition_onChartUpdate(e) {\n    const chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n    let rangeSelector = chart.rangeSelector;\n    if (optionsRangeSelector &&\n        optionsRangeSelector.enabled &&\n        !RangeSelectorComposition_defined(rangeSelector) &&\n        this.options.rangeSelector) {\n        this.options.rangeSelector.enabled = true;\n        this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n    }\n    this.extraBottomMargin = false;\n    this.extraTopMargin = false;\n    if (rangeSelector) {\n        const verticalAlign = (optionsRangeSelector &&\n            optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n        if (!rangeSelector.options.floating) {\n            if (verticalAlign === 'bottom') {\n                this.extraBottomMargin = true;\n            }\n            else if (verticalAlign !== 'middle') {\n                this.extraTopMargin = true;\n            }\n        }\n        if (this.extraBottomMargin !== extraBottomMarginWas ||\n            this.extraTopMargin !== extraTopMarginWas) {\n            this.isDirtyBox = true;\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst RangeSelectorComposition = {\n    compose: RangeSelectorComposition_compose\n};\n/* harmony default export */ const RangeSelector_RangeSelectorComposition = (RangeSelectorComposition);\n\n;// external [\"../highcharts.js\",\"default\",\"SVGElement\"]\nconst external_highcharts_src_js_default_SVGElement_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SVGElement;\nvar external_highcharts_src_js_default_SVGElement_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SVGElement_namespaceObject);\n;// external [\"../highcharts.js\",\"default\",\"Templating\"]\nconst external_highcharts_src_js_default_Templating_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Templating;\nvar external_highcharts_src_js_default_Templating_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Templating_namespaceObject);\n;// ./code/es-modules/Data/ColumnUtils.js\n/* *\n *\n *  (c) 2020-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Dawid Dragula\n *\n * */\n/**\n * Utility functions for columns that can be either arrays or typed arrays.\n * @private\n */\nvar ColumnUtils;\n(function (ColumnUtils) {\n    /* *\n    *\n    *  Declarations\n    *\n    * */\n    /* *\n    *\n    * Functions\n    *\n    * */\n    /**\n     * Sets the length of the column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} length\n     * New length of the column.\n     *\n     * @param {boolean} asSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `false`.\n     *\n     * @return {DataTable.Column}\n     * Modified column.\n     *\n     * @private\n     */\n    function setLength(column, length, asSubarray) {\n        if (Array.isArray(column)) {\n            column.length = length;\n            return column;\n        }\n        return column[asSubarray ? 'subarray' : 'slice'](0, length);\n    }\n    ColumnUtils.setLength = setLength;\n    /**\n     * Splices a column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} start\n     * Index at which to start changing the array.\n     *\n     * @param {number} deleteCount\n     * An integer indicating the number of old array elements to remove.\n     *\n     * @param {boolean} removedAsSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `true`.\n     *\n     * @param {Array<number>|TypedArray} items\n     * The elements to add to the array, beginning at the start index. If you\n     * don't specify any elements, `splice()` will only remove elements from the\n     * array.\n     *\n     * @return {SpliceResult}\n     * Object containing removed elements and the modified column.\n     *\n     * @private\n     */\n    function splice(column, start, deleteCount, removedAsSubarray, items = []) {\n        if (Array.isArray(column)) {\n            if (!Array.isArray(items)) {\n                items = Array.from(items);\n            }\n            return {\n                removed: column.splice(start, deleteCount, ...items),\n                array: column\n            };\n        }\n        const Constructor = Object.getPrototypeOf(column)\n            .constructor;\n        const removed = column[removedAsSubarray ? 'subarray' : 'slice'](start, start + deleteCount);\n        const newLength = column.length - deleteCount + items.length;\n        const result = new Constructor(newLength);\n        result.set(column.subarray(0, start), 0);\n        result.set(items, start);\n        result.set(column.subarray(start + deleteCount), start + items.length);\n        return {\n            removed: removed,\n            array: result\n        };\n    }\n    ColumnUtils.splice = splice;\n})(ColumnUtils || (ColumnUtils = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Data_ColumnUtils = (ColumnUtils);\n\n;// ./code/es-modules/Data/DataTableCore.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - GÃ¸ran Slettemark\n *  - Torstein HÃ¸nsi\n *\n * */\n\n\nconst { setLength, splice } = Data_ColumnUtils;\n\nconst { fireEvent: DataTableCore_fireEvent, objectEach: DataTableCore_objectEach, uniqueKey } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class to manage columns and rows in a table structure. It provides methods\n * to add, remove, and manipulate columns and rows, as well as to retrieve data\n * from specific cells.\n *\n * @class\n * @name Highcharts.DataTable\n *\n * @param {Highcharts.DataTableOptions} [options]\n * Options to initialize the new DataTable instance.\n */\nclass DataTableCore {\n    /**\n     * Constructs an instance of the DataTable class.\n     *\n     * @example\n     * const dataTable = new Highcharts.DataTableCore({\n     *   columns: {\n     *     year: [2020, 2021, 2022, 2023],\n     *     cost: [11, 13, 12, 14],\n     *     revenue: [12, 15, 14, 18]\n     *   }\n     * });\n\n     *\n     * @param {Highcharts.DataTableOptions} [options]\n     * Options to initialize the new DataTable instance.\n     */\n    constructor(options = {}) {\n        /**\n         * Whether the ID was automatic generated or given in the constructor.\n         *\n         * @name Highcharts.DataTable#autoId\n         * @type {boolean}\n         */\n        this.autoId = !options.id;\n        this.columns = {};\n        /**\n         * ID of the table for identification purposes.\n         *\n         * @name Highcharts.DataTable#id\n         * @type {string}\n         */\n        this.id = (options.id || uniqueKey());\n        this.modified = this;\n        this.rowCount = 0;\n        this.versionTag = uniqueKey();\n        let rowCount = 0;\n        DataTableCore_objectEach(options.columns || {}, (column, columnName) => {\n            this.columns[columnName] = column.slice();\n            rowCount = Math.max(rowCount, column.length);\n        });\n        this.applyRowCount(rowCount);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Applies a row count to the table by setting the `rowCount` property and\n     * adjusting the length of all columns.\n     *\n     * @private\n     * @param {number} rowCount The new row count.\n     */\n    applyRowCount(rowCount) {\n        this.rowCount = rowCount;\n        DataTableCore_objectEach(this.columns, (column, columnName) => {\n            if (column.length !== rowCount) {\n                this.columns[columnName] = setLength(column, rowCount);\n            }\n        });\n    }\n    /**\n     * Delete rows. Simplified version of the full\n     * `DataTable.deleteRows` method.\n     *\n     * @param {number} rowIndex\n     * The start row index\n     *\n     * @param {number} [rowCount=1]\n     * The number of rows to delete\n     *\n     * @return {void}\n     *\n     * @emits #afterDeleteRows\n     */\n    deleteRows(rowIndex, rowCount = 1) {\n        if (rowCount > 0 && rowIndex < this.rowCount) {\n            let length = 0;\n            DataTableCore_objectEach(this.columns, (column, columnName) => {\n                this.columns[columnName] =\n                    splice(column, rowIndex, rowCount).array;\n                length = column.length;\n            });\n            this.rowCount = length;\n        }\n        DataTableCore_fireEvent(this, 'afterDeleteRows', { rowIndex, rowCount });\n        this.versionTag = uniqueKey();\n    }\n    /**\n     * Fetches the given column by the canonical column name. Simplified version\n     * of the full `DataTable.getRow` method, always returning by reference.\n     *\n     * @param {string} columnName\n     * Name of the column to get.\n     *\n     * @return {Highcharts.DataTableColumn|undefined}\n     * A copy of the column, or `undefined` if not found.\n     */\n    getColumn(columnName, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        return this.columns[columnName];\n    }\n    /**\n     * Retrieves all or the given columns. Simplified version of the full\n     * `DataTable.getColumns` method, always returning by reference.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Highcharts.DataTableColumnCollection}\n     * Collection of columns. If a requested column was not found, it is\n     * `undefined`.\n     */\n    getColumns(columnNames, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        return (columnNames || Object.keys(this.columns)).reduce((columns, columnName) => {\n            columns[columnName] = this.columns[columnName];\n            return columns;\n        }, {});\n    }\n    /**\n     * Retrieves the row at a given index.\n     *\n     * @param {number} rowIndex\n     * Row index to retrieve. First row has index 0.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Record<string, number|string|undefined>|undefined}\n     * Returns the row values, or `undefined` if not found.\n     */\n    getRow(rowIndex, columnNames) {\n        return (columnNames || Object.keys(this.columns)).map((key) => this.columns[key]?.[rowIndex]);\n    }\n    /**\n     * Sets cell values for a column. Will insert a new column, if not found.\n     *\n     * @param {string} columnName\n     * Column name to set.\n     *\n     * @param {Highcharts.DataTableColumn} [column]\n     * Values to set in the column.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. (Default: 0)\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    setColumn(columnName, column = [], rowIndex = 0, eventDetail) {\n        this.setColumns({ [columnName]: column }, rowIndex, eventDetail);\n    }\n    /**\n     * Sets cell values for multiple columns. Will insert new columns, if not\n     * found. Simplified version of the full `DataTableCore.setColumns`, limited\n     * to full replacement of the columns (undefined `rowIndex`).\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. Ignored in the `DataTableCore`, as it\n     * always replaces the full column.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    setColumns(columns, rowIndex, eventDetail) {\n        let rowCount = this.rowCount;\n        DataTableCore_objectEach(columns, (column, columnName) => {\n            this.columns[columnName] = column.slice();\n            rowCount = column.length;\n        });\n        this.applyRowCount(rowCount);\n        if (!eventDetail?.silent) {\n            DataTableCore_fireEvent(this, 'afterSetColumns');\n            this.versionTag = uniqueKey();\n        }\n    }\n    /**\n     * Sets cell values of a row. Will insert a new row if no index was\n     * provided, or if the index is higher than the total number of table rows.\n     * A simplified version of the full `DateTable.setRow`, limited to objects.\n     *\n     * @param {Record<string, number|string|undefined>} row\n     * Cell values to set.\n     *\n     * @param {number} [rowIndex]\n     * Index of the row to set. Leave `undefined` to add as a new row.\n     *\n     * @param {boolean} [insert]\n     * Whether to insert the row at the given index, or to overwrite the row.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #afterSetRows\n     */\n    setRow(row, rowIndex = this.rowCount, insert, eventDetail) {\n        const { columns } = this, indexRowCount = insert ? this.rowCount + 1 : rowIndex + 1;\n        DataTableCore_objectEach(row, (cellValue, columnName) => {\n            let column = columns[columnName] ||\n                eventDetail?.addColumns !== false && new Array(indexRowCount);\n            if (column) {\n                if (insert) {\n                    column = splice(column, rowIndex, 0, true, [cellValue]).array;\n                }\n                else {\n                    column[rowIndex] = cellValue;\n                }\n                columns[columnName] = column;\n            }\n        });\n        if (indexRowCount > this.rowCount) {\n            this.applyRowCount(indexRowCount);\n        }\n        if (!eventDetail?.silent) {\n            DataTableCore_fireEvent(this, 'afterSetRows');\n            this.versionTag = uniqueKey();\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Data_DataTableCore = (DataTableCore);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * A typed array.\n * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} Highcharts.TypedArray\n * //**\n * A column of values in a data table.\n * @typedef {Array<boolean|null|number|string|undefined>|Highcharts.TypedArray} Highcharts.DataTableColumn\n */ /**\n* A collection of data table columns defined by a object where the key is the\n* column name and the value is an array of the column values.\n* @typedef {Record<string, Highcharts.DataTableColumn>} Highcharts.DataTableColumnCollection\n*/\n/**\n * Options for the `DataTable` or `DataTableCore` classes.\n * @interface Highcharts.DataTableOptions\n */ /**\n* The column options for the data table. The columns are defined by an object\n* where the key is the column ID and the value is an array of the column\n* values.\n*\n* @name Highcharts.DataTableOptions.columns\n* @type {Highcharts.DataTableColumnCollection|undefined}\n*/ /**\n* Custom ID to identify the new DataTable instance.\n*\n* @name Highcharts.DataTableOptions.id\n* @type {string|undefined}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Axis/OrdinalAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { addEvent: OrdinalAxis_addEvent, correctFloat: OrdinalAxis_correctFloat, css, defined: OrdinalAxis_defined, error: OrdinalAxis_error, isNumber: OrdinalAxis_isNumber, pick: OrdinalAxis_pick, timeUnits, isString } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Extends the axis with ordinal support.\n * @private\n */\nvar OrdinalAxis;\n(function (OrdinalAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Extends the axis with ordinal support.\n     *\n     * @private\n     *\n     * @param AxisClass\n     * Axis class to extend.\n     *\n     * @param ChartClass\n     * Chart class to use.\n     *\n     * @param SeriesClass\n     * Series class to use.\n     */\n    function compose(AxisClass, SeriesClass, ChartClass) {\n        const axisProto = AxisClass.prototype;\n        if (!axisProto.ordinal2lin) {\n            axisProto.getTimeTicks = getTimeTicks;\n            axisProto.index2val = index2val;\n            axisProto.lin2val = lin2val;\n            axisProto.val2lin = val2lin;\n            // Record this to prevent overwriting by broken-axis module (#5979)\n            axisProto.ordinal2lin = axisProto.val2lin;\n            OrdinalAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            OrdinalAxis_addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n            OrdinalAxis_addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n            OrdinalAxis_addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n            OrdinalAxis_addEvent(ChartClass, 'pan', onChartPan);\n            OrdinalAxis_addEvent(ChartClass, 'touchpan', onChartPan);\n            OrdinalAxis_addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n        }\n        return AxisClass;\n    }\n    OrdinalAxis.compose = compose;\n    /**\n     * In an ordinal axis, there might be areas with dense concentrations of\n     * points, then large gaps between some. Creating equally distributed\n     * ticks over this entire range may lead to a huge number of ticks that\n     * will later be removed. So instead, break the positions up in\n     * segments, find the tick positions for each segment then concatenize\n     * them. This method is used from both data grouping logic and X axis\n     * tick position logic.\n     * @private\n     */\n    function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions = [], closestDistance = 0, findHigherRanks) {\n        const higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n        // Record all the start positions of a segment, to use when\n        // deciding what's a gap in the data.\n        segmentStarts = [];\n        let end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n        // The positions are not always defined, for example for ordinal\n        // positions when data has regular interval (#1557, #2090)\n        if ((!this.options.ordinal && !this.options.breaks) ||\n            !positions ||\n            positions.length < 3 ||\n            typeof min === 'undefined') {\n            return time.getTimeTicks.apply(time, arguments);\n        }\n        // Analyze the positions array to split it into segments on gaps\n        // larger than 5 times the closest distance. The closest distance is\n        // already found at this point, so we reuse that instead of\n        // computing it again.\n        const posLength = positions.length;\n        for (end = 0; end < posLength; end++) {\n            outsideMax = end && positions[end - 1] > max;\n            if (positions[end] < min) { // Set the last position before min\n                start = end;\n            }\n            if (end === posLength - 1 ||\n                positions[end + 1] - positions[end] > closestDistance * 5 ||\n                outsideMax) {\n                // For each segment, calculate the tick positions from the\n                // getTimeTicks utility function. The interval will be the\n                // same regardless of how long the segment is.\n                if (positions[end] > lastGroupPosition) { // #1475\n                    segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                    // Prevent duplicate groups, for example for multiple\n                    // segments within one larger time frame (#1475)\n                    while (segmentPositions.length &&\n                        segmentPositions[0] <= lastGroupPosition) {\n                        segmentPositions.shift();\n                    }\n                    if (segmentPositions.length) {\n                        lastGroupPosition =\n                            segmentPositions[segmentPositions.length - 1];\n                    }\n                    segmentStarts.push(groupPositions.length);\n                    groupPositions = groupPositions.concat(segmentPositions);\n                }\n                // Set start of next segment\n                start = end + 1;\n            }\n            if (outsideMax) {\n                break;\n            }\n        }\n        // Get the grouping info from the last of the segments. The info is\n        // the same for all segments.\n        if (segmentPositions) {\n            info = segmentPositions.info;\n            // Optionally identify ticks with higher rank, for example\n            // when the ticks have crossed midnight.\n            if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                end = groupPositions.length - 1;\n                // Compare points two by two\n                for (start = 1; start < end; start++) {\n                    if (time.dateFormat('%d', groupPositions[start]) !==\n                        time.dateFormat('%d', groupPositions[start - 1])) {\n                        higherRanks[groupPositions[start]] = 'day';\n                        hasCrossedHigherRank = true;\n                    }\n                }\n                // If the complete array has crossed midnight, we want\n                // to mark the first positions also as higher rank\n                if (hasCrossedHigherRank) {\n                    higherRanks[groupPositions[0]] = 'day';\n                }\n                info.higherRanks = higherRanks;\n            }\n            // Save the info\n            info.segmentStarts = segmentStarts;\n            groupPositions.info = info;\n        }\n        else {\n            OrdinalAxis_error(12, false, this.chart);\n        }\n        // Don't show ticks within a gap in the ordinal axis, where the\n        // space between two points is greater than a portion of the tick\n        // pixel interval\n        if (findHigherRanks && OrdinalAxis_defined(tickPixelIntervalOption)) {\n            const length = groupPositions.length, translatedArr = [], distances = [];\n            let itemToRemove, translated, lastTranslated, medianDistance, distance, i = length;\n            // Find median pixel distance in order to keep a reasonably even\n            // distance between ticks (#748)\n            while (i--) {\n                translated = this.translate(groupPositions[i]);\n                if (lastTranslated) {\n                    distances[i] = lastTranslated - translated;\n                }\n                translatedArr[i] = lastTranslated = translated;\n            }\n            distances.sort((a, b) => a - b);\n            medianDistance = distances[Math.floor(distances.length / 2)];\n            if (medianDistance < tickPixelIntervalOption * 0.6) {\n                medianDistance = null;\n            }\n            // Now loop over again and remove ticks where needed\n            i = groupPositions[length - 1] > max ? length - 1 : length; // #817\n            lastTranslated = void 0;\n            while (i--) {\n                translated = translatedArr[i];\n                distance = Math.abs(lastTranslated - translated);\n                // #4175 - when axis is reversed, the distance, is negative but\n                // tickPixelIntervalOption positive, so we need to compare the\n                // same values\n                // Remove ticks that are closer than 0.6 times the pixel\n                // interval from the one to the right, but not if it is close to\n                // the median distance (#748).\n                if (lastTranslated &&\n                    distance < tickPixelIntervalOption * 0.8 &&\n                    (medianDistance === null || distance < medianDistance * 0.8)) {\n                    // Is this a higher ranked position with a normal\n                    // position to the right?\n                    if (higherRanks[groupPositions[i]] &&\n                        !higherRanks[groupPositions[i + 1]]) {\n                        // Yes: remove the lower ranked neighbour to the\n                        // right\n                        itemToRemove = i + 1;\n                        lastTranslated = translated; // #709\n                    }\n                    else {\n                        // No: remove this one\n                        itemToRemove = i;\n                    }\n                    groupPositions.splice(itemToRemove, 1);\n                }\n                else {\n                    lastTranslated = translated;\n                }\n            }\n        }\n        return groupPositions;\n    }\n    /**\n     * Get axis position of given index of the extended ordinal positions.\n     * Used only when panning an ordinal axis.\n     *\n     * @private\n     * @function Highcharts.Axis#index2val\n     * @param {number} index\n     * The index value of searched point\n     */\n    function index2val(index) {\n        const axis = this, ordinal = axis.ordinal, \n        // Context could be changed to extendedOrdinalPositions.\n        ordinalPositions = ordinal.positions;\n        // The visible range contains only equally spaced values.\n        if (!ordinalPositions) {\n            return index;\n        }\n        let i = ordinalPositions.length - 1, distance;\n        if (index < 0) { // Out of range, in effect panning to the left\n            index = ordinalPositions[0];\n        }\n        else if (index > i) { // Out of range, panning to the right\n            index = ordinalPositions[i];\n        }\n        else { // Split it up\n            i = Math.floor(index);\n            distance = index - i; // The decimal\n        }\n        if (typeof distance !== 'undefined' &&\n            typeof ordinalPositions[i] !== 'undefined') {\n            return ordinalPositions[i] + (distance ?\n                distance *\n                    (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                0);\n        }\n        return index;\n    }\n    /**\n     * Translate from linear (internal) to axis value.\n     *\n     * @private\n     * @function Highcharts.Axis#lin2val\n     * @param {number} val\n     * The linear abstracted value.\n     */\n    function lin2val(val) {\n        const axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n        // Always use extendedPositions (#19816)\n        const positions = ordinal.getExtendedPositions();\n        // In some cases (especially in early stages of the chart creation) the\n        // getExtendedPositions might return undefined.\n        if (positions?.length) {\n            // Convert back from modivied value to pixels. // #15970\n            const pixelVal = OrdinalAxis_correctFloat((val - localMin) * localA +\n                axis.minPixelPadding), index = OrdinalAxis_correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = OrdinalAxis_correctFloat(index % 1);\n            // Check if the index is inside position array. If true,\n            // read/approximate value for that exact index.\n            if (index >= 0 && index <= positions.length - 1) {\n                const leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                return positions[Math.floor(index)] + mantissa * distance;\n            }\n        }\n        // If the value is outside positions array, return initial value\n        return val; // #16784\n    }\n    /**\n     * Internal function to calculate the precise index in ordinalPositions\n     * array.\n     * @private\n     */\n    function getIndexInArray(ordinalPositions, val) {\n        const index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n        if (ordinalPositions[index] === val) {\n            return index;\n        }\n        const percent = (val - ordinalPositions[index]) /\n            (ordinalPositions[index + 1] - ordinalPositions[index]);\n        return index + percent;\n    }\n    /**\n    * @private\n    */\n    function onAxisAfterInit() {\n        const axis = this;\n        if (!axis.ordinal) {\n            axis.ordinal = new OrdinalAxis.Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisFoundExtremes() {\n        const axis = this, { eventArgs, options } = axis;\n        if (axis.isXAxis &&\n            OrdinalAxis_defined(options.overscroll) &&\n            options.overscroll !== 0 &&\n            OrdinalAxis_isNumber(axis.max) &&\n            OrdinalAxis_isNumber(axis.min)) {\n            if (axis.options.ordinal && !axis.ordinal.originalOrdinalRange) {\n                // Calculate the original ordinal range\n                axis.ordinal.getExtendedPositions(false);\n            }\n            if (axis.max === axis.dataMax &&\n                (\n                // Panning is an exception. We don't want to apply\n                // overscroll when panning over the dataMax\n                eventArgs?.trigger !== 'pan' ||\n                    axis.isInternal) &&\n                // Scrollbar buttons are the other execption\n                eventArgs?.trigger !== 'navigator') {\n                const overscroll = axis.ordinal.convertOverscroll(options.overscroll);\n                axis.max += overscroll;\n                // Live data and buttons require translation for the min:\n                if (!axis.isInternal &&\n                    OrdinalAxis_defined(axis.userMin) &&\n                    eventArgs?.trigger !== 'mousewheel') {\n                    axis.min += overscroll;\n                }\n            }\n        }\n    }\n    /**\n     * For ordinal axis, that loads data async, redraw axis after data is\n     * loaded. If we don't do that, axis will have the same extremes as\n     * previously, but ordinal positions won't be calculated. See #10290\n     * @private\n     */\n    function onAxisAfterSetScale() {\n        const axis = this;\n        if (axis.horiz && !axis.isDirty) {\n            axis.isDirty = axis.isOrdinal &&\n                axis.chart.navigator &&\n                !axis.chart.navigator.adaptToUpdatedData;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInitialAxisTranslation() {\n        const axis = this;\n        if (axis.ordinal) {\n            axis.ordinal.beforeSetTickPositions();\n            axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n        }\n    }\n    /**\n     * Extending the Chart.pan method for ordinal axes\n     * @private\n     */\n    function onChartPan(e) {\n        const chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.ordinal.convertOverscroll(xAxis.options.overscroll), chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n        let runBase = false;\n        if (panning?.type !== 'y' &&\n            xAxis.options.ordinal &&\n            xAxis.series.length &&\n            // On touch devices, let default function handle the pinching\n            (!e.touches || e.touches.length <= 1)) {\n            const mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMin = extremes.dataMin, dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                xAxis.ordinal?.overscrollPointsRange), pointPixelWidth = (xAxis.translationSlope *\n                (xAxis.ordinal.slope || closestPointRange)), \n            // How many ordinal units did we move?\n            movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n            // Get index of all the chart's points\n            extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                ordinal: {\n                    positions: extendedOrdinalPositions,\n                    extendedOrdinalPositions: extendedOrdinalPositions\n                }\n            }, index2val = xAxis.index2val, val2lin = xAxis.val2lin;\n            let trimmedRange, ordinalPositions;\n            // Make sure panning to the edges does not decrease the zoomed range\n            if ((min <= dataMin && movedUnits <= 0) ||\n                (max >= dataMax + overscroll && movedUnits >= 0)) {\n                e.preventDefault();\n                return;\n            }\n            // We have an ordinal axis, but the data is equally spaced\n            if (!extendedAxis.ordinal.positions) {\n                runBase = true;\n            }\n            else if (Math.abs(movedUnits) > 1) {\n                // Remove active points for shared tooltip\n                if (hoverPoints) {\n                    hoverPoints.forEach(function (point) {\n                        point.setState();\n                    });\n                }\n                // In grouped data series, the last ordinal position represents\n                // the grouped data, which is to the left of the real data max.\n                // If we don't compensate for this, we will be allowed to pan\n                // grouped data series passed the right of the plot area.\n                ordinalPositions = extendedAxis.ordinal.positions;\n                if (overscroll) { // #21606\n                    ordinalPositions = extendedAxis.ordinal.positions =\n                        ordinalPositions.concat(xAxis.ordinal.getOverscrollPositions());\n                }\n                if (dataMax > ordinalPositions[ordinalPositions.length - 1]) {\n                    ordinalPositions.push(dataMax);\n                }\n                // Get the new min and max values by getting the ordinal index\n                // for the current extreme, then add the moved units and\n                // translate back to values. This happens on the extended\n                // ordinal positions if the new position is out of range, else\n                // it happens on the current x axis which is smaller and faster.\n                chart.setFixedRange(max - min);\n                trimmedRange = xAxis.navigatorAxis\n                    .toFixedRange(void 0, void 0, index2val.apply(extendedAxis, [\n                    val2lin.apply(extendedAxis, [min, true]) +\n                        movedUnits\n                ]), index2val.apply(extendedAxis, [\n                    val2lin.apply(extendedAxis, [max, true]) +\n                        movedUnits\n                ]));\n                // Apply it if it is within the available data range\n                if (trimmedRange.min >= Math.min(ordinalPositions[0], min) &&\n                    trimmedRange.max <= Math.max(ordinalPositions[ordinalPositions.length - 1], max) + overscroll) {\n                    xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                }\n                chart.mouseDownX = chartX; // Set new reference for next run\n                css(chart.container, { cursor: 'move' });\n            }\n        }\n        else {\n            runBase = true;\n        }\n        // Revert to the linear chart.pan version\n        if (runBase || (panning && /y/.test(panning.type))) {\n            if (overscroll && OrdinalAxis_isNumber(xAxis.dataMax)) {\n                xAxis.max = xAxis.dataMax + overscroll;\n            }\n        }\n        else {\n            e.preventDefault();\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesUpdatedData() {\n        const xAxis = this.xAxis;\n        // Destroy the extended ordinal index on updated data\n        // and destroy extendedOrdinalPositions, #16055.\n        if (xAxis?.options.ordinal) {\n            delete xAxis.ordinal.index;\n            delete xAxis.ordinal.originalOrdinalRange;\n        }\n    }\n    /**\n     * Translate from a linear axis value to the corresponding ordinal axis\n     * position. If there are no gaps in the ordinal axis this will be the\n     * same. The translated value is the value that the point would have if\n     * the axis was linear, using the same min and max.\n     *\n     * @private\n     * @function Highcharts.Axis#val2lin\n     * @param {number} val\n     * The axis value.\n     * @param {boolean} [toIndex]\n     * Whether to return the index in the ordinalPositions or the new value.\n     */\n    function val2lin(val, toIndex) {\n        const axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n        let slope = ordinal.slope, extendedOrdinalPositions;\n        if (!ordinalPositions) {\n            return val;\n        }\n        const ordinalLength = ordinalPositions.length;\n        let ordinalIndex;\n        // If the searched value is inside visible plotArea, ivastigate the\n        // value basing on ordinalPositions.\n        if (ordinalPositions[0] <= val &&\n            ordinalPositions[ordinalLength - 1] >= val) {\n            ordinalIndex = getIndexInArray(ordinalPositions, val);\n            // Final return value is based on ordinalIndex\n        }\n        else {\n            extendedOrdinalPositions = ordinal.getExtendedPositions?.();\n            if (!extendedOrdinalPositions?.length) {\n                return val;\n            }\n            const length = extendedOrdinalPositions.length;\n            if (!slope) {\n                slope =\n                    (extendedOrdinalPositions[length - 1] -\n                        extendedOrdinalPositions[0]) /\n                        length;\n            }\n            // `originalPointReference` is equal to the index of first point of\n            // ordinalPositions in extendedOrdinalPositions.\n            const originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n            // If the searched value is outside the visiblePlotArea,\n            // check if it is inside extendedOrdinalPositions.\n            if (val >= extendedOrdinalPositions[0] &&\n                val <=\n                    extendedOrdinalPositions[length - 1]) {\n                // Return Value\n                ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                    originalPositionsReference;\n            }\n            else {\n                if (!toIndex) {\n                    // If the value is outside positions array,\n                    // return initial value, #16784\n                    return val;\n                }\n                // Since ordinal.slope is the average distance between 2\n                // points on visible plotArea, this can be used to calculate\n                // the approximate position of the point, which is outside\n                // the extendedOrdinalPositions.\n                if (val < extendedOrdinalPositions[0]) {\n                    const diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                    ordinalIndex =\n                        -originalPositionsReference -\n                            approximateIndexOffset;\n                }\n                else {\n                    const diff = val -\n                        extendedOrdinalPositions[length - 1], approximateIndexOffset = diff / slope;\n                    ordinalIndex =\n                        approximateIndexOffset +\n                            length -\n                            originalPositionsReference;\n                }\n            }\n        }\n        return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n            ordinal.offset;\n    }\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    /**\n     * @private\n     */\n    class Additions {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        /**\n         * @private\n         */\n        constructor(axis) {\n            this.index = {};\n            this.axis = axis;\n        }\n        /* *\n        *\n        *  Functions\n        *\n        * */\n        /**\n         * Calculate the ordinal positions before tick positions are calculated.\n         * @private\n         */\n        beforeSetTickPositions() {\n            const axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = axis.brokenAxis?.hasBreaks, isOrdinal = axis.options.ordinal, overscroll = axis.options.overscroll &&\n                axis.ordinal.convertOverscroll(axis.options.overscroll) ||\n                0;\n            let len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n            // Apply the ordinal logic\n            if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                let distanceBetweenPoint = 0;\n                axis.series.forEach(function (series, i) {\n                    const xData = series.getColumn('x', true);\n                    uniqueOrdinalPositions = [];\n                    // For an axis with multiple series, check if the distance\n                    // between points is identical throughout all series.\n                    if (i > 0 &&\n                        series.options.id !== 'highcharts-navigator-series' &&\n                        xData.length > 1) {\n                        adjustOrdinalExtremesPoints = (distanceBetweenPoint !== xData[1] - xData[0]);\n                    }\n                    distanceBetweenPoint = xData[1] - xData[0];\n                    if (series.boosted) {\n                        isBoosted = series.boosted;\n                    }\n                    if (series.reserveSpace() &&\n                        (series\n                            .takeOrdinalPosition !== false || hasBreaks)) {\n                        // Concatenate the processed X data into the existing\n                        // positions, or the empty array\n                        ordinalPositions = ordinalPositions.concat(xData);\n                        len = ordinalPositions.length;\n                        // Remove duplicates (#1588)\n                        ordinalPositions.sort(function (a, b) {\n                            // Without a custom function it is sorted as strings\n                            return a - b;\n                        });\n                        overscrollPointsRange = Math.min(overscrollPointsRange, OrdinalAxis_pick(\n                        // Check for a single-point series:\n                        series.closestPointRange, overscrollPointsRange));\n                        if (len) {\n                            i = 0;\n                            while (i < len - 1) {\n                                if (ordinalPositions[i] !==\n                                    ordinalPositions[i + 1]) {\n                                    uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                }\n                                i++;\n                            }\n                            // Check first item:\n                            if (uniqueOrdinalPositions[0] !==\n                                ordinalPositions[0]) {\n                                uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                            }\n                            ordinalPositions = uniqueOrdinalPositions;\n                        }\n                    }\n                });\n                if (!axis.ordinal.originalOrdinalRange) {\n                    // Calculate current originalOrdinalRange\n                    axis.ordinal.originalOrdinalRange =\n                        (ordinalPositions.length - 1) * overscrollPointsRange;\n                }\n                // If the distance between points is not identical throughout\n                // all series, remove the first and last ordinal position to\n                // avoid enabling ordinal logic when it is not needed, #17405.\n                // Only for boosted series because changes are negligible.\n                if (adjustOrdinalExtremesPoints && isBoosted) {\n                    ordinalPositions.pop();\n                    ordinalPositions.shift();\n                }\n                // Cache the length\n                len = ordinalPositions.length;\n                // Check if we really need the overhead of mapping axis data\n                // against the ordinal positions. If the series consist of\n                // evenly spaced data any way, we don't need any ordinal logic.\n                if (len > 2) { // Two points have equal distance by default\n                    dist = ordinalPositions[1] - ordinalPositions[0];\n                    i = len - 1;\n                    while (i-- && !useOrdinal) {\n                        if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                            dist) {\n                            useOrdinal = true;\n                        }\n                    }\n                    // When zooming in on a week, prevent axis padding for\n                    // weekends even though the data within the week is evenly\n                    // spaced.\n                    if (!axis.options.keepOrdinalPadding &&\n                        (ordinalPositions[0] - min > dist ||\n                            max - overscroll - ordinalPositions[len - 1] >\n                                dist)) {\n                        useOrdinal = true;\n                    }\n                }\n                else if (axis.options.overscroll) {\n                    if (len === 2) {\n                        // Exactly two points, distance for overscroll is fixed:\n                        overscrollPointsRange =\n                            ordinalPositions[1] - ordinalPositions[0];\n                    }\n                    else if (len === 1) {\n                        // We have just one point, closest distance is unknown.\n                        // Assume then it is last point and overscrolled range:\n                        overscrollPointsRange = overscroll;\n                        ordinalPositions = [\n                            ordinalPositions[0],\n                            ordinalPositions[0] + overscrollPointsRange\n                        ];\n                    }\n                    else {\n                        // In case of zooming in on overscrolled range, stick to\n                        // the old range:\n                        overscrollPointsRange = ordinal.overscrollPointsRange;\n                    }\n                }\n                // Record the slope and offset to compute the linear values from\n                // the array index. Since the ordinal positions may exceed the\n                // current range, get the start and end positions within it\n                // (#719, #665b)\n                if (useOrdinal || axis.forceOrdinal) {\n                    if (axis.options.overscroll) {\n                        ordinal.overscrollPointsRange = overscrollPointsRange;\n                        ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                    }\n                    // Register\n                    ordinal.positions = ordinalPositions;\n                    // This relies on the ordinalPositions being set. Use\n                    // Math.max and Math.min to prevent padding on either sides\n                    // of the data.\n                    minIndex = axis.ordinal2lin(// #5979\n                    Math.max(min, ordinalPositions[0]), true);\n                    maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                    // Set the slope and offset of the values compared to the\n                    // indices in the ordinal positions.\n                    ordinal.slope = slope =\n                        (max - min) / (maxIndex - minIndex);\n                    ordinal.offset = min - (minIndex * slope);\n                }\n                else {\n                    ordinal.overscrollPointsRange = OrdinalAxis_pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                    ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                        void 0;\n                }\n            }\n            axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n            ordinal.groupIntervalFactor = null; // Reset for next run\n        }\n        /**\n         * Faster way of using the Array.indexOf method.\n         * Works for sorted arrays only with unique values.\n         *\n         * @param {Array} sortedArray\n         *        The sorted array inside which we are looking for.\n         * @param {number} key\n         *        The key to being found.\n         * @param {boolean} indirectSearch\n         *        In case of lack of the point in the array, should return\n         *        value be equal to -1 or the closest smaller index.\n         *  @private\n         */\n        static findIndexOf(sortedArray, key, indirectSearch) {\n            let start = 0, end = sortedArray.length - 1, middle;\n            while (start < end) {\n                middle = Math.ceil((start + end) / 2);\n                // Key found as the middle element.\n                if (sortedArray[middle] <= key) {\n                    // Continue searching to the right.\n                    start = middle;\n                }\n                else {\n                    // Continue searching to the left.\n                    end = middle - 1;\n                }\n            }\n            if (sortedArray[start] === key) {\n                return start;\n            }\n            // Key could not be found.\n            return !indirectSearch ? -1 : start;\n        }\n        /**\n         * Get the ordinal positions for the entire data set. This is necessary\n         * in chart panning because we need to find out what points or data\n         * groups are available outside the visible range. When a panning\n         * operation starts, if an index for the given grouping does not exists,\n         * it is created and cached. This index is deleted on updated data, so\n         * it will be regenerated the next time a panning operation starts.\n         * @private\n         */\n        getExtendedPositions(withOverscroll = true) {\n            const ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, key = axis.series.reduce((k, series) => {\n                const grouping = series.currentDataGrouping;\n                return (k +\n                    (grouping ? grouping.count + grouping.unitName : 'raw'));\n            }, ''), overscroll = withOverscroll ?\n                axis.ordinal.convertOverscroll(axis.options.overscroll) : 0, extremes = axis.getExtremes();\n            let fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n            // If this is the first time, or the ordinal index is deleted by\n            // updatedData,\n            // create it.\n            if (!ordinalIndex) {\n                ordinalIndex = ordinal.index = {};\n            }\n            if (!ordinalIndex[key]) {\n                // Create a fake axis object where the extended ordinal\n                // positions are emulated\n                fakeAxis = {\n                    series: [],\n                    chart: chart,\n                    forceOrdinal: false,\n                    getExtremes: function () {\n                        return {\n                            min: extremes.dataMin,\n                            max: extremes.dataMax + overscroll\n                        };\n                    },\n                    applyGrouping: axisProto.applyGrouping,\n                    getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                    getTimeTicks: axisProto.getTimeTicks,\n                    options: {\n                        ordinal: true\n                    },\n                    ordinal: {\n                        getGroupIntervalFactor: this.getGroupIntervalFactor\n                    },\n                    ordinal2lin: axisProto.ordinal2lin, // #6276\n                    getIndexOfPoint: axisProto.getIndexOfPoint,\n                    val2lin: axisProto.val2lin // #2590\n                };\n                fakeAxis.ordinal.axis = fakeAxis;\n                // Add the fake series to hold the full data, then apply\n                // processData to it\n                axis.series.forEach((series) => {\n                    if (series.takeOrdinalPosition === false) {\n                        return; // #22657\n                    }\n                    fakeSeries = {\n                        xAxis: fakeAxis,\n                        chart: chart,\n                        groupPixelWidth: series.groupPixelWidth,\n                        destroyGroupedData: (external_highcharts_src_js_default_default()).noop,\n                        getColumn: series.getColumn,\n                        applyGrouping: series.applyGrouping,\n                        getProcessedData: series.getProcessedData,\n                        reserveSpace: series.reserveSpace,\n                        visible: series.visible\n                    };\n                    const xData = series.getColumn('x').concat(withOverscroll ?\n                        ordinal.getOverscrollPositions() :\n                        []);\n                    fakeSeries.dataTable = new Data_DataTableCore({\n                        columns: {\n                            x: xData\n                        }\n                    });\n                    fakeSeries.options = {\n                        ...series.options,\n                        dataGrouping: series.currentDataGrouping ? {\n                            firstAnchor: series.options.dataGrouping?.firstAnchor,\n                            anchor: series.options.dataGrouping?.anchor,\n                            lastAnchor: series.options.dataGrouping?.firstAnchor,\n                            enabled: true,\n                            forced: true,\n                            approximation: 'open',\n                            units: [[\n                                    series.currentDataGrouping.unitName,\n                                    [series.currentDataGrouping.count]\n                                ]]\n                        } : {\n                            enabled: false\n                        }\n                    };\n                    fakeAxis.series.push(fakeSeries);\n                    series.processData.apply(fakeSeries);\n                });\n                fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                // Force to use the ordinal when points are evenly spaced (e.g.\n                // weeks), #3825.\n                if ((fakeSeries?.closestPointRange !==\n                    fakeSeries?.basePointRange) &&\n                    fakeSeries.currentDataGrouping) {\n                    fakeAxis.forceOrdinal = true;\n                }\n                // Run beforeSetTickPositions to compute the ordinalPositions\n                axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                if (!axis.ordinal.originalOrdinalRange &&\n                    fakeAxis.ordinal.originalOrdinalRange) {\n                    axis.ordinal.originalOrdinalRange =\n                        fakeAxis.ordinal.originalOrdinalRange;\n                }\n                // Cache it\n                if (fakeAxis.ordinal.positions) {\n                    ordinalIndex[key] = fakeAxis.ordinal.positions;\n                }\n            }\n            return ordinalIndex[key];\n        }\n        /**\n         * Find the factor to estimate how wide the plot area would have been if\n         * ordinal gaps were included. This value is used to compute an imagined\n         * plot width in order to establish the data grouping interval.\n         *\n         * A real world case is the intraday-candlestick example. Without this\n         * logic, it would show the correct data grouping when viewing a range\n         * within each day, but once moving the range to include the gap between\n         * two days, the interval would include the cut-away night hours and the\n         * data grouping would be wrong. So the below method tries to compensate\n         * by identifying the most common point interval, in this case days.\n         *\n         * An opposite case is presented in issue #718. We have a long array of\n         * daily data, then one point is appended one hour after the last point.\n         * We expect the data grouping not to change.\n         *\n         * In the future, if we find cases where this estimation doesn't work\n         * optimally, we might need to add a second pass to the data grouping\n         * logic, where we do another run with a greater interval if the number\n         * of data groups is more than a certain fraction of the desired group\n         * count.\n         * @private\n         */\n        getGroupIntervalFactor(xMin, xMax, series) {\n            const ordinal = this, processedXData = series.getColumn('x', true), len = processedXData.length, distances = [];\n            let median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n            // Only do this computation for the first series, let the other\n            // inherit it (#2416)\n            if (!groupIntervalFactor) {\n                // Register all the distances in an array\n                for (i = 0; i < len - 1; i++) {\n                    distances[i] = (processedXData[i + 1] -\n                        processedXData[i]);\n                }\n                // Sort them and find the median\n                distances.sort(function (a, b) {\n                    return a - b;\n                });\n                median = distances[Math.floor(len / 2)];\n                // Compensate for series that don't extend through the entire\n                // axis extent. #1675.\n                xMin = Math.max(xMin, processedXData[0]);\n                xMax = Math.min(xMax, processedXData[len - 1]);\n                ordinal.groupIntervalFactor = groupIntervalFactor =\n                    (len * median) / (xMax - xMin);\n            }\n            // Return the factor needed for data grouping\n            return groupIntervalFactor;\n        }\n        /**\n         * Get index of point inside the ordinal positions array.\n         *\n         * @private\n         * @param {number} pixelVal\n         * The pixel value of a point.\n         *\n         * @param {Array<number>} [ordinalArray]\n         * An array of all points available on the axis for the given data set.\n         * Either ordinalPositions if the value is inside the plotArea or\n         * extendedOrdinalPositions if not.\n         */\n        getIndexOfPoint(pixelVal, ordinalArray) {\n            const ordinal = this, axis = ordinal.axis, min = axis.min, minX = axis.minPixelPadding, indexOfMin = getIndexInArray(ordinalArray, min);\n            const ordinalPointPixelInterval = axis.translationSlope *\n                (ordinal.slope ||\n                    axis.closestPointRange ||\n                    ordinal.overscrollPointsRange);\n            const shiftIndex = OrdinalAxis_correctFloat((pixelVal - minX) / ordinalPointPixelInterval);\n            return indexOfMin + shiftIndex;\n        }\n        /**\n         * Get ticks for an ordinal axis within a range where points don't\n         * exist. It is required when overscroll is enabled. We can't base on\n         * points, because we may not have any, so we use approximated\n         * pointRange and generate these ticks between Axis.dataMax,\n         * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n         * navigator scrolling.\n         * @private\n         */\n        getOverscrollPositions() {\n            const ordinal = this, axis = ordinal.axis, extraRange = ordinal.convertOverscroll(axis.options.overscroll), distance = ordinal.overscrollPointsRange, positions = [];\n            let max = axis.dataMax;\n            if (OrdinalAxis_defined(distance)) {\n                // Max + pointRange because we need to scroll to the last\n                while (max < axis.dataMax + extraRange) {\n                    max += distance;\n                    positions.push(max);\n                }\n            }\n            return positions;\n        }\n        /**\n         * Make the tick intervals closer because the ordinal gaps make the\n         * ticks spread out or cluster.\n         * @private\n         */\n        postProcessTickInterval(tickInterval) {\n            // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n            // where this algorithm doesn't work optimally. In this case, the\n            // tick labels are spread out per week, but all the gaps reside\n            // within weeks. So we have a situation where the labels are courser\n            // than the ordinal gaps, and thus the tick interval should not be\n            // altered.\n            const ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope, closestPointRange = axis.closestPointRange;\n            let ret;\n            if (ordinalSlope && closestPointRange) {\n                if (!axis.options.breaks) {\n                    ret = (tickInterval /\n                        (ordinalSlope / closestPointRange));\n                }\n                else {\n                    ret = closestPointRange || tickInterval; // #7275\n                }\n            }\n            else {\n                ret = tickInterval;\n            }\n            return ret;\n        }\n        /**\n         * If overscroll is pixel or percentage value, convert it to axis range.\n         *\n         * @private\n         * @param {number | string} overscroll\n         * Overscroll value in axis range, pixels or percentage value.\n         * @return {number}\n         * Overscroll value in axis range.\n         */\n        convertOverscroll(overscroll = 0) {\n            const ordinal = this, axis = ordinal.axis, calculateOverscroll = function (overscrollPercentage) {\n                return OrdinalAxis_pick(ordinal.originalOrdinalRange, OrdinalAxis_defined(axis.dataMax) && OrdinalAxis_defined(axis.dataMin) ?\n                    axis.dataMax - axis.dataMin : 0) * overscrollPercentage;\n            };\n            if (isString(overscroll)) {\n                const overscrollValue = parseInt(overscroll, 10);\n                let isFullRange;\n                // #22334\n                if (OrdinalAxis_defined(axis.min) && OrdinalAxis_defined(axis.max) &&\n                    OrdinalAxis_defined(axis.dataMin) && OrdinalAxis_defined(axis.dataMax)) {\n                    isFullRange =\n                        axis.max - axis.min === axis.dataMax - axis.dataMin;\n                    if (!isFullRange) {\n                        this.originalOrdinalRange = axis.max - axis.min;\n                    }\n                }\n                if (/%$/.test(overscroll)) {\n                    // If overscroll is percentage\n                    return calculateOverscroll(overscrollValue / 100);\n                }\n                if (/px/.test(overscroll)) {\n                    // If overscroll is pixels, it is limited to 90% of the axis\n                    // length to prevent division by zero\n                    const limitedOverscrollValue = Math.min(overscrollValue, axis.len * 0.9), pixelToPercent = limitedOverscrollValue / axis.len;\n                    return calculateOverscroll(pixelToPercent /\n                        (isFullRange ? (1 - pixelToPercent) : 1));\n                }\n                // If overscroll is a string but not pixels or percentage,\n                // return 0 as no overscroll\n                return 0;\n            }\n            return overscroll;\n        }\n    }\n    OrdinalAxis.Additions = Additions;\n})(OrdinalAxis || (OrdinalAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_OrdinalAxis = (OrdinalAxis);\n\n;// ./code/es-modules/Stock/RangeSelector/RangeSelector.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defaultOptions: RangeSelector_defaultOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { format } = (external_highcharts_src_js_default_Templating_default());\n\n\nconst { addEvent: RangeSelector_addEvent, createElement, css: RangeSelector_css, defined: RangeSelector_defined, destroyObjectProperties: RangeSelector_destroyObjectProperties, diffObjects, discardElement, extend: RangeSelector_extend, fireEvent: RangeSelector_fireEvent, isNumber: RangeSelector_isNumber, isString: RangeSelector_isString, merge: RangeSelector_merge, objectEach: RangeSelector_objectEach, pick: RangeSelector_pick, splat: RangeSelector_splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get the preferred input type based on a date format string.\n *\n * @private\n * @function preferredInputType\n */\nfunction preferredInputType(format) {\n    const hasTimeKey = (char) => new RegExp(`%[[a-zA-Z]*${char}`).test(format);\n    const ms = RangeSelector_isString(format) ?\n        format.indexOf('%L') !== -1 :\n        // Implemented but not typed as of 2024\n        format.fractionalSecondDigits;\n    if (ms) {\n        return 'text';\n    }\n    const date = RangeSelector_isString(format) ?\n        ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n            .some(hasTimeKey) :\n        format.dateStyle || format.day || format.month || format.year;\n    const time = RangeSelector_isString(format) ?\n        ['H', 'k', 'I', 'l', 'M', 'S'].some(hasTimeKey) :\n        format.timeStyle || format.hour || format.minute || format.second;\n    if (date && time) {\n        return 'datetime-local';\n    }\n    if (date) {\n        return 'date';\n    }\n    if (time) {\n        return 'time';\n    }\n    return 'text';\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The range selector.\n *\n * @private\n * @class\n * @name Highcharts.RangeSelector\n * @param {Highcharts.Chart} chart\n */\nclass RangeSelector {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass, ChartClass) {\n        RangeSelector_RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.isDirty = false;\n        this.buttonOptions = [];\n        this.initialButtonGroupWidth = 0;\n        this.maxButtonWidth = () => {\n            let buttonWidth = 0;\n            this.buttons.forEach((button) => {\n                const bBox = button.getBBox();\n                if (bBox.width > buttonWidth) {\n                    buttonWidth = bBox.width;\n                }\n            });\n            return buttonWidth;\n        };\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * The method to run when one of the buttons in the range selectors is\n     * clicked\n     *\n     * @private\n     * @function Highcharts.RangeSelector#clickButton\n     * @param {number} i\n     *        The index of the button\n     * @param {boolean} [redraw]\n     */\n    clickButton(i, redraw) {\n        const rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n        let dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = RangeSelector_isNumber(baseAxis?.max) ? Math.round(Math.min(baseAxis.max, dataMax ?? baseAxis.max)) : void 0, // #1568\n        baseXAxisOptions, range = rangeOptions._range, rangeMin, ctx, ytdExtremes, addOffsetMin = true;\n        // Chart has no data, base series is removed\n        if (dataMin === null || dataMax === null) {\n            return;\n        }\n        rangeSelector.setSelected(i);\n        // Apply dataGrouping associated to button\n        if (dataGrouping) {\n            this.forcedDataGrouping = true;\n            external_highcharts_src_js_default_Axis_default().prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n            this.frozenStates = rangeOptions.preserveDataGrouping;\n        }\n        // Apply range\n        if (type === 'month' || type === 'year') {\n            if (!baseAxis) {\n                // This is set to the user options and picked up later when the\n                // axis is instantiated so that we know the min and max.\n                range = rangeOptions;\n            }\n            else {\n                ctx = {\n                    range: rangeOptions,\n                    max: newMax,\n                    chart: chart,\n                    dataMin: dataMin,\n                    dataMax: dataMax\n                };\n                newMin = baseAxis.minFromRange.call(ctx);\n                if (RangeSelector_isNumber(ctx.newMax)) {\n                    newMax = ctx.newMax;\n                }\n                // #15799: offsetMin is added in minFromRange so that it works\n                // with pre-selected buttons as well\n                addOffsetMin = false;\n            }\n            // Fixed times like minutes, hours, days\n        }\n        else if (range) {\n            if (RangeSelector_isNumber(newMax)) {\n                newMin = Math.max(newMax - range, dataMin);\n                newMax = Math.min(newMin + range, dataMax);\n                addOffsetMin = false;\n            }\n        }\n        else if (type === 'ytd') {\n            // On user clicks on the buttons, or a delayed action running from\n            // the beforeRender event (below), the baseAxis is defined.\n            if (baseAxis) {\n                // When \"ytd\" is the pre-selected button for the initial view,\n                // its calculation is delayed and rerun in the beforeRender\n                // event (below). When the series are initialized, but before\n                // the chart is rendered, we have access to the xData array\n                // (#942).\n                if (baseAxis.hasData() && (!RangeSelector_isNumber(dataMax) ||\n                    !RangeSelector_isNumber(dataMin))) {\n                    dataMin = Number.MAX_VALUE;\n                    dataMax = -Number.MAX_VALUE;\n                    chart.series.forEach((series) => {\n                        // Reassign it to the last item\n                        const xData = series.getColumn('x');\n                        if (xData.length) {\n                            dataMin = Math.min(xData[0], dataMin);\n                            dataMax = Math.max(xData[xData.length - 1], dataMax);\n                        }\n                    });\n                    redraw = false;\n                }\n                if (RangeSelector_isNumber(dataMax) && RangeSelector_isNumber(dataMin)) {\n                    ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin);\n                    newMin = rangeMin = ytdExtremes.min;\n                    newMax = ytdExtremes.max;\n                }\n                // \"ytd\" is pre-selected. We don't yet have access to processed\n                // point and extremes data (things like pointStart and pointInterval\n                // are missing), so we delay the process (#942)\n            }\n            else {\n                rangeSelector.deferredYTDClick = i;\n                return;\n            }\n        }\n        else if (type === 'all' && baseAxis) {\n            // If the navigator exist and the axis range is declared reset that\n            // range and from now on only use the range set by a user, #14742.\n            if (chart.navigator && chart.navigator.baseSeries[0]) {\n                chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n            }\n            newMin = dataMin;\n            newMax = dataMax;\n        }\n        if (addOffsetMin && rangeOptions._offsetMin && RangeSelector_defined(newMin)) {\n            newMin += rangeOptions._offsetMin;\n        }\n        if (rangeOptions._offsetMax && RangeSelector_defined(newMax)) {\n            newMax += rangeOptions._offsetMax;\n        }\n        if (this.dropdown) {\n            this.dropdown.selectedIndex = i + 1;\n        }\n        // Update the chart\n        if (!baseAxis) {\n            // Axis not yet instantiated. Temporarily set min and range\n            // options and axes once defined and remove them on\n            // chart load (#4317 & #20529).\n            baseXAxisOptions = RangeSelector_splat(chart.options.xAxis || {})[0];\n            const axisRangeUpdateEvent = RangeSelector_addEvent(chart, 'afterCreateAxes', function () {\n                const xAxis = chart.xAxis[0];\n                xAxis.range = xAxis.options.range = range;\n                xAxis.min = xAxis.options.min = rangeMin;\n            });\n            RangeSelector_addEvent(chart, 'load', function resetMinAndRange() {\n                const xAxis = chart.xAxis[0];\n                chart.setFixedRange(rangeOptions._range);\n                xAxis.options.range = baseXAxisOptions.range;\n                xAxis.options.min = baseXAxisOptions.min;\n                axisRangeUpdateEvent(); // Remove event\n            });\n        }\n        else if (RangeSelector_isNumber(newMin) && RangeSelector_isNumber(newMax)) {\n            // Existing axis object. Set extremes after render time.\n            baseAxis.setExtremes(newMin, newMax, RangeSelector_pick(redraw, true), void 0, // Auto animation\n            {\n                trigger: 'rangeSelectorButton',\n                rangeSelectorButton: rangeOptions\n            });\n            chart.setFixedRange(rangeOptions._range);\n        }\n        RangeSelector_fireEvent(this, 'afterBtnClick');\n    }\n    /**\n     * Set the selected option. This method only sets the internal flag, it\n     * doesn't update the buttons or the actual zoomed range.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setSelected\n     * @param {number} [selected]\n     */\n    setSelected(selected) {\n        this.selected = this.options.selected = selected;\n    }\n    /**\n     * Initialize the range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#init\n     * @param {Highcharts.Chart} chart\n     */\n    init(chart) {\n        const rangeSelector = this, options = chart.options.rangeSelector, langOptions = chart.options.lang, buttonOptions = options.buttons, selectedOption = options.selected, blurInputs = function () {\n            const minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n            // #3274 in some case blur is not defined\n            if (minInput && !!minInput.blur) {\n                RangeSelector_fireEvent(minInput, 'blur');\n            }\n            if (maxInput && !!maxInput.blur) {\n                RangeSelector_fireEvent(maxInput, 'blur');\n            }\n        };\n        rangeSelector.chart = chart;\n        rangeSelector.options = options;\n        rangeSelector.buttons = [];\n        rangeSelector.buttonOptions = buttonOptions\n            .map((opt) => {\n            if (opt.type && langOptions.rangeSelector) {\n                opt.text ?? (opt.text = langOptions.rangeSelector[`${opt.type}Text`]);\n                opt.title ?? (opt.title = langOptions.rangeSelector[`${opt.type}Title`]);\n            }\n            opt.text = format(opt.text, {\n                count: opt.count || 1\n            });\n            opt.title = format(opt.title, {\n                count: opt.count || 1\n            });\n            return opt;\n        });\n        this.eventsToUnbind = [];\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart.container, 'mousedown', blurInputs));\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart, 'resize', blurInputs));\n        // Extend the buttonOptions with actual range\n        buttonOptions.forEach(rangeSelector.computeButtonRange);\n        // Zoomed range based on a pre-selected button index\n        if (typeof selectedOption !== 'undefined' &&\n            buttonOptions[selectedOption]) {\n            this.clickButton(selectedOption, false);\n        }\n        this.eventsToUnbind.push(RangeSelector_addEvent(chart, 'load', function () {\n            // If a data grouping is applied to the current button, release it\n            // when extremes change\n            if (chart.xAxis && chart.xAxis[0]) {\n                RangeSelector_addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                    if (RangeSelector_isNumber(this.max) &&\n                        RangeSelector_isNumber(this.min) &&\n                        this.max - this.min !== chart.fixedRange &&\n                        e.trigger !== 'rangeSelectorButton' &&\n                        e.trigger !== 'updatedData' &&\n                        rangeSelector.forcedDataGrouping &&\n                        !rangeSelector.frozenStates) {\n                        this.setDataGrouping(false, false);\n                    }\n                });\n            }\n        }));\n        this.createElements();\n    }\n    /**\n     * Dynamically update the range selector buttons after a new range has been\n     * set\n     *\n     * @private\n     * @function Highcharts.RangeSelector#updateButtonStates\n     */\n    updateButtonStates() {\n        const rangeSelector = this, chart = this.chart, dropdown = this.dropdown, dropdownLabel = this.dropdownLabel, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n        unionExtremes = (chart.scroller &&\n            chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttonStates = new Array(rangeSelector.buttonOptions.length)\n            .fill(0), selectedExists = RangeSelector_isNumber(selected), buttons = rangeSelector.buttons;\n        let isSelectedTooGreat = false, selectedIndex = null;\n        rangeSelector.buttonOptions.forEach((rangeOptions, i) => {\n            const range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, offsetRange = rangeOptions._offsetMax -\n                rangeOptions._offsetMin, isSelected = i === selected, \n            // Disable buttons where the range exceeds what is allowed i;\n            // the current view\n            isTooGreatRange = range >\n                dataMax - dataMin, \n            // Disable buttons where the range is smaller than the minimum\n            // range\n            isTooSmallRange = range < baseAxis.minRange;\n            // Do not select the YTD button if not explicitly told so\n            let isYTDButNotSelected = false, \n            // Disable the All button if we're already showing all\n            isSameRange = range === actualRange;\n            if (isSelected && isTooGreatRange) {\n                isSelectedTooGreat = true;\n            }\n            if (baseAxis.isOrdinal &&\n                baseAxis.ordinal?.positions &&\n                range &&\n                actualRange < range) {\n                // Handle ordinal ranges\n                const positions = baseAxis.ordinal.positions, prevOrdinalPosition = Axis_OrdinalAxis.Additions.findIndexOf(positions, baseAxis.min, true), nextOrdinalPosition = Math.min(Axis_OrdinalAxis.Additions.findIndexOf(positions, baseAxis.max, true) + 1, positions.length - 1);\n                if (positions[nextOrdinalPosition] -\n                    positions[prevOrdinalPosition] > range) {\n                    isSameRange = true;\n                }\n            }\n            else if (\n            // Months and years have variable range so we check the extremes\n            (type === 'month' || type === 'year') &&\n                (actualRange + 36e5 >=\n                    { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                (actualRange - 36e5 <=\n                    { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                isSameRange = true;\n            }\n            else if (type === 'ytd') {\n                isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                isYTDButNotSelected = !isSelected;\n            }\n            else if (type === 'all') {\n                isSameRange = (baseAxis.max - baseAxis.min >=\n                    dataMax - dataMin);\n            }\n            // The new zoom area happens to match the range for a button - mark\n            // it selected. This happens when scrolling across an ordinal gap.\n            // It can be seen in the intraday demos when selecting 1h and scroll\n            // across the night gap.\n            const disable = (!allButtonsEnabled &&\n                !(isSelectedTooGreat && type === 'all') &&\n                (isTooGreatRange ||\n                    isTooSmallRange ||\n                    hasNoData));\n            const select = ((isSelectedTooGreat && type === 'all') ||\n                (isYTDButNotSelected ? false : isSameRange) ||\n                (isSelected && rangeSelector.frozenStates));\n            if (disable) {\n                buttonStates[i] = 3;\n            }\n            else if (select) {\n                if (!selectedExists || i === selected) {\n                    selectedIndex = i;\n                }\n            }\n        });\n        if (selectedIndex !== null) {\n            buttonStates[selectedIndex] = 2;\n            rangeSelector.setSelected(selectedIndex);\n            if (this.dropdown) {\n                this.dropdown.selectedIndex = selectedIndex + 1;\n            }\n        }\n        else {\n            rangeSelector.setSelected();\n            if (this.dropdown) {\n                this.dropdown.selectedIndex = -1;\n            }\n            if (dropdownLabel) {\n                dropdownLabel.setState(0);\n                dropdownLabel.attr({\n                    text: (RangeSelector_defaultOptions.lang.rangeSelectorZoom || '') + ' â–¾'\n                });\n            }\n        }\n        for (let i = 0; i < buttonStates.length; i++) {\n            const state = buttonStates[i];\n            const button = buttons[i];\n            if (button.state !== state) {\n                button.setState(state);\n                if (dropdown) {\n                    dropdown.options[i + 1].disabled = (state === 3);\n                    if (state === 2) {\n                        if (dropdownLabel) {\n                            dropdownLabel.setState(2);\n                            dropdownLabel.attr({\n                                text: rangeSelector.buttonOptions[i].text + ' â–¾'\n                            });\n                        }\n                        dropdown.selectedIndex = i + 1;\n                    }\n                    const bbox = dropdownLabel.getBBox();\n                    RangeSelector_css(dropdown, {\n                        width: `${bbox.width}px`,\n                        height: `${bbox.height}px`\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Compute and cache the range for an individual button\n     *\n     * @private\n     * @function Highcharts.RangeSelector#computeButtonRange\n     * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n     */\n    computeButtonRange(rangeOptions) {\n        const type = rangeOptions.type, count = rangeOptions.count || 1, \n        // These time intervals have a fixed number of milliseconds, as\n        // opposed to month, ytd and year\n        fixedTimes = {\n            millisecond: 1,\n            second: 1000,\n            minute: 60 * 1000,\n            hour: 3600 * 1000,\n            day: 24 * 3600 * 1000,\n            week: 7 * 24 * 3600 * 1000\n        };\n        // Store the range on the button object\n        if (fixedTimes[type]) {\n            rangeOptions._range = fixedTimes[type] * count;\n        }\n        else if (type === 'month' || type === 'year') {\n            rangeOptions._range = {\n                month: 30,\n                year: 365\n            }[type] * 24 * 36e5 * count;\n        }\n        rangeOptions._offsetMin = RangeSelector_pick(rangeOptions.offsetMin, 0);\n        rangeOptions._offsetMax = RangeSelector_pick(rangeOptions.offsetMax, 0);\n        rangeOptions._range +=\n            rangeOptions._offsetMax - rangeOptions._offsetMin;\n    }\n    /**\n     * Get the unix timestamp of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getInputValue\n     */\n    getInputValue(name) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        const options = this.chart.options\n            .rangeSelector;\n        const time = this.chart.time;\n        if (input) {\n            return ((input.type === 'text' && options.inputDateParser) ||\n                this.defaultInputDateParser)(input.value, time.timezone === 'UTC', time);\n        }\n        return 0;\n    }\n    /**\n     * Set the internal and displayed value of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setInputValue\n     */\n    setInputValue(name, inputTime) {\n        const options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n        if (input) {\n            input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n            const hcTimeAttr = input.getAttribute('data-hc-time');\n            let updatedTime = RangeSelector_defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n            if (RangeSelector_defined(inputTime)) {\n                const previousTime = updatedTime;\n                if (RangeSelector_defined(previousTime)) {\n                    input.setAttribute('data-hc-time-previous', previousTime);\n                }\n                input.setAttribute('data-hc-time', inputTime);\n                updatedTime = inputTime;\n            }\n            input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                options.inputEditDateFormat), updatedTime);\n            if (dateBox) {\n                dateBox.attr({\n                    text: time.dateFormat(options.inputDateFormat, updatedTime)\n                });\n            }\n        }\n    }\n    /**\n     * Set the min and max value of a HTML input for the dates\n     *\n     * @private\n     * @function Highcharts.RangeSelector#setInputExtremes\n     */\n    setInputExtremes(name, min, max) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        if (input) {\n            const format = this.inputTypeFormats[input.type];\n            const time = this.chart.time;\n            if (format) {\n                const newMin = time.dateFormat(format, min);\n                if (input.min !== newMin) {\n                    input.min = newMin;\n                }\n                const newMax = time.dateFormat(format, max);\n                if (input.max !== newMax) {\n                    input.max = newMax;\n                }\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#showInput\n     * @param {string} name\n     */\n    showInput(name) {\n        const dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n        if (input && dateBox && this.inputGroup) {\n            const isTextInput = input.type === 'text', { translateX = 0, translateY = 0 } = this.inputGroup, { x = 0, width = 0, height = 0 } = dateBox, { inputBoxWidth } = this.options;\n            RangeSelector_css(input, {\n                width: isTextInput ?\n                    ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                    'auto',\n                height: (height - 2) + 'px',\n                border: '2px solid silver'\n            });\n            if (isTextInput && inputBoxWidth) {\n                RangeSelector_css(input, {\n                    left: (translateX + x) + 'px',\n                    top: translateY + 'px'\n                });\n                // Inputs of types date, time or datetime-local should be centered\n                // on top of the dateBox\n            }\n            else {\n                RangeSelector_css(input, {\n                    left: Math.min(Math.round(x +\n                        translateX -\n                        (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                    top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#hideInput\n     * @param {string} name\n     */\n    hideInput(name) {\n        const input = name === 'min' ? this.minInput : this.maxInput;\n        if (input) {\n            RangeSelector_css(input, {\n                top: '-9999em',\n                border: 0,\n                width: '1px',\n                height: '1px'\n            });\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#defaultInputDateParser\n     */\n    defaultInputDateParser(inputDate, useUTC, time) {\n        return time?.parse(inputDate) || 0;\n    }\n    /**\n     * Draw either the 'from' or the 'to' HTML input box of the range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#drawInput\n     */\n    drawInput(name) {\n        const { chart, div, inputGroup } = this;\n        const rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = RangeSelector_defaultOptions.lang, isMin = name === 'min';\n        /**\n         * @private\n         */\n        function updateExtremes(name) {\n            const { maxInput, minInput } = rangeSelector, chartAxis = chart.xAxis[0], unionExtremes = chart.scroller?.getUnionExtremes() || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, currentExtreme = chart.xAxis[0].getExtremes()[name];\n            let value = rangeSelector.getInputValue(name);\n            if (RangeSelector_isNumber(value) && value !== currentExtreme) {\n                // Validate the extremes. If it goes beyond the data min or\n                // max, use the actual data extreme (#2438).\n                if (isMin && maxInput && RangeSelector_isNumber(dataMin)) {\n                    if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                        value = void 0;\n                    }\n                    else if (value < dataMin) {\n                        value = dataMin;\n                    }\n                }\n                else if (minInput && RangeSelector_isNumber(dataMax)) {\n                    if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                        value = void 0;\n                    }\n                    else if (value > dataMax) {\n                        value = dataMax;\n                    }\n                }\n                // Set the extremes\n                if (typeof value !== 'undefined') { // @todo typeof undefined\n                    chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                }\n            }\n        }\n        // Create the text label\n        const text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n        const label = renderer\n            .label(text, 0)\n            .addClass('highcharts-range-label')\n            .attr({\n            padding: text ? 2 : 0,\n            height: text ? options.inputBoxHeight : 0\n        })\n            .add(inputGroup);\n        // Create an SVG label that shows updated date ranges and records click\n        // events that bring in the HTML input.\n        const dateBox = renderer\n            .label('', 0)\n            .addClass('highcharts-range-input')\n            .attr({\n            padding: 2,\n            width: options.inputBoxWidth,\n            height: options.inputBoxHeight,\n            'text-align': 'center'\n        })\n            .on('click', function () {\n            // If it is already focused, the onfocus event doesn't fire\n            // (#3713)\n            rangeSelector.showInput(name);\n            rangeSelector[name + 'Input'].focus();\n        });\n        if (!chart.styledMode) {\n            dateBox.attr({\n                stroke: options.inputBoxBorderColor,\n                'stroke-width': 1\n            });\n        }\n        dateBox.add(inputGroup);\n        // Create the HTML input element. This is rendered as 1x1 pixel then set\n        // to the right size when focused.\n        const input = createElement('input', {\n            name: name,\n            className: 'highcharts-range-selector'\n        }, void 0, div);\n        // #14788: Setting input.type to an unsupported type throws in IE, so\n        // we need to use setAttribute instead\n        input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n        if (!chart.styledMode) {\n            // Styles\n            label.css(RangeSelector_merge(chartStyle, options.labelStyle));\n            dateBox.css(RangeSelector_merge({\n                color: \"#333333\" /* Palette.neutralColor80 */\n            }, chartStyle, options.inputStyle));\n            RangeSelector_css(input, RangeSelector_extend({\n                position: 'absolute',\n                border: 0,\n                boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                width: '1px', // Chrome needs a pixel to see it\n                height: '1px',\n                padding: 0,\n                textAlign: 'center',\n                fontSize: chartStyle.fontSize,\n                fontFamily: chartStyle.fontFamily,\n                top: '-9999em' // #4798\n            }, options.inputStyle));\n        }\n        // Blow up the input box\n        input.onfocus = () => {\n            rangeSelector.showInput(name);\n        };\n        // Hide away the input box\n        input.onblur = () => {\n            // Update extremes only when inputs are active\n            if (input === (external_highcharts_src_js_default_default()).doc.activeElement) { // Only when focused\n                // Update also when no `change` event is triggered, like when\n                // clicking inside the SVG (#4710)\n                updateExtremes(name);\n            }\n            // #10404 - move hide and blur outside focus\n            rangeSelector.hideInput(name);\n            rangeSelector.setInputValue(name);\n            input.blur(); // #4606\n        };\n        let keyDown = false;\n        // Handle changes in the input boxes\n        input.onchange = () => {\n            // Update extremes and blur input when clicking date input calendar\n            if (!keyDown) {\n                updateExtremes(name);\n                rangeSelector.hideInput(name);\n                input.blur();\n            }\n        };\n        input.onkeypress = (event) => {\n            // IE does not fire onchange on enter\n            if (event.keyCode === 13) {\n                updateExtremes(name);\n            }\n        };\n        input.onkeydown = (event) => {\n            keyDown = true;\n            // Arrow keys\n            if (event.key === 'ArrowUp' ||\n                event.key === 'ArrowDown' ||\n                event.key === 'Tab') {\n                updateExtremes(name);\n            }\n        };\n        input.onkeyup = () => {\n            keyDown = false;\n        };\n        return { dateBox, input, label };\n    }\n    /**\n     * Get the position of the range selector buttons and inputs. This can be\n     * overridden from outside for custom positioning.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getPosition\n     */\n    getPosition() {\n        const chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n            chart.plotTop - chart.axisOffset[0] :\n            0; // Set offset only for verticalAlign top\n        return {\n            buttonTop: top + options.buttonPosition.y,\n            inputTop: top + options.inputPosition.y - 10\n        };\n    }\n    /**\n     * Get the extremes of YTD. Will choose dataMax if its value is lower than\n     * the current timestamp. Will choose dataMin if its value is higher than\n     * the timestamp for the start of current year.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getYTDExtremes\n     * @return {*}\n     * Returns min and max for the YTD\n     */\n    getYTDExtremes(dataMax, dataMin) {\n        const time = this.chart.time, year = time.toParts(dataMax)[0], startOfYear = time.makeTime(year, 0);\n        return {\n            max: dataMax,\n            min: Math.max(dataMin, startOfYear)\n        };\n    }\n    createElements() {\n        const chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, inputEnabled = options.inputEnabled, inputsZIndex = RangeSelector_pick(chartOptions.chart.style?.zIndex, 0) + 1;\n        if (options.enabled === false) {\n            return;\n        }\n        this.group = renderer.g('range-selector-group')\n            .attr({\n            zIndex: 7\n        })\n            .add();\n        this.div = createElement('div', void 0, {\n            position: 'relative',\n            height: 0,\n            zIndex: inputsZIndex\n        });\n        if (this.buttonOptions.length) {\n            this.renderButtons();\n        }\n        // First create a wrapper outside the container in order to make\n        // the inputs work and make export correct\n        if (container.parentNode) {\n            container.parentNode.insertBefore(this.div, container);\n        }\n        if (inputEnabled) {\n            this.createInputs();\n        }\n    }\n    /**\n     * Create the input elements and its group.\n     *\n     */\n    createInputs() {\n        this.inputGroup = this.chart.renderer.g('input-group').add(this.group);\n        const minElems = this.drawInput('min');\n        this.minDateBox = minElems.dateBox;\n        this.minLabel = minElems.label;\n        this.minInput = minElems.input;\n        const maxElems = this.drawInput('max');\n        this.maxDateBox = maxElems.dateBox;\n        this.maxLabel = maxElems.label;\n        this.maxInput = maxElems.input;\n    }\n    /**\n     * Render the range selector including the buttons and the inputs. The first\n     * time render is called, the elements are created and positioned. On\n     * subsequent calls, they are moved and updated.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#render\n     * @param {number} [min]\n     *        X axis minimum\n     * @param {number} [max]\n     *        X axis maximum\n     */\n    render(min, max) {\n        if (this.options.enabled === false) {\n            return;\n        }\n        const chart = this.chart, chartOptions = chart.options, options = chartOptions.rangeSelector, \n        // Place inputs above the container\n        inputEnabled = options.inputEnabled;\n        if (inputEnabled) {\n            if (!this.inputGroup) {\n                this.createInputs();\n            }\n            // Set or reset the input values\n            this.setInputValue('min', min);\n            this.setInputValue('max', max);\n            if (!this.chart.styledMode) {\n                this.maxLabel?.css(options.labelStyle);\n                this.minLabel?.css(options.labelStyle);\n            }\n            const unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n            if (RangeSelector_defined(unionExtremes.dataMin) &&\n                RangeSelector_defined(unionExtremes.dataMax)) {\n                const minRange = chart.xAxis[0].minRange || 0;\n                this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n            }\n            // Reflow\n            if (this.inputGroup) {\n                let x = 0;\n                [\n                    this.minLabel,\n                    this.minDateBox,\n                    this.maxLabel,\n                    this.maxDateBox\n                ].forEach((label) => {\n                    if (label) {\n                        const { width } = label.getBBox();\n                        if (width) {\n                            label.attr({ x });\n                            x += width + options.inputSpacing;\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            if (this.inputGroup) {\n                this.inputGroup.destroy();\n                delete this.inputGroup;\n            }\n        }\n        if (!this.chart.styledMode) {\n            if (this.zoomText) {\n                this.zoomText.css(options.labelStyle);\n            }\n        }\n        this.alignElements();\n        this.updateButtonStates();\n    }\n    /**\n     * Render the range buttons. This only runs the first time, later the\n     * positioning is laid out in alignElements.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#renderButtons\n     */\n    renderButtons() {\n        var _a;\n        const { chart, options } = this;\n        const lang = RangeSelector_defaultOptions.lang;\n        const renderer = chart.renderer;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        const states = buttonTheme && buttonTheme.states;\n        // Prevent the button from resetting the width when the button state\n        // changes since we need more control over the width when collapsing\n        // the buttons\n        delete buttonTheme.width;\n        delete buttonTheme.states;\n        this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n        const dropdown = this.dropdown = createElement('select', void 0, {\n            position: 'absolute',\n            padding: 0,\n            border: 0,\n            cursor: 'pointer',\n            opacity: 0.0001\n        }, this.div);\n        // Create a label for dropdown select element\n        const userButtonTheme = chart.userOptions.rangeSelector?.buttonTheme;\n        this.dropdownLabel = renderer.button('', 0, 0, () => { }, RangeSelector_merge(buttonTheme, {\n            'stroke-width': RangeSelector_pick(buttonTheme['stroke-width'], 0),\n            width: 'auto',\n            paddingLeft: RangeSelector_pick(options.buttonTheme.paddingLeft, userButtonTheme?.padding, 8),\n            paddingRight: RangeSelector_pick(options.buttonTheme.paddingRight, userButtonTheme?.padding, 8)\n        }), states && states.hover, states && states.select, states && states.disabled)\n            .hide()\n            .add(this.group);\n        // Prevent page zoom on iPhone\n        RangeSelector_addEvent(dropdown, 'touchstart', () => {\n            dropdown.style.fontSize = '16px';\n        });\n        // Forward events from select to button\n        const mouseOver = (external_highcharts_src_js_default_default()).isMS ? 'mouseover' : 'mouseenter', mouseOut = (external_highcharts_src_js_default_default()).isMS ? 'mouseout' : 'mouseleave';\n        RangeSelector_addEvent(dropdown, mouseOver, () => {\n            RangeSelector_fireEvent(this.dropdownLabel.element, mouseOver);\n        });\n        RangeSelector_addEvent(dropdown, mouseOut, () => {\n            RangeSelector_fireEvent(this.dropdownLabel.element, mouseOut);\n        });\n        RangeSelector_addEvent(dropdown, 'change', () => {\n            const button = this.buttons[dropdown.selectedIndex - 1];\n            RangeSelector_fireEvent(button.element, 'click');\n        });\n        this.zoomText = renderer\n            .label(lang.rangeSelectorZoom || '', 0)\n            .attr({\n            padding: options.buttonTheme.padding,\n            height: options.buttonTheme.height,\n            paddingLeft: 0,\n            paddingRight: 0\n        })\n            .add(this.buttonGroup);\n        if (!this.chart.styledMode) {\n            this.zoomText.css(options.labelStyle);\n            (_a = options.buttonTheme)['stroke-width'] ?? (_a['stroke-width'] = 0);\n        }\n        createElement('option', {\n            textContent: this.zoomText.textStr,\n            disabled: true\n        }, void 0, dropdown);\n        this.createButtons();\n    }\n    createButtons() {\n        const { options } = this;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        const states = buttonTheme && buttonTheme.states;\n        // Prevent the button from resetting the width when the button state\n        // changes since we need more control over the width when collapsing\n        // the buttons\n        const width = buttonTheme.width || 28;\n        delete buttonTheme.width;\n        delete buttonTheme.states;\n        this.buttonOptions.forEach((rangeOptions, i) => {\n            this.createButton(rangeOptions, i, width, states);\n        });\n    }\n    createButton(rangeOptions, i, width, states) {\n        const { dropdown, buttons, chart, options } = this;\n        const renderer = chart.renderer;\n        const buttonTheme = RangeSelector_merge(options.buttonTheme);\n        dropdown?.add(createElement('option', {\n            textContent: rangeOptions.title || rangeOptions.text\n        }), i + 2);\n        buttons[i] = renderer\n            .button(rangeOptions.text ?? '', 0, 0, (e) => {\n            // Extract events from button object and call\n            const buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n            let callDefaultEvent;\n            if (buttonEvents) {\n                callDefaultEvent =\n                    buttonEvents.call(rangeOptions, e);\n            }\n            if (callDefaultEvent !== false) {\n                this.clickButton(i);\n            }\n            this.isActive = true;\n        }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n            .attr({\n            'text-align': 'center',\n            width\n        })\n            .add(this.buttonGroup);\n        if (rangeOptions.title) {\n            buttons[i].attr('title', rangeOptions.title);\n        }\n    }\n    /**\n     * Align the elements horizontally and vertically.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#alignElements\n     */\n    alignElements() {\n        const { buttonGroup, buttons, chart, group, inputGroup, options, zoomText } = this;\n        const chartOptions = chart.options;\n        const navButtonOptions = (chartOptions.exporting &&\n            chartOptions.exporting.enabled !== false &&\n            chartOptions.navigation &&\n            chartOptions.navigation.buttonOptions);\n        const { buttonPosition, inputPosition, verticalAlign } = options;\n        // Get the X offset required to avoid overlapping with the exporting\n        // button. This is used both by the buttonGroup and the inputGroup.\n        const getXOffsetForExportButton = (group, position, rightAligned) => {\n            if (navButtonOptions &&\n                this.titleCollision(chart) &&\n                verticalAlign === 'top' &&\n                rightAligned && ((position.y -\n                group.getBBox().height - 12) <\n                ((navButtonOptions.y || 0) +\n                    (navButtonOptions.height || 0) +\n                    chart.spacing[0]))) {\n                return -40;\n            }\n            return 0;\n        };\n        let plotLeft = chart.plotLeft;\n        if (group && buttonPosition && inputPosition) {\n            let translateX = buttonPosition.x - chart.spacing[3];\n            if (buttonGroup) {\n                this.positionButtons();\n                if (!this.initialButtonGroupWidth) {\n                    let width = 0;\n                    if (zoomText) {\n                        width += zoomText.getBBox().width + 5;\n                    }\n                    buttons.forEach((button, i) => {\n                        width += button.width || 0;\n                        if (i !== buttons.length - 1) {\n                            width += options.buttonSpacing;\n                        }\n                    });\n                    this.initialButtonGroupWidth = width;\n                }\n                plotLeft -= chart.spacing[3];\n                // Detect collision between button group and exporting\n                const xOffsetForExportButton = getXOffsetForExportButton(buttonGroup, buttonPosition, buttonPosition.align === 'right' ||\n                    inputPosition.align === 'right');\n                this.alignButtonGroup(xOffsetForExportButton);\n                if (this.buttonGroup?.translateY) {\n                    this.dropdownLabel\n                        .attr({ y: this.buttonGroup.translateY });\n                }\n                // Skip animation\n                group.placed = buttonGroup.placed = chart.hasLoaded;\n            }\n            let xOffsetForExportButton = 0;\n            if (options.inputEnabled && inputGroup) {\n                // Detect collision between the input group and exporting button\n                xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition, buttonPosition.align === 'right' ||\n                    inputPosition.align === 'right');\n                if (inputPosition.align === 'left') {\n                    translateX = plotLeft;\n                }\n                else if (inputPosition.align === 'right') {\n                    translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                }\n                // Update the alignment to the updated spacing box\n                inputGroup.align({\n                    y: inputPosition.y,\n                    width: inputGroup.getBBox().width,\n                    align: inputPosition.align,\n                    // Fix wrong getBBox() value on right align\n                    x: inputPosition.x + translateX - 2\n                }, true, chart.spacingBox);\n                // Skip animation\n                inputGroup.placed = chart.hasLoaded;\n            }\n            this.handleCollision(xOffsetForExportButton);\n            // Vertical align\n            group.align({\n                verticalAlign\n            }, true, chart.spacingBox);\n            const alignTranslateY = group.alignAttr.translateY;\n            // Set position\n            let groupHeight = group.getBBox().height + 20; // # 20 padding\n            let translateY = 0;\n            // Calculate bottom position\n            if (verticalAlign === 'bottom') {\n                const legendOptions = chart.legend && chart.legend.options;\n                const legendHeight = (legendOptions &&\n                    legendOptions.verticalAlign === 'bottom' &&\n                    legendOptions.enabled &&\n                    !legendOptions.floating ?\n                    (chart.legend.legendHeight +\n                        RangeSelector_pick(legendOptions.margin, 10)) :\n                    0);\n                groupHeight = groupHeight + legendHeight - 20;\n                translateY = (alignTranslateY -\n                    groupHeight -\n                    (options.floating ? 0 : options.y) -\n                    (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                    10 // 10 spacing\n                );\n            }\n            if (verticalAlign === 'top') {\n                if (options.floating) {\n                    translateY = 0;\n                }\n                if (chart.titleOffset && chart.titleOffset[0]) {\n                    translateY = chart.titleOffset[0];\n                }\n                translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n            }\n            else if (verticalAlign === 'middle') {\n                if (inputPosition.y === buttonPosition.y) {\n                    translateY = alignTranslateY;\n                }\n                else if (inputPosition.y || buttonPosition.y) {\n                    if (inputPosition.y < 0 ||\n                        buttonPosition.y < 0) {\n                        translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                    }\n                    else {\n                        translateY = alignTranslateY - groupHeight;\n                    }\n                }\n            }\n            group.translate(options.x, options.y + Math.floor(translateY));\n            // Translate HTML inputs\n            const { minInput, maxInput, dropdown } = this;\n            if (options.inputEnabled && minInput && maxInput) {\n                minInput.style.marginTop = group.translateY + 'px';\n                maxInput.style.marginTop = group.translateY + 'px';\n            }\n            if (dropdown) {\n                dropdown.style.marginTop = group.translateY + 'px';\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    redrawElements() {\n        const chart = this.chart, { inputBoxHeight, inputBoxBorderColor } = this.options;\n        this.maxDateBox?.attr({\n            height: inputBoxHeight\n        });\n        this.minDateBox?.attr({\n            height: inputBoxHeight\n        });\n        if (!chart.styledMode) {\n            this.maxDateBox?.attr({\n                stroke: inputBoxBorderColor\n            });\n            this.minDateBox?.attr({\n                stroke: inputBoxBorderColor\n            });\n        }\n        if (this.isDirty) {\n            this.isDirty = false;\n            // Reset this prop to force redrawing collapse of buttons\n            this.isCollapsed = void 0;\n            const newButtonsOptions = this.options.buttons ?? [];\n            const btnLength = Math.min(newButtonsOptions.length, this.buttonOptions.length);\n            const { dropdown, options } = this;\n            const buttonTheme = RangeSelector_merge(options.buttonTheme);\n            const states = buttonTheme && buttonTheme.states;\n            // Prevent the button from resetting the width when the button state\n            // changes since we need more control over the width when collapsing\n            // the buttons\n            const width = buttonTheme.width || 28;\n            // Destroy additional buttons\n            if (newButtonsOptions.length < this.buttonOptions.length) {\n                for (let i = this.buttonOptions.length - 1; i >= newButtonsOptions.length; i--) {\n                    const btn = this.buttons.pop();\n                    btn?.destroy();\n                    this.dropdown?.options.remove(i + 1);\n                }\n            }\n            // Update current buttons\n            for (let i = btnLength - 1; i >= 0; i--) {\n                const diff = diffObjects(newButtonsOptions[i], this.buttonOptions[i]);\n                if (Object.keys(diff).length !== 0) {\n                    const rangeOptions = newButtonsOptions[i];\n                    this.buttons[i].destroy();\n                    dropdown?.options.remove(i + 1);\n                    this.createButton(rangeOptions, i, width, states);\n                    this.computeButtonRange(rangeOptions);\n                }\n            }\n            // Create missing buttons\n            if (newButtonsOptions.length > this.buttonOptions.length) {\n                for (let i = this.buttonOptions.length; i < newButtonsOptions.length; i++) {\n                    this.createButton(newButtonsOptions[i], i, width, states);\n                    this.computeButtonRange(newButtonsOptions[i]);\n                }\n            }\n            this.buttonOptions = this.options.buttons ?? [];\n            if (RangeSelector_defined(this.options.selected) && this.buttons.length) {\n                this.clickButton(this.options.selected, false);\n            }\n        }\n    }\n    /**\n     * Align the button group horizontally and vertically.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#alignButtonGroup\n     * @param {number} xOffsetForExportButton\n     * @param {number} [width]\n     */\n    alignButtonGroup(xOffsetForExportButton, width) {\n        const { chart, options, buttonGroup, dropdown, dropdownLabel } = this;\n        const { buttonPosition } = options;\n        const plotLeft = chart.plotLeft - chart.spacing[3];\n        let translateX = buttonPosition.x - chart.spacing[3];\n        let dropdownTranslateX = chart.plotLeft;\n        if (buttonPosition.align === 'right') {\n            translateX += xOffsetForExportButton - plotLeft; // #13014\n            if (this.hasVisibleDropdown) {\n                dropdownTranslateX = chart.chartWidth +\n                    xOffsetForExportButton -\n                    this.maxButtonWidth() - 20;\n            }\n        }\n        else if (buttonPosition.align === 'center') {\n            translateX -= plotLeft / 2;\n            if (this.hasVisibleDropdown) {\n                dropdownTranslateX = chart.chartWidth / 2 -\n                    this.maxButtonWidth();\n            }\n        }\n        if (dropdown) {\n            RangeSelector_css(dropdown, {\n                left: dropdownTranslateX + 'px',\n                top: buttonGroup?.translateY + 'px'\n            });\n        }\n        dropdownLabel?.attr({\n            x: dropdownTranslateX\n        });\n        if (buttonGroup) {\n            // Align button group\n            buttonGroup.align({\n                y: buttonPosition.y,\n                width: RangeSelector_pick(width, this.initialButtonGroupWidth),\n                align: buttonPosition.align,\n                x: translateX\n            }, true, chart.spacingBox);\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#positionButtons\n     */\n    positionButtons() {\n        const { buttons, chart, options, zoomText } = this;\n        const verb = chart.hasLoaded ? 'animate' : 'attr';\n        const { buttonPosition } = options;\n        const plotLeft = chart.plotLeft;\n        let buttonLeft = plotLeft;\n        if (zoomText && zoomText.visibility !== 'hidden') {\n            // #8769, allow dynamically updating margins\n            zoomText[verb]({\n                x: RangeSelector_pick(plotLeft + buttonPosition.x, plotLeft)\n            });\n            // Button start position\n            buttonLeft += buttonPosition.x +\n                zoomText.getBBox().width + 5;\n        }\n        for (let i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n            if (buttons[i].visibility !== 'hidden') {\n                buttons[i][verb]({ x: buttonLeft });\n                // Increase the button position for the next button\n                buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n            }\n            else {\n                buttons[i][verb]({ x: plotLeft });\n            }\n        }\n    }\n    /**\n     * Handle collision between the button group and the input group\n     *\n     * @private\n     * @function Highcharts.RangeSelector#handleCollision\n     *\n     * @param  {number} xOffsetForExportButton\n     *                  The X offset of the group required to make room for the\n     *                  exporting button\n     */\n    handleCollision(xOffsetForExportButton) {\n        const { chart, buttonGroup, inputGroup, initialButtonGroupWidth } = this;\n        const { buttonPosition, dropdown, inputPosition } = this.options;\n        const moveInputsDown = () => {\n            if (inputGroup && buttonGroup) {\n                inputGroup.attr({\n                    translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                        0 :\n                        -xOffsetForExportButton),\n                    translateY: inputGroup.alignAttr.translateY +\n                        buttonGroup.getBBox().height + 10\n                });\n            }\n        };\n        // Detect collision\n        if (inputGroup && buttonGroup) {\n            if (inputPosition.align === buttonPosition.align) {\n                moveInputsDown();\n                if (initialButtonGroupWidth >\n                    chart.plotWidth + xOffsetForExportButton - 20) {\n                    this.collapseButtons();\n                }\n                else {\n                    this.expandButtons();\n                }\n            }\n            else if (initialButtonGroupWidth -\n                xOffsetForExportButton +\n                inputGroup.getBBox().width >\n                chart.plotWidth) {\n                if (dropdown === 'responsive') {\n                    this.collapseButtons();\n                }\n                else {\n                    moveInputsDown();\n                }\n            }\n            else {\n                this.expandButtons();\n            }\n        }\n        else if (buttonGroup && dropdown === 'responsive') {\n            if (initialButtonGroupWidth > chart.plotWidth) {\n                this.collapseButtons();\n            }\n            else {\n                this.expandButtons();\n            }\n        }\n        // Forced states\n        if (buttonGroup) {\n            if (dropdown === 'always') {\n                this.collapseButtons();\n            }\n            if (dropdown === 'never') {\n                this.expandButtons();\n            }\n        }\n        this.alignButtonGroup(xOffsetForExportButton);\n    }\n    /**\n     * Collapse the buttons and show the select element.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#collapseButtons\n     * @param {number} xOffsetForExportButton\n     */\n    collapseButtons() {\n        const { buttons, zoomText } = this;\n        if (this.isCollapsed === true) {\n            return;\n        }\n        this.isCollapsed = true;\n        zoomText.hide();\n        buttons.forEach((button) => void button.hide());\n        this.showDropdown();\n    }\n    /**\n     * Show all the buttons and hide the select element.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#expandButtons\n     */\n    expandButtons() {\n        const { buttons, zoomText } = this;\n        if (this.isCollapsed === false) {\n            return;\n        }\n        this.isCollapsed = false;\n        this.hideDropdown();\n        zoomText.show();\n        buttons.forEach((button) => void button.show());\n        this.positionButtons();\n    }\n    /**\n     * Position the select element on top of the button.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#showDropdown\n     */\n    showDropdown() {\n        const { buttonGroup, dropdownLabel, dropdown } = this;\n        if (buttonGroup && dropdown) {\n            dropdownLabel.show();\n            RangeSelector_css(dropdown, { visibility: 'inherit' });\n            this.hasVisibleDropdown = true;\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.RangeSelector#hideDropdown\n     */\n    hideDropdown() {\n        const { dropdown } = this;\n        if (dropdown) {\n            this.dropdownLabel.hide();\n            RangeSelector_css(dropdown, {\n                visibility: 'hidden',\n                width: '1px',\n                height: '1px'\n            });\n            this.hasVisibleDropdown = false;\n        }\n    }\n    /**\n     * Extracts height of range selector\n     *\n     * @private\n     * @function Highcharts.RangeSelector#getHeight\n     * @return {number}\n     * Returns rangeSelector height\n     */\n    getHeight() {\n        const rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n        let rangeSelectorHeight = 0;\n        if (options.height) {\n            return options.height;\n        }\n        // Align the elements before we read the height in case we're switching\n        // between wrapped and non-wrapped layout\n        this.alignElements();\n        rangeSelectorHeight = rangeSelectorGroup ?\n            // 13px to keep back compatibility\n            (rangeSelectorGroup.getBBox(true).height) + 13 +\n                yPosition :\n            0;\n        const minPosition = Math.min(inputPositionY, buttonPositionY);\n        if ((inputPositionY < 0 && buttonPositionY < 0) ||\n            (inputPositionY > 0 && buttonPositionY > 0)) {\n            rangeSelectorHeight += Math.abs(minPosition);\n        }\n        return rangeSelectorHeight;\n    }\n    /**\n     * Detect collision with title or subtitle\n     *\n     * @private\n     * @function Highcharts.RangeSelector#titleCollision\n     * @return {boolean}\n     * Returns collision status\n     */\n    titleCollision(chart) {\n        return !(chart.options.title.text ||\n            chart.options.subtitle.text);\n    }\n    /**\n     * Update the range selector with new options\n     *\n     * @private\n     * @function Highcharts.RangeSelector#update\n     * @param {Highcharts.RangeSelectorOptions} options\n     */\n    update(options, redraw = true) {\n        const chart = this.chart;\n        RangeSelector_merge(true, this.options, options);\n        if (this.options.selected &&\n            this.options.selected >= this.options.buttons.length) {\n            this.options.selected = void 0;\n            chart.options.rangeSelector.selected = void 0;\n        }\n        if (RangeSelector_defined(options.enabled)) {\n            this.destroy();\n            return this.init(chart);\n        }\n        this.isDirty = !!options.buttons;\n        if (redraw) {\n            this.render();\n        }\n    }\n    /**\n     * Destroys allocated elements.\n     *\n     * @private\n     * @function Highcharts.RangeSelector#destroy\n     */\n    destroy() {\n        const rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n        if (rSelector.eventsToUnbind) {\n            rSelector.eventsToUnbind.forEach((unbind) => unbind());\n            rSelector.eventsToUnbind = void 0;\n        }\n        // Destroy elements in collections\n        RangeSelector_destroyObjectProperties(rSelector.buttons);\n        // Clear input element events\n        if (minInput) {\n            minInput.onfocus = minInput.onblur = minInput.onchange = null;\n        }\n        if (maxInput) {\n            maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n        }\n        // Destroy HTML and SVG elements\n        RangeSelector_objectEach(rSelector, function (val, key) {\n            if (val && key !== 'chart') {\n                if (val instanceof (external_highcharts_src_js_default_SVGElement_default())) {\n                    // SVGElement\n                    val.destroy();\n                }\n                else if (val instanceof window.HTMLElement) {\n                    // HTML element\n                    discardElement(val);\n                }\n                delete rSelector[key];\n            }\n            if (val !== RangeSelector.prototype[key]) {\n                rSelector[key] = null;\n            }\n        }, this);\n        this.buttons = [];\n    }\n}\nRangeSelector_extend(RangeSelector.prototype, {\n    /**\n     * The date formats to use when setting min, max and value on date inputs.\n     * @private\n     */\n    inputTypeFormats: {\n        'datetime-local': '%Y-%m-%dT%H:%M:%S',\n        'date': '%Y-%m-%d',\n        'time': '%H:%M:%S'\n    }\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const RangeSelector_RangeSelector = (RangeSelector);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Define the time span for the button\n *\n * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n */\n/**\n * Callback function to react on button clicks.\n *\n * @callback Highcharts.RangeSelectorClickCallbackFunction\n *\n * @param {global.Event} e\n *        Event arguments.\n *\n * @param {boolean|undefined}\n *        Return false to cancel the default button event.\n */\n/**\n * Callback function to parse values entered in the input boxes and return a\n * valid JavaScript time as milliseconds since 1970.\n *\n * @callback Highcharts.RangeSelectorParseCallbackFunction\n *\n * @param {string} value\n *        Input value to parse.\n *\n * @return {number}\n *         Parsed JavaScript time value.\n */\n(''); // Keeps doclets above in JS file\n\n;// external \"./pathfinder.js\"\nvar x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var y = (x) => (() => (x))\n    const external_pathfinder_src_js_namespaceObject = x({  });\n;// external \"./static-scale.js\"\nvar external_static_scale_src_js_x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var external_static_scale_src_js_y = (x) => (() => (x))\n    const external_static_scale_src_js_namespaceObject = external_static_scale_src_js_x({  });\n;// external \"./xrange.js\"\nvar external_xrange_src_js_x = (y) => {\n\tvar x = {}; __webpack_require__.d(x,\n    \ty); return x\n    } \n    var external_xrange_src_js_y = (x) => (() => (x))\n    const external_xrange_src_js_namespaceObject = external_xrange_src_js_x({  });\n;// ./code/es-modules/Series/Gantt/GanttPoint.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { xrange: { prototype: { pointClass: XRangePoint } } } = (external_highcharts_src_js_default_SeriesRegistry_default()).seriesTypes;\n/* *\n *\n *  Class\n *\n * */\nclass GanttPoint extends XRangePoint {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static setGanttPointAliases(options, chart) {\n        options.x = options.start = chart.time.parse(options.start ?? options.x);\n        options.x2 = options.end = chart.time.parse(options.end ?? options.x2);\n        options.partialFill = options.completed =\n            options.completed ?? options.partialFill;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Applies the options containing the x and y data and possible some\n     * extra properties. This is called on point init or from point.update.\n     *\n     * @private\n     * @function Highcharts.Point#applyOptions\n     *\n     * @param {Object} options\n     *        The point options\n     *\n     * @param {number} x\n     *        The x value\n     *\n     * @return {Highcharts.Point}\n     *         The Point instance\n     */\n    applyOptions(options, x) {\n        const ganttPoint = super.applyOptions(options, x);\n        GanttPoint.setGanttPointAliases(ganttPoint, ganttPoint.series.chart);\n        this.isNull = !this.isValid?.();\n        return ganttPoint;\n    }\n    isValid() {\n        return ((typeof this.start === 'number' ||\n            typeof this.x === 'number') &&\n            (typeof this.end === 'number' ||\n                typeof this.x2 === 'number' ||\n                this.milestone));\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gantt_GanttPoint = (GanttPoint);\n\n;// ./code/es-modules/Series/Gantt/GanttSeriesDefaults.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { isNumber: GanttSeriesDefaults_isNumber } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `gantt` series. If the [type](#series.gantt.type) option is not specified,\n * it is inherited from [chart.type](#chart.type).\n *\n * @extends      plotOptions.xrange\n * @product      gantt\n * @requires     highcharts-gantt\n * @optionparent plotOptions.gantt\n */\nconst GanttSeriesDefaults = {\n    // Options - default options merged with parent\n    grouping: false,\n    dataLabels: {\n        enabled: true\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size: 0.8em\">{series.name}</span><br/>',\n        pointFormat: null,\n        pointFormatter: function () {\n            const point = this, series = point.series, xAxis = series.xAxis, formats = series.tooltipOptions.dateTimeLabelFormats, startOfWeek = xAxis.options.startOfWeek, ttOptions = series.tooltipOptions, milestone = point.options.milestone;\n            let format = ttOptions.xDateFormat, retVal = '<b>' + (point.name || point.yCategory) + '</b>';\n            if (ttOptions.pointFormat) {\n                return point.tooltipFormatter(ttOptions.pointFormat);\n            }\n            if (!format && GanttSeriesDefaults_isNumber(point.start)) {\n                format = series.chart.time.getDateFormat(xAxis.closestPointRange, point.start, startOfWeek, formats || {});\n            }\n            const start = series.chart.time.dateFormat(format, point.start), end = series.chart.time.dateFormat(format, point.end);\n            retVal += '<br/>';\n            if (!milestone) {\n                retVal += 'Start: ' + start + '<br/>';\n                retVal += 'End: ' + end + '<br/>';\n            }\n            else {\n                retVal += start + '<br/>';\n            }\n            return retVal;\n        }\n    },\n    connectors: {\n        type: 'simpleConnect',\n        /**\n         * @declare Highcharts.ConnectorsAnimationOptionsObject\n         */\n        animation: {\n            reversed: true // Dependencies go from child to parent\n        },\n        radius: 0,\n        startMarker: {\n            enabled: true,\n            symbol: 'arrow-filled',\n            radius: 4,\n            fill: '#fa0',\n            align: 'left'\n        },\n        endMarker: {\n            enabled: false, // Only show arrow on the dependent task\n            align: 'right'\n        }\n    }\n};\n/**\n * A `gantt` series.\n *\n * @extends   series,plotOptions.gantt\n * @excluding boostThreshold, dashStyle, findNearestPointBy,\n *            getExtremesFromAll, marker, negativeColor, pointInterval,\n *            pointIntervalUnit, pointPlacement, pointStart\n * @product   gantt\n * @requires  highcharts-gantt\n * @apioption series.gantt\n */\n/**\n * Data for a Gantt series.\n *\n * @declare   Highcharts.GanttPointOptionsObject\n * @type      {Array<*>}\n * @extends   series.xrange.data\n * @excluding className, connect, dataLabels, events,\n *            partialFill, selected, x, x2\n * @product   gantt\n * @apioption series.gantt.data\n */\n/**\n * Whether the grid node belonging to this point should start as collapsed. Used\n * in axes of type treegrid.\n *\n * @sample {gantt} gantt/treegrid-axis/collapsed/\n *         Start as collapsed\n *\n * @type      {boolean}\n * @default   false\n * @product   gantt\n * @apioption series.gantt.data.collapsed\n */\n/**\n * The start time of a task. May be a timestamp or a date string.\n *\n * @type      {number|string}\n * @product   gantt\n * @apioption series.gantt.data.start\n */\n/**\n * The end time of a task. May be a timestamp or a date string.\n *\n * @type      {number|string}\n * @product   gantt\n * @apioption series.gantt.data.end\n */\n/**\n * The Y value of a task.\n *\n * @type      {number}\n * @product   gantt\n * @apioption series.gantt.data.y\n */\n/**\n * The name of a task. If a `treegrid` y-axis is used (default in Gantt charts),\n * this will be picked up automatically, and used to calculate the y-value.\n *\n * @type      {string}\n * @product   gantt\n * @apioption series.gantt.data.name\n */\n/**\n * Progress indicator, how much of the task completed. If it is a number, the\n * `fill` will be applied automatically.\n *\n * @sample {gantt} gantt/demo/progress-indicator\n *         Progress indicator\n *\n * @type      {number|*}\n * @extends   series.xrange.data.partialFill\n * @product   gantt\n * @apioption series.gantt.data.completed\n */\n/**\n * The amount of the progress indicator, ranging from 0 (not started) to 1\n * (finished).\n *\n * @type      {number}\n * @default   0\n * @apioption series.gantt.data.completed.amount\n */\n/**\n * The fill of the progress indicator. Defaults to a darkened variety of the\n * main color.\n *\n * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n * @apioption series.gantt.data.completed.fill\n */\n/**\n * The ID of the point (task) that this point depends on in Gantt charts.\n * Aliases [connect](series.xrange.data.connect). Can also be an object,\n * specifying further connecting [options](series.gantt.connectors) between the\n * points. Multiple connections can be specified by providing an array.\n *\n * @sample gantt/demo/project-management\n *         Dependencies\n * @sample gantt/pathfinder/demo\n *         Different connection types\n *\n * @type      {string|Array<string|*>|*}\n * @extends   series.xrange.data.connect\n * @since     6.2.0\n * @product   gantt\n * @apioption series.gantt.data.dependency\n */\n/**\n * Whether this point is a milestone. If so, only the `start` option is handled,\n * while `end` is ignored.\n *\n * @sample gantt/gantt/milestones\n *         Milestones\n *\n * @type      {boolean}\n * @since     6.2.0\n * @product   gantt\n * @apioption series.gantt.data.milestone\n */\n/**\n * The ID of the parent point (task) of this point in Gantt charts.\n *\n * @sample gantt/demo/subtasks\n *         Gantt chart with subtasks\n *\n * @type      {string}\n * @since     6.2.0\n * @product   gantt\n * @apioption series.gantt.data.parent\n */\n/**\n * @excluding afterAnimate\n * @apioption series.gantt.events\n */\n''; // Detachs doclets above\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gantt_GanttSeriesDefaults = (GanttSeriesDefaults);\n\n;// ./code/es-modules/Series/PathUtilities.js\n/* *\n *\n *  (c) 2010-2025 Pawel Lysy\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nconst getLinkPath = {\n    'default': getDefaultPath,\n    straight: getStraightPath,\n    curved: getCurvedPath\n};\n/**\n *\n */\nfunction getDefaultPath(pathParams) {\n    const { x1, y1, x2, y2, width = 0, inverted = false, radius, parentVisible } = pathParams;\n    const path = [\n        ['M', x1, y1],\n        ['L', x1, y1],\n        ['C', x1, y1, x1, y2, x1, y2],\n        ['L', x1, y2],\n        ['C', x1, y1, x1, y2, x1, y2],\n        ['L', x1, y2]\n    ];\n    return parentVisible ?\n        applyRadius([\n            ['M', x1, y1],\n            ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n            ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n            ['L', x2, y2]\n        ], radius) :\n        path;\n}\n/**\n *\n */\nfunction getStraightPath(pathParams) {\n    const { x1, y1, x2, y2, width = 0, inverted = false, parentVisible } = pathParams;\n    return parentVisible ? [\n        ['M', x1, y1],\n        ['L', x1 + width * (inverted ? -1 : 1), y2],\n        ['L', x2, y2]\n    ] : [\n        ['M', x1, y1],\n        ['L', x1, y2],\n        ['L', x1, y2]\n    ];\n}\n/**\n *\n */\nfunction getCurvedPath(pathParams) {\n    const { x1, y1, x2, y2, offset = 0, width = 0, inverted = false, parentVisible } = pathParams;\n    return parentVisible ?\n        [\n            ['M', x1, y1],\n            [\n                'C',\n                x1 + offset,\n                y1,\n                x1 - offset + width * (inverted ? -1 : 1),\n                y2,\n                x1 + width * (inverted ? -1 : 1),\n                y2\n            ],\n            ['L', x2, y2]\n        ] :\n        [\n            ['M', x1, y1],\n            ['C', x1, y1, x1, y2, x1, y2],\n            ['L', x2, y2]\n        ];\n}\n/**\n * General function to apply corner radius to a path\n * @private\n */\nfunction applyRadius(path, r) {\n    const d = [];\n    for (let i = 0; i < path.length; i++) {\n        const x = path[i][1];\n        const y = path[i][2];\n        if (typeof x === 'number' && typeof y === 'number') {\n            // MoveTo\n            if (i === 0) {\n                d.push(['M', x, y]);\n            }\n            else if (i === path.length - 1) {\n                d.push(['L', x, y]);\n                // CurveTo\n            }\n            else if (r) {\n                const prevSeg = path[i - 1];\n                const nextSeg = path[i + 1];\n                if (prevSeg && nextSeg) {\n                    const x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                    // Only apply to breaks\n                    if (typeof x1 === 'number' &&\n                        typeof x2 === 'number' &&\n                        typeof y1 === 'number' &&\n                        typeof y2 === 'number' &&\n                        x1 !== x2 &&\n                        y1 !== y2) {\n                        const directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                        d.push([\n                            'L',\n                            x - directionX * Math.min(Math.abs(x - x1), r),\n                            y - directionY * Math.min(Math.abs(y - y1), r)\n                        ], [\n                            'C',\n                            x,\n                            y,\n                            x,\n                            y,\n                            x + directionX * Math.min(Math.abs(x - x2), r),\n                            y + directionY * Math.min(Math.abs(y - y2), r)\n                        ]);\n                    }\n                }\n                // LineTo\n            }\n            else {\n                d.push(['L', x, y]);\n            }\n        }\n    }\n    return d;\n}\nconst PathUtilities = {\n    applyRadius,\n    getLinkPath\n};\n/* harmony default export */ const Series_PathUtilities = (PathUtilities);\n\n;// ./code/es-modules/Gantt/PathfinderAlgorithms.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Author: Ã˜ystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { pick: PathfinderAlgorithms_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst { min: PathfinderAlgorithms_min, max: PathfinderAlgorithms_max, abs } = Math;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get index of last obstacle before xMin. Employs a type of binary search, and\n * thus requires that obstacles are sorted by xMin value.\n *\n * @private\n * @function findLastObstacleBefore\n *\n * @param {Array<object>} obstacles\n *        Array of obstacles to search in.\n *\n * @param {number} xMin\n *        The xMin threshold.\n *\n * @param {number} [startIx]\n *        Starting index to search from. Must be within array range.\n *\n * @return {number}\n *         The index of the last obstacle element before xMin.\n */\nfunction findLastObstacleBefore(obstacles, xMin, startIx) {\n    const min = xMin - 0.0000001; // Make sure we include all obstacles at xMin\n    let left = startIx || 0, // Left limit\n    right = obstacles.length - 1, // Right limit\n    cursor, cmp;\n    while (left <= right) {\n        cursor = (right + left) >> 1;\n        cmp = min - obstacles[cursor].xMin;\n        if (cmp > 0) {\n            left = cursor + 1;\n        }\n        else if (cmp < 0) {\n            right = cursor - 1;\n        }\n        else {\n            return cursor;\n        }\n    }\n    return left > 0 ? left - 1 : 0;\n}\n/**\n * Test if a point lays within an obstacle.\n *\n * @private\n * @function pointWithinObstacle\n *\n * @param {Object} obstacle\n *        Obstacle to test.\n *\n * @param {Highcharts.Point} point\n *        Point with x/y props.\n *\n * @return {boolean}\n *         Whether point is within the obstacle or not.\n */\nfunction pointWithinObstacle(obstacle, point) {\n    return (point.x <= obstacle.xMax &&\n        point.x >= obstacle.xMin &&\n        point.y <= obstacle.yMax &&\n        point.y >= obstacle.yMin);\n}\n/**\n * Find the index of an obstacle that wraps around a point.\n * Returns -1 if not found.\n *\n * @private\n * @function findObstacleFromPoint\n *\n * @param {Array<object>} obstacles\n *        Obstacles to test.\n *\n * @param {Highcharts.Point} point\n *        Point with x/y props.\n *\n * @return {number}\n *         Ix of the obstacle in the array, or -1 if not found.\n */\nfunction findObstacleFromPoint(obstacles, point) {\n    let i = findLastObstacleBefore(obstacles, point.x + 1) + 1;\n    while (i--) {\n        if (obstacles[i].xMax >= point.x &&\n            // Optimization using lazy evaluation\n            pointWithinObstacle(obstacles[i], point)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Get SVG path array from array of line segments.\n *\n * @private\n * @function pathFromSegments\n *\n * @param {Array<object>} segments\n *        The segments to build the path from.\n *\n * @return {Highcharts.SVGPathArray}\n *         SVG path array as accepted by the SVG Renderer.\n */\nfunction pathFromSegments(segments) {\n    const path = [];\n    if (segments.length) {\n        path.push(['M', segments[0].start.x, segments[0].start.y]);\n        for (let i = 0; i < segments.length; ++i) {\n            path.push(['L', segments[i].end.x, segments[i].end.y]);\n        }\n    }\n    return path;\n}\n/**\n * Limits obstacle max/mins in all directions to bounds. Modifies input\n * obstacle.\n *\n * @private\n * @function limitObstacleToBounds\n *\n * @param {Object} obstacle\n *        Obstacle to limit.\n *\n * @param {Object} bounds\n *        Bounds to use as limit.\n *\n * @return {void}\n */\nfunction limitObstacleToBounds(obstacle, bounds) {\n    obstacle.yMin = PathfinderAlgorithms_max(obstacle.yMin, bounds.yMin);\n    obstacle.yMax = PathfinderAlgorithms_min(obstacle.yMax, bounds.yMax);\n    obstacle.xMin = PathfinderAlgorithms_max(obstacle.xMin, bounds.xMin);\n    obstacle.xMax = PathfinderAlgorithms_min(obstacle.xMax, bounds.xMax);\n}\n/**\n * Get an SVG path from a starting coordinate to an ending coordinate.\n * Draws a straight line.\n *\n * @function Highcharts.Pathfinder.algorithms.straight\n *\n * @param {Highcharts.PositionObject} start\n *        Starting coordinate, object with x/y props.\n *\n * @param {Highcharts.PositionObject} end\n *        Ending coordinate, object with x/y props.\n *\n * @return {Object}\n *         An object with the SVG path in Array form as accepted by the SVG\n *         renderer, as well as an array of new obstacles making up this\n *         path.\n */\nfunction straight(start, end) {\n    return {\n        path: [\n            ['M', start.x, start.y],\n            ['L', end.x, end.y]\n        ],\n        obstacles: [{ start: start, end: end }]\n    };\n}\n/**\n * Find a path from a starting coordinate to an ending coordinate, using\n * right angles only, and taking only starting/ending obstacle into\n * consideration.\n *\n * @function Highcharts.Pathfinder.algorithms.simpleConnect\n *\n * @param {Highcharts.PositionObject} start\n *        Starting coordinate, object with x/y props.\n *\n * @param {Highcharts.PositionObject} end\n *        Ending coordinate, object with x/y props.\n *\n * @param {Object} options\n *        Options for the algorithm:\n *        - chartObstacles: Array of chart obstacles to avoid\n *        - startDirectionX: Optional. True if starting in the X direction.\n *          If not provided, the algorithm starts in the direction that is\n *          the furthest between start/end.\n *\n * @return {Object}\n *         An object with the SVG path in Array form as accepted by the SVG\n *         renderer, as well as an array of new obstacles making up this\n *         path.\n */\nconst simpleConnect = function (start, end, options) {\n    const segments = [], chartObstacles = options.chartObstacles, startObstacleIx = findObstacleFromPoint(chartObstacles, start), endObstacleIx = findObstacleFromPoint(chartObstacles, end);\n    let endSegment, dir = PathfinderAlgorithms_pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)) ? 'x' : 'y', startObstacle, endObstacle, waypoint, useMax, endPoint;\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Return a clone of a point with a property set from a target object,\n     * optionally with an offset\n     * @private\n     */\n    function copyFromPoint(from, fromKey, to, toKey, offset) {\n        const point = {\n            x: from.x,\n            y: from.y\n        };\n        point[fromKey] = to[toKey || fromKey] + (offset || 0);\n        return point;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Return waypoint outside obstacle.\n     * @private\n     */\n    function getMeOut(obstacle, point, direction) {\n        const useMax = abs(point[direction] - obstacle[direction + 'Min']) >\n            abs(point[direction] - obstacle[direction + 'Max']);\n        return copyFromPoint(point, direction, obstacle, direction + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1);\n    }\n    // Pull out end point\n    if (endObstacleIx > -1) {\n        endObstacle = chartObstacles[endObstacleIx];\n        waypoint = getMeOut(endObstacle, end, dir);\n        endSegment = {\n            start: waypoint,\n            end: end\n        };\n        endPoint = waypoint;\n    }\n    else {\n        endPoint = end;\n    }\n    // If an obstacle envelops the start point, add a segment to get out,\n    // and around it.\n    if (startObstacleIx > -1) {\n        startObstacle = chartObstacles[startObstacleIx];\n        waypoint = getMeOut(startObstacle, start, dir);\n        segments.push({\n            start: start,\n            end: waypoint\n        });\n        // If we are going back again, switch direction to get around start\n        // obstacle.\n        if (\n        // Going towards max from start:\n        waypoint[dir] >= start[dir] ===\n            // Going towards min to end:\n            waypoint[dir] >= endPoint[dir]) {\n            dir = dir === 'y' ? 'x' : 'y';\n            useMax = start[dir] < end[dir];\n            segments.push({\n                start: waypoint,\n                end: copyFromPoint(waypoint, dir, startObstacle, dir + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1)\n            });\n            // Switch direction again\n            dir = dir === 'y' ? 'x' : 'y';\n        }\n    }\n    // We are around the start obstacle. Go towards the end in one\n    // direction.\n    const prevWaypoint = segments.length ?\n        segments[segments.length - 1].end :\n        start;\n    waypoint = copyFromPoint(prevWaypoint, dir, endPoint);\n    segments.push({\n        start: prevWaypoint,\n        end: waypoint\n    });\n    // Final run to end point in the other direction\n    dir = dir === 'y' ? 'x' : 'y';\n    const waypoint2 = copyFromPoint(waypoint, dir, endPoint);\n    segments.push({\n        start: waypoint,\n        end: waypoint2\n    });\n    // Finally add the endSegment\n    segments.push(endSegment);\n    const path = Series_PathUtilities.applyRadius(pathFromSegments(segments), options.radius);\n    return {\n        path,\n        obstacles: segments\n    };\n};\nsimpleConnect.requiresObstacles = true;\n/**\n * Find a path from a starting coordinate to an ending coordinate, taking\n * obstacles into consideration. Might not always find the optimal path,\n * but is fast, and usually good enough.\n *\n * @function Highcharts.Pathfinder.algorithms.fastAvoid\n *\n * @param {Highcharts.PositionObject} start\n *        Starting coordinate, object with x/y props.\n *\n * @param {Highcharts.PositionObject} end\n *        Ending coordinate, object with x/y props.\n *\n * @param {Object} options\n *        Options for the algorithm.\n *        - chartObstacles:  Array of chart obstacles to avoid\n *        - lineObstacles:   Array of line obstacles to jump over\n *        - obstacleMetrics: Object with metrics of chartObstacles cached\n *        - hardBounds:      Hard boundaries to not cross\n *        - obstacleOptions: Options for the obstacles, including margin\n *        - startDirectionX: Optional. True if starting in the X direction.\n *                           If not provided, the algorithm starts in the\n *                           direction that is the furthest between\n *                           start/end.\n *\n * @return {Object}\n *         An object with the SVG path in Array form as accepted by the SVG\n *         renderer, as well as an array of new obstacles making up this\n *         path.\n */\nfunction fastAvoid(start, end, options) {\n    /*\n        Algorithm rules/description\n        - Find initial direction\n        - Determine soft/hard max for each direction.\n        - Move along initial direction until obstacle.\n        - Change direction.\n        - If hitting obstacle, first try to change length of previous line\n            before changing direction again.\n\n        Soft min/max x = start/destination x +/- widest obstacle + margin\n        Soft min/max y = start/destination y +/- tallest obstacle + margin\n\n        @todo:\n            - Make retrospective, try changing prev segment to reduce\n                corners\n            - Fix logic for breaking out of end-points - not always picking\n                the best direction currently\n            - When going around the end obstacle we should not always go the\n                shortest route, rather pick the one closer to the end point\n    */\n    const dirIsX = PathfinderAlgorithms_pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)), dir = dirIsX ? 'x' : 'y', endSegments = [], \n    // Boundaries to stay within. If beyond soft boundary, prefer to\n    // change direction ASAP. If at hard max, always change immediately.\n    metrics = options.obstacleMetrics, softMinX = PathfinderAlgorithms_min(start.x, end.x) - metrics.maxWidth - 10, softMaxX = PathfinderAlgorithms_max(start.x, end.x) + metrics.maxWidth + 10, softMinY = PathfinderAlgorithms_min(start.y, end.y) - metrics.maxHeight - 10, softMaxY = PathfinderAlgorithms_max(start.y, end.y) + metrics.maxHeight + 10;\n    let segments, useMax, extractedEndPoint, forceObstacleBreak = false, // Used in clearPathTo to keep track of\n    // when to force break through an obstacle.\n    // Obstacles\n    chartObstacles = options.chartObstacles, endObstacleIx = findLastObstacleBefore(chartObstacles, softMaxX);\n    const startObstacleIx = findLastObstacleBefore(chartObstacles, softMinX);\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * How far can you go between two points before hitting an obstacle?\n     * Does not work for diagonal lines (because it doesn't have to).\n     * @private\n     */\n    function pivotPoint(fromPoint, toPoint, directionIsX) {\n        const searchDirection = fromPoint.x < toPoint.x ? 1 : -1;\n        let firstPoint, lastPoint, highestPoint, lowestPoint;\n        if (fromPoint.x < toPoint.x) {\n            firstPoint = fromPoint;\n            lastPoint = toPoint;\n        }\n        else {\n            firstPoint = toPoint;\n            lastPoint = fromPoint;\n        }\n        if (fromPoint.y < toPoint.y) {\n            lowestPoint = fromPoint;\n            highestPoint = toPoint;\n        }\n        else {\n            lowestPoint = toPoint;\n            highestPoint = fromPoint;\n        }\n        // Go through obstacle range in reverse if toPoint is before\n        // fromPoint in the X-dimension.\n        let i = searchDirection < 0 ?\n            // Searching backwards, start at last obstacle before last point\n            PathfinderAlgorithms_min(findLastObstacleBefore(chartObstacles, lastPoint.x), chartObstacles.length - 1) :\n            // Forwards. Since we're not sorted by xMax, we have to look\n            // at all obstacles.\n            0;\n        // Go through obstacles in this X range\n        while (chartObstacles[i] && (searchDirection > 0 && chartObstacles[i].xMin <= lastPoint.x ||\n            searchDirection < 0 && chartObstacles[i].xMax >= firstPoint.x)) {\n            // If this obstacle is between from and to points in a straight\n            // line, pivot at the intersection.\n            if (chartObstacles[i].xMin <= lastPoint.x &&\n                chartObstacles[i].xMax >= firstPoint.x &&\n                chartObstacles[i].yMin <= highestPoint.y &&\n                chartObstacles[i].yMax >= lowestPoint.y) {\n                if (directionIsX) {\n                    return {\n                        y: fromPoint.y,\n                        x: fromPoint.x < toPoint.x ?\n                            chartObstacles[i].xMin - 1 :\n                            chartObstacles[i].xMax + 1,\n                        obstacle: chartObstacles[i]\n                    };\n                }\n                // Else ...\n                return {\n                    x: fromPoint.x,\n                    y: fromPoint.y < toPoint.y ?\n                        chartObstacles[i].yMin - 1 :\n                        chartObstacles[i].yMax + 1,\n                    obstacle: chartObstacles[i]\n                };\n            }\n            i += searchDirection;\n        }\n        return toPoint;\n    }\n    /**\n     * Decide in which direction to dodge or get out of an obstacle.\n     * Considers desired direction, which way is shortest, soft and hard\n     * bounds.\n     *\n     * (? Returns a string, either xMin, xMax, yMin or yMax.)\n     *\n     * @private\n     * @function\n     *\n     * @param {Object} obstacle\n     *        Obstacle to dodge/escape.\n     *\n     * @param {Object} fromPoint\n     *        Point with x/y props that's dodging/escaping.\n     *\n     * @param {Object} toPoint\n     *        Goal point.\n     *\n     * @param {boolean} dirIsX\n     *        Dodge in X dimension.\n     *\n     * @param {Object} bounds\n     *        Hard and soft boundaries.\n     *\n     * @return {boolean}\n     *         Use max or not.\n     */\n    function getDodgeDirection(obstacle, fromPoint, toPoint, dirIsX, bounds) {\n        const softBounds = bounds.soft, hardBounds = bounds.hard, dir = dirIsX ? 'x' : 'y', toPointMax = { x: fromPoint.x, y: fromPoint.y }, toPointMin = { x: fromPoint.x, y: fromPoint.y }, maxOutOfSoftBounds = obstacle[dir + 'Max'] >=\n            softBounds[dir + 'Max'], minOutOfSoftBounds = obstacle[dir + 'Min'] <=\n            softBounds[dir + 'Min'], maxOutOfHardBounds = obstacle[dir + 'Max'] >=\n            hardBounds[dir + 'Max'], minOutOfHardBounds = obstacle[dir + 'Min'] <=\n            hardBounds[dir + 'Min'], \n        // Find out if we should prefer one direction over the other if\n        // we can choose freely\n        minDistance = abs(obstacle[dir + 'Min'] - fromPoint[dir]), maxDistance = abs(obstacle[dir + 'Max'] - fromPoint[dir]);\n        let // If it's a small difference, pick the one leading towards dest\n        // point. Otherwise pick the shortest distance\n        useMax = abs(minDistance - maxDistance) < 10 ?\n            fromPoint[dir] < toPoint[dir] :\n            maxDistance < minDistance;\n        // Check if we hit any obstacles trying to go around in either\n        // direction.\n        toPointMin[dir] = obstacle[dir + 'Min'];\n        toPointMax[dir] = obstacle[dir + 'Max'];\n        const minPivot = pivotPoint(fromPoint, toPointMin, dirIsX)[dir] !==\n            toPointMin[dir], maxPivot = pivotPoint(fromPoint, toPointMax, dirIsX)[dir] !==\n            toPointMax[dir];\n        useMax = minPivot ?\n            (maxPivot ? useMax : true) :\n            (maxPivot ? false : useMax);\n        // `useMax` now contains our preferred choice, bounds not taken into\n        // account. If both or neither direction is out of bounds we want to\n        // use this.\n        // Deal with soft bounds\n        useMax = minOutOfSoftBounds ?\n            (maxOutOfSoftBounds ? useMax : true) : // Out on min\n            (maxOutOfSoftBounds ? false : useMax); // Not out on min\n        // Deal with hard bounds\n        useMax = minOutOfHardBounds ?\n            (maxOutOfHardBounds ? useMax : true) : // Out on min\n            (maxOutOfHardBounds ? false : useMax); // Not out on min\n        return useMax;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Find a clear path between point.\n     * @private\n     */\n    function clearPathTo(fromPoint, toPoint, dirIsX) {\n        // Don't waste time if we've hit goal\n        if (fromPoint.x === toPoint.x && fromPoint.y === toPoint.y) {\n            return [];\n        }\n        const dir = dirIsX ? 'x' : 'y', obstacleMargin = options.obstacleOptions.margin, bounds = {\n            soft: {\n                xMin: softMinX,\n                xMax: softMaxX,\n                yMin: softMinY,\n                yMax: softMaxY\n            },\n            hard: options.hardBounds\n        };\n        let pivot, segments, waypoint, waypointUseMax, envelopingObstacle, secondEnvelopingObstacle, envelopWaypoint;\n        // If fromPoint is inside an obstacle we have a problem. Break out\n        // by just going to the outside of this obstacle. We prefer to go to\n        // the nearest edge in the chosen direction.\n        envelopingObstacle =\n            findObstacleFromPoint(chartObstacles, fromPoint);\n        if (envelopingObstacle > -1) {\n            envelopingObstacle = chartObstacles[envelopingObstacle];\n            waypointUseMax = getDodgeDirection(envelopingObstacle, fromPoint, toPoint, dirIsX, bounds);\n            // Cut obstacle to hard bounds to make sure we stay within\n            limitObstacleToBounds(envelopingObstacle, options.hardBounds);\n            envelopWaypoint = dirIsX ? {\n                y: fromPoint.y,\n                x: envelopingObstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                    (waypointUseMax ? 1 : -1)\n            } : {\n                x: fromPoint.x,\n                y: envelopingObstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                    (waypointUseMax ? 1 : -1)\n            };\n            // If we crashed into another obstacle doing this, we put the\n            // waypoint between them instead\n            secondEnvelopingObstacle = findObstacleFromPoint(chartObstacles, envelopWaypoint);\n            if (secondEnvelopingObstacle > -1) {\n                secondEnvelopingObstacle = chartObstacles[secondEnvelopingObstacle];\n                // Cut obstacle to hard bounds\n                limitObstacleToBounds(secondEnvelopingObstacle, options.hardBounds);\n                // Modify waypoint to lay between obstacles\n                envelopWaypoint[dir] = waypointUseMax ? PathfinderAlgorithms_max(envelopingObstacle[dir + 'Max'] - obstacleMargin + 1, (secondEnvelopingObstacle[dir + 'Min'] +\n                    envelopingObstacle[dir + 'Max']) / 2) :\n                    PathfinderAlgorithms_min((envelopingObstacle[dir + 'Min'] + obstacleMargin - 1), ((secondEnvelopingObstacle[dir + 'Max'] +\n                        envelopingObstacle[dir + 'Min']) / 2));\n                // We are not going anywhere. If this happens for the first\n                // time, do nothing. Otherwise, try to go to the extreme of\n                // the obstacle pair in the current direction.\n                if (fromPoint.x === envelopWaypoint.x &&\n                    fromPoint.y === envelopWaypoint.y) {\n                    if (forceObstacleBreak) {\n                        envelopWaypoint[dir] = waypointUseMax ?\n                            PathfinderAlgorithms_max(envelopingObstacle[dir + 'Max'], secondEnvelopingObstacle[dir + 'Max']) + 1 :\n                            PathfinderAlgorithms_min(envelopingObstacle[dir + 'Min'], secondEnvelopingObstacle[dir + 'Min']) - 1;\n                    }\n                    // Toggle on if off, and the opposite\n                    forceObstacleBreak = !forceObstacleBreak;\n                }\n                else {\n                    // This point is not identical to previous.\n                    // Clear break trigger.\n                    forceObstacleBreak = false;\n                }\n            }\n            segments = [{\n                    start: fromPoint,\n                    end: envelopWaypoint\n                }];\n        }\n        else { // If not enveloping, use standard pivot calculation\n            pivot = pivotPoint(fromPoint, {\n                x: dirIsX ? toPoint.x : fromPoint.x,\n                y: dirIsX ? fromPoint.y : toPoint.y\n            }, dirIsX);\n            segments = [{\n                    start: fromPoint,\n                    end: {\n                        x: pivot.x,\n                        y: pivot.y\n                    }\n                }];\n            // Pivot before goal, use a waypoint to dodge obstacle\n            if (pivot[dirIsX ? 'x' : 'y'] !== toPoint[dirIsX ? 'x' : 'y']) {\n                // Find direction of waypoint\n                waypointUseMax = getDodgeDirection(pivot.obstacle, pivot, toPoint, !dirIsX, bounds);\n                // Cut waypoint to hard bounds\n                limitObstacleToBounds(pivot.obstacle, options.hardBounds);\n                waypoint = {\n                    x: dirIsX ?\n                        pivot.x :\n                        pivot.obstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                            (waypointUseMax ? 1 : -1),\n                    y: dirIsX ?\n                        pivot.obstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                            (waypointUseMax ? 1 : -1) :\n                        pivot.y\n                };\n                // We're changing direction here, store that to make sure we\n                // also change direction when adding the last segment array\n                // after handling waypoint.\n                dirIsX = !dirIsX;\n                segments = segments.concat(clearPathTo({\n                    x: pivot.x,\n                    y: pivot.y\n                }, waypoint, dirIsX));\n            }\n        }\n        // Get segments for the other direction too\n        // Recursion is our friend\n        segments = segments.concat(clearPathTo(segments[segments.length - 1].end, toPoint, !dirIsX));\n        return segments;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Extract point to outside of obstacle in whichever direction is\n     * closest. Returns new point outside obstacle.\n     * @private\n     */\n    function extractFromObstacle(obstacle, point, goalPoint) {\n        const dirIsX = PathfinderAlgorithms_min(obstacle.xMax - point.x, point.x - obstacle.xMin) <\n            PathfinderAlgorithms_min(obstacle.yMax - point.y, point.y - obstacle.yMin), bounds = {\n            soft: options.hardBounds,\n            hard: options.hardBounds\n        }, useMax = getDodgeDirection(obstacle, point, goalPoint, dirIsX, bounds);\n        return dirIsX ? {\n            y: point.y,\n            x: obstacle[useMax ? 'xMax' : 'xMin'] + (useMax ? 1 : -1)\n        } : {\n            x: point.x,\n            y: obstacle[useMax ? 'yMax' : 'yMin'] + (useMax ? 1 : -1)\n        };\n    }\n    // Cut the obstacle array to soft bounds for optimization in large\n    // datasets.\n    chartObstacles =\n        chartObstacles.slice(startObstacleIx, endObstacleIx + 1);\n    // If an obstacle envelops the end point, move it out of there and add\n    // a little segment to where it was.\n    if ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n        extractedEndPoint = extractFromObstacle(chartObstacles[endObstacleIx], end, start);\n        endSegments.push({\n            end: end,\n            start: extractedEndPoint\n        });\n        end = extractedEndPoint;\n    }\n    // If it's still inside one or more obstacles, get out of there by\n    // force-moving towards the start point.\n    while ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n        useMax = end[dir] - start[dir] < 0;\n        extractedEndPoint = {\n            x: end.x,\n            y: end.y\n        };\n        extractedEndPoint[dir] = chartObstacles[endObstacleIx][useMax ? dir + 'Max' : dir + 'Min'] + (useMax ? 1 : -1);\n        endSegments.push({\n            end: end,\n            start: extractedEndPoint\n        });\n        end = extractedEndPoint;\n    }\n    // Find the path\n    segments = clearPathTo(start, end, dirIsX);\n    // Add the end-point segments\n    segments = segments.concat(endSegments.reverse());\n    return {\n        path: pathFromSegments(segments),\n        obstacles: segments\n    };\n}\nfastAvoid.requiresObstacles = true;\n/* *\n *\n *  Default Export\n *\n * */\n// Define the available pathfinding algorithms.\n// Algorithms take up to 3 arguments: starting point, ending point, and an\n// options object.\nconst algorithms = {\n    fastAvoid,\n    straight,\n    simpleConnect\n};\n/* harmony default export */ const PathfinderAlgorithms = (algorithms);\n\n;// ./code/es-modules/Gantt/ConnectorsDefaults.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Defaults\n *\n * */\n/*\n @todo:\n     - Document how to write your own algorithms\n     - Consider adding a Point.pathTo method that wraps creating a connection\n       and rendering it\n*/\nconst connectorsDefaults = {\n    /**\n     * The Pathfinder module allows you to define connections between any two\n     * points, represented as lines - optionally with markers for the start\n     * and/or end points. Multiple algorithms are available for calculating how\n     * the connecting lines are drawn.\n     *\n     * Connector functionality requires Highcharts Gantt to be loaded. In Gantt\n     * charts, the connectors are used to draw dependencies between tasks.\n     *\n     * @see [dependency](series.gantt.data.dependency)\n     *\n     * @sample gantt/pathfinder/demo\n     *         Pathfinder connections\n     *\n     * @declare      Highcharts.ConnectorsOptions\n     * @product      gantt\n     * @optionparent connectors\n     */\n    connectors: {\n        /**\n         * Enable connectors for this chart. Requires Highcharts Gantt.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @apioption connectors.enabled\n         */\n        /**\n         * Set the default dash style for this chart's connecting lines.\n         *\n         * @type      {string}\n         * @default   solid\n         * @since     6.2.0\n         * @apioption connectors.dashStyle\n         */\n        /**\n         * Set the default color for this chart's Pathfinder connecting lines.\n         * Defaults to the color of the point being connected.\n         *\n         * @type      {Highcharts.ColorString}\n         * @since     6.2.0\n         * @apioption connectors.lineColor\n         */\n        /**\n         * Set the default pathfinder margin to use, in pixels. Some Pathfinder\n         * algorithms attempt to avoid obstacles, such as other points in the\n         * chart. These algorithms use this margin to determine how close lines\n         * can be to an obstacle. The default is to compute this automatically\n         * from the size of the obstacles in the chart.\n         *\n         * To draw connecting lines close to existing points, set this to a low\n         * number. For more space around existing points, set this number\n         * higher.\n         *\n         * @sample gantt/pathfinder/algorithm-margin\n         *         Small algorithmMargin\n         *\n         * @type      {number}\n         * @since     6.2.0\n         * @apioption connectors.algorithmMargin\n         */\n        /**\n         * Set the default pathfinder algorithm to use for this chart. It is\n         * possible to define your own algorithms by adding them to the\n         * Highcharts.Pathfinder.prototype.algorithms object before the chart\n         * has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * Default value: `straight` is used as default for most series types,\n         * while `simpleConnect` is used as default for Gantt series, to show\n         * dependencies between points.\n         *\n         * @sample gantt/pathfinder/demo\n         *         Different types used\n         *\n         * @type    {Highcharts.PathfinderTypeValue}\n         * @default undefined\n         * @since   6.2.0\n         */\n        type: 'straight',\n        /**\n         * The corner radius for the connector line.\n         *\n         * @since 11.2.0\n         */\n        radius: 0,\n        /**\n         * Set the default pixel width for this chart's Pathfinder connecting\n         * lines.\n         *\n         * @since 6.2.0\n         */\n        lineWidth: 1,\n        /**\n         * Marker options for this chart's Pathfinder connectors. Note that\n         * this option is overridden by the `startMarker` and `endMarker`\n         * options.\n         *\n         * @declare Highcharts.ConnectorsMarkerOptions\n         * @since   6.2.0\n         */\n        marker: {\n            /**\n             * Set the radius of the connector markers. The default is\n             * automatically computed based on the algorithmMargin setting.\n             *\n             * Setting marker.width and marker.height will override this\n             * setting.\n             *\n             * @type      {number}\n             * @since     6.2.0\n             * @apioption connectors.marker.radius\n             */\n            /**\n             * Set the width of the connector markers. If not supplied, this\n             * is inferred from the marker radius.\n             *\n             * @type      {number}\n             * @since     6.2.0\n             * @apioption connectors.marker.width\n             */\n            /**\n             * Set the height of the connector markers. If not supplied, this\n             * is inferred from the marker radius.\n             *\n             * @type      {number}\n             * @since     6.2.0\n             * @apioption connectors.marker.height\n             */\n            /**\n             * Set the color of the connector markers. By default this is the\n             * same as the connector color.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     6.2.0\n             * @apioption connectors.marker.color\n             */\n            /**\n             * Set the line/border color of the connector markers. By default\n             * this is the same as the marker color.\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     6.2.0\n             * @apioption connectors.marker.lineColor\n             */\n            /**\n             * Enable markers for the connectors.\n             */\n            enabled: false,\n            /**\n             * Horizontal alignment of the markers relative to the points.\n             *\n             * @type {Highcharts.AlignValue}\n             */\n            align: 'center',\n            /**\n             * Vertical alignment of the markers relative to the points.\n             *\n             * @type {Highcharts.VerticalAlignValue}\n             */\n            verticalAlign: 'middle',\n            /**\n             * Whether or not to draw the markers inside the points.\n             */\n            inside: false,\n            /**\n             * Set the line/border width of the pathfinder markers.\n             */\n            lineWidth: 1\n        },\n        /**\n         * Marker options specific to the start markers for this chart's\n         * Pathfinder connectors. Overrides the generic marker options.\n         *\n         * @declare Highcharts.ConnectorsStartMarkerOptions\n         * @extends connectors.marker\n         * @since   6.2.0\n         */\n        startMarker: {\n            /**\n             * Set the symbol of the connector start markers.\n             */\n            symbol: 'diamond'\n        },\n        /**\n         * Marker options specific to the end markers for this chart's\n         * Pathfinder connectors. Overrides the generic marker options.\n         *\n         * @declare Highcharts.ConnectorsEndMarkerOptions\n         * @extends connectors.marker\n         * @since   6.2.0\n         */\n        endMarker: {\n            /**\n             * Set the symbol of the connector end markers.\n             */\n            symbol: 'arrow-filled'\n        }\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ConnectorsDefaults = (connectorsDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Override Pathfinder connector options for a series. Requires Highcharts Gantt\n * to be loaded.\n *\n * @declare   Highcharts.SeriesConnectorsOptionsObject\n * @extends   connectors\n * @since     6.2.0\n * @excluding enabled, algorithmMargin\n * @product   gantt\n * @apioption plotOptions.series.connectors\n */\n/**\n * Connect to a point. This option can be either a string, referring to the ID\n * of another point, or an object, or an array of either. If the option is an\n * array, each element defines a connection.\n *\n * @sample gantt/pathfinder/demo\n *         Different connection types\n *\n * @declare   Highcharts.XrangePointConnectorsOptionsObject\n * @type      {string|Array<string|*>|*}\n * @extends   plotOptions.series.connectors\n * @since     6.2.0\n * @excluding enabled\n * @product   gantt\n * @requires  highcharts-gantt\n * @apioption series.xrange.data.connect\n */\n/**\n * The ID of the point to connect to.\n *\n * @type      {string}\n * @since     6.2.0\n * @product   gantt\n * @apioption series.xrange.data.connect.to\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Gantt/PathfinderComposition.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { setOptions } = (external_highcharts_src_js_default_default());\n\nconst { defined: PathfinderComposition_defined, error: PathfinderComposition_error, merge: PathfinderComposition_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get point bounding box using plotX/plotY and shapeArgs. If using\n * graphic.getBBox() directly, the bbox will be affected by animation.\n *\n * @private\n * @function\n *\n * @param {Highcharts.Point} point\n *        The point to get BB of.\n *\n * @return {Highcharts.Dictionary<number>|null}\n *         Result xMax, xMin, yMax, yMin.\n */\nfunction getPointBB(point) {\n    const shapeArgs = point.shapeArgs;\n    // Prefer using shapeArgs (columns)\n    if (shapeArgs) {\n        return {\n            xMin: shapeArgs.x || 0,\n            xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n            yMin: shapeArgs.y || 0,\n            yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n        };\n    }\n    // Otherwise use plotX/plotY and bb\n    const bb = point.graphic && point.graphic.getBBox();\n    return bb ? {\n        xMin: point.plotX - bb.width / 2,\n        xMax: point.plotX + bb.width / 2,\n        yMin: point.plotY - bb.height / 2,\n        yMax: point.plotY + bb.height / 2\n    } : null;\n}\n/**\n * Warn if using legacy options. Copy the options over. Note that this will\n * still break if using the legacy options in chart.update, addSeries etc.\n * @private\n */\nfunction warnLegacy(chart) {\n    if (chart.options.pathfinder ||\n        chart.series.reduce(function (acc, series) {\n            if (series.options) {\n                PathfinderComposition_merge(true, (series.options.connectors = series.options.connectors ||\n                    {}), series.options.pathfinder);\n            }\n            return acc || series.options && series.options.pathfinder;\n        }, false)) {\n        PathfinderComposition_merge(true, (chart.options.connectors = chart.options.connectors || {}), chart.options.pathfinder);\n        PathfinderComposition_error('WARNING: Pathfinder options have been renamed. ' +\n            'Use \"chart.connectors\" or \"series.connectors\" instead.');\n    }\n}\n/* *\n *\n *  Composition\n *\n * */\nvar ConnectionComposition;\n(function (ConnectionComposition) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /** @private */\n    function compose(ChartClass, PathfinderClass, PointClass) {\n        const pointProto = PointClass.prototype;\n        if (!pointProto.getPathfinderAnchorPoint) {\n            // Initialize Pathfinder for charts\n            ChartClass.prototype.callbacks.push(function (chart) {\n                const options = chart.options;\n                if (options.connectors.enabled !== false) {\n                    warnLegacy(chart);\n                    this.pathfinder = new PathfinderClass(this);\n                    this.pathfinder.update(true); // First draw, defer render\n                }\n            });\n            pointProto.getMarkerVector = pointGetMarkerVector;\n            pointProto.getPathfinderAnchorPoint = pointGetPathfinderAnchorPoint;\n            pointProto.getRadiansToVector = pointGetRadiansToVector;\n            // Set default Pathfinder options\n            setOptions(ConnectorsDefaults);\n        }\n    }\n    ConnectionComposition.compose = compose;\n    /**\n     * Get coordinates of anchor point for pathfinder connection.\n     *\n     * @private\n     * @function Highcharts.Point#getPathfinderAnchorPoint\n     *\n     * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n     *        Connection options for position on point.\n     *\n     * @return {Highcharts.PositionObject}\n     *         An object with x/y properties for the position. Coordinates are\n     *         in plot values, not relative to point.\n     */\n    function pointGetPathfinderAnchorPoint(markerOptions) {\n        const bb = getPointBB(this);\n        let x, y;\n        switch (markerOptions.align) { // eslint-disable-line default-case\n            case 'right':\n                x = 'xMax';\n                break;\n            case 'left':\n                x = 'xMin';\n        }\n        switch (markerOptions.verticalAlign) { // eslint-disable-line default-case\n            case 'top':\n                y = 'yMin';\n                break;\n            case 'bottom':\n                y = 'yMax';\n        }\n        return {\n            x: x ? bb[x] : (bb.xMin + bb.xMax) / 2,\n            y: y ? bb[y] : (bb.yMin + bb.yMax) / 2\n        };\n    }\n    /**\n     * Utility to get the angle from one point to another.\n     *\n     * @private\n     * @function Highcharts.Point#getRadiansToVector\n     *\n     * @param {Highcharts.PositionObject} v1\n     *        The first vector, as an object with x/y properties.\n     *\n     * @param {Highcharts.PositionObject} v2\n     *        The second vector, as an object with x/y properties.\n     *\n     * @return {number}\n     *         The angle in degrees\n     */\n    function pointGetRadiansToVector(v1, v2) {\n        let box;\n        if (!PathfinderComposition_defined(v2)) {\n            box = getPointBB(this);\n            if (box) {\n                v2 = {\n                    x: (box.xMin + box.xMax) / 2,\n                    y: (box.yMin + box.yMax) / 2\n                };\n            }\n        }\n        return Math.atan2(v2.y - v1.y, v1.x - v2.x);\n    }\n    /**\n     * Utility to get the position of the marker, based on the path angle and\n     * the marker's radius.\n     *\n     * @private\n     * @function Highcharts.Point#getMarkerVector\n     *\n     * @param {number} radians\n     *        The angle in radians from the point center to another vector.\n     *\n     * @param {number} markerRadius\n     *        The radius of the marker, to calculate the additional distance to\n     *        the center of the marker.\n     *\n     * @param {Object} anchor\n     *        The anchor point of the path and marker as an object with x/y\n     *        properties.\n     *\n     * @return {Object}\n     *         The marker vector as an object with x/y properties.\n     */\n    function pointGetMarkerVector(radians, markerRadius, anchor) {\n        const twoPI = Math.PI * 2.0, bb = getPointBB(this), rectWidth = bb.xMax - bb.xMin, rectHeight = bb.yMax - bb.yMin, rAtan = Math.atan2(rectHeight, rectWidth), rectHalfWidth = rectWidth / 2.0, rectHalfHeight = rectHeight / 2.0, rectHorizontalCenter = bb.xMin + rectHalfWidth, rectVerticalCenter = bb.yMin + rectHalfHeight, edgePoint = {\n            x: rectHorizontalCenter,\n            y: rectVerticalCenter\n        };\n        let theta = radians, tanTheta = 1, leftOrRightRegion = false, xFactor = 1, yFactor = 1;\n        while (theta < -Math.PI) {\n            theta += twoPI;\n        }\n        while (theta > Math.PI) {\n            theta -= twoPI;\n        }\n        tanTheta = Math.tan(theta);\n        if ((theta > -rAtan) && (theta <= rAtan)) {\n            // Right side\n            yFactor = -1;\n            leftOrRightRegion = true;\n        }\n        else if (theta > rAtan && theta <= (Math.PI - rAtan)) {\n            // Top side\n            yFactor = -1;\n        }\n        else if (theta > (Math.PI - rAtan) || theta <= -(Math.PI - rAtan)) {\n            // Left side\n            xFactor = -1;\n            leftOrRightRegion = true;\n        }\n        else {\n            // Bottom side\n            xFactor = -1;\n        }\n        // Correct the edgePoint according to the placement of the marker\n        if (leftOrRightRegion) {\n            edgePoint.x += xFactor * (rectHalfWidth);\n            edgePoint.y += yFactor * (rectHalfWidth) * tanTheta;\n        }\n        else {\n            edgePoint.x += xFactor * (rectHeight / (2.0 * tanTheta));\n            edgePoint.y += yFactor * (rectHalfHeight);\n        }\n        if (anchor.x !== rectHorizontalCenter) {\n            edgePoint.x = anchor.x;\n        }\n        if (anchor.y !== rectVerticalCenter) {\n            edgePoint.y = anchor.y;\n        }\n        return {\n            x: edgePoint.x + (markerRadius * Math.cos(theta)),\n            y: edgePoint.y - (markerRadius * Math.sin(theta))\n        };\n    }\n})(ConnectionComposition || (ConnectionComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PathfinderComposition = (ConnectionComposition);\n\n;// external [\"../highcharts.js\",\"default\",\"Point\"]\nconst external_highcharts_src_js_default_Point_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Point;\nvar external_highcharts_src_js_default_Point_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Point_namespaceObject);\n;// ./code/es-modules/Gantt/Pathfinder.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\n\nconst { addEvent: Pathfinder_addEvent, defined: Pathfinder_defined, pick: Pathfinder_pick, splat: Pathfinder_splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst Pathfinder_max = Math.max, Pathfinder_min = Math.min;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get point bounding box using plotX/plotY and shapeArgs. If using\n * graphic.getBBox() directly, the bbox will be affected by animation.\n *\n * @private\n * @function\n *\n * @param {Highcharts.Point} point\n *        The point to get BB of.\n *\n * @return {Highcharts.Dictionary<number>|null}\n *         Result xMax, xMin, yMax, yMin.\n */\nfunction Pathfinder_getPointBB(point) {\n    const shapeArgs = point.shapeArgs;\n    // Prefer using shapeArgs (columns)\n    if (shapeArgs) {\n        return {\n            xMin: shapeArgs.x || 0,\n            xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n            yMin: shapeArgs.y || 0,\n            yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n        };\n    }\n    // Otherwise use plotX/plotY and bb\n    const bb = point.graphic && point.graphic.getBBox();\n    return bb ? {\n        xMin: point.plotX - bb.width / 2,\n        xMax: point.plotX + bb.width / 2,\n        yMin: point.plotY - bb.height / 2,\n        yMax: point.plotY + bb.height / 2\n    } : null;\n}\n/**\n * Compute smallest distance between two rectangles.\n * @private\n */\nfunction calculateObstacleDistance(a, b, bbMargin) {\n    // Count the distance even if we are slightly off\n    const margin = Pathfinder_pick(bbMargin, 10), yOverlap = a.yMax + margin > b.yMin - margin &&\n        a.yMin - margin < b.yMax + margin, xOverlap = a.xMax + margin > b.xMin - margin &&\n        a.xMin - margin < b.xMax + margin, xDistance = yOverlap ? (a.xMin > b.xMax ? a.xMin - b.xMax : b.xMin - a.xMax) : Infinity, yDistance = xOverlap ? (a.yMin > b.yMax ? a.yMin - b.yMax : b.yMin - a.yMax) : Infinity;\n    // If the rectangles collide, try recomputing with smaller margin.\n    // If they collide anyway, discard the obstacle.\n    if (xOverlap && yOverlap) {\n        return (margin ?\n            calculateObstacleDistance(a, b, Math.floor(margin / 2)) :\n            Infinity);\n    }\n    return Pathfinder_min(xDistance, yDistance);\n}\n/**\n * Calculate margin to place around obstacles for the pathfinder in pixels.\n * Returns a minimum of 1 pixel margin.\n *\n * @private\n * @function\n *\n * @param {Array<object>} obstacles\n *        Obstacles to calculate margin from.\n *\n * @return {number}\n *         The calculated margin in pixels. At least 1.\n */\nfunction calculateObstacleMargin(obstacles) {\n    const len = obstacles.length, distances = [];\n    let onstacleDistance;\n    // Go over all obstacles and compare them to the others.\n    for (let i = 0; i < len; ++i) {\n        // Compare to all obstacles ahead. We will already have compared this\n        // obstacle to the ones before.\n        for (let j = i + 1; j < len; ++j) {\n            onstacleDistance =\n                calculateObstacleDistance(obstacles[i], obstacles[j]);\n            // TODO: Magic number 80\n            if (onstacleDistance < 80) { // Ignore large distances\n                distances.push(onstacleDistance);\n            }\n        }\n    }\n    // Ensure we always have at least one value, even in very spacious charts\n    distances.push(80);\n    return Pathfinder_max(Math.floor(distances.sort(function (a, b) {\n        return (a - b);\n    })[\n    // Discard first 10% of the relevant distances, and then grab\n    // the smallest one.\n    Math.floor(distances.length / 10)] / 2 - 1 // Divide the distance by 2 and subtract 1.\n    ), 1 // 1 is the minimum margin\n    );\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Pathfinder class.\n *\n * @private\n * @class\n * @name Highcharts.Pathfinder\n *\n * @param {Highcharts.Chart} chart\n *        The chart to operate on.\n */\nclass Pathfinder {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(ChartClass, PointClass) {\n        PathfinderComposition.compose(ChartClass, Pathfinder, PointClass);\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart) {\n        this.init(chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initialize the Pathfinder object.\n     *\n     * @function Highcharts.Pathfinder#init\n     *\n     * @param {Highcharts.Chart} chart\n     *        The chart context.\n     */\n    init(chart) {\n        // Initialize pathfinder with chart context\n        this.chart = chart;\n        // Init connection reference list\n        this.connections = [];\n        // Recalculate paths/obstacles on chart redraw\n        Pathfinder_addEvent(chart, 'redraw', function () {\n            this.pathfinder.update();\n        });\n    }\n    /**\n     * Update Pathfinder connections from scratch.\n     *\n     * @function Highcharts.Pathfinder#update\n     *\n     * @param {boolean} [deferRender]\n     *        Whether or not to defer rendering of connections until\n     *        series.afterAnimate event has fired. Used on first render.\n     */\n    update(deferRender) {\n        const chart = this.chart, pathfinder = this, oldConnections = pathfinder.connections;\n        // Rebuild pathfinder connections from options\n        pathfinder.connections = [];\n        chart.series.forEach(function (series) {\n            if (series.visible && !series.options.isInternal) {\n                series.points.forEach(function (point) {\n                    const ganttPointOptions = point.options;\n                    // For Gantt series the connect could be\n                    // defined as a dependency\n                    if (ganttPointOptions && ganttPointOptions.dependency) {\n                        ganttPointOptions.connect = ganttPointOptions\n                            .dependency;\n                    }\n                    const connects = point.options?.connect ?\n                        Pathfinder_splat(point.options.connect) :\n                        [];\n                    let to;\n                    if (point.visible && point.isInside !== false) {\n                        connects.forEach((connect) => {\n                            const toId = typeof connect === 'string' ?\n                                connect :\n                                connect.to;\n                            if (toId) {\n                                to = chart.get(toId);\n                            }\n                            if (to instanceof (external_highcharts_src_js_default_Point_default()) &&\n                                to.series.visible &&\n                                to.visible &&\n                                to.isInside !== false) {\n                                // Add new connection\n                                pathfinder.connections.push(new Gantt_Connection(point, // From\n                                to, typeof connect === 'string' ?\n                                    {} :\n                                    connect));\n                            }\n                        });\n                    }\n                });\n            }\n        });\n        // Clear connections that should not be updated, and move old info over\n        // to new connections.\n        for (let j = 0, k, found, lenOld = oldConnections.length, lenNew = pathfinder.connections.length; j < lenOld; ++j) {\n            found = false;\n            const oldCon = oldConnections[j];\n            for (k = 0; k < lenNew; ++k) {\n                const newCon = pathfinder.connections[k];\n                if ((oldCon.options && oldCon.options.type) ===\n                    (newCon.options && newCon.options.type) &&\n                    oldCon.fromPoint === newCon.fromPoint &&\n                    oldCon.toPoint === newCon.toPoint) {\n                    newCon.graphics = oldCon.graphics;\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                oldCon.destroy();\n            }\n        }\n        // Clear obstacles to force recalculation. This must be done on every\n        // redraw in case positions have changed. Recalculation is handled in\n        // Connection.getPath on demand.\n        delete this.chartObstacles;\n        delete this.lineObstacles;\n        // Draw the pending connections\n        pathfinder.renderConnections(deferRender);\n    }\n    /**\n     * Draw the chart's connecting paths.\n     *\n     * @function Highcharts.Pathfinder#renderConnections\n     *\n     * @param {boolean} [deferRender]\n     *        Whether or not to defer render until series animation is finished.\n     *        Used on first render.\n     */\n    renderConnections(deferRender) {\n        if (deferRender) {\n            // Render after series are done animating\n            this.chart.series.forEach(function (series) {\n                const render = function () {\n                    // Find pathfinder connections belonging to this series\n                    // that haven't rendered, and render them now.\n                    const pathfinder = series.chart.pathfinder, conns = pathfinder && pathfinder.connections || [];\n                    conns.forEach(function (connection) {\n                        if (connection.fromPoint &&\n                            connection.fromPoint.series === series) {\n                            connection.render();\n                        }\n                    });\n                    if (series.pathfinderRemoveRenderEvent) {\n                        series.pathfinderRemoveRenderEvent();\n                        delete series.pathfinderRemoveRenderEvent;\n                    }\n                };\n                if (series.options.animation === false) {\n                    render();\n                }\n                else {\n                    series.pathfinderRemoveRenderEvent = Pathfinder_addEvent(series, 'afterAnimate', render);\n                }\n            });\n        }\n        else {\n            // Go through connections and render them\n            this.connections.forEach(function (connection) {\n                connection.render();\n            });\n        }\n    }\n    /**\n     * Get obstacles for the points in the chart. Does not include connecting\n     * lines from Pathfinder. Applies algorithmMargin to the obstacles.\n     *\n     * @function Highcharts.Pathfinder#getChartObstacles\n     *\n     * @param {Object} options\n     *        Options for the calculation. Currently only\n     *        `options.algorithmMargin`.\n     *\n     * @param {number} options.algorithmMargin\n     *        The algorithm margin to use for the obstacles.\n\n    * @return {Array<object>}\n     *         An array of calculated obstacles. Each obstacle is defined as an\n     *         object with xMin, xMax, yMin and yMax properties.\n     */\n    getChartObstacles(options) {\n        const series = this.chart.series, margin = Pathfinder_pick(options.algorithmMargin, 0);\n        let obstacles = [], calculatedMargin;\n        for (let i = 0, sLen = series.length; i < sLen; ++i) {\n            if (series[i].visible && !series[i].options.isInternal) {\n                for (let j = 0, pLen = series[i].points.length, bb, point; j < pLen; ++j) {\n                    point = series[i].points[j];\n                    if (point.visible) {\n                        bb = Pathfinder_getPointBB(point);\n                        if (bb) {\n                            obstacles.push({\n                                xMin: bb.xMin - margin,\n                                xMax: bb.xMax + margin,\n                                yMin: bb.yMin - margin,\n                                yMax: bb.yMax + margin\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Sort obstacles by xMin for optimization\n        obstacles = obstacles.sort(function (a, b) {\n            return a.xMin - b.xMin;\n        });\n        // Add auto-calculated margin if the option is not defined\n        if (!Pathfinder_defined(options.algorithmMargin)) {\n            calculatedMargin =\n                options.algorithmMargin =\n                    calculateObstacleMargin(obstacles);\n            obstacles.forEach(function (obstacle) {\n                obstacle.xMin -= calculatedMargin;\n                obstacle.xMax += calculatedMargin;\n                obstacle.yMin -= calculatedMargin;\n                obstacle.yMax += calculatedMargin;\n            });\n        }\n        return obstacles;\n    }\n    /**\n     * Utility function to get metrics for obstacles:\n     * - Widest obstacle width\n     * - Tallest obstacle height\n     *\n     * @function Highcharts.Pathfinder#getObstacleMetrics\n     *\n     * @param {Array<object>} obstacles\n     *        An array of obstacles to inspect.\n     *\n     * @return {Object}\n     *         The calculated metrics, as an object with maxHeight and maxWidth\n     *         properties.\n     */\n    getObstacleMetrics(obstacles) {\n        let maxWidth = 0, maxHeight = 0, width, height, i = obstacles.length;\n        while (i--) {\n            width = obstacles[i].xMax - obstacles[i].xMin;\n            height = obstacles[i].yMax - obstacles[i].yMin;\n            if (maxWidth < width) {\n                maxWidth = width;\n            }\n            if (maxHeight < height) {\n                maxHeight = height;\n            }\n        }\n        return {\n            maxHeight: maxHeight,\n            maxWidth: maxWidth\n        };\n    }\n    /**\n     * Utility to get which direction to start the pathfinding algorithm\n     * (X vs Y), calculated from a set of marker options.\n     *\n     * @function Highcharts.Pathfinder#getAlgorithmStartDirection\n     *\n     * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n     *        Marker options to calculate from.\n     *\n     * @return {boolean}\n     *         Returns true for X, false for Y, and undefined for autocalculate.\n     */\n    getAlgorithmStartDirection(markerOptions) {\n        const xCenter = markerOptions.align !== 'left' &&\n            markerOptions.align !== 'right', yCenter = markerOptions.verticalAlign !== 'top' &&\n            markerOptions.verticalAlign !== 'bottom';\n        return xCenter ?\n            (yCenter ? void 0 : false) : // When x is centered\n            (yCenter ? true : void 0); // When x is off-center\n    }\n}\n/**\n * @name Highcharts.Pathfinder#algorithms\n * @type {Highcharts.Dictionary<Function>}\n */\nPathfinder.prototype.algorithms = PathfinderAlgorithms;\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gantt_Pathfinder = (Pathfinder);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * The default pathfinder algorithm to use for a chart. It is possible to define\n * your own algorithms by adding them to the\n * `Highcharts.Pathfinder.prototype.algorithms`\n * object before the chart has been created.\n *\n * The default algorithms are as follows:\n *\n * `straight`:      Draws a straight line between the connecting\n *                  points. Does not avoid other points when drawing.\n *\n * `simpleConnect`: Finds a path between the points using right angles\n *                  only. Takes only starting/ending points into\n *                  account, and will not avoid other points.\n *\n * `fastAvoid`:     Finds a path between the points using right angles\n *                  only. Will attempt to avoid other points, but its\n *                  focus is performance over accuracy. Works well with\n *                  less dense datasets.\n *\n * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Extensions/StaticScale.js\n/* *\n *\n *  (c) 2016-2025 Torstein Honsi, Lars Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { addEvent: StaticScale_addEvent, defined: StaticScale_defined, isNumber: StaticScale_isNumber } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\n/** @private */\nfunction StaticScale_compose(AxisClass, ChartClass) {\n    const chartProto = ChartClass.prototype;\n    if (!chartProto.adjustHeight) {\n        StaticScale_addEvent(AxisClass, 'afterSetOptions', StaticScale_onAxisAfterSetOptions);\n        chartProto.adjustHeight = chartAdjustHeight;\n        StaticScale_addEvent(ChartClass, 'render', chartProto.adjustHeight);\n    }\n}\n/** @private */\nfunction StaticScale_onAxisAfterSetOptions() {\n    const chartOptions = this.chart.userOptions.chart;\n    if (!this.horiz &&\n        StaticScale_isNumber(this.options.staticScale) &&\n        (!chartOptions?.height ||\n            chartOptions.scrollablePlotArea?.minHeight)) {\n        this.staticScale = this.options.staticScale;\n    }\n}\n/** @private */\nfunction chartAdjustHeight() {\n    const chart = this;\n    if (chart.redrawTrigger !== 'adjustHeight') {\n        for (const axis of (chart.axes || [])) {\n            const chart = axis.chart, staticScale = axis.options.staticScale;\n            if (axis.staticScale &&\n                staticScale &&\n                StaticScale_defined(axis.min) &&\n                StaticScale_defined(axis.max)) {\n                let height = (axis.brokenAxis?.unitLength ??\n                    (axis.max + axis.tickInterval - axis.min)) * (staticScale);\n                // Minimum height is 1 x staticScale.\n                height = Math.max(height, staticScale);\n                const diff = height - chart.plotHeight;\n                if (!chart.scrollablePixelsY && Math.abs(diff) >= 1) {\n                    chart.plotHeight = height;\n                    chart.redrawTrigger = 'adjustHeight';\n                    chart.setSize(void 0, chart.chartHeight + diff, chart.initiatedScale ? void 0 : false);\n                }\n                // Make sure clip rects have the right height before initial\n                // animation.\n                axis.series.forEach(function (series) {\n                    const clipRect = series.sharedClipKey &&\n                        chart.sharedClips[series.sharedClipKey];\n                    if (clipRect) {\n                        clipRect.attr(chart.inverted ? {\n                            width: chart.plotHeight\n                        } : {\n                            height: chart.plotHeight\n                        });\n                    }\n                });\n            }\n        }\n        this.initiatedScale = true;\n    }\n    this.redrawTrigger = void 0;\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst StaticScale = {\n    compose: StaticScale_compose\n};\n/* harmony default export */ const Extensions_StaticScale = (StaticScale);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * For vertical axes only. Setting the static scale ensures that each tick unit\n * is translated into a fixed pixel height. For example, setting the static\n * scale to 24 results in each Y axis category taking up 24 pixels, and the\n * height of the chart adjusts. Adding or removing items will make the chart\n * resize.\n *\n * @sample gantt/xrange-series/demo/\n *         X-range series with static scale\n *\n * @type      {number}\n * @default   50\n * @since     6.2.0\n * @product   gantt\n * @apioption yAxis.staticScale\n */\n''; // Keeps doclets above in JS file\n\n;// external [\"../highcharts.js\",\"default\",\"StackItem\"]\nconst external_highcharts_src_js_default_StackItem_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].StackItem;\nvar external_highcharts_src_js_default_StackItem_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_StackItem_namespaceObject);\n;// ./code/es-modules/Core/Axis/BrokenAxis.js\n/* *\n *\n *  (c) 2009-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { addEvent: BrokenAxis_addEvent, find: BrokenAxis_find, fireEvent: BrokenAxis_fireEvent, isArray: BrokenAxis_isArray, isNumber: BrokenAxis_isNumber, pick: BrokenAxis_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Axis with support of broken data rows.\n * @private\n */\nvar BrokenAxis;\n(function (BrokenAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds support for broken axes.\n     * @private\n     */\n    function compose(AxisClass, SeriesClass) {\n        if (!AxisClass.keepProps.includes('brokenAxis')) {\n            AxisClass.keepProps.push('brokenAxis');\n            BrokenAxis_addEvent(AxisClass, 'init', onAxisInit);\n            BrokenAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            BrokenAxis_addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n            BrokenAxis_addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            const seriesProto = SeriesClass.prototype;\n            seriesProto.drawBreaks = seriesDrawBreaks;\n            seriesProto.gappedPath = seriesGappedPath;\n            BrokenAxis_addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n            BrokenAxis_addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n        }\n        return AxisClass;\n    }\n    BrokenAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAxisAfterInit() {\n        if (typeof this.brokenAxis !== 'undefined') {\n            this.brokenAxis.setBreaks(this.options.breaks, false);\n        }\n    }\n    /**\n     * Force Axis to be not-ordinal when breaks are defined.\n     * @private\n     */\n    function onAxisAfterSetOptions() {\n        const axis = this;\n        // Too early for axis.brokenAxis?.hasBreaks.\n        if (Object.keys(axis.options.breaks?.[0] || {}).length) {\n            axis.options.ordinal = false;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisAfterSetTickPositions() {\n        const axis = this, brokenAxis = axis.brokenAxis;\n        if (brokenAxis?.hasBreaks) {\n            const tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n            for (let i = 0; i < tickPositions.length; i++) {\n                if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                    newPositions.push(tickPositions[i]);\n                }\n            }\n            axis.tickPositions = newPositions;\n            axis.tickPositions.info = info;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInit() {\n        const axis = this;\n        if (!axis.brokenAxis) {\n            axis.brokenAxis = new Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterGeneratePoints() {\n        const { isDirty, options: { connectNulls }, points, xAxis, yAxis } = this;\n        // Set, or reset visibility of the points. Axis.setBreaks marks\n        // the series as isDirty\n        if (isDirty) {\n            let i = points.length;\n            while (i--) {\n                const point = points[i];\n                // Respect nulls inside the break (#4275)\n                const nullGap = point.y === null && connectNulls === false;\n                const isPointInBreak = (!nullGap && (xAxis?.brokenAxis?.isInAnyBreak(point.x, true) ||\n                    yAxis?.brokenAxis?.isInAnyBreak(point.y, true)));\n                // Set point.visible if in any break.\n                // If not in break, reset visible to original value.\n                point.visible = isPointInBreak ?\n                    false :\n                    point.options.visible !== false;\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterRender() {\n        this.drawBreaks(this.xAxis, ['x']);\n        this.drawBreaks(this.yAxis, BrokenAxis_pick(this.pointArrayMap, ['y']));\n    }\n    /**\n     * @private\n     */\n    function seriesDrawBreaks(axis, keys) {\n        const series = this, points = series.points;\n        let breaks, threshold, y;\n        if (axis?.brokenAxis?.hasBreaks) {\n            const brokenAxis = axis.brokenAxis;\n            keys.forEach(function (key) {\n                breaks = brokenAxis?.breakArray || [];\n                threshold = axis.isXAxis ?\n                    axis.min :\n                    BrokenAxis_pick(series.options.threshold, axis.min);\n                points.forEach(function (point) {\n                    y = point['stack' + key.toUpperCase()] ??\n                        point[key];\n                    breaks.forEach(function (brk) {\n                        if (BrokenAxis_isNumber(threshold) && BrokenAxis_isNumber(y)) {\n                            let eventName = '';\n                            if ((threshold < brk.from && y > brk.to) ||\n                                (threshold > brk.from && y < brk.from)) {\n                                eventName = 'pointBreak';\n                            }\n                            else if ((threshold < brk.from &&\n                                y > brk.from &&\n                                y < brk.to) || (threshold > brk.from &&\n                                y > brk.to &&\n                                y < brk.from)) {\n                                eventName = 'pointInBreak';\n                            }\n                            if (eventName) {\n                                BrokenAxis_fireEvent(axis, eventName, { point, brk });\n                            }\n                        }\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * Extend getGraphPath by identifying gaps in the data so that we\n     * can draw a gap in the line or area. This was moved from ordinal\n     * axis module to broken axis module as of #5045.\n     *\n     * @private\n     * @function Highcharts.Series#gappedPath\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Gapped path\n     */\n    function seriesGappedPath() {\n        const currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping?.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n        let gapSize = this.options.gapSize, i = points.length - 1, stack;\n        /**\n         * Defines when to display a gap in the graph, together with the\n         * [gapUnit](plotOptions.series.gapUnit) option.\n         *\n         * In case when `dataGrouping` is enabled, points can be grouped\n         * into a larger time span. This can make the grouped points to\n         * have a greater distance than the absolute value of `gapSize`\n         * property, which will result in disappearing graph completely.\n         * To prevent this situation the mentioned distance between\n         * grouped points is used instead of previously defined\n         * `gapSize`.\n         *\n         * In practice, this option is most often used to visualize gaps\n         * in time series. In a stock chart, intraday data is available\n         * for daytime hours, while gaps will appear in nights and\n         * weekends.\n         *\n         * @see [gapUnit](plotOptions.series.gapUnit)\n         * @see [xAxis.breaks](#xAxis.breaks)\n         *\n         * @sample {highstock} stock/plotoptions/series-gapsize/\n         * Setting the gap size to 2 introduces gaps for weekends in\n         * daily datasets.\n         *\n         * @type      {number}\n         * @default   0\n         * @product   highstock\n         * @requires  modules/broken-axis\n         * @apioption plotOptions.series.gapSize\n         */\n        /**\n         * Together with [gapSize](plotOptions.series.gapSize), this\n         * option defines where to draw gaps in the graph.\n         *\n         * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n         * means that if the distance between two points is greater than\n         * 5 times that of the two closest points, the graph will be\n         * broken.\n         *\n         * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n         * axis values, which on a datetime axis is milliseconds. This\n         * also applies to the navigator series that inherits gap\n         * options from the base series.\n         *\n         * @see [gapSize](plotOptions.series.gapSize)\n         *\n         * @type       {string}\n         * @default    relative\n         * @since      5.0.13\n         * @product    highstock\n         * @validvalue [\"relative\", \"value\"]\n         * @requires   modules/broken-axis\n         * @apioption  plotOptions.series.gapUnit\n         */\n        if (gapSize && i > 0) { // #5008\n            // Gap unit is relative\n            if (this.options.gapUnit !== 'value') {\n                gapSize *= this.basePointRange;\n            }\n            // Setting a new gapSize in case dataGrouping is enabled\n            // (#7686)\n            if (groupingSize &&\n                groupingSize > gapSize &&\n                // Except when DG is forced (e.g. from other series)\n                // and has lower granularity than actual points (#11351)\n                groupingSize >= this.basePointRange) {\n                gapSize = groupingSize;\n            }\n            // Extension for ordinal breaks\n            let current, next;\n            while (i--) {\n                // Reassign next if it is not visible\n                if (!(next && next.visible !== false)) {\n                    next = points[i + 1];\n                }\n                current = points[i];\n                // Skip iteration if one of the points is not visible\n                if (next.visible === false || current.visible === false) {\n                    continue;\n                }\n                if (next.x - current.x > gapSize) {\n                    const xRange = (current.x + next.x) / 2;\n                    points.splice(// Insert after this one\n                    i + 1, 0, {\n                        isNull: true,\n                        x: xRange\n                    });\n                    // For stacked chart generate empty stack items, #6546\n                    if (yAxis.stacking && this.options.stacking) {\n                        stack = yAxis.stacking.stacks[this.stackKey][xRange] = new (external_highcharts_src_js_default_StackItem_default())(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                        stack.total = 0;\n                    }\n                }\n                // Assign current to next for the upcoming iteration\n                next = current;\n            }\n        }\n        // Call base method\n        return this.getGraphPath(points);\n    }\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Provides support for broken axes.\n     * @private\n     * @class\n     */\n    class Additions {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        static isInBreak(brk, val) {\n            const repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                (val - from) % repeat :\n                repeat - ((from - val) % repeat));\n            let ret;\n            if (!brk.inclusive) {\n                ret = test < length && test !== 0;\n            }\n            else {\n                ret = test <= length;\n            }\n            return ret;\n        }\n        /**\n         * @private\n         */\n        static lin2Val(val) {\n            const axis = this, threshold = axis.min || 0, brokenAxis = axis.brokenAxis, breakArray = brokenAxis?.breakArray;\n            if (!breakArray?.length || !BrokenAxis_isNumber(val)) {\n                return val;\n            }\n            let nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from > nval) {\n                        // Skip all breaks after the nval.\n                        break;\n                    }\n                    else if (brk.to <= nval && brk.to > threshold) {\n                        nval += brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval += brk.len;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from > threshold) {\n                        // Skip all breaks above the threshold.\n                        break;\n                    }\n                    else if (brk.from >= nval && brk.from < threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval -= brk.len;\n                    }\n                }\n            }\n            return nval;\n        }\n        /**\n         * @private\n         */\n        static val2Lin(val) {\n            const axis = this, threshold = axis.min || 0, brokenAxis = axis.brokenAxis, breakArray = brokenAxis?.breakArray;\n            if (!breakArray?.length || !BrokenAxis_isNumber(val)) {\n                return val;\n            }\n            let nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (const brk of breakArray) {\n                    if (brk.to <= val && brk.to > threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (brk.from > val) {\n                        // Skip all breaks after the val.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval -= (val - brk.from);\n                        break;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (const brk of breakArray) {\n                    if (brk.from >= val && brk.from < threshold) {\n                        nval += brk.len;\n                    }\n                    else if (brk.from > threshold) {\n                        // Skip all breaks before the threshold.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval += (brk.to - val);\n                        break;\n                    }\n                }\n            }\n            return nval;\n        }\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        constructor(axis) {\n            this.axis = axis;\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first break found where the x is larger then break.from\n         * and smaller then break.to.\n         *\n         * @param {number} x\n         * The number which should be within a break.\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n         * The array of breaks to search within.\n         *\n         * @return {Highcharts.XAxisBreaksOptions|undefined}\n         * Returns the first break found that matches, returns false if no break\n         * is found.\n         */\n        findBreakAt(x, breaks) {\n            return BrokenAxis_find(breaks, function (b) {\n                return b.from < x && x < b.to;\n            });\n        }\n        /**\n         * @private\n         */\n        isInAnyBreak(val, testKeep) {\n            const brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n            let i = breaks.length, inbrk, keep, ret;\n            if (i && BrokenAxis_isNumber(val)) {\n                while (i--) {\n                    if (Additions.isInBreak(breaks[i], val)) {\n                        inbrk = true;\n                        if (!keep) {\n                            keep = BrokenAxis_pick(breaks[i].showPoints, !axis.isXAxis);\n                        }\n                    }\n                }\n                if (inbrk && testKeep) {\n                    ret = inbrk && !keep;\n                }\n                else {\n                    ret = inbrk;\n                }\n            }\n            return ret;\n        }\n        /**\n         * Dynamically set or unset breaks in an axis. This function in lighter\n         * than using Axis.update, and it also preserves animation.\n         *\n         * @private\n         * @function Highcharts.Axis#setBreaks\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n         * The breaks to add. When `undefined` it removes existing breaks.\n         *\n         * @param {boolean} [redraw=true]\n         * Whether to redraw the chart immediately.\n         */\n        setBreaks(breaks, redraw) {\n            const brokenAxis = this, axis = brokenAxis.axis, time = axis.chart.time, hasBreaks = BrokenAxis_isArray(breaks) &&\n                !!Object.keys(breaks?.[0] || {}).length;\n            axis.isDirty = (brokenAxis.hasBreaks ?? false) !== hasBreaks;\n            brokenAxis.hasBreaks = hasBreaks;\n            // Compile string dates\n            breaks?.forEach((brk) => {\n                brk.from = time.parse(brk.from) || 0;\n                brk.to = time.parse(brk.to) || 0;\n            });\n            if (breaks !== axis.options.breaks) {\n                axis.options.breaks = axis.userOptions.breaks = breaks;\n            }\n            axis.forceRedraw = true; // Force recalculation in setScale\n            // Recalculate series related to the axis.\n            axis.series.forEach(function (series) {\n                series.isDirty = true;\n            });\n            if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                // Revert to prototype functions\n                delete axis.val2lin;\n                delete axis.lin2val;\n            }\n            if (hasBreaks) {\n                axis.userOptions.ordinal = false;\n                axis.lin2val = Additions.lin2Val;\n                axis.val2lin = Additions.val2Lin;\n                axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                    // If trying to set extremes inside a break, extend min to\n                    // after, and max to before the break ( #3857 )\n                    // but not for gantt (#13898);\n                    if (brokenAxis.hasBreaks && !axis.treeGrid?.tree) {\n                        const breaks = (this.brokenAxis.breakArray || []);\n                        let axisBreak;\n                        while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks))) {\n                            newMin = axisBreak.to;\n                        }\n                        while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks))) {\n                            newMax = axisBreak.from;\n                        }\n                        // If both min and max is within the same break.\n                        if (newMax < newMin) {\n                            newMax = newMin;\n                        }\n                    }\n                    axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                };\n                axis.setAxisTranslation = function () {\n                    axis.constructor.prototype.setAxisTranslation.call(this);\n                    brokenAxis.unitLength = void 0;\n                    if (brokenAxis.hasBreaks) {\n                        const breaks = axis.options.breaks || [], breakArrayTemp = [], breakArray = [], pointRangePadding = axis.pointRangePadding ?? 0;\n                        let length = 0, inBrk, repeat, min = axis.userMin ?? axis.min, max = axis.userMax ?? axis.max, dataMin = axis.dataMin ?? min, dataMax = axis.dataMax ?? max, start, i;\n                        if (BrokenAxis_isNumber(axis.threshold)) {\n                            dataMin = Math.min(dataMin ?? axis.threshold, axis.threshold);\n                            dataMax = Math.max(dataMax ?? axis.threshold, axis.threshold);\n                        }\n                        // Min & max check (#4247) but not for gantt (#13898)\n                        if (!axis.treeGrid?.tree) {\n                            breaks.forEach(function (brk) {\n                                repeat = brk.repeat || Infinity;\n                                if (BrokenAxis_isNumber(min) && BrokenAxis_isNumber(max)) {\n                                    if (Additions.isInBreak(brk, min)) {\n                                        min += ((brk.to % repeat) -\n                                            (min % repeat));\n                                    }\n                                    if (Additions.isInBreak(brk, max)) {\n                                        max -= ((max % repeat) -\n                                            (brk.from % repeat));\n                                    }\n                                }\n                            });\n                        }\n                        // Construct an array holding all breaks in the axis\n                        // for the current data range.\n                        if (BrokenAxis_isNumber(dataMin) && BrokenAxis_isNumber(dataMax)) {\n                            breaks.forEach(function (brk) {\n                                start = brk.from;\n                                repeat = brk.repeat || Infinity;\n                                while (start - repeat > dataMin) {\n                                    start -= repeat;\n                                }\n                                while (start < dataMin) {\n                                    start += repeat;\n                                }\n                                for (i = start; i < dataMax; i += repeat) {\n                                    breakArrayTemp.push({\n                                        value: i,\n                                        move: 'in'\n                                    });\n                                    breakArrayTemp.push({\n                                        value: i + brk.to - brk.from,\n                                        move: 'out',\n                                        size: brk.breakSize\n                                    });\n                                }\n                            });\n                        }\n                        breakArrayTemp.sort(function (a, b) {\n                            return ((a.value === b.value) ?\n                                ((a.move === 'in' ? 0 : 1) -\n                                    (b.move === 'in' ? 0 : 1)) :\n                                a.value - b.value);\n                        });\n                        // Simplify the breaks\n                        inBrk = 0;\n                        start = dataMin;\n                        breakArrayTemp.forEach((brk) => {\n                            inBrk += (brk.move === 'in' ? 1 : -1);\n                            if (inBrk === 1 && brk.move === 'in') {\n                                start = brk.value;\n                            }\n                            if (inBrk === 0 && BrokenAxis_isNumber(start)) {\n                                breakArray.push({\n                                    from: start,\n                                    to: brk.value,\n                                    len: brk.value - start - (brk.size || 0)\n                                });\n                                if (BrokenAxis_isNumber(min) && BrokenAxis_isNumber(max) &&\n                                    start < max && brk.value > min) {\n                                    // Sum break gaps in the visible range\n                                    length += (brk.value -\n                                        start -\n                                        (brk.size || 0));\n                                }\n                            }\n                        });\n                        brokenAxis.breakArray = breakArray;\n                        // Used with staticScale, and below the actual axis\n                        // length, when breaks are subtracted.\n                        if (BrokenAxis_isNumber(min) &&\n                            BrokenAxis_isNumber(max) &&\n                            BrokenAxis_isNumber(axis.min)) {\n                            brokenAxis.unitLength = max - min - length +\n                                pointRangePadding;\n                            BrokenAxis_fireEvent(axis, 'afterBreaks');\n                            if (axis.staticScale) {\n                                axis.transA = axis.staticScale;\n                            }\n                            else if (brokenAxis.unitLength) {\n                                axis.transA *=\n                                    (max - axis.min + pointRangePadding) /\n                                        brokenAxis.unitLength;\n                            }\n                            if (pointRangePadding) {\n                                axis.minPixelPadding =\n                                    axis.transA * (axis.minPointOffset || 0);\n                            }\n                            axis.min = min;\n                            axis.max = max;\n                        }\n                    }\n                };\n            }\n            if (BrokenAxis_pick(redraw, true)) {\n                axis.chart.redraw();\n            }\n        }\n    }\n    BrokenAxis.Additions = Additions;\n})(BrokenAxis || (BrokenAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_BrokenAxis = (BrokenAxis);\n\n;// ./code/es-modules/Core/Axis/GridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { dateFormats } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: GridAxis_addEvent, defined: GridAxis_defined, erase: GridAxis_erase, find: GridAxis_find, isArray: GridAxis_isArray, isNumber: GridAxis_isNumber, merge: GridAxis_merge, pick: GridAxis_pick, timeUnits: GridAxis_timeUnits, wrap: GridAxis_wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Enums\n *\n * */\n/**\n * Enum for which side the axis is on. Maps to axis.side.\n * @private\n */\nvar GridAxisSide;\n(function (GridAxisSide) {\n    GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n    GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n    GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n    GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n})(GridAxisSide || (GridAxisSide = {}));\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction argsToArray(args) {\n    return Array.prototype.slice.call(args, 1);\n}\n/**\n * @private\n */\nfunction isObject(x) {\n    // Always use strict mode\n    return external_highcharts_src_js_default_default().isObject(x, true);\n}\n/**\n * @private\n */\nfunction applyGridOptions(axis) {\n    const options = axis.options;\n    // Center-align by default\n    /*\n    if (!options.labels) {\n        options.labels = {};\n    }\n    */\n    options.labels.align = GridAxis_pick(options.labels.align, 'center');\n    // @todo: Check against tickLabelPlacement between/on etc\n    /* Prevents adding the last tick label if the axis is not a category\n       axis.\n       Since numeric labels are normally placed at starts and ends of a\n       range of value, and this module makes the label point at the value,\n       an \"extra\" label would appear. */\n    if (!axis.categories) {\n        options.showLastLabel = false;\n    }\n    // Prevents rotation of labels when squished, as rotating them would not\n    // help.\n    axis.labelRotation = 0;\n    options.labels.rotation = 0;\n    // Allow putting ticks closer than their data points.\n    options.minTickInterval = 1;\n}\n/**\n * Extends axis class with grid support.\n * @private\n */\nfunction GridAxis_compose(AxisClass, ChartClass, TickClass) {\n    if (!AxisClass.keepProps.includes('grid')) {\n        AxisClass.keepProps.push('grid');\n        AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n        GridAxis_wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n        GridAxis_wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n        // Add event handlers\n        GridAxis_addEvent(AxisClass, 'init', onInit);\n        GridAxis_addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n        GridAxis_addEvent(AxisClass, 'afterInit', onAfterInit);\n        GridAxis_addEvent(AxisClass, 'afterRender', onAfterRender);\n        GridAxis_addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n        GridAxis_addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n        GridAxis_addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n        GridAxis_addEvent(AxisClass, 'trimTicks', onTrimTicks);\n        GridAxis_addEvent(AxisClass, 'destroy', onDestroy);\n        GridAxis_addEvent(ChartClass, 'afterSetChartSize', GridAxis_onChartAfterSetChartSize);\n        GridAxis_addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n        GridAxis_addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n    }\n    return AxisClass;\n}\n/**\n * Get the largest label width and height.\n *\n * @private\n * @function Highcharts.Axis#getMaxLabelDimensions\n *\n * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n * All the ticks on one axis.\n *\n * @param {Array<number|string>} tickPositions\n * All the tick positions on one axis.\n *\n * @return {Highcharts.SizeObject}\n * Object containing the properties height and width.\n *\n * @todo Move this to the generic axis implementation, as it is used there.\n */\nfunction getMaxLabelDimensions(ticks, tickPositions) {\n    const dimensions = {\n        width: 0,\n        height: 0\n    };\n    tickPositions.forEach(function (pos) {\n        const tick = ticks[pos];\n        let labelHeight = 0, labelWidth = 0, label;\n        if (isObject(tick)) {\n            label = isObject(tick.label) ? tick.label : {};\n            // Find width and height of label\n            labelHeight = label.getBBox ? label.getBBox().height : 0;\n            if (label.textStr && !GridAxis_isNumber(label.textPxLength)) {\n                label.textPxLength = label.getBBox().width;\n            }\n            labelWidth = GridAxis_isNumber(label.textPxLength) ?\n                // Math.round ensures crisp lines\n                Math.round(label.textPxLength) :\n                0;\n            if (label.textStr) {\n                // Set the tickWidth same as the label width after ellipsis\n                // applied #10281\n                labelWidth = Math.round(label.getBBox().width);\n            }\n            // Update the result if width and/or height are larger\n            dimensions.height = Math.max(labelHeight, dimensions.height);\n            dimensions.width = Math.max(labelWidth, dimensions.width);\n        }\n    });\n    // For tree grid, add indentation\n    if (this.type === 'treegrid' &&\n        this.treeGrid &&\n        this.treeGrid.mapOfPosToGridNode) {\n        const treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n        dimensions.width += (this.options.labels.indentation *\n            (treeDepth - 1));\n    }\n    return dimensions;\n}\n/**\n * Handle columns and getOffset.\n * @private\n */\nfunction wrapGetOffset(proceed) {\n    const { grid } = this, \n    // On the left side we handle the columns first because the offset is\n    // calculated from the plot area and out\n    columnsFirst = this.side === 3;\n    if (!columnsFirst) {\n        proceed.apply(this);\n    }\n    if (!grid?.isColumn) {\n        let columns = grid?.columns || [];\n        if (columnsFirst) {\n            columns = columns.slice().reverse();\n        }\n        columns\n            .forEach((column) => {\n            column.getOffset();\n        });\n    }\n    if (columnsFirst) {\n        proceed.apply(this);\n    }\n}\n/**\n * @private\n */\nfunction onAfterGetTitlePosition(e) {\n    const axis = this;\n    const options = axis.options;\n    const gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        // Compute anchor points for each of the title align options\n        const { axisTitle, height: axisHeight, horiz, left: axisLeft, offset, opposite, options, top: axisTop, width: axisWidth } = axis;\n        const tickSize = axis.tickSize();\n        const titleWidth = axisTitle?.getBBox().width;\n        const xOption = options.title.x;\n        const yOption = options.title.y;\n        const titleMargin = GridAxis_pick(options.title.margin, horiz ? 5 : 10);\n        const titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n        const crispCorr = tickSize ? tickSize[0] / 2 : 0;\n        // TODO account for alignment\n        // the position in the perpendicular direction of the axis\n        const offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n            (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                (opposite ? -1 : 1) * // So does opposite axes\n                crispCorr +\n            (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n        e.titlePosition.x = horiz ?\n            axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n            offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n        e.titlePosition.y = horiz ?\n            (offAxis -\n                (opposite ? axisHeight : 0) +\n                (opposite ? titleFontSize : -titleFontSize) / 2 +\n                offset +\n                yOption) :\n            axisTop - titleMargin + yOption;\n    }\n}\n/**\n * @private\n */\nfunction onAfterInit() {\n    const axis = this;\n    const { chart, options: { grid: gridOptions = {} }, userOptions } = axis;\n    if (gridOptions.enabled) {\n        applyGridOptions(axis);\n    }\n    if (gridOptions.columns) {\n        const columns = axis.grid.columns = [];\n        let columnIndex = axis.grid.columnIndex = 0;\n        // Handle columns, each column is a grid axis\n        while (++columnIndex < gridOptions.columns.length) {\n            const columnOptions = GridAxis_merge(userOptions, gridOptions.columns[columnIndex], {\n                isInternal: true,\n                linkedTo: 0,\n                // Disable by default the scrollbar on the grid axis\n                scrollbar: {\n                    enabled: false\n                }\n            }, \n            // Avoid recursion\n            {\n                grid: {\n                    columns: void 0\n                }\n            });\n            const column = new (external_highcharts_src_js_default_Axis_default())(axis.chart, columnOptions, 'yAxis');\n            column.grid.isColumn = true;\n            column.grid.columnIndex = columnIndex;\n            // Remove column axis from chart axes array, and place it\n            // in the columns array.\n            GridAxis_erase(chart.axes, column);\n            GridAxis_erase(chart[axis.coll] || [], column);\n            columns.push(column);\n        }\n    }\n}\n/**\n * Draw an extra line on the far side of the outermost axis,\n * creating floor/roof/wall of a grid. And some padding.\n * ```\n * Make this:\n *             (axis.min) __________________________ (axis.max)\n *                           |    |    |    |    |\n * Into this:\n *             (axis.min) __________________________ (axis.max)\n *                        ___|____|____|____|____|__\n * ```\n * @private\n */\nfunction onAfterRender() {\n    const axis = this, { axisTitle, grid, options } = axis, gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        const min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n        // Adjust the title max width to the column width (#19657)\n        if (axisTitle &&\n            !axis.chart.styledMode &&\n            firstTick?.slotWidth &&\n            !axis.options.title.style.width) {\n            axisTitle.css({ width: `${firstTick.slotWidth}px` });\n        }\n        // @todo actual label padding (top, bottom, left, right)\n        axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n        // Remove right wall before rendering if updating\n        if (axis.rightWall) {\n            axis.rightWall.destroy();\n        }\n        /*\n        Draw an extra axis line on outer axes\n                    >\n        Make this:    |______|______|______|___\n\n                    > _________________________\n        Into this:    |______|______|______|__|\n                                                */\n        if (axis.grid?.isOuterAxis() && axis.axisLine) {\n            const lineWidth = options.lineWidth;\n            if (lineWidth) {\n                const linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                // Negate distance if top or left axis\n                // Subtract 1px to draw the line at the end of the tick\n                tickLength = (axis.tickSize('tick') || [1])[0], distance = tickLength * ((axis.side === GridAxisSide.top ||\n                    axis.side === GridAxisSide.left) ? -1 : 1);\n                // If axis is horizontal, reposition line path vertically\n                if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                    if (axis.horiz) {\n                        startPoint[2] += distance;\n                        endPoint[2] += distance;\n                    }\n                    else {\n                        startPoint[1] += distance;\n                        endPoint[1] += distance;\n                    }\n                }\n                // If it doesn't exist, add an upper and lower border\n                // for the vertical grid axis.\n                if (!axis.horiz && axis.chart.marginRight) {\n                    const upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                        'L',\n                        axis.left,\n                        startPoint[2] || 0\n                    ], upperBorderPath = [\n                        upperBorderStartPoint,\n                        upperBorderEndPoint\n                    ], lowerBorderEndPoint = [\n                        'L',\n                        axis.chart.chartWidth - axis.chart.marginRight,\n                        axis.toPixels(max + axis.tickmarkOffset)\n                    ], lowerBorderStartPoint = [\n                        'M',\n                        endPoint[1] || 0,\n                        axis.toPixels(max + axis.tickmarkOffset)\n                    ], lowerBorderPath = [\n                        lowerBorderStartPoint,\n                        lowerBorderEndPoint\n                    ];\n                    if (!axis.grid.upperBorder && min % 1 !== 0) {\n                        axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                    }\n                    if (axis.grid.upperBorder) {\n                        axis.grid.upperBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.upperBorder.animate({\n                            d: upperBorderPath\n                        });\n                    }\n                    if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                        axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                    }\n                    if (axis.grid.lowerBorder) {\n                        axis.grid.lowerBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.lowerBorder.animate({\n                            d: lowerBorderPath\n                        });\n                    }\n                }\n                // Render an extra line parallel to the existing axes, to\n                // close the grid.\n                if (!axis.grid.axisLineExtra) {\n                    axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                }\n                else {\n                    axis.grid.axisLineExtra.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth\n                    });\n                    axis.grid.axisLineExtra.animate({\n                        d: linePath\n                    });\n                }\n                // Show or hide the line depending on options.showEmpty\n                axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n            }\n        }\n        (grid?.columns || []).forEach((column) => column.render());\n        // Manipulate the tick mark visibility\n        // based on the axis.max- allows smooth scrolling.\n        if (!axis.horiz &&\n            axis.chart.hasRendered &&\n            (axis.scrollbar || axis.linkedParent?.scrollbar) &&\n            axis.tickPositions.length) {\n            const tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick = axis.tickPositions[0];\n            let label, tickMark;\n            while ((label = axis.hiddenLabels.pop()) && label.element) {\n                label.show(); // #15453\n            }\n            while ((tickMark = axis.hiddenMarks.pop()) &&\n                tickMark.element) {\n                tickMark.show(); // #16439\n            }\n            // Hide/show first tick label.\n            label = axis.ticks[firstTick].label;\n            if (label) {\n                if (min - firstTick > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            // Hide/show last tick mark/label.\n            label = axis.ticks[lastTick].label;\n            if (label) {\n                if (lastTick - max > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            const mark = axis.ticks[lastTick].mark;\n            if (mark &&\n                lastTick - max < tickmarkOffset &&\n                lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                axis.hiddenMarks.push(mark.hide());\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetAxisTranslation() {\n    const axis = this;\n    const tickInfo = axis.tickPositions?.info;\n    const options = axis.options;\n    const gridOptions = options.grid || {};\n    const userLabels = axis.userOptions.labels || {};\n    // Fire this only for the Gantt type chart, #14868.\n    if (gridOptions.enabled) {\n        if (axis.horiz) {\n            axis.series.forEach((series) => {\n                series.options.pointRange = 0;\n            });\n            // Lower level time ticks, like hours or minutes, represent\n            // points in time and not ranges. These should be aligned\n            // left in the grid cell by default. The same applies to\n            // years of higher order.\n            if (tickInfo &&\n                options.dateTimeLabelFormats &&\n                options.labels &&\n                !GridAxis_defined(userLabels.align) &&\n                (options.dateTimeLabelFormats[tickInfo.unitName]\n                    .range === false ||\n                    tickInfo.count > 1 // Years\n                )) {\n                options.labels.align = 'left';\n                if (!GridAxis_defined(userLabels.x)) {\n                    options.labels.x = 3;\n                }\n            }\n        }\n        else {\n            // Don't trim ticks which not in min/max range but\n            // they are still in the min/max plus tickInterval.\n            if (this.type !== 'treegrid' &&\n                axis.grid &&\n                axis.grid.columns) {\n                this.minPointOffset = this.tickInterval;\n            }\n        }\n    }\n}\n/**\n * Creates a left and right wall on horizontal axes:\n * - Places leftmost tick at the start of the axis, to create a left\n *   wall\n * - Ensures that the rightmost tick is at the end of the axis, to\n *   create a right wall.\n * @private\n */\nfunction onAfterSetOptions(e) {\n    const options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n    let gridAxisOptions;\n    if (gridOptions.enabled === true) {\n        // Merge the user options into default grid axis options so\n        // that when a user option is set, it takes precedence.\n        gridAxisOptions = GridAxis_merge(true, {\n            className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n            dateTimeLabelFormats: {\n                hour: {\n                    list: ['%[HM]', '%[H]']\n                },\n                day: {\n                    list: ['%[AeB]', '%[aeb]', '%[E]']\n                },\n                week: {\n                    list: ['Week %W', 'W%W']\n                },\n                month: {\n                    list: ['%[B]', '%[b]', '%o']\n                }\n            },\n            grid: {\n                borderWidth: 1\n            },\n            labels: {\n                padding: 2,\n                style: {\n                    fontSize: '0.9em'\n                }\n            },\n            margin: 0,\n            title: {\n                text: null,\n                reserveSpace: false,\n                rotation: 0,\n                style: {\n                    textOverflow: 'ellipsis'\n                }\n            },\n            // In a grid axis, only allow one unit of certain types,\n            // for example we shouldn't have one grid cell spanning\n            // two days.\n            units: [[\n                    'millisecond', // Unit name\n                    [1, 10, 100]\n                ], [\n                    'second',\n                    [1, 10]\n                ], [\n                    'minute',\n                    [1, 5, 15]\n                ], [\n                    'hour',\n                    [1, 6]\n                ], [\n                    'day',\n                    [1]\n                ], [\n                    'week',\n                    [1]\n                ], [\n                    'month',\n                    [1]\n                ], [\n                    'year',\n                    null\n                ]]\n        }, userOptions);\n        // X-axis specific options\n        if (this.coll === 'xAxis') {\n            // For linked axes, tickPixelInterval is used only if\n            // the tickPositioner below doesn't run or returns\n            // undefined (like multiple years)\n            if (GridAxis_defined(userOptions.linkedTo) &&\n                !GridAxis_defined(userOptions.tickPixelInterval)) {\n                gridAxisOptions.tickPixelInterval = 350;\n            }\n            // For the secondary grid axis, use the primary axis'\n            // tick intervals and return ticks one level higher.\n            if (\n            // Check for tick pixel interval in options\n            !GridAxis_defined(userOptions.tickPixelInterval) &&\n                // Only for linked axes\n                GridAxis_defined(userOptions.linkedTo) &&\n                !GridAxis_defined(userOptions.tickPositioner) &&\n                !GridAxis_defined(userOptions.tickInterval) &&\n                !GridAxis_defined(userOptions.units)) {\n                gridAxisOptions.tickPositioner = function (min, max) {\n                    const parentInfo = this.linkedParent?.tickPositions?.info;\n                    if (parentInfo) {\n                        const units = (gridAxisOptions.units || []);\n                        let unitIdx, count = 1, unitName = 'year';\n                        for (let i = 0; i < units.length; i++) {\n                            const unit = units[i];\n                            if (unit && unit[0] === parentInfo.unitName) {\n                                unitIdx = i;\n                                break;\n                            }\n                        }\n                        // Get the first allowed count on the next unit.\n                        const unit = (GridAxis_isNumber(unitIdx) && units[unitIdx + 1]);\n                        if (unit) {\n                            unitName = unit[0] || 'year';\n                            const counts = unit[1];\n                            count = counts?.[0] || 1;\n                            // In case the base X axis shows years, make the\n                            // secondary axis show ten times the years (#11427)\n                        }\n                        else if (parentInfo.unitName === 'year') {\n                            // `unitName` is 'year'\n                            count = parentInfo.count * 10;\n                        }\n                        const unitRange = GridAxis_timeUnits[unitName];\n                        this.tickInterval = unitRange * count;\n                        return this.chart.time.getTimeTicks({ unitRange, count, unitName }, min, max, this.options.startOfWeek);\n                    }\n                };\n            }\n        }\n        // Now merge the combined options into the axis options\n        GridAxis_merge(true, this.options, gridAxisOptions);\n        if (this.horiz) {\n            /*               _________________________\n            Make this:    ___|_____|_____|_____|__|\n                            ^                     ^\n                            _________________________\n            Into this:    |_____|_____|_____|_____|\n                                ^                 ^    */\n            options.minPadding = GridAxis_pick(userOptions.minPadding, 0);\n            options.maxPadding = GridAxis_pick(userOptions.maxPadding, 0);\n        }\n        // If borderWidth is set, then use its value for tick and\n        // line width.\n        if (GridAxis_isNumber(options.grid.borderWidth)) {\n            options.tickWidth = options.lineWidth =\n                gridOptions.borderWidth;\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetOptions2(e) {\n    const axis = this;\n    const userOptions = e.userOptions;\n    const gridOptions = userOptions?.grid || {};\n    const columns = gridOptions.columns;\n    // Add column options to the parent axis. Children has their column options\n    // set on init in onGridAxisAfterInit.\n    if (gridOptions.enabled && columns) {\n        GridAxis_merge(true, axis.options, columns[0]);\n    }\n}\n/**\n * Handle columns and setScale.\n * @private\n */\nfunction onAfterSetScale() {\n    const axis = this;\n    (axis.grid.columns || []).forEach((column) => column.setScale());\n}\n/**\n * Draw vertical axis ticks extra long to create cell floors and roofs.\n * Overrides the tickLength for vertical axes.\n * @private\n */\nfunction onAfterTickSize(e) {\n    const { horiz, maxLabelDimensions, options: { grid: gridOptions = {} } } = this;\n    if (gridOptions.enabled && maxLabelDimensions) {\n        const labelPadding = this.options.labels.distance * 2;\n        const distance = horiz ?\n            (gridOptions.cellHeight ||\n                labelPadding + maxLabelDimensions.height) :\n            labelPadding + maxLabelDimensions.width;\n        if (GridAxis_isArray(e.tickSize)) {\n            e.tickSize[0] = distance;\n        }\n        else {\n            e.tickSize = [distance, 0];\n        }\n    }\n}\n/**\n * @private\n */\nfunction GridAxis_onChartAfterSetChartSize() {\n    this.axes.forEach((axis) => {\n        (axis.grid?.columns || []).forEach((column) => {\n            column.setAxisSize();\n            column.setAxisTranslation();\n        });\n    });\n}\n/**\n * @private\n */\nfunction onDestroy(e) {\n    const { grid } = this;\n    (grid.columns || []).forEach((column) => column.destroy(e.keepEvents));\n    grid.columns = void 0;\n}\n/**\n * Wraps axis init to draw cell walls on vertical axes.\n * @private\n */\nfunction onInit(e) {\n    const axis = this;\n    const userOptions = e.userOptions || {};\n    const gridOptions = userOptions.grid || {};\n    if (gridOptions.enabled && GridAxis_defined(gridOptions.borderColor)) {\n        userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n    }\n    if (!axis.grid) {\n        axis.grid = new GridAxisAdditions(axis);\n    }\n    axis.hiddenLabels = [];\n    axis.hiddenMarks = [];\n}\n/**\n * Center tick labels in cells.\n * @private\n */\nfunction onTickAfterGetLabelPosition(e) {\n    const tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n    // `verticalAlign` is currently not supported for axis.labels.\n    verticalAlign = 'middle', // LabelOpts.verticalAlign,\n    side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (GridAxis_isNumber(tickPositions[e.index + 1]) ?\n        tickPositions[e.index + 1] - tickmarkOffset :\n        (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n    // Only center tick labels in grid axes\n    if (gridOptions.enabled === true) {\n        let bottom, top, left, right;\n        // Calculate top and bottom positions of the cell.\n        if (side === 'top') {\n            bottom = axis.top + axis.offset;\n            top = bottom - tickWidth;\n        }\n        else if (side === 'bottom') {\n            top = chart.chartHeight - axis.bottom + axis.offset;\n            bottom = top + tickWidth;\n        }\n        else {\n            bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n            top = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n        }\n        // Calculate left and right positions of the cell.\n        if (side === 'right') {\n            left = chart.chartWidth - axis.right + axis.offset;\n            right = left + tickWidth;\n        }\n        else if (side === 'left') {\n            right = axis.left + axis.offset;\n            left = right - tickWidth;\n        }\n        else {\n            left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n            right = Math.min(// #15742\n            Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n        }\n        tick.slotWidth = right - left;\n        // Calculate the positioning of the label based on\n        // alignment.\n        e.pos.x = (align === 'left' ?\n            left :\n            align === 'right' ?\n                right :\n                left + ((right - left) / 2) // Default to center\n        );\n        e.pos.y = (verticalAlign === 'top' ?\n            top :\n            verticalAlign === 'bottom' ?\n                bottom :\n                top + ((bottom - top) / 2) // Default to middle\n        );\n        if (label) {\n            const lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n            // Adjustment to y position to align the label correctly.\n            // Would be better to have a setter or similar for this.\n            if (!labelOpts.useHTML) {\n                const lines = Math.round(labelHeight / lblMetrics.h);\n                e.pos.y += (\n                // Center the label\n                // TODO: why does this actually center the label?\n                ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                    // Adjust for height of additional lines.\n                    -(((lines - 1) * lblMetrics.h) / 2));\n            }\n            else {\n                e.pos.y += (\n                // Readjust yCorr in htmlUpdateTransform\n                lblMetrics.b +\n                    // Adjust for height of html label\n                    -(labelHeight / 2));\n            }\n        }\n        e.pos.x += (axis.horiz && labelOpts.x) || 0;\n    }\n}\n/**\n * @private\n */\nfunction onTickLabelFormat(ctx) {\n    const { axis, value } = ctx;\n    if (axis.options.grid?.enabled) {\n        const tickPos = axis.tickPositions;\n        const series = (axis.linkedParent || axis).series[0];\n        const isFirst = value === tickPos[0];\n        const isLast = value === tickPos[tickPos.length - 1];\n        const point = series && GridAxis_find(series.options.data, function (p) {\n            return p[axis.isXAxis ? 'x' : 'y'] === value;\n        });\n        let pointCopy;\n        if (point && series.is('gantt')) {\n            // For the Gantt set point aliases to the pointCopy\n            // to do not change the original point\n            pointCopy = GridAxis_merge(point);\n            external_highcharts_src_js_default_default().seriesTypes.gantt.prototype.pointClass\n                .setGanttPointAliases(pointCopy, axis.chart);\n        }\n        // Make additional properties available for the\n        // formatter\n        ctx.isFirst = isFirst;\n        ctx.isLast = isLast;\n        ctx.point = pointCopy;\n    }\n}\n/**\n * Makes tick labels which are usually ignored in a linked axis\n * displayed if they are within range of linkedParent.min.\n * ```\n *                        _____________________________\n *                        |   |       |       |       |\n * Make this:             |   |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n *                        _____________________________\n *                        |   |       |       |       |\n * Into this:             | 1 |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n * ```\n * @private\n * @todo Does this function do what the drawing says? Seems to affect\n *       ticks and not the labels directly?\n */\nfunction onTrimTicks() {\n    const axis = this, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent?.min, linkedMax = axis.linkedParent?.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n    GridAxis_isNumber(min) &&\n        min >= firstPos + tickInterval &&\n        min < secondPos), endMoreThanMin = (GridAxis_isNumber(min) &&\n        firstPos < min &&\n        firstPos + tickInterval > min), startLessThanMax = (GridAxis_isNumber(max) &&\n        lastPos > max &&\n        lastPos - tickInterval < max), endMoreThanMax = (GridAxis_isNumber(max) &&\n        max <= lastPos - tickInterval &&\n        max > beforeLastPos);\n    if (gridOptions.enabled === true &&\n        !categoryAxis &&\n        (axis.isXAxis || axis.isLinked)) {\n        if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n            tickPositions[0] = min;\n        }\n        if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n            tickPositions[tickPositions.length - 1] = max;\n        }\n    }\n}\n/**\n * Avoid altering tickInterval when reserving space.\n * @private\n */\nfunction wrapUnsquish(proceed) {\n    const axis = this;\n    const { options: { grid: gridOptions = {} } } = axis;\n    if (gridOptions.enabled === true && axis.categories) {\n        return axis.tickInterval;\n    }\n    return proceed.apply(axis, argsToArray(arguments));\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Additions for grid axes.\n * @private\n * @class\n */\nclass GridAxisAdditions {\n    /* *\n    *\n    *  Constructors\n    *\n    * */\n    constructor(axis) {\n        this.axis = axis;\n    }\n    /* *\n    *\n    *  Functions\n    *\n    * */\n    /**\n     * Checks if an axis is the outer axis in its dimension. Since\n     * axes are placed outwards in order, the axis with the highest\n     * index is the outermost axis.\n     *\n     * Example: If there are multiple x-axes at the top of the chart,\n     * this function returns true if the axis supplied is the last\n     * of the x-axes.\n     *\n     * @private\n     *\n     * @return {boolean}\n     * True if the axis is the outermost axis in its dimension; false if\n     * not.\n     */\n    isOuterAxis() {\n        const axis = this.axis;\n        const chart = axis.chart;\n        const columnIndex = axis.grid.columnIndex;\n        const columns = (axis.linkedParent?.grid.columns ||\n            axis.grid.columns ||\n            []);\n        const parentAxis = columnIndex ? axis.linkedParent : axis;\n        let thisIndex = -1, lastIndex = 0;\n        // On the left side, when we have columns (not only multiple axes), the\n        // main axis is to the left\n        if (axis.side === 3 && !chart.inverted && columns.length) {\n            return !axis.linkedParent;\n        }\n        (chart[axis.coll] || []).forEach((otherAxis, index) => {\n            if (otherAxis.side === axis.side &&\n                !otherAxis.options.isInternal) {\n                lastIndex = index;\n                if (otherAxis === parentAxis) {\n                    // Get the index of the axis in question\n                    thisIndex = index;\n                }\n            }\n        });\n        return (lastIndex === thisIndex &&\n            (GridAxis_isNumber(columnIndex) ?\n                columns.length === columnIndex :\n                true));\n    }\n    /**\n     * Add extra border based on the provided path.\n     * @private\n     * @param {SVGPath} path\n     * The path of the border.\n     * @return {Highcharts.SVGElement}\n     * Border\n     */\n    renderBorder(path) {\n        const axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n            .addClass('highcharts-axis-line')\n            .add(axis.axisGroup);\n        if (!renderer.styledMode) {\n            extraBorderLine.attr({\n                stroke: options.lineColor,\n                'stroke-width': options.lineWidth,\n                zIndex: 7\n            });\n        }\n        return extraBorderLine;\n    }\n}\n/* *\n *\n *  Registry\n *\n * */\n// First letter of the day of the week, e.g. 'M' for 'Monday'.\ndateFormats.E = function (timestamp) {\n    return this.dateFormat('%a', timestamp, true).charAt(0);\n};\n// Adds week date format\ndateFormats.W = function (timestamp) {\n    const d = this.toParts(timestamp), firstDay = (d[7] + 6) % 7, thursday = d.slice(0);\n    thursday[2] = d[2] - firstDay + 3;\n    const firstThursday = this.toParts(this.makeTime(thursday[0], 0, 1));\n    if (firstThursday[7] !== 4) {\n        d[1] = 0; // Set month to January\n        d[2] = 1 + (11 - firstThursday[7]) % 7;\n    }\n    const thursdayTS = this.makeTime(thursday[0], thursday[1], thursday[2]), firstThursdayTS = this.makeTime(firstThursday[0], firstThursday[1], firstThursday[2]);\n    return (1 +\n        Math.floor((thursdayTS - firstThursdayTS) / 604800000)).toString();\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst GridAxis = {\n    compose: GridAxis_compose\n};\n/* harmony default export */ const Axis_GridAxis = (GridAxis);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * @productdesc {gantt}\n * For grid axes (like in Gantt charts),\n * it is possible to declare as a list to provide different\n * formats depending on available space.\n *\n * Defaults to:\n * ```js\n * {\n *     hour: { list: ['%H:%M', '%H'] },\n *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n *     week: { list: ['Week %W', 'W%W'] },\n *     month: { list: ['%B', '%b', '%o'] }\n * }\n * ```\n *\n * @sample {gantt} gantt/grid-axis/date-time-label-formats\n *         Gantt chart with custom axis date format.\n *\n * @apioption xAxis.dateTimeLabelFormats\n */\n/**\n * Set grid options for the axis labels. Requires Highcharts Gantt.\n *\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid\n */\n/**\n * Enable grid on the axis labels. Defaults to true for Gantt charts.\n *\n * @type      {boolean}\n * @default   true\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid.enabled\n */\n/**\n * Set specific options for each column (or row for horizontal axes) in the\n * grid. Each extra column/row is its own axis, and the axis options can be set\n * here.\n *\n * @sample gantt/demo/left-axis-table\n *         Left axis as a table\n * @sample gantt/demo/treegrid-columns\n *         Collapsible tree grid with columns\n *\n * @type      {Array<Highcharts.XAxisOptions>}\n * @apioption xAxis.grid.columns\n */\n/**\n * Set border color for the label grid lines.\n *\n * @type      {Highcharts.ColorString}\n * @default   #e6e6e6\n * @apioption xAxis.grid.borderColor\n */\n/**\n * Set border width of the label grid lines.\n *\n * @type      {number}\n * @default   1\n * @apioption xAxis.grid.borderWidth\n */\n/**\n * Set cell height for grid axis labels. By default this is calculated from font\n * size. This option only applies to horizontal axes. For vertical axes, check\n * the [#yAxis.staticScale](yAxis.staticScale) option.\n *\n * @sample gantt/grid-axis/cellheight\n *         Gant chart with custom cell height\n * @type      {number}\n * @apioption xAxis.grid.cellHeight\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Gantt/Tree.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\nconst { extend: Tree_extend, isNumber: Tree_isNumber, pick: Tree_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates an object map from parent id to children's index.\n *\n * @private\n * @function Highcharts.Tree#getListOfParents\n *\n * @param {Array<*>} data\n *        List of points set in options. `Array.parent` is parent id of point.\n *\n * @return {Highcharts.Dictionary<Array<*>>}\n * Map from parent id to children index in data\n */\nfunction getListOfParents(data) {\n    const root = '', ids = [], listOfParents = data.reduce((prev, curr) => {\n        const { parent = '', id } = curr;\n        if (typeof prev[parent] === 'undefined') {\n            prev[parent] = [];\n        }\n        prev[parent].push(curr);\n        if (id) {\n            ids.push(id);\n        }\n        return prev;\n    }, {});\n    Object.keys(listOfParents).forEach((node) => {\n        if ((node !== root) && (ids.indexOf(node) === -1)) {\n            const adoptedByRoot = listOfParents[node].map(function (orphan) {\n                const { ...parentExcluded } = orphan; // #15196\n                return parentExcluded;\n            });\n            listOfParents[root].push(...adoptedByRoot);\n            delete listOfParents[node];\n        }\n    });\n    return listOfParents;\n}\n/** @private */\nfunction getNode(id, parent, level, data, mapOfIdToChildren, options) {\n    const after = options && options.after, before = options && options.before, node = {\n        data,\n        depth: level - 1,\n        id,\n        level,\n        parent: (parent || '')\n    };\n    let descendants = 0, height = 0, start, end;\n    // Allow custom logic before the children has been created.\n    if (typeof before === 'function') {\n        before(node, options);\n    }\n    // Call getNode recursively on the children. Calculate the height of the\n    // node, and the number of descendants.\n    const children = ((mapOfIdToChildren[id] || [])).map((child) => {\n        const node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n            childStart :\n            child.end ||\n                NaN);\n        // Start should be the lowest child.start.\n        start = ((!Tree_isNumber(start) || childStart < start) ?\n            childStart :\n            start);\n        // End should be the largest child.end.\n        // If child is milestone, then use start as end.\n        end = ((!Tree_isNumber(end) || childEnd > end) ?\n            childEnd :\n            end);\n        descendants = descendants + 1 + node.descendants;\n        height = Math.max(node.height + 1, height);\n        return node;\n    });\n    // Calculate start and end for point if it is not already explicitly set.\n    if (data) {\n        data.start = Tree_pick(data.start, start);\n        data.end = Tree_pick(data.end, end);\n    }\n    Tree_extend(node, {\n        children: children,\n        descendants: descendants,\n        height: height\n    });\n    // Allow custom logic after the children has been created.\n    if (typeof after === 'function') {\n        after(node, options);\n    }\n    return node;\n}\n/** @private */\nfunction getTree(data, options) {\n    return getNode('', null, 1, null, getListOfParents(data), options);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst Tree = {\n    getNode,\n    getTree\n};\n/* harmony default export */ const Gantt_Tree = (Tree);\n\n;// ./code/es-modules/Core/Axis/TreeGrid/TreeGridTick.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { addEvent: TreeGridTick_addEvent, correctFloat: TreeGridTick_correctFloat, removeEvent: TreeGridTick_removeEvent, isObject: TreeGridTick_isObject, isNumber: TreeGridTick_isNumber, pick: TreeGridTick_pick, wrap: TreeGridTick_wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onTickInit() {\n    const tick = this;\n    if (!tick.treeGrid) {\n        tick.treeGrid = new TreeGridTickAdditions(tick);\n    }\n}\n/**\n * @private\n */\nfunction onTickHover(label) {\n    label.addClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({\n            textDecoration: 'underline'\n        });\n    }\n}\n/**\n * @private\n */\nfunction onTickHoverExit(label, options) {\n    const css = TreeGridTick_isObject(options.style) ? options.style : {};\n    label.removeClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({ textDecoration: (css.textDecoration || 'none') });\n    }\n}\n/**\n * @private\n */\nfunction renderLabelIcon(tick, params) {\n    const treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, padding = options.padding ?? tick.axis.linkedParent ? 0 : 5, iconCenter = {\n        x: labelBox.x - (width / 2) - padding,\n        y: labelBox.y - (height / 2)\n    }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && TreeGridTick_isNumber(iconCenter.y);\n    let icon = treeGrid.labelIcon;\n    if (!icon) {\n        treeGrid.labelIcon = icon = renderer\n            .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n            .addClass('highcharts-label-icon')\n            .add(params.group);\n    }\n    // Set the new position, and show or hide\n    icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n    // Presentational attributes\n    if (!renderer.styledMode) {\n        icon\n            .attr({\n            cursor: 'pointer',\n            'fill': TreeGridTick_pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n            'stroke-width': 1,\n            stroke: options.lineColor,\n            strokeWidth: options.lineWidth || 0\n        });\n    }\n    // Update the icon positions\n    icon[isNew ? 'attr' : 'animate']({\n        translateX: iconCenter.x,\n        translateY: iconCenter.y,\n        rotation: rotation\n    });\n}\n/**\n * @private\n */\nfunction wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n    const tick = this, lbOptions = TreeGridTick_pick(tick.options?.labels, labelOptions), pos = tick.pos, axis = tick.axis, isTreeGrid = axis.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n    let mapOfPosToGridNode, node, level;\n    if (isTreeGrid) {\n        const { width = 0, padding = axis.linkedParent ? 0 : 5 } = (lbOptions && TreeGridTick_isObject(lbOptions.symbol, true) ?\n            lbOptions.symbol :\n            {}), indentation = (lbOptions && TreeGridTick_isNumber(lbOptions.indentation) ?\n            lbOptions.indentation :\n            0);\n        mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n        node = mapOfPosToGridNode?.[pos];\n        level = node?.depth || 1;\n        result.x += (\n        // Add space for symbols\n        (width + (padding * 2)) +\n            // Apply indentation\n            ((level - 1) * indentation));\n    }\n    return result;\n}\n/**\n * @private\n */\nfunction wrapRenderLabel(proceed) {\n    const tick = this, { pos, axis, label, treeGrid: tickGrid, options: tickOptions } = tick, icon = tickGrid?.labelIcon, labelElement = label?.element, { treeGrid: axisGrid, options: axisOptions, chart, tickPositions } = axis, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = TreeGridTick_pick(tickOptions?.labels, axisOptions?.labels), symbolOptions = (labelOptions && TreeGridTick_isObject(labelOptions.symbol, true) ?\n        labelOptions.symbol :\n        {}), node = mapOfPosToGridNode?.[pos], { descendants, depth } = node || {}, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axis.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n    let collapsed, addClassName, removeClassName;\n    if (isTreeGridElement && node) {\n        // Add class name for hierarchical styling.\n        label\n            .removeClass(new RegExp(prefixLevelClass + '.*'))\n            .addClass(prefixLevelClass + level);\n    }\n    proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n    if (isTreeGridElement && hasDescendants) {\n        collapsed = axisGrid.isCollapsed(node);\n        renderLabelIcon(tick, {\n            color: (!styledMode &&\n                label.styles.color ||\n                ''),\n            collapsed: collapsed,\n            group: label.parentGroup,\n            options: symbolOptions,\n            renderer: label.renderer,\n            show: shouldRender,\n            xy: label.xy\n        });\n        // Add class name for the node.\n        addClassName = prefixClassName +\n            (collapsed ? 'collapsed' : 'expanded');\n        removeClassName = prefixClassName +\n            (collapsed ? 'expanded' : 'collapsed');\n        label\n            .addClass(addClassName)\n            .removeClass(removeClassName);\n        if (!styledMode) {\n            label.css({\n                cursor: 'pointer'\n            });\n        }\n        // Add events to both label text and icon\n        [label, icon].forEach((object) => {\n            if (object && !object.attachedTreeGridEvents) {\n                // On hover\n                TreeGridTick_addEvent(object.element, 'mouseover', function () {\n                    onTickHover(label);\n                });\n                // On hover out\n                TreeGridTick_addEvent(object.element, 'mouseout', function () {\n                    onTickHoverExit(label, labelOptions);\n                });\n                TreeGridTick_addEvent(object.element, 'click', function () {\n                    tickGrid.toggleCollapse();\n                });\n                object.attachedTreeGridEvents = true;\n            }\n        });\n    }\n    else if (icon) {\n        TreeGridTick_removeEvent(labelElement);\n        label?.css({ cursor: 'default' });\n        icon.destroy();\n        tickGrid.labelIcon = void 0;\n    }\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nclass TreeGridTickAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(TickClass) {\n        const tickProto = TickClass.prototype;\n        if (!tickProto.toggleCollapse) {\n            TreeGridTick_addEvent(TickClass, 'init', onTickInit);\n            TreeGridTick_wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n            TreeGridTick_wrap(tickProto, 'renderLabel', wrapRenderLabel);\n            // Backwards compatibility\n            tickProto.collapse = function (redraw) {\n                this.treeGrid.collapse(redraw);\n            };\n            tickProto.expand = function (redraw) {\n                this.treeGrid.expand(redraw);\n            };\n            tickProto.toggleCollapse = function (redraw) {\n                this.treeGrid.toggleCollapse(redraw);\n            };\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    constructor(tick) {\n        this.tick = tick;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Collapse the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#collapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    collapse(redraw) {\n        const { pos, axis } = this.tick, { treeGrid, brokenAxis } = axis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.collapse(posMappedNodes[pos]), redraw ?? true);\n        }\n    }\n    /**\n     * Destroy remaining labelIcon if exist.\n     *\n     * @private\n     * @function Highcharts.Tick#destroy\n     */\n    destroy() {\n        this.labelIcon?.destroy();\n    }\n    /**\n     * Expand the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#expand\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    expand(redraw) {\n        const { pos, axis } = this.tick, { treeGrid, brokenAxis } = axis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.expand(posMappedNodes[pos]), redraw ?? true);\n        }\n    }\n    /**\n     * Toggle the collapse/expand state of the grid cell. Used when axis is\n     * of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#toggleCollapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    toggleCollapse(redraw = true) {\n        const { axis, pos } = this.tick, { brokenAxis, treeGrid } = axis;\n        if (brokenAxis && treeGrid.mapOfPosToGridNode) {\n            const scrollMode = !!(axis.scrollbar && axis.staticScale), maxPx = axis.pos + axis.len +\n                (treeGrid.pendingSizeAdjustment || 0);\n            treeGrid.pendingSizeAdjustment = 0;\n            brokenAxis.setBreaks(treeGrid.toggleCollapse(treeGrid.mapOfPosToGridNode[pos]), scrollMode && redraw);\n            if (scrollMode) {\n                const adjustedMax = axis.toValue(axis.toPixels(axis.dataMax));\n                let newMaxVal = axis.toValue(maxPx) - axis.tickmarkOffset, newMinVal = axis.userMin ?? axis.min;\n                // If dataMax is in a break.\n                treeGrid.adjustedMax = adjustedMax !== axis.dataMax ?\n                    adjustedMax - axis.tickmarkOffset :\n                    void 0;\n                if (newMaxVal > axis.dataMax) {\n                    let missingPx = maxPx -\n                        axis.toPixels(axis.dataMax + axis.tickmarkOffset);\n                    newMaxVal = treeGrid.adjustedMax ?? axis.dataMax;\n                    // Check if enough space available on the min end.\n                    newMinVal = axis.toValue(axis.toPixels(newMinVal - axis.tickmarkOffset) - missingPx) + axis.tickmarkOffset;\n                    if (newMinVal < axis.dataMin) {\n                        missingPx = axis.toPixels(axis.dataMin) -\n                            axis.toPixels(newMinVal);\n                        newMinVal = axis.dataMin;\n                        treeGrid.pendingSizeAdjustment = missingPx;\n                    }\n                }\n                axis.setExtremes(TreeGridTick_correctFloat(newMinVal), TreeGridTick_correctFloat(newMaxVal), false, false, { trigger: 'toggleCollapse' });\n            }\n            if (redraw) {\n                axis.chart.redraw();\n            }\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const TreeGridTick = (TreeGridTickAdditions);\n\n;// ./code/es-modules/Series/TreeUtilities.js\n/* *\n *\n *  (c) 2014-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard / Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { extend: TreeUtilities_extend, isArray: TreeUtilities_isArray, isNumber: TreeUtilities_isNumber, isObject: TreeUtilities_isObject, merge: TreeUtilities_merge, pick: TreeUtilities_pick, relativeLength: TreeUtilities_relativeLength } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable valid-jsdoc */\n/**\n * @private\n */\nfunction getColor(node, options) {\n    const index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n    let getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n    /**\n     * @private\n     */\n    const variateColor = (color) => {\n        const colorVariation = level && level.colorVariation;\n        if (colorVariation &&\n            colorVariation.key === 'brightness' &&\n            index &&\n            siblings) {\n            return external_highcharts_src_js_default_Color_default().parse(color).brighten(colorVariation.to * (index / siblings)).get();\n        }\n        return color;\n    };\n    if (node) {\n        point = points[node.i];\n        level = mapOptionsToLevel[node.level] || {};\n        getColorByPoint = point && level.colorByPoint;\n        if (getColorByPoint) {\n            colorIndexByPoint = point.index % (colors ?\n                colors.length :\n                chartOptionsChart.colorCount);\n            colorByPoint = colors && colors[colorIndexByPoint];\n        }\n        // Select either point color, level color or inherited color.\n        if (!series.chart.styledMode) {\n            color = TreeUtilities_pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n        }\n        colorIndex = TreeUtilities_pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n    }\n    return {\n        color: color,\n        colorIndex: colorIndex\n    };\n}\n/**\n * Creates a map from level number to its given options.\n *\n * @private\n *\n * @param {Object} params\n * Object containing parameters.\n * - `defaults` Object containing default options. The default options are\n *   merged with the userOptions to get the final options for a specific\n *   level.\n * - `from` The lowest level number.\n * - `levels` User options from series.levels.\n * - `to` The highest level number.\n *\n * @return {Highcharts.Dictionary<object>|null}\n * Returns a map from level number to its given options.\n */\nfunction getLevelOptions(params) {\n    const result = {};\n    let defaults, converted, i, from, to, levels;\n    if (TreeUtilities_isObject(params)) {\n        from = TreeUtilities_isNumber(params.from) ? params.from : 1;\n        levels = params.levels;\n        converted = {};\n        defaults = TreeUtilities_isObject(params.defaults) ? params.defaults : {};\n        if (TreeUtilities_isArray(levels)) {\n            converted = levels.reduce((obj, item) => {\n                let level, levelIsConstant, options;\n                if (TreeUtilities_isObject(item) && TreeUtilities_isNumber(item.level)) {\n                    options = TreeUtilities_merge({}, item);\n                    levelIsConstant = TreeUtilities_pick(options.levelIsConstant, defaults.levelIsConstant);\n                    // Delete redundant properties.\n                    delete options.levelIsConstant;\n                    delete options.level;\n                    // Calculate which level these options apply to.\n                    level = item.level + (levelIsConstant ? 0 : from - 1);\n                    if (TreeUtilities_isObject(obj[level])) {\n                        TreeUtilities_merge(true, obj[level], options); // #16329\n                    }\n                    else {\n                        obj[level] = options;\n                    }\n                }\n                return obj;\n            }, {});\n        }\n        to = TreeUtilities_isNumber(params.to) ? params.to : 1;\n        for (i = 0; i <= to; i++) {\n            result[i] = TreeUtilities_merge({}, defaults, TreeUtilities_isObject(converted[i]) ? converted[i] : {});\n        }\n    }\n    return result;\n}\n/**\n * @private\n * @todo Combine buildTree and buildNode with setTreeValues\n * @todo Remove logic from Treemap and make it utilize this mixin.\n */\nfunction setTreeValues(tree, options) {\n    const before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n    let childrenTotal = 0;\n    tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n    tree.name = TreeUtilities_pick(point && point.name, '');\n    tree.visible = (idRoot === tree.id ||\n        options.visible === true);\n    if (typeof before === 'function') {\n        tree = before(tree, options);\n    }\n    // First give the children some values\n    tree.children.forEach((child, i) => {\n        const newOptions = TreeUtilities_extend({}, options);\n        TreeUtilities_extend(newOptions, {\n            index: i,\n            siblings: tree.children.length,\n            visible: tree.visible\n        });\n        child = setTreeValues(child, newOptions);\n        children.push(child);\n        if (child.visible) {\n            childrenTotal += child.val;\n        }\n    });\n    // Set the values\n    const value = TreeUtilities_pick(optionsPoint.value, childrenTotal);\n    tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n    tree.children = children;\n    tree.childrenTotal = childrenTotal;\n    tree.isLeaf = tree.visible && !childrenTotal;\n    tree.val = value;\n    return tree;\n}\n/**\n * Update the rootId property on the series. Also makes sure that it is\n * accessible to exporting.\n *\n * @private\n *\n * @param {Object} series\n * The series to operate on.\n *\n * @return {string}\n * Returns the resulting rootId after update.\n */\nfunction updateRootId(series) {\n    let rootId, options;\n    if (TreeUtilities_isObject(series)) {\n        // Get the series options.\n        options = TreeUtilities_isObject(series.options) ? series.options : {};\n        // Calculate the rootId.\n        rootId = TreeUtilities_pick(series.rootNode, options.rootId, '');\n        // Set rootId on series.userOptions to pick it up in exporting.\n        if (TreeUtilities_isObject(series.userOptions)) {\n            series.userOptions.rootId = rootId;\n        }\n        // Set rootId on series to pick it up on next update.\n        series.rootNode = rootId;\n    }\n    return rootId;\n}\n/**\n * Get the node width, which relies on the plot width and the nodeDistance\n * option.\n *\n * @private\n */\nfunction getNodeWidth(series, columnCount) {\n    const { chart, options } = series, { nodeDistance = 0, nodeWidth = 0 } = options, { plotSizeX = 1 } = chart;\n    // Node width auto means they are evenly distributed along the width of\n    // the plot area\n    if (nodeWidth === 'auto') {\n        if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n            const fraction = parseFloat(nodeDistance) / 100, total = columnCount + fraction * (columnCount - 1);\n            return plotSizeX / total;\n        }\n        const nDistance = Number(nodeDistance);\n        return ((plotSizeX + nDistance) /\n            (columnCount || 1)) - nDistance;\n    }\n    return TreeUtilities_relativeLength(nodeWidth, plotSizeX);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst TreeUtilities = {\n    getColor,\n    getLevelOptions,\n    getNodeWidth,\n    setTreeValues,\n    updateRootId\n};\n/* harmony default export */ const Series_TreeUtilities = (TreeUtilities);\n\n;// ./code/es-modules/Core/Axis/TreeGrid/TreeGridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\n\nconst { getLevelOptions: TreeGridAxis_getLevelOptions } = Series_TreeUtilities;\n\nconst { addEvent: TreeGridAxis_addEvent, isArray: TreeGridAxis_isArray, splat: TreeGridAxis_splat, find: TreeGridAxis_find, fireEvent: TreeGridAxis_fireEvent, isObject: TreeGridAxis_isObject, isString: TreeGridAxis_isString, merge: TreeGridAxis_merge, removeEvent: TreeGridAxis_removeEvent, wrap: TreeGridAxis_wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Variables\n *\n * */\nlet TickConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates a break object from a node.\n *\n * @param {Object} node\n * The node to create a break object from.\n *\n * @private\n */\nfunction getBreakFromNode(node) {\n    return {\n        from: node.collapseStart || 0,\n        to: node.collapseEnd || 0,\n        showPoints: false\n    };\n}\n/**\n * Creates a tree structure of the data, and the treegrid. Calculates\n * categories, and y-values of points based on the tree.\n *\n * @private\n * @function getTreeGridFromData\n *\n * @param {Array<Highcharts.GanttPointOptions>} data\n * All the data points to display in the axis.\n *\n * @param {boolean} uniqueNames\n * Whether or not the data node with the same name should share grid cell. If\n * true they do share cell. False by default.\n *\n * @param {number} numberOfSeries\n *\n * @return {Object}\n * Returns an object containing categories, mapOfIdToNode,\n * mapOfPosToGridNode, and tree.\n *\n * @todo There should be only one point per line.\n * @todo It should be optional to have one category per point, or merge\n *       cells\n * @todo Add unit-tests.\n */\nfunction getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n    const categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = uniqueNames || false;\n    let mapOfPosToGridNode = {}, posIterator = -1;\n    // Build the tree from the series data.\n    const treeParams = {\n        // After the children has been created.\n        after: function (node) {\n            const gridNode = mapOfPosToGridNode[node.pos];\n            let height = 0, descendants = 0;\n            gridNode.children.forEach(function (child) {\n                descendants += (child.descendants || 0) + 1;\n                height = Math.max((child.height || 0) + 1, height);\n            });\n            gridNode.descendants = descendants;\n            gridNode.height = height;\n            if (gridNode.collapsed) {\n                collapsedNodes.push(gridNode);\n            }\n        },\n        // Before the children has been created.\n        before: function (node) {\n            const data = TreeGridAxis_isObject(node.data, true) ?\n                node.data :\n                {}, name = TreeGridAxis_isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (TreeGridAxis_isObject(parentNode, true) ?\n                mapOfPosToGridNode[parentNode.pos] :\n                null), hasSameName = function (x) {\n                return x.name === name;\n            };\n            let gridNode, pos;\n            // If not unique names, look for sibling node with the same name\n            if (uniqueNamesEnabled &&\n                TreeGridAxis_isObject(parentGridNode, true) &&\n                !!(gridNode = TreeGridAxis_find(parentGridNode.children, hasSameName))) {\n                // If there is a gridNode with the same name, reuse position\n                pos = gridNode.pos;\n                // Add data node to list of nodes in the grid node.\n                gridNode.nodes.push(node);\n            }\n            else {\n                // If it is a new grid node, increment position.\n                pos = posIterator++;\n            }\n            // Add new grid node to map.\n            if (!mapOfPosToGridNode[pos]) {\n                mapOfPosToGridNode[pos] = gridNode = {\n                    depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                    name: name,\n                    id: data.id,\n                    nodes: [node],\n                    children: [],\n                    pos: pos\n                };\n                // If not root, then add name to categories.\n                if (pos !== -1) {\n                    categories.push(name);\n                }\n                // Add name to list of children.\n                if (TreeGridAxis_isObject(parentGridNode, true)) {\n                    parentGridNode.children.push(gridNode);\n                }\n            }\n            // Add data node to map\n            if (TreeGridAxis_isString(node.id)) {\n                mapOfIdToNode[node.id] = node;\n            }\n            // If one of the points are collapsed, then start the grid node\n            // in collapsed state.\n            if (gridNode && data.collapsed === true) {\n                gridNode.collapsed = true;\n            }\n            // Assign pos to data node\n            node.pos = pos;\n        }\n    };\n    const updateYValuesAndTickPos = function (map, numberOfSeries) {\n        const setValues = function (gridNode, start, result) {\n            const nodes = gridNode.nodes, padding = 0.5;\n            let end = start + (start === -1 ? 0 : numberOfSeries - 1);\n            const diff = (end - start) / 2, pos = start + diff;\n            nodes.forEach(function (node) {\n                const data = node.data;\n                if (TreeGridAxis_isObject(data, true)) {\n                    // Update point\n                    data.y = start + (data.seriesIndex || 0);\n                    // Remove the property once used\n                    delete data.seriesIndex;\n                }\n                node.pos = pos;\n            });\n            result[pos] = gridNode;\n            gridNode.pos = pos;\n            gridNode.tickmarkOffset = diff + padding;\n            gridNode.collapseStart = end + padding;\n            gridNode.children.forEach(function (child) {\n                setValues(child, end + 1, result);\n                end = (child.collapseEnd || 0) - padding;\n            });\n            // Set collapseEnd to the end of the last child node.\n            gridNode.collapseEnd = end + padding;\n            return result;\n        };\n        return setValues(map['-1'], -1, {});\n    };\n    // Create tree from data\n    const tree = Gantt_Tree.getTree(data, treeParams);\n    // Update y values of data, and set calculate tick positions.\n    mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n    // Return the resulting data.\n    return {\n        categories: categories,\n        mapOfIdToNode: mapOfIdToNode,\n        mapOfPosToGridNode: mapOfPosToGridNode,\n        collapsedNodes: collapsedNodes,\n        tree: tree\n    };\n}\n/**\n * Builds the tree of categories and calculates its positions.\n * @private\n * @param {Object} e Event object\n * @param {Object} e.target The chart instance which the event was fired on.\n * @param {object[]} e.target.axes The axes of the chart.\n */\nfunction onBeforeRender(e) {\n    const chart = e.target, axes = chart.axes;\n    axes.filter((axis) => axis.type === 'treegrid').forEach(function (axis) {\n        const options = axis.options, labelOptions = options.labels, uniqueNames = axis.uniqueNames, max = chart.time.parse(options.max), \n        // Check whether any of series is rendering for the first\n        // time, visibility has changed, or its data is dirty, and\n        // only then update. #10570, #10580. Also check if\n        // mapOfPosToGridNode exists. #10887\n        isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n            axis.series.some(function (series) {\n                return !series.hasRendered ||\n                    series.isDirtyData ||\n                    series.isDirty;\n            }));\n        let numberOfSeries = 0, data, treeGrid;\n        if (isDirty) {\n            const seriesHasPrimitivePoints = [];\n            // Concatenate data from all series assigned to this axis.\n            data = axis.series.reduce(function (arr, s) {\n                const seriesData = (s.options.data || []), firstPoint = seriesData[0], \n                // Check if the first point is a simple array of values.\n                // If so we assume that this is the case for all points.\n                foundPrimitivePoint = Array.isArray(firstPoint) &&\n                    !firstPoint.find((value) => (typeof value === 'object'));\n                seriesHasPrimitivePoints.push(foundPrimitivePoint);\n                if (s.visible) {\n                    // Push all data to array\n                    seriesData.forEach(function (pointOptions) {\n                        // For using keys, or when using primitive points,\n                        // rebuild the data structure\n                        if (foundPrimitivePoint || s.options.keys?.length) {\n                            pointOptions = s.pointClass.prototype\n                                .optionsToObject\n                                .call({ series: s }, pointOptions);\n                            s.pointClass.setGanttPointAliases(pointOptions, chart);\n                        }\n                        if (TreeGridAxis_isObject(pointOptions, true)) {\n                            // Set series index on data. Removed again\n                            // after use.\n                            pointOptions.seriesIndex = numberOfSeries;\n                            arr.push(pointOptions);\n                        }\n                    });\n                    // Increment series index\n                    if (uniqueNames === true) {\n                        numberOfSeries++;\n                    }\n                }\n                return arr;\n            }, []);\n            // If max is higher than set data - add a\n            // dummy data to render categories #10779\n            if (max && data.length < max) {\n                for (let i = data.length; i <= max; i++) {\n                    data.push({\n                        // Use the zero-width character\n                        // to avoid conflict with uniqueNames\n                        name: i + '\\u200B'\n                    });\n                }\n            }\n            // `setScale` is fired after all the series is initialized,\n            // which is an ideal time to update the axis.categories.\n            treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n            // Assign values to the axis.\n            axis.categories = treeGrid.categories;\n            axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n            axis.hasNames = true;\n            axis.treeGrid.tree = treeGrid.tree;\n            // Update yData now that we have calculated the y values\n            axis.series.forEach(function (series, index) {\n                const axisData = (series.options.data || []).map(function (d) {\n                    if (seriesHasPrimitivePoints[index] ||\n                        (TreeGridAxis_isArray(d) && series.options.keys?.length)) {\n                        // Get the axisData from the data array used to\n                        // build the treeGrid where has been modified\n                        data.forEach(function (point) {\n                            const toArray = TreeGridAxis_splat(d);\n                            if (toArray.indexOf(point.x || 0) >= 0 &&\n                                toArray.indexOf(point.x2 || 0) >= 0) {\n                                d = point;\n                            }\n                        });\n                    }\n                    return TreeGridAxis_isObject(d, true) ? TreeGridAxis_merge(d) : d;\n                });\n                // Avoid destroying points when series is not visible\n                if (series.visible) {\n                    series.setData(axisData, false);\n                }\n            });\n            // Calculate the label options for each level in the tree.\n            axis.treeGrid.mapOptionsToLevel =\n                TreeGridAxis_getLevelOptions({\n                    defaults: labelOptions,\n                    from: 1,\n                    levels: labelOptions?.levels,\n                    to: axis.treeGrid.tree?.height\n                });\n            // Setting initial collapsed nodes\n            if (e.type === 'beforeRender') {\n                axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n            }\n        }\n    });\n}\n/**\n * Generates a tick for initial positioning.\n *\n * @private\n * @function Highcharts.GridAxis#generateTick\n *\n * @param {Function} proceed\n * The original generateTick function.\n *\n * @param {number} pos\n * The tick position in axis values.\n */\nfunction wrapGenerateTick(proceed, pos) {\n    const axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.type === 'treegrid', ticks = axis.ticks;\n    let tick = ticks[pos], levelOptions, options, gridNode;\n    if (isTreeGrid &&\n        axis.treeGrid.mapOfPosToGridNode) {\n        gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n        levelOptions = mapOptionsToLevel[gridNode.depth];\n        if (levelOptions) {\n            options = {\n                labels: levelOptions\n            };\n        }\n        if (!tick &&\n            TickConstructor) {\n            ticks[pos] = tick =\n                new TickConstructor(axis, pos, void 0, void 0, {\n                    category: gridNode.name,\n                    tickmarkOffset: gridNode.tickmarkOffset,\n                    options: options\n                });\n        }\n        else {\n            // Update labels depending on tick interval\n            tick.parameters.category = gridNode.name;\n            tick.options = options;\n            tick.addLabel();\n        }\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * @private\n */\nfunction wrapInit(proceed, chart, userOptions, coll) {\n    const axis = this, isTreeGrid = userOptions.type === 'treegrid';\n    if (!axis.treeGrid) {\n        axis.treeGrid = new TreeGridAxisAdditions(axis);\n    }\n    // Set default and forced options for TreeGrid\n    if (isTreeGrid) {\n        // Add event for updating the categories of a treegrid.\n        // NOTE Preferably these events should be set on the axis.\n        TreeGridAxis_addEvent(chart, 'beforeRender', onBeforeRender);\n        TreeGridAxis_addEvent(chart, 'beforeRedraw', onBeforeRender);\n        // Add new collapsed nodes on addseries\n        TreeGridAxis_addEvent(chart, 'addSeries', function (e) {\n            if (e.options.data) {\n                const treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n            }\n        });\n        // Collapse all nodes in axis.treegrid.collapsednodes\n        // where collapsed equals true.\n        TreeGridAxis_addEvent(axis, 'foundExtremes', function () {\n            axis.treeGrid.collapsedNodes?.forEach(function (node) {\n                const breaks = axis.treeGrid.collapse(node);\n                if (axis.brokenAxis) {\n                    axis.brokenAxis.setBreaks(breaks, false);\n                    // Remove the node from the axis collapsedNodes\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes = axis.treeGrid\n                            .collapsedNodes\n                            .filter((n) => ((node.collapseStart !==\n                            n.collapseStart) ||\n                            node.collapseEnd !== n.collapseEnd));\n                    }\n                }\n            });\n        });\n        // If staticScale is not defined on the yAxis\n        // and chart height is set, set axis.isDirty\n        // to ensure collapsing works (#12012)\n        TreeGridAxis_addEvent(axis, 'afterBreaks', function () {\n            if (axis.coll === 'yAxis' &&\n                !axis.staticScale &&\n                axis.chart.options.chart.height) {\n                axis.isDirty = true;\n            }\n        });\n        userOptions = TreeGridAxis_merge({\n            // Default options\n            grid: {\n                enabled: true\n            },\n            // TODO: add support for align in treegrid.\n            labels: {\n                align: 'left',\n                /**\n                * Set options on specific levels in a tree grid axis. Takes\n                * precedence over labels options.\n                *\n                * @sample {gantt} gantt/treegrid-axis/labels-levels\n                *         Levels on TreeGrid Labels\n                *\n                * @type      {Array<*>}\n                * @product   gantt\n                * @apioption yAxis.labels.levels\n                *\n                * @private\n                */\n                levels: [{\n                        /**\n                        * Specify the level which the options within this object\n                        * applies to.\n                        *\n                        * @type      {number}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels.level\n                        *\n                        * @private\n                        */\n                        level: void 0\n                    }, {\n                        level: 1,\n                        /**\n                         * @type      {Highcharts.CSSObject}\n                         * @product   gantt\n                         * @apioption yAxis.labels.levels.style\n                         *\n                         * @private\n                         */\n                        style: {\n                            /** @ignore-option */\n                            fontWeight: 'bold'\n                        }\n                    }],\n                /**\n                 * The symbol for the collapse and expand icon in a\n                 * treegrid.\n                 *\n                 * @product      gantt\n                 * @optionparent yAxis.labels.symbol\n                 *\n                 * @private\n                 */\n                symbol: {\n                    /**\n                     * The symbol type. Points to a definition function in\n                     * the `Highcharts.Renderer.symbols` collection.\n                     *\n                     * @type {Highcharts.SymbolKeyValue}\n                     *\n                     * @private\n                     */\n                    type: 'triangle',\n                    x: -5,\n                    y: -5,\n                    height: 10,\n                    width: 10\n                }\n            },\n            uniqueNames: false\n        }, userOptions, {\n            // Forced options\n            reversed: true\n        });\n    }\n    // Now apply the original function with the original arguments, which are\n    // sliced off this function's arguments\n    proceed.apply(axis, [chart, userOptions, coll]);\n    if (isTreeGrid) {\n        axis.hasNames = true;\n        axis.options.showLastLabel = true;\n    }\n}\n/**\n * Set the tick positions, tickInterval, axis min and max.\n *\n * @private\n * @function Highcharts.GridAxis#setTickInterval\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapSetTickInterval(proceed) {\n    const axis = this, options = axis.options, time = axis.chart.time, linkedParent = typeof options.linkedTo === 'number' ?\n        this.chart[axis.coll]?.[options.linkedTo] :\n        void 0, isTreeGrid = axis.type === 'treegrid';\n    if (isTreeGrid) {\n        axis.min = axis.userMin ?? time.parse(options.min) ?? axis.dataMin;\n        axis.max = axis.userMax ?? time.parse(options.max) ?? axis.dataMax;\n        TreeGridAxis_fireEvent(axis, 'foundExtremes');\n        // `setAxisTranslation` modifies the min and max according to axis\n        // breaks.\n        axis.setAxisTranslation();\n        axis.tickInterval = 1;\n        axis.tickmarkOffset = 0.5;\n        axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n            axis.treeGrid.getTickPositions() :\n            [];\n        if (linkedParent) {\n            const linkedParentExtremes = linkedParent.getExtremes();\n            axis.min = linkedParentExtremes.min ?? linkedParentExtremes.dataMin;\n            axis.max = linkedParentExtremes.max ?? linkedParentExtremes.dataMax;\n            axis.tickPositions = linkedParent.tickPositions;\n        }\n        axis.linkedParent = linkedParent;\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * Wrap axis redraw to remove TreeGrid events from ticks\n *\n * @private\n * @function Highcharts.GridAxis#redraw\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapRedraw(proceed) {\n    const axis = this, isTreeGrid = this.type === 'treegrid';\n    if (isTreeGrid && axis.visible) {\n        axis.tickPositions.forEach(function (pos) {\n            const tick = axis.ticks[pos];\n            if (tick.label?.attachedTreeGridEvents) {\n                TreeGridAxis_removeEvent(tick.label.element);\n                tick.label.attachedTreeGridEvents = false;\n            }\n        });\n    }\n    proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nclass TreeGridAxisAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(AxisClass, ChartClass, SeriesClass, TickClass) {\n        if (!AxisClass.keepProps.includes('treeGrid')) {\n            const axisProps = AxisClass.prototype;\n            AxisClass.keepProps.push('treeGrid');\n            TreeGridAxis_wrap(axisProps, 'generateTick', wrapGenerateTick);\n            TreeGridAxis_wrap(axisProps, 'init', wrapInit);\n            TreeGridAxis_wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n            TreeGridAxis_wrap(axisProps, 'redraw', wrapRedraw);\n            // Make utility functions available for testing.\n            axisProps.utils = {\n                getNode: Gantt_Tree.getNode\n            };\n            if (!TickConstructor) {\n                TickConstructor = TickClass;\n            }\n        }\n        Axis_GridAxis.compose(AxisClass, ChartClass, TickClass);\n        Axis_BrokenAxis.compose(AxisClass, SeriesClass);\n        TreeGridTick.compose(TickClass);\n        return AxisClass;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    constructor(axis) {\n        this.pendingSizeAdjustment = 0;\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set the collapse status.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     */\n    setCollapsedStatus(node) {\n        const axis = this.axis, chart = axis.chart;\n        axis.series.forEach(function (series) {\n            const data = series.options.data;\n            if (node.id && data) {\n                const point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                if (point && dataPoint) {\n                    point.collapsed = node.collapsed;\n                    dataPoint.collapsed = node.collapsed;\n                }\n            }\n        });\n    }\n    /**\n     * Calculates the new axis breaks to collapse a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     *\n     * @param {number} pos\n     * The tick position to collapse.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    collapse(node) {\n        const axis = this.axis, breaks = axis.options.breaks || [], obj = getBreakFromNode(node);\n        breaks.push(obj);\n        // Change the collapsed flag #13838\n        node.collapsed = true;\n        axis.treeGrid.setCollapsedStatus(node);\n        return breaks;\n    }\n    /**\n     * Calculates the new axis breaks to expand a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to expand.\n     *\n     * @param {number} pos\n     * The tick position to expand.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    expand(node) {\n        const axis = this.axis, obj = getBreakFromNode(node);\n        // Change the collapsed flag #13838\n        node.collapsed = false;\n        axis.treeGrid.setCollapsedStatus(node);\n        // Remove the break from the axis breaks array.\n        return axis.options.breaks?.reduce(function (arr, b) {\n            if (b.to !== obj.to || b.from !== obj.from) {\n                arr.push(b);\n            }\n            return arr;\n        }, []) || [];\n    }\n    /**\n     * Creates a list of positions for the ticks on the axis. Filters out\n     * positions that are outside min and max, or is inside an axis break.\n     *\n     * @private\n     *\n     * @return {Array<number>}\n     * List of positions.\n     */\n    getTickPositions() {\n        const axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n        return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n            const pos = +key;\n            if (pos >= roundedMin &&\n                pos <= roundedMax &&\n                !axis.brokenAxis?.isInAnyBreak(pos)) {\n                arr.push(pos);\n            }\n            return arr;\n        }, []);\n    }\n    /**\n     * Check if a node is collapsed.\n     *\n     * @private\n     *\n     * @param {Object} node\n     * The node to check if is collapsed.\n     *\n     * @return {boolean}\n     * Returns true if collapsed, false if expanded.\n     */\n    isCollapsed(node) {\n        const axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node);\n        return breaks.some(function (b) {\n            return b.from === obj.from && b.to === obj.to;\n        });\n    }\n    /**\n     * Calculates the new axis breaks after toggling the collapse/expand\n     * state of a node. If it is collapsed it will be expanded, and if it is\n     * expanded it will be collapsed.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to toggle.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    toggleCollapse(node) {\n        return (this.isCollapsed(node) ?\n            this.expand(node) :\n            this.collapse(node));\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const TreeGridAxis = (TreeGridAxisAdditions);\n\n;// ./code/es-modules/Series/Gantt/GanttSeries.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Author: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { series: Series, seriesTypes: { xrange: XRangeSeries } } = (external_highcharts_src_js_default_SeriesRegistry_default());\n\n\n\nconst { extend: GanttSeries_extend, isNumber: GanttSeries_isNumber, merge: GanttSeries_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n * @name Highcharts.seriesTypes.gantt\n *\n * @augments Highcharts.Series\n */\nclass GanttSeries extends XRangeSeries {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass, ChartClass, SeriesClass, TickClass) {\n        XRangeSeries.compose(AxisClass);\n        if (!ChartClass) {\n            return;\n        }\n        Extensions_StaticScale.compose(AxisClass, ChartClass);\n        if (!SeriesClass) {\n            return;\n        }\n        Gantt_Pathfinder.compose(ChartClass, SeriesClass.prototype.pointClass);\n        if (!TickClass) {\n            return;\n        }\n        TreeGridAxis.compose(AxisClass, ChartClass, SeriesClass, TickClass);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Draws a single point in the series.\n     *\n     * This override draws the point as a diamond if point.options.milestone\n     * is true, and uses the original drawPoint() if it is false or not set.\n     *\n     * @requires highcharts-gantt\n     *\n     * @private\n     * @function Highcharts.seriesTypes.gantt#drawPoint\n     *\n     * @param {Highcharts.Point} point\n     *        An instance of Point in the series\n     *\n     * @param {\"animate\"|\"attr\"} verb\n     *        'animate' (animates changes) or 'attr' (sets options)\n     */\n    drawPoint(point, verb) {\n        const series = this, seriesOpts = series.options, renderer = series.chart.renderer, shapeArgs = point.shapeArgs, plotY = point.plotY, state = point.selected && 'select', cutOff = seriesOpts.stacking && !seriesOpts.borderRadius;\n        let graphic = point.graphic, diamondShape;\n        if (point.options.milestone) {\n            if (GanttSeries_isNumber(plotY) &&\n                point.y !== null &&\n                point.visible !== false) {\n                diamondShape = renderer.symbols.diamond(shapeArgs.x || 0, shapeArgs.y || 0, shapeArgs.width || 0, shapeArgs.height || 0);\n                if (graphic) {\n                    graphic[verb]({\n                        d: diamondShape\n                    });\n                }\n                else {\n                    point.graphic = graphic = renderer.path(diamondShape)\n                        .addClass(point.getClassName(), true)\n                        .add(point.group || series.group);\n                }\n                // Presentational\n                if (!series.chart.styledMode) {\n                    point.graphic\n                        .attr(series.pointAttribs(point, state))\n                        .shadow(seriesOpts.shadow, null, cutOff);\n                }\n            }\n            else if (graphic) {\n                point.graphic = graphic.destroy(); // #1269\n            }\n        }\n        else {\n            super.drawPoint(point, verb);\n        }\n    }\n    /**\n     * Handle milestones, as they have no x2.\n     * @private\n     */\n    translatePoint(point) {\n        let shapeArgs, size;\n        super.translatePoint(point);\n        if (point.options.milestone) {\n            shapeArgs = point.shapeArgs;\n            size = shapeArgs.height || 0;\n            point.shapeArgs = {\n                x: (shapeArgs.x || 0) - (size / 2),\n                y: shapeArgs.y,\n                width: size,\n                height: size\n            };\n        }\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nGanttSeries.defaultOptions = GanttSeries_merge(XRangeSeries.defaultOptions, Gantt_GanttSeriesDefaults);\nGanttSeries_extend(GanttSeries.prototype, {\n    pointArrayMap: ['start', 'end', 'y'],\n    pointClass: Gantt_GanttPoint,\n    setData: Series.prototype.setData\n});\nexternal_highcharts_src_js_default_SeriesRegistry_default().registerSeriesType('gantt', GanttSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gantt_GanttSeries = (GanttSeries);\n\n;// ./code/es-modules/masters/modules/gantt.js\n\n\n\n\n\n\n\n\n\n\n\n\n// Series\n\n\nconst G = (external_highcharts_src_js_default_default());\n// Classes\nG.Connection = G.Connection || Gantt_Connection;\nG.GanttChart = G.GanttChart || Chart_GanttChart;\nG.Navigator = G.Navigator || Navigator_Navigator;\nG.RangeSelector = G.RangeSelector || RangeSelector_RangeSelector;\nG.Scrollbar = G.Scrollbar || Scrollbar_Scrollbar;\n// Functions\nG.ganttChart = G.GanttChart.ganttChart;\n// Compositions\nExtensions_ArrowSymbols.compose(G.SVGRenderer);\nExtensions_CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\nGantt_GanttSeries.compose(G.Axis, G.Chart, G.Series, G.Tick);\nG.Navigator.compose(G.Chart, G.Axis, G.Series);\nG.RangeSelector.compose(G.Axis, G.Chart);\nG.Scrollbar.compose(G.Axis);\n/* harmony default export */ const gantt_src = ((external_highcharts_src_js_default_default()));\n\nexport { gantt_src as default };\n"],"names":["NavigatorConstructor","RangeSelectorConstructor","TickConstructor","__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","GanttChart","ColumnUtils","GridAxisSide","ScrollbarAxis","OrdinalAxis","ConnectionComposition","BrokenAxis","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","arrow","x","y","w","h","arrowHalf","triangleLeft","triangleLeftHalf","defined","error","merge","objectEach","deg2rad","max","Math","min","Gantt_Connection","constructor","from","to","options","init","fromPoint","toPoint","chart","series","pathfinder","renderPath","path","attribs","styledMode","anim","pathGraphic","connection","graphics","group","renderer","g","addClass","attr","zIndex","add","seriesGroup","translate","plotLeft","plotTop","opacity","animate","addMarker","type","markerVector","radians","box","width","height","pathVector","segment","point","anchor","getPathfinderAnchorPoint","enabled","length","getRadiansToVector","getMarkerVector","radius","rotation","rotationOriginX","rotationOriginY","symbol","colorIndex","fill","color","stroke","lineColor","lineWidth","animation","getPath","algorithm","algorithms","chartObstacles","obstacles","requiresObstacles","getChartObstacles","connectors","algorithmMargin","chartObstacleMetrics","getObstacleMetrics","startMarker","endMarker","lineObstacles","obstacleMetrics","hardBounds","xMin","xMax","plotWidth","yMin","yMax","plotHeight","obstacleOptions","margin","startDirectionX","getAlgorithmStartDirection","render","dashStyle","dashstyle","marker","ceil","pathResult","concat","destroy","val","composed","addEvent","CurrentDateIndication_merge","pushUnique","wrap","defaultOptions","label","format","formatter","value","axis","time","dateFormat","style","fontSize","onAxisAfterSetOptions","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","external_highcharts_src_js_default_Chart_namespaceObject","Chart","external_highcharts_src_js_default_Chart_default","GanttChart_defaultOptions","isArray","GanttChart_merge","splat","userOptions","callback","defaultLinkedTo","xAxisOptions","xAxis","yAxisOptions","yAxis","title","legend","navigator","isGantt","map","i","grid","borderColor","opposite","linkedTo","staticScale","reversed","categories","ganttChart","b","c","Chart_GanttChart","external_highcharts_src_js_default_Axis_namespaceObject","Axis","external_highcharts_src_js_default_Axis_default","isTouchDevice","ChartNavigatorComposition_addEvent","ChartNavigatorComposition_merge","pick","composedMembers","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","scrollbarHeight","scrollButtonSize","inverted","left","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","pinchType","onChartCallback","extremes","getExtremes","onChartUpdate","e","scrollbarOptions","ChartClass","NavigatorClass","chartProto","callbacks","NavigatorAxisComposition_isTouchDevice","NavigatorAxisComposition_addEvent","correctFloat","NavigatorAxisComposition_defined","isNumber","NavigatorAxisComposition_pick","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","isXAxis","trigger","range","previousZoom","preventDefault","compose","AxisClass","keepProps","includes","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","halfPointRange","pointRange","newMin","horiz","newMax","external_highcharts_src_js_default_Color_namespaceObject","Color","external_highcharts_src_js_default_Color_default","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","parse","seriesTypes","NavigatorDefaults","maskInside","handles","borderRadius","symbols","backgroundColor","maskFill","setOpacity","outlineColor","outlineWidth","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","lastAnchor","units","dataLabels","id","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","Symbols_defined","Symbols_isNumber","Symbols_pick","relativeLength","Navigator_NavigatorSymbols","_x","_y","halfWidth","r","markerPosition","roundedRect","external_highcharts_src_js_default_RendererRegistry_namespaceObject","RendererRegistry","external_highcharts_src_js_default_RendererRegistry_default","StockUtilities_defined","NavigatorComposition_defaultOptions","NavigatorComposition_composed","getRendererType","setFixedRange","NavigatorComposition_setFixedRange","dataMax","dataMin","fixedRange","NavigatorComposition_addEvent","extend","NavigatorComposition_pushUnique","onSeriesAfterUpdate","isInternal","SeriesClass","NavigatorAxisComposition","ScrollbarAxis_composed","ScrollbarAxis_addEvent","ScrollbarAxis_correctFloat","ScrollbarAxis_defined","ScrollbarAxis_pick","ScrollbarAxis_pushUnique","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","treeGrid","adjustedMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","minPX","toPixels","rangePX","maxPX","toValue","shouldUpdateExtremes","DOMType","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","interval","ScrollbarClass","Axis_ScrollbarAxis","Scrollbar_ScrollbarDefaults","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","Scrollbar_defaultOptions","Scrollbar_composed","Scrollbar_addEvent","Scrollbar_correctFloat","crisp","Scrollbar_defined","destroyObjectProperties","Scrollbar_extend","fireEvent","Scrollbar_merge","Scrollbar_pick","Scrollbar_pushUnique","removeEvent","swapXY","forEach","seg","temp","len","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","args","apply","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","drawScrollbarButton","rect","strokeWidth","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","external_highcharts_src_js_default_SVGRenderer_namespaceObject","SVGRenderer","external_highcharts_src_js_default_SVGRenderer_default","Navigator_defaultOptions","Navigator_isTouchDevice","Navigator_addEvent","clamp","Navigator_correctFloat","Navigator_defined","Navigator_destroyObjectProperties","erase","Navigator_extend","find","Navigator_fireEvent","Navigator_isArray","Navigator_isNumber","Navigator_merge","Navigator_pick","Navigator_removeEvent","Navigator_splat","numExt","extreme","numbers","filter","Navigator","Navigator_ChartNavigatorComposition","Navigator_NavigatorComposition","isDirty","drawHandle","verb","round","parseInt","drawOutline","zoomedMin","zoomedMax","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions","symbolName","symbolUrl","isImg","symbolFn","addMouseEvents","invertedUpdate","setOpposite","navigatorEnabled","adaptToUpdatedData","baseSeries","updatedDataHandler","eventsToUnbind","offsets","getXAxisOffsets","scrollbarXAxis","fake","minRange","maxRange","navigatorWidth","abs","currentRange","grabbedLeft","grabbedRight","fixedWidth","container","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","modifyBaseAxisExtremes","scrollbarEnabled","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","overscroll","keepOrdinalPadding","zoomEnabled","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","Boolean","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","navSeriesMixin","enableMouseTracking","padXAxis","showInLegend","stacking","states","inactive","navigatorSeries","navSeries","base","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","setSortedData","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","getColumn","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","convertOverscroll","hasSetExtremes","eventArgs","xData","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","RangeSelector_RangeSelectorDefaults","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allText","allTitle","monthText","monthTitle","yearText","yearTitle","ytdText","ytdTitle","allButtonsEnabled","count","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorComposition_defaultOptions","RangeSelectorComposition_composed","RangeSelectorComposition_addEvent","RangeSelectorComposition_defined","RangeSelectorComposition_extend","RangeSelectorComposition_isNumber","RangeSelectorComposition_merge","RangeSelectorComposition_pick","RangeSelectorComposition_pushUnique","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","original","toParts","modified","makeTime","MIN_VALUE","_offsetMin","updateRangeSelectorButtons","redrawElements","createRangeSelector","RangeSelectorComposition_onChartBeforeRender","deferredYTDClick","clickButton","extraTopMargin","redrawRangeSelector","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","RangeSelectorComposition_onChartUpdate","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","external_highcharts_src_js_default_SVGElement_namespaceObject","SVGElement","external_highcharts_src_js_default_SVGElement_default","external_highcharts_src_js_default_Templating_namespaceObject","Templating","external_highcharts_src_js_default_Templating_default","setLength","column","asSubarray","Array","start","deleteCount","removedAsSubarray","items","removed","array","Constructor","getPrototypeOf","result","set","subarray","DataTableCore_fireEvent","DataTableCore_objectEach","uniqueKey","Data_DataTableCore","autoId","columns","rowCount","versionTag","columnName","applyRowCount","deleteRows","rowIndex","asReference","getColumns","columnNames","getRow","setColumn","eventDetail","setColumns","silent","setRow","row","insert","indexRowCount","cellValue","addColumns","OrdinalAxis_addEvent","OrdinalAxis_correctFloat","OrdinalAxis_defined","OrdinalAxis_error","OrdinalAxis_isNumber","OrdinalAxis_pick","timeUnits","isString","getTimeTicks","normalizedInterval","startOfWeek","positions","closestDistance","findHigherRanks","higherRanks","tickPixelIntervalOption","segmentStarts","end","segmentPositions","hasCrossedHigherRank","info","outsideMax","groupPositions","lastGroupPosition","arguments","posLength","shift","unitRange","hour","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","sort","index2val","ordinalPositions","lin2val","localMin","old","localA","transA","getExtendedPositions","pixelVal","minPixelPadding","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","Additions","findIndexOf","percent","onAxisFoundExtremes","originalOrdinalRange","onAxisAfterSetScale","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","trimmedRange","mouseDownX","hoverPoints","closestPointRange","overscrollPointsRange","movedUnits","translationSlope","slope","extendedOrdinalPositions","extendedAxis","val2lin","setState","getOverscrollPositions","test","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","originalPositionsReference","diff","approximateIndexOffset","axisProto","ordinal2lin","hasBreaks","brokenAxis","uniqueOrdinalPositions","dist","minIndex","maxIndex","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint","reserveSpace","takeOrdinalPosition","unshift","pop","forceOrdinal","groupIntervalFactor","sortedArray","indirectSearch","middle","withOverscroll","k","grouping","currentDataGrouping","unitName","fakeAxis","fakeSeries","applyGrouping","getGroupPixelWidth","getGroupIntervalFactor","destroyGroupedData","noop","getProcessedData","dataTable","forced","processData","hasExtremesChanged","basePointRange","processedXData","median","ordinalArray","minX","indexOfMin","extraRange","ordinalSlope","calculateOverscroll","overscrollPercentage","isFullRange","overscrollValue","pixelToPercent","limitedOverscrollValue","Axis_OrdinalAxis","RangeSelector_defaultOptions","RangeSelector_addEvent","createElement","RangeSelector_css","RangeSelector_defined","RangeSelector_destroyObjectProperties","diffObjects","discardElement","RangeSelector_extend","RangeSelector_fireEvent","RangeSelector_isNumber","RangeSelector_isString","RangeSelector_merge","RangeSelector_objectEach","RangeSelector_pick","RangeSelector_splat","preferredInputType","hasTimeKey","char","RegExp","fractionalSecondDigits","date","some","dateStyle","day","month","year","timeStyle","minute","second","RangeSelector","RangeSelector_RangeSelectorComposition","buttonOptions","initialButtonGroupWidth","maxButtonWidth","buttonWidth","button","bBox","getBBox","baseXAxisOptions","_range","rangeMin","ctx","ytdExtremes","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","hasData","getYTDExtremes","_offsetMax","selectedIndex","rangeSelectorButton","axisRangeUpdateEvent","langOptions","selectedOption","blurInputs","minInput","maxInput","blur","opt","computeButtonRange","createElements","updateButtonStates","dropdownLabel","actualRange","hasNoData","hasVisibleSeries","ytdMin","ytdMax","buttonStates","selectedExists","isSelectedTooGreat","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","isYTDButNotSelected","isSameRange","prevOrdinalPosition","nextOrdinalPosition","disable","select","state","disabled","bbox","fixedTimes","millisecond","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","timezone","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","setAttribute","hcTimeAttr","getAttribute","updatedTime","previousTime","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","border","offsetWidth","offsetHeight","hideInput","inputDate","useUTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","currentExtreme","on","focus","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","inputsZIndex","renderButtons","parentNode","insertBefore","createInputs","minElems","minLabel","maxElems","maxLabel","zoomText","alignElements","_a","buttonGroup","userButtonTheme","paddingLeft","paddingRight","hover","mouseOver","isMS","mouseOut","textContent","textStr","createButtons","createButton","callDefaultEvent","buttonEvents","click","isActive","navButtonOptions","exporting","navigation","getXOffsetForExportButton","rightAligned","titleCollision","positionButtons","xOffsetForExportButton","alignButtonGroup","hasLoaded","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","isCollapsed","newButtonsOptions","btnLength","btn","dropdownTranslateX","hasVisibleDropdown","buttonLeft","moveInputsDown","collapseButtons","expandButtons","showDropdown","hideDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","minPosition","subtitle","rSelector","window","HTMLElement","xrange","pointClass","XRangePoint","GanttPoint","setGanttPointAliases","x2","partialFill","completed","applyOptions","ganttPoint","isNull","isValid","milestone","GanttSeriesDefaults_isNumber","prevSeg","nextSeg","x1","y1","y2","directionX","directionY","PathfinderAlgorithms_pick","PathfinderAlgorithms_min","PathfinderAlgorithms_max","findLastObstacleBefore","startIx","right","cmp","findObstacleFromPoint","obstacle","pathFromSegments","segments","limitObstacleToBounds","bounds","simpleConnect","startObstacleIx","endObstacleIx","endSegment","dir","startObstacle","waypoint","useMax","endPoint","copyFromPoint","fromKey","toKey","getMeOut","prevWaypoint","waypoint2","Series_PathUtilities","fastAvoid","dirIsX","endSegments","metrics","softMinX","maxWidth","softMaxX","softMinY","maxHeight","softMaxY","extractedEndPoint","forceObstacleBreak","pivotPoint","directionIsX","firstPoint","lastPoint","highestPoint","lowestPoint","searchDirection","getDodgeDirection","softBounds","soft","hard","toPointMax","toPointMin","maxOutOfSoftBounds","minOutOfSoftBounds","maxOutOfHardBounds","minOutOfHardBounds","minDistance","maxDistance","minPivot","maxPivot","extractFromObstacle","goalPoint","clearPathTo","pivot","waypointUseMax","envelopingObstacle","secondEnvelopingObstacle","envelopWaypoint","obstacleMargin","ConnectorsDefaults","inside","setOptions","PathfinderComposition_defined","PathfinderComposition_error","PathfinderComposition_merge","getPointBB","shapeArgs","bb","graphic","plotX","plotY","pointGetPathfinderAnchorPoint","markerOptions","pointGetRadiansToVector","v1","v2","atan2","pointGetMarkerVector","markerRadius","twoPI","PI","rectWidth","rectHeight","rAtan","rectHalfWidth","rectHalfHeight","rectHorizontalCenter","rectVerticalCenter","edgePoint","theta","tanTheta","leftOrRightRegion","xFactor","yFactor","tan","cos","sin","PathfinderClass","PointClass","pointProto","acc","PathfinderComposition","external_highcharts_src_js_default_Point_namespaceObject","Point","external_highcharts_src_js_default_Point_default","Pathfinder_addEvent","Pathfinder_defined","Pathfinder_pick","Pathfinder_splat","Pathfinder_max","Pathfinder_min","Pathfinder","connections","deferRender","oldConnections","points","ganttPointOptions","dependency","connect","connects","isInside","toId","j","found","lenOld","lenNew","oldCon","newCon","renderConnections","conns","pathfinderRemoveRenderEvent","calculatedMargin","sLen","pLen","Pathfinder_getPointBB","calculateObstacleMargin","onstacleDistance","calculateObstacleDistance","bbMargin","yOverlap","xOverlap","xDistance","yDistance","xCenter","yCenter","straight","StaticScale_addEvent","StaticScale_defined","StaticScale_isNumber","StaticScale_onAxisAfterSetOptions","scrollablePlotArea","minHeight","chartAdjustHeight","redrawTrigger","unitLength","scrollablePixelsY","setSize","initiatedScale","clipRect","sharedClipKey","sharedClips","Extensions_StaticScale","adjustHeight","external_highcharts_src_js_default_StackItem_namespaceObject","StackItem","external_highcharts_src_js_default_StackItem_default","BrokenAxis_addEvent","BrokenAxis_find","BrokenAxis_fireEvent","BrokenAxis_isArray","BrokenAxis_isNumber","BrokenAxis_pick","setBreaks","onAxisAfterSetTickPositions","tickPositions","newPositions","isInAnyBreak","onSeriesAfterGeneratePoints","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","breakArray","toUpperCase","brk","seriesGappedPath","groupingSize","gapSize","current","next","gapUnit","xRange","stack","stacks","stackKey","stackLabels","total","getGraphPath","seriesProto","gappedPath","isInBreak","repeat","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","tree","axisBreak","setAxisTranslation","breakArrayTemp","pointRangePadding","inBrk","move","breakSize","minPointOffset","Axis_BrokenAxis","dateFormats","GridAxis_addEvent","GridAxis_defined","GridAxis_erase","GridAxis_find","GridAxis_isArray","GridAxis_isNumber","GridAxis_merge","GridAxis_pick","GridAxis_timeUnits","GridAxis_wrap","isObject","getMaxLabelDimensions","ticks","dimensions","pos","tick","labelHeight","labelWidth","textPxLength","mapOfPosToGridNode","treeDepth","indentation","wrapGetOffset","proceed","columnsFirst","side","isColumn","getOffset","onAfterGetTitlePosition","gridOptions","axisTitle","axisHeight","axisLeft","axisTop","axisWidth","tickSize","titleWidth","xOption","yOption","titleMargin","titleFontSize","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","applyGridOptions","showLastLabel","labelRotation","minTickInterval","columnIndex","columnOptions","onAfterRender","firstTick","slotWidth","maxLabelDimensions","rightWall","isOuterAxis","axisLine","linePath","getLinePath","startPoint","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","lowerBorder","axisLineExtra","showAxis","hasRendered","linkedParent","tickMark","lastTick","hiddenLabels","hiddenMarks","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","dateTimeLabelFormats","onAfterSetOptions","gridAxisOptions","list","borderWidth","textOverflow","tickPositioner","parentInfo","unitIdx","unit","counts","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","labelPadding","cellHeight","GridAxis_onChartAfterSetChartSize","onDestroy","keepEvents","onInit","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","labelOpts","tickPos","nextTickPos","crispCorr","lblMetrics","useHTML","lines","onTickLabelFormat","pointCopy","isFirst","p","is","gantt","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","wrapUnsquish","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","axisGroup","E","timestamp","charAt","W","firstDay","thursday","firstThursday","thursdayTS","toString","Tree_extend","Tree_isNumber","Tree_pick","getNode","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","children","child","childStart","NaN","childEnd","Gantt_Tree","getTree","getListOfParents","ids","listOfParents","prev","curr","adoptedByRoot","orphan","parentExcluded","TreeGridTick_addEvent","TreeGridTick_correctFloat","TreeGridTick_removeEvent","TreeGridTick_isObject","TreeGridTick_isNumber","TreeGridTick_pick","TreeGridTick_wrap","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","lbOptions","isTreeGrid","wrapRenderLabel","collapsed","tickGrid","tickOptions","icon","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","shouldRender","prefixClassName","prefixLevelClass","removeClass","renderLabelIcon","params","isNew","labelBox","xy","iconCenter","styles","parentGroup","object","attachedTreeGridEvents","textDecoration","toggleCollapse","TickClass","tickProto","collapse","expand","posMappedNodes","scrollMode","maxPx","pendingSizeAdjustment","newMaxVal","newMinVal","missingPx","TreeUtilities_extend","TreeUtilities_isArray","TreeUtilities_isNumber","TreeUtilities_isObject","TreeUtilities_merge","TreeUtilities_pick","TreeUtilities_relativeLength","getLevelOptions","TreeGridAxis_getLevelOptions","getColor","colorByPoint","colorIndexByPoint","mapOptionsToLevel","parentColor","parentColorIndex","siblings","chartOptionsChart","colorCount","variateColor","colorVariation","brighten","defaults","converted","levels","item","levelIsConstant","getNodeWidth","columnCount","nodeDistance","nodeWidth","plotSizeX","fraction","parseFloat","nDistance","setTreeValues","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","newOptions","isLeaf","updateRootId","rootId","rootNode","TreeGridAxis_addEvent","TreeGridAxis_isArray","TreeGridAxis_splat","TreeGridAxis_find","TreeGridAxis_fireEvent","TreeGridAxis_isObject","TreeGridAxis_isString","TreeGridAxis_merge","TreeGridAxis_removeEvent","TreeGridAxis_wrap","getBreakFromNode","collapseStart","collapseEnd","getTreeGridFromData","uniqueNames","numberOfSeries","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentGridNode","nodes","updateYValuesAndTickPos","setValues","seriesIndex","onBeforeRender","target","isDirtyData","seriesHasPrimitivePoints","arr","seriesData","foundPrimitivePoint","pointOptions","optionsToObject","hasNames","axisData","toArray","wrapGenerateTick","levelOptions","category","parameters","addLabel","wrapInit","TreeGridAxisAdditions","fontWeight","wrapSetTickInterval","getTickPositions","linkedParentExtremes","wrapRedraw","axisProps","utils","TreeGridTick","setCollapsedStatus","dataPoint","roundedMin","roundedMax","Series","XRangeSeries","GanttSeries_extend","GanttSeries_isNumber","GanttSeries_merge","GanttSeries","Gantt_Pathfinder","TreeGridAxis","drawPoint","seriesOpts","cutOff","diamondShape","diamond","getClassName","pointAttribs","shadow","translatePoint","tooltip","headerFormat","pointFormat","pointFormatter","formats","tooltipOptions","ttOptions","xDateFormat","retVal","yCategory","tooltipFormatter","getDateFormat","registerSeriesType","G","Connection","Extensions_ArrowSymbols","SVGRendererClass","Extensions_CurrentDateIndication","PlotLineOrBandClass","PlotLineOrBand","Gantt_GanttSeries","Tick","gantt_src","default"],"mappings":"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"}