{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/export-data\n * @requires highcharts\n * @requires highcharts/modules/exporting\n *\n * Export data module\n *\n * (c) 2010-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"AST\"], require(\"highcharts\")[\"Chart\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/export-data\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"AST\"], [\"highcharts/highcharts\",\"Chart\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/export-data\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"AST\"], require(\"highcharts\")[\"Chart\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"AST\"], root[\"Highcharts\"][\"Chart\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__660__, __WEBPACK_EXTERNAL_MODULE__960__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 660:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__660__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ }),\n\n/***/ 960:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__960__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ export_data_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n;// ./code/es5/es-modules/Extensions/DownloadURL.js\n/* *\n *\n *  (c) 2015-2025 Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Mixin for downloading content in the browser\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\nvar isSafari = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari, win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win, doc = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win.document;\n\nvar error = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).error;\n/* *\n *\n *  Constants\n *\n * */\nvar domurl = win.URL || win.webkitURL || win;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Convert base64 dataURL to Blob if supported, otherwise returns undefined.\n *\n * @private\n * @function Highcharts.dataURLtoBlob\n *\n * @param {string} dataURL\n * URL to convert.\n *\n * @return {string | undefined}\n * Blob.\n */\nfunction dataURLtoBlob(dataURL) {\n    var parts = dataURL\n            .replace(/filename=.*;/, '')\n            .match(/data:([^;]*)(;base64)?,([A-Z+\\d\\/]+)/i);\n    if (parts &&\n        parts.length > 3 &&\n        (win.atob) &&\n        win.ArrayBuffer &&\n        win.Uint8Array &&\n        win.Blob &&\n        (domurl.createObjectURL)) {\n        // Try to convert data URL to Blob\n        var binStr = win.atob(parts[3]),\n            buf = new win.ArrayBuffer(binStr.length),\n            binary = new win.Uint8Array(buf);\n        for (var i = 0; i < binary.length; ++i) {\n            binary[i] = binStr.charCodeAt(i);\n        }\n        return domurl\n            .createObjectURL(new win.Blob([binary], { 'type': parts[1] }));\n    }\n}\n/**\n * Download a data URL in the browser. Can also take a blob as first param.\n *\n * @private\n * @function Highcharts.downloadURL\n *\n * @param {string | global.URL} dataURL\n * The dataURL/Blob to download.\n * @param {string} filename\n * The name of the resulting file (w/extension).\n */\nfunction downloadURL(dataURL, filename) {\n    var nav = win.navigator,\n        a = doc.createElement('a');\n    // IE specific blob implementation\n    // Don't use for normal dataURLs\n    if (typeof dataURL !== 'string' &&\n        !(dataURL instanceof String) &&\n        nav.msSaveOrOpenBlob) {\n        nav.msSaveOrOpenBlob(dataURL, filename);\n        return;\n    }\n    dataURL = '' + dataURL;\n    if (nav.userAgent.length > 1000 /* RegexLimits.shortLimit */) {\n        throw new Error('Input too long');\n    }\n    var // Some browsers have limitations for data URL lengths. Try to convert\n        // to Blob or fall back. Edge always needs that blob.\n        isOldEdgeBrowser = /Edge\\/\\d+/.test(nav.userAgent), \n        // Safari on iOS needs Blob in order to download PDF\n        safariBlob = (isSafari &&\n            typeof dataURL === 'string' &&\n            dataURL.indexOf('data:application/pdf') === 0);\n    if (safariBlob || isOldEdgeBrowser || dataURL.length > 2000000) {\n        dataURL = dataURLtoBlob(dataURL) || '';\n        if (!dataURL) {\n            throw new Error('Failed to convert to blob');\n        }\n    }\n    // Try HTML5 download attr if supported\n    if (typeof a.download !== 'undefined') {\n        a.href = dataURL;\n        a.download = filename; // HTML5 download attribute\n        doc.body.appendChild(a);\n        a.click();\n        doc.body.removeChild(a);\n    }\n    else {\n        // No download attr, just opening data URI\n        try {\n            if (!win.open(dataURL, 'chart')) {\n                throw new Error('Failed to open window');\n            }\n        }\n        catch (_a) {\n            // If window.open failed, try location.href\n            win.location.href = dataURL;\n        }\n    }\n}\n/**\n * Asynchronously downloads a script from a provided location.\n *\n * @private\n * @function Highcharts.getScript\n *\n * @param {string} scriptLocation\n * The location for the script to fetch.\n */\nfunction getScript(scriptLocation) {\n    return new Promise(function (resolve, reject) {\n        var head = doc.getElementsByTagName('head')[0], script = doc.createElement('script');\n        // Set type and location for the script\n        script.type = 'text/javascript';\n        script.src = scriptLocation;\n        // Resolve in case of a succesful script fetching\n        script.onload = function () {\n            resolve();\n        };\n        // Reject in case of fail\n        script.onerror = function () {\n            var msg = \"Error loading script \".concat(scriptLocation);\n            error(msg);\n            reject(new Error(msg));\n        };\n        // Append the newly created script\n        head.appendChild(script);\n    });\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar DownloadURL = {\n    dataURLtoBlob: dataURLtoBlob,\n    downloadURL: downloadURL,\n    getScript: getScript\n};\n/* harmony default export */ var Extensions_DownloadURL = (DownloadURL);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"AST\"],\"commonjs\":[\"highcharts\",\"AST\"],\"commonjs2\":[\"highcharts\",\"AST\"],\"root\":[\"Highcharts\",\"AST\"]}\nvar highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_ = __webpack_require__(660);\nvar highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default = /*#__PURE__*/__webpack_require__.n(highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Chart\"],\"commonjs\":[\"highcharts\",\"Chart\"],\"commonjs2\":[\"highcharts\",\"Chart\"],\"root\":[\"Highcharts\",\"Chart\"]}\nvar highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_ = __webpack_require__(960);\nvar highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default = /*#__PURE__*/__webpack_require__.n(highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_);\n;// ./code/es5/es-modules/Extensions/ExportData/ExportDataDefaults.js\n/* *\n *\n *  Experimental data export module for Highcharts\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constants\n *\n * */\n/**\n * @optionparent exporting\n * @private\n */\nvar exporting = {\n    /**\n     * Caption for the data table. Same as chart title by default. Set to\n     * `false` to disable.\n     *\n     * @sample highcharts/export-data/multilevel-table\n     *         Multiple table headers\n     *\n     * @type      {boolean | string}\n     * @since     6.0.4\n     * @requires  modules/export-data\n     * @apioption exporting.tableCaption\n     */\n    /**\n     * Options for exporting data to CSV or ExCel, or displaying the data\n     * in a HTML table or a JavaScript structure.\n     *\n     * This module adds data export options to the export menu and provides\n     * functions like `Exporting.getCSV`, `Exporting.getTable`,\n     * `Exporting.getDataRows` and `Exporting.viewData`.\n     *\n     * The XLS converter is limited and only creates a HTML string that is\n     * passed for download, which works but creates a warning before\n     * opening. The workaround for this is to use a third party XLSX\n     * converter, as demonstrated in the sample below.\n     *\n     * @sample  highcharts/export-data/categorized/ Categorized data\n     * @sample  highcharts/export-data/stock-timeaxis/ Highcharts Stock time axis\n     * @sample  highcharts/export-data/xlsx/\n     *          Using a third party XLSX converter\n     *\n     * @since    6.0.0\n     * @requires modules/export-data\n     */\n    csv: {\n        /**\n         *\n         * Options for annotations in the export-data table.\n         *\n         * @since    8.2.0\n         * @requires modules/export-data\n         * @requires modules/annotations\n         *\n         *\n         */\n        annotations: {\n            /**\n            * The way to mark the separator for annotations\n            * combined in one export-data table cell.\n            *\n            * @since    8.2.0\n            * @requires modules/annotations\n            */\n            itemDelimiter: '; ',\n            /**\n            * When several labels are assigned to a specific point,\n            * they will be displayed in one field in the table.\n            *\n            * @sample highcharts/export-data/join-annotations/\n            *         Concatenate point annotations with itemDelimiter set.\n            *\n            * @since    8.2.0\n            * @requires modules/annotations\n            */\n            join: false\n        },\n        /**\n         * Formatter callback for the column headers. Parameters are:\n         * - `item` - The series or axis object)\n         * - `key` -  The point key, for example y or z\n         * - `keyLength` - The amount of value keys for this item, for\n         *   example a range series has the keys `low` and `high` so the\n         *   key length is 2.\n         *\n         * If [useMultiLevelHeaders](#exporting.useMultiLevelHeaders) is\n         * true, columnHeaderFormatter by default returns an object with\n         * columnTitle and topLevelColumnTitle for each key. Columns with\n         * the same topLevelColumnTitle have their titles merged into a\n         * single cell with colspan for table/Excel export.\n         *\n         * If `useMultiLevelHeaders` is false, or for CSV export, it returns\n         * the series name, followed by the key if there is more than one\n         * key.\n         *\n         * For the axis it returns the axis title or \"Category\" or\n         * \"DateTime\" by default.\n         *\n         * Return `false` to use Highcharts' proposed header.\n         *\n         * @sample highcharts/export-data/multilevel-table\n         *         Multiple table headers\n         *\n         * @type {Function | null}\n         */\n        columnHeaderFormatter: null,\n        /**\n         * Which date format to use for exported dates on a datetime X axis.\n         * See `Highcharts.dateFormat`.\n         */\n        dateFormat: '%Y-%m-%d %H:%M:%S',\n        /**\n         * Which decimal point to use for exported CSV. Defaults to the same\n         * as the browser locale, typically `.` (English) or `,` (German,\n         * French etc).\n         *\n         * @type  {string | null}\n         * @since 6.0.4\n         */\n        decimalPoint: null,\n        /**\n         * The item delimiter in the exported data. Use `;` for direct\n         * exporting to Excel. Defaults to a best guess based on the browser\n         * locale. If the locale _decimal point_ is `,`, the `itemDelimiter`\n         * defaults to `;`, otherwise the `itemDelimiter` defaults to `,`.\n         *\n         * @type {string | null}\n         */\n        itemDelimiter: null,\n        /**\n         * The line delimiter in the exported data, defaults to a newline.\n         */\n        lineDelimiter: '\\n'\n    },\n    /**\n     * An object consisting of definitions for the menu items in the context\n     * menu. Each key value pair has a `key` that is referenced in the\n     * [menuItems](#exporting.buttons.contextButton.menuItems) setting,\n     * and a `value`, which is an object with the following properties:\n     *\n     * - **onclick:** The click handler for the menu item\n     *\n     * - **text:** The text for the menu item\n     *\n     * - **textKey:** If internationalization is required, the key to a language\n     *   string\n     *\n     * Custom text for the \"exitFullScreen\" can be set only in lang options\n     * (it is not a separate button).\n     *\n     * @sample highcharts/exporting/menuitemdefinitions/\n     *         Menu item definitions\n     * @sample highcharts/exporting/menuitemdefinitions-webp/\n     *         Adding a custom menu item for WebP export\n     *\n     * @type     {Highcharts.Dictionary<Highcharts.ExportingMenuObject>}\n     * @default  {\"downloadCSV\": {}, \"downloadXLS\": {}, \"viewData\": {}}\n     * @requires modules/export-data\n     */\n    menuItemDefinitions: {\n        /**\n         * @ignore\n         */\n        downloadCSV: {\n            textKey: 'downloadCSV',\n            onclick: function () {\n                var _a;\n                (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.downloadCSV();\n            }\n        },\n        /**\n         * @ignore\n         */\n        downloadXLS: {\n            textKey: 'downloadXLS',\n            onclick: function () {\n                var _a;\n                (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.downloadXLS();\n            }\n        },\n        /**\n         * @ignore\n         */\n        viewData: {\n            textKey: 'viewData',\n            onclick: function () {\n                var _a;\n                (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.wrapLoading(this.exporting.toggleDataTable);\n            }\n        }\n    },\n    /**\n     * Show a HTML table below the chart with the chart's current data.\n     *\n     * @sample highcharts/export-data/showtable/\n     *         Show the table\n     * @sample highcharts/studies/exporting-table-html\n     *         Experiment with putting the table inside the subtitle to\n     *         allow exporting it.\n     *\n     * @since    6.0.0\n     * @requires modules/export-data\n     */\n    showTable: false,\n    /**\n     * Use multi level headers in data table. If [csv.columnHeaderFormatter\n     * ](#exporting.csv.columnHeaderFormatter) is defined, it has to return\n     * objects in order for multi level headers to work.\n     *\n     * @sample highcharts/export-data/multilevel-table\n     *         Multiple table headers\n     *\n     * @since    6.0.4\n     * @requires modules/export-data\n     */\n    useMultiLevelHeaders: true,\n    /**\n     * If using multi level table headers, use rowspans for headers that\n     * have only one level.\n     *\n     * @sample highcharts/export-data/multilevel-table\n     *         Multiple table headers\n     *\n     * @since    6.0.4\n     * @requires modules/export-data\n     */\n    useRowspanHeaders: true,\n    /**\n     * Display a message when export is in progress.\n     * Uses [Chart.setLoading()](/class-reference/Highcharts.Chart#setLoading)\n     *\n     * The message can be altered by changing [](#lang.exporting.exportInProgress)\n     *\n     * @since    11.3.0\n     * @requires modules/export-data\n     */\n    showExportInProgress: true\n};\n/**\n * @optionparent lang\n * @private\n */\nvar lang = {\n    /**\n     * The text for the menu item.\n     *\n     * @since    6.0.0\n     * @requires modules/export-data\n     */\n    downloadCSV: 'Download CSV',\n    /**\n     * The text for the menu item.\n     *\n     * @since    6.0.0\n     * @requires modules/export-data\n     */\n    downloadXLS: 'Download XLS',\n    /**\n     * The text for exported table.\n     *\n     * @since    8.1.0\n     * @requires modules/export-data\n     */\n    exportData: {\n        /**\n         * The annotation column title.\n         */\n        annotationHeader: 'Annotations',\n        /**\n         * The category column title.\n         */\n        categoryHeader: 'Category',\n        /**\n         * The category column title when axis type set to \"datetime\".\n         */\n        categoryDatetimeHeader: 'DateTime'\n    },\n    /**\n     * The text for the menu item.\n     *\n     * @since    6.0.0\n     * @requires modules/export-data\n     */\n    viewData: 'View data table',\n    /**\n     * The text for the menu item.\n     *\n     * @since    8.2.0\n     * @requires modules/export-data\n     */\n    hideData: 'Hide data table',\n    /**\n     * Text to show when export is in progress.\n     *\n     * @since    11.3.0\n     * @requires modules/export-data\n     */\n    exportInProgress: 'Exporting...'\n};\n/* *\n *\n *  Default Export\n *\n * */\nvar ExportDataDefaults = {\n    exporting: exporting,\n    lang: lang\n};\n/* harmony default export */ var ExportData_ExportDataDefaults = (ExportDataDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Callback that fires while exporting data. This allows the modification of\n * data rows before processed into the final format.\n *\n * @type      {Highcharts.ExportDataCallbackFunction}\n * @context   Highcharts.Chart\n * @requires  modules/export-data\n * @apioption chart.events.exportData\n */\n/**\n * When set to `false` will prevent the series data from being included in\n * any form of data export.\n *\n * Since version 6.0.0 until 7.1.0 the option was existing undocumented\n * as `includeInCSVExport`.\n *\n * @type      {boolean}\n * @since     7.1.0\n * @requires  modules/export-data\n * @apioption plotOptions.series.includeInDataExport\n */\n(''); // Keep doclets above in JS file\n\n;// ./code/es5/es-modules/Extensions/ExportData/ExportData.js\n/* *\n *\n *  Experimental data export module for Highcharts\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n// @todo\n// - Set up systematic tests for all series types, paired with tests of the data\n//   module importing the same data.\n\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\nvar getOptions = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).getOptions, setOptions = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).setOptions;\n\nvar ExportData_downloadURL = Extensions_DownloadURL.downloadURL;\n\n\nvar composed = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).composed, ExportData_doc = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).doc, ExportData_win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win;\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined, extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, pushUnique = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pushUnique;\n/* *\n *\n *  Composition\n *\n * */\nvar ExportData;\n(function (ExportData) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Composition function.\n     *\n     * @private\n     * @function Highcharts.Exporting#compose\n     *\n     * @param {ChartClass} ChartClass\n     * Chart class.\n     * @param {ExportingClass} ExportingClass\n     * Exporting class.\n     * @param {SeriesClass} SeriesClass\n     * Series class.\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function compose(ChartClass, ExportingClass, SeriesClass) {\n        var _a,\n            _b,\n            _c;\n        // Check the composition registry for the Exporting\n        if (!pushUnique(composed, 'ExportData')) {\n            return;\n        }\n        // Adding wrappers for the deprecated functions\n        extend((highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default()).prototype, {\n            downloadCSV: function () {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.downloadCSV();\n            },\n            downloadXLS: function () {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.downloadXLS();\n            },\n            getCSV: function (useLocalDecimalPoint) {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.getCSV(useLocalDecimalPoint);\n            },\n            getDataRows: function (multiLevelHeaders) {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.getDataRows(multiLevelHeaders);\n            },\n            getTable: function (useLocalDecimalPoint) {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.getTable(useLocalDecimalPoint);\n            },\n            getTableAST: function (useLocalDecimalPoint) {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.getTableAST(useLocalDecimalPoint);\n            },\n            hideData: function () {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.hideData();\n            },\n            toggleDataTable: function (show) {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.toggleDataTable(show);\n            },\n            viewData: function () {\n                var _a;\n                return (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.viewData();\n            }\n        });\n        var exportingProto = ExportingClass.prototype;\n        if (!exportingProto.downloadCSV) {\n            // Add an event listener to handle the showTable option\n            addEvent(ChartClass, 'afterViewData', onChartAfterViewData);\n            addEvent(ChartClass, 'render', onChartRenderer);\n            addEvent(ChartClass, 'destroy', onChartDestroy);\n            // Adding functions to the Exporting prototype\n            exportingProto.downloadCSV = downloadCSV;\n            exportingProto.downloadXLS = downloadXLS;\n            exportingProto.getCSV = getCSV;\n            exportingProto.getDataRows = getDataRows;\n            exportingProto.getTable = getTable;\n            exportingProto.getTableAST = getTableAST;\n            exportingProto.hideData = hideData;\n            exportingProto.toggleDataTable = toggleDataTable;\n            exportingProto.wrapLoading = wrapLoading;\n            exportingProto.viewData = viewData;\n            // Update with defaults of the export data module\n            setOptions(ExportData_ExportDataDefaults);\n            // Additionaly, extend the menuItems with the export data variants\n            var menuItems = (_c = (_b = (_a = getOptions().exporting) === null || _a === void 0 ? void 0 : _a.buttons) === null || _b === void 0 ? void 0 : _b.contextButton) === null || _c === void 0 ? void 0 : _c.menuItems;\n            menuItems && menuItems.push('separator', 'downloadCSV', 'downloadXLS', 'viewData');\n            var _d = SeriesClass.types,\n                AreaRangeSeries = _d.arearange,\n                GanttSeries = _d.gantt,\n                MapSeries = _d.map,\n                MapBubbleSeries = _d.mapbubble,\n                TreemapSeries = _d.treemap,\n                XRangeSeries = _d.xrange;\n            if (AreaRangeSeries) {\n                AreaRangeSeries.prototype.keyToAxis = {\n                    low: 'y',\n                    high: 'y'\n                };\n            }\n            if (GanttSeries) {\n                GanttSeries.prototype.exportKey = 'name';\n                GanttSeries.prototype.keyToAxis = {\n                    start: 'x',\n                    end: 'x'\n                };\n            }\n            if (MapSeries) {\n                MapSeries.prototype.exportKey = 'name';\n            }\n            if (MapBubbleSeries) {\n                MapBubbleSeries.prototype.exportKey = 'name';\n            }\n            if (TreemapSeries) {\n                TreemapSeries.prototype.exportKey = 'name';\n            }\n            if (XRangeSeries) {\n                XRangeSeries.prototype.keyToAxis = {\n                    x2: 'x'\n                };\n            }\n        }\n    }\n    ExportData.compose = compose;\n    /**\n     * Generates a data URL of CSV for local download in the browser. This is\n     * the default action for a click on the 'Download CSV' button.\n     *\n     * See {@link Highcharts.Exporting#getCSV} to get the CSV data itself.\n     *\n     * @function Highcharts.Exporting#downloadCSV\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function downloadCSV() {\n        var _this = this;\n        this.wrapLoading(function () {\n            var csv = _this.getCSV(true);\n            ExportData_downloadURL(getBlobFromContent(csv, 'text/csv') ||\n                'data:text/csv,\\uFEFF' + encodeURIComponent(csv), _this.getFilename() + '.csv');\n        });\n    }\n    /**\n     * Generates a data URL of an XLS document for local download in the\n     * browser. This is the default action for a click on the 'Download XLS'\n     * button.\n     *\n     * See {@link Highcharts.Exporting#getTable} to get the table data itself.\n     *\n     * @function Highcharts.Exporting#downloadXLS\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function downloadXLS() {\n        var _this = this;\n        this.wrapLoading(function () {\n            var uri = 'data:application/vnd.ms-excel;base64,', template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ' +\n                    'xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ' +\n                    'xmlns=\"http://www.w3.org/TR/REC-html40\">' +\n                    '<head><!--[if gte mso 9]><xml><x:ExcelWorkbook>' +\n                    '<x:ExcelWorksheets><x:ExcelWorksheet>' +\n                    '<x:Name>Ark1</x:Name>' +\n                    '<x:WorksheetOptions><x:DisplayGridlines/>' +\n                    '</x:WorksheetOptions>' +\n                    '</x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook>' +\n                    '</xml><![endif]-->' +\n                    '<style>td{border:none;font-family: Calibri, sans-serif;} ' +\n                    '.number{mso-number-format:\"0.00\";} ' +\n                    '.text{ mso-number-format:\"\\@\";}</style>' +\n                    '<meta name=ProgId content=Excel.Sheet>' +\n                    '<meta charset=UTF-8>' +\n                    '</head><body>' +\n                    _this.getTable(true) +\n                    '</body></html>', base64 = function (s) {\n                    return ExportData_win.btoa(unescape(encodeURIComponent(s))); // #50\n                };\n            ExportData_downloadURL(getBlobFromContent(template, 'application/vnd.ms-excel') ||\n                uri + base64(template), _this.getFilename() + '.xls');\n        });\n    }\n    /**\n     * Get a blob object from content, if blob is supported.\n     *\n     * @private\n     * @function Highcharts.getBlobFromContent\n     *\n     * @param {string} content\n     * The content to create the blob from.\n     * @param {string} type\n     * The type of the content.\n     *\n     * @return {string | undefined}\n     * The blob object, or undefined if not supported.\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function getBlobFromContent(content, type) {\n        var nav = ExportData_win.navigator,\n            domurl = ExportData_win.URL || ExportData_win.webkitURL || ExportData_win;\n        try {\n            // MS specific\n            if ((nav.msSaveOrOpenBlob) && ExportData_win.MSBlobBuilder) {\n                var blob = new ExportData_win.MSBlobBuilder();\n                blob.append(content);\n                return blob.getBlob('image/svg+xml');\n            }\n            return domurl.createObjectURL(new ExportData_win.Blob(['\\uFEFF' + content], // #7084\n            { type: type }));\n        }\n        catch (_a) {\n            // Ignore\n        }\n    }\n    /**\n     * Returns the current chart data as a CSV string.\n     *\n     * @function Highcharts.Exporting#getCSV\n     *\n     * @param {boolean} [useLocalDecimalPoint]\n     * Whether to use the local decimal point as detected from the browser. This\n     * makes it easier to export data to Excel in the same locale as the user\n     * is.\n     *\n     * @return {string}\n     * CSV representation of the data.\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function getCSV(useLocalDecimalPoint) {\n        var _a;\n        var csv = '';\n        var rows = this.getDataRows(), csvOptions = (_a = this.options) === null || _a === void 0 ? void 0 : _a.csv, decimalPoint = pick(csvOptions === null || csvOptions === void 0 ? void 0 : csvOptions.decimalPoint, (csvOptions === null || csvOptions === void 0 ? void 0 : csvOptions.itemDelimiter) !== ',' && useLocalDecimalPoint ?\n                (1.1).toLocaleString()[1] :\n                '.'), \n            // Use ';' for direct to Excel\n            itemDelimiter = pick(csvOptions === null || csvOptions === void 0 ? void 0 : csvOptions.itemDelimiter, decimalPoint === ',' ? ';' : ','), \n            // '\\n' isn't working with the js csv data extraction\n            lineDelimiter = csvOptions === null || csvOptions === void 0 ? void 0 : csvOptions.lineDelimiter;\n        // Transform the rows to CSV\n        rows.forEach(function (row, i) {\n            var val = '',\n                j = row.length;\n            while (j--) {\n                val = row[j];\n                if (typeof val === 'string') {\n                    val = \"\\\"\".concat(val, \"\\\"\");\n                }\n                if (typeof val === 'number') {\n                    if (decimalPoint !== '.') {\n                        val = val.toString().replace('.', decimalPoint);\n                    }\n                }\n                row[j] = val;\n            }\n            // The first row is the header - it defines the number of columns.\n            // Empty columns between not-empty cells are covered in the\n            // getDataRows method.\n            // Now add empty values only to the end of the row so all rows have\n            // the same number of columns, #17186\n            row.length = rows.length ? rows[0].length : 0;\n            // Add the values\n            csv += row.join(itemDelimiter);\n            // Add the line delimiter\n            if (i < rows.length - 1) {\n                csv += lineDelimiter;\n            }\n        });\n        return csv;\n    }\n    /**\n     * Returns a two-dimensional array containing the current chart data.\n     *\n     * @function Highcharts.Exporting#getDataRows\n     *\n     * @param {boolean} [multiLevelHeaders]\n     * Use multilevel headers for the rows by default. Adds an extra row with\n     * top level headers. If a custom columnHeaderFormatter is defined, this can\n     * override the behavior.\n     *\n     * @return {Array<Array<(number | string)>>}\n     * The current chart data\n     *\n     * @emits Highcharts.Chart#event:exportData\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function getDataRows(multiLevelHeaders) {\n        var _a;\n        var chart = this.chart,\n            hasParallelCoords = chart.hasParallelCoordinates,\n            time = chart.time,\n            csvOptions = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.csv) || {},\n            xAxes = chart.xAxis,\n            rows = {},\n            rowArr = [],\n            topLevelColumnTitles = [],\n            columnTitles = [],\n            langOptions = chart.options.lang,\n            exportDataOptions = langOptions.exportData,\n            categoryHeader = exportDataOptions === null || exportDataOptions === void 0 ? void 0 : exportDataOptions.categoryHeader,\n            categoryDatetimeHeader = exportDataOptions === null || exportDataOptions === void 0 ? void 0 : exportDataOptions.categoryDatetimeHeader, \n            // Options\n            columnHeaderFormatter = function (item,\n            key,\n            keyLength) {\n                if (csvOptions.columnHeaderFormatter) {\n                    var s = csvOptions.columnHeaderFormatter(item,\n            key,\n            keyLength);\n                if (s !== false) {\n                    return s;\n                }\n            }\n            if (!item && categoryHeader) {\n                return categoryHeader;\n            }\n            if (!item.bindAxes &&\n                categoryDatetimeHeader &&\n                categoryHeader) {\n                return (item.options.title &&\n                    item.options.title.text) || (item.dateTime ?\n                    categoryDatetimeHeader :\n                    categoryHeader);\n            }\n            if (multiLevelHeaders) {\n                return {\n                    columnTitle: ((keyLength || 0) > 1 ?\n                        key :\n                        item.name) || '',\n                    topLevelColumnTitle: item.name\n                };\n            }\n            return item.name + ((keyLength || 0) > 1 ? ' (' + key + ')' : '');\n        }, \n        // Map the categories for value axes\n        getCategoryAndDateTimeMap = function (series, pointArrayMap, pIdx) {\n            var categoryMap = {},\n                dateTimeValueAxisMap = {};\n            pointArrayMap.forEach(function (prop) {\n                var axisName = ((series.keyToAxis && series.keyToAxis[prop]) ||\n                        prop) + 'Axis', \n                    // Points in parallel coordinates refers to all yAxis\n                    // not only `series.yAxis`\n                    axis = isNumber(pIdx) ?\n                        series.chart[axisName][pIdx] :\n                        series[axisName];\n                categoryMap[prop] = (axis && axis.categories) || [];\n                dateTimeValueAxisMap[prop] = (axis && axis.dateTime);\n            });\n            return {\n                categoryMap: categoryMap,\n                dateTimeValueAxisMap: dateTimeValueAxisMap\n            };\n        }, \n        // Create point array depends if xAxis is category\n        // or point.name is defined #13293\n        getPointArray = function (series, xAxis) {\n            var pointArrayMap = series.pointArrayMap || ['y'],\n                namedPoints = series.data.some(function (d) {\n                    return (typeof d.y !== 'undefined') && d.name;\n            });\n            // If there are points with a name, we also want the x value in\n            // the table\n            if (namedPoints &&\n                xAxis &&\n                !xAxis.categories &&\n                series.exportKey !== 'name') {\n                return __spreadArray(['x'], pointArrayMap, true);\n            }\n            return pointArrayMap;\n        }, xAxisIndices = [];\n        var xAxis,\n            dataRows,\n            columnTitleObj,\n            i = 0, // Loop the series and index values\n            x,\n            xTitle;\n        chart.series.forEach(function (series) {\n            var _a;\n            var keys = series.options.keys,\n                xAxis = series.xAxis,\n                pointArrayMap = keys || getPointArray(series,\n                xAxis),\n                valueCount = pointArrayMap.length,\n                xTaken = !series.requireSorting && {},\n                xAxisIndex = xAxes.indexOf(xAxis);\n            var categoryAndDatetimeMap = getCategoryAndDateTimeMap(series,\n                pointArrayMap),\n                mockSeries,\n                j;\n            if (series.options.includeInDataExport !== false &&\n                !series.options.isInternal &&\n                series.visible !== false // #55\n            ) {\n                // Build a lookup for X axis index and the position of the first\n                // series that belongs to that X axis. Includes -1 for non-axis\n                // series types like pies.\n                if (!find(xAxisIndices, function (index) {\n                    return index[0] === xAxisIndex;\n                })) {\n                    xAxisIndices.push([xAxisIndex, i]);\n                }\n                // Compute the column headers and top level headers, usually the\n                // same as series names\n                j = 0;\n                while (j < valueCount) {\n                    columnTitleObj = columnHeaderFormatter(series, pointArrayMap[j], pointArrayMap.length);\n                    columnTitles.push(columnTitleObj.columnTitle ||\n                        columnTitleObj);\n                    if (multiLevelHeaders) {\n                        topLevelColumnTitles.push(columnTitleObj.topLevelColumnTitle ||\n                            columnTitleObj);\n                    }\n                    j++;\n                }\n                mockSeries = {\n                    chart: series.chart,\n                    autoIncrement: series.autoIncrement,\n                    options: series.options,\n                    pointArrayMap: series.pointArrayMap,\n                    index: series.index\n                };\n                // Export directly from options.data because we need the\n                // uncropped data (#7913), and we need to support Boost (#7026).\n                (_a = series.options.data) === null || _a === void 0 ? void 0 : _a.forEach(function eachData(options, pIdx) {\n                    var _a;\n                    var mockPoint = { series: mockSeries };\n                    var key,\n                        prop,\n                        val;\n                    // In parallel coordinates chart, each data point is\n                    // connected to a separate yAxis, conform this\n                    if (hasParallelCoords) {\n                        categoryAndDatetimeMap = getCategoryAndDateTimeMap(series, pointArrayMap, pIdx);\n                    }\n                    series.pointClass.prototype.applyOptions.apply(mockPoint, [options]);\n                    var name = series.data[pIdx] && series.data[pIdx].name;\n                    key = ((_a = mockPoint.x) !== null && _a !== void 0 ? _a : '') + ',' + name;\n                    j = 0;\n                    // Pies, funnels, geo maps etc. use point name in X row\n                    if (!xAxis ||\n                        series.exportKey === 'name' ||\n                        (!hasParallelCoords && xAxis && xAxis.hasNames) && name) {\n                        key = name;\n                    }\n                    if (xTaken) {\n                        if (xTaken[key]) {\n                            key += '|' + pIdx;\n                        }\n                        xTaken[key] = true;\n                    }\n                    if (!rows[key]) {\n                        rows[key] = [];\n                        rows[key].xValues = [];\n                        // ES5 replacement for Array.from / fill.\n                        var arr = [];\n                        for (var i_1 = 0; i_1 < series.chart.series.length; i_1++) {\n                            arr[i_1] = 0;\n                        }\n                        // Create pointers array, holding information how many\n                        // duplicates of specific x occurs in each series.\n                        // Used for creating rows with duplicates.\n                        rows[key].pointers = arr;\n                        rows[key].pointers[series.index] = 1;\n                    }\n                    else {\n                        // Handle duplicates (points with the same x), by\n                        // creating extra rows based on pointers for better\n                        // performance.\n                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                        var modifiedKey = \"\" + key + \",\".concat(rows[key].pointers[series.index]), originalKey = key;\n                        if (rows[key].pointers[series.index]) {\n                            if (!rows[modifiedKey]) {\n                                rows[modifiedKey] = [];\n                                rows[modifiedKey].xValues = [];\n                                rows[modifiedKey].pointers = [];\n                            }\n                            key = modifiedKey;\n                        }\n                        rows[originalKey].pointers[series.index] += 1;\n                    }\n                    rows[key].x = mockPoint.x;\n                    rows[key].name = name;\n                    rows[key].xValues[xAxisIndex] = mockPoint.x;\n                    while (j < valueCount) {\n                        prop = pointArrayMap[j]; // `y`, `z` etc\n                        val =\n                            series.pointClass.prototype.getNestedProperty.apply(mockPoint, [prop]);\n                        // Allow values from nested properties (#20470)\n                        rows[key][i + j] = pick(\n                        // Y axis category if present\n                        categoryAndDatetimeMap.categoryMap[prop][val], \n                        // Datetime yAxis\n                        categoryAndDatetimeMap.dateTimeValueAxisMap[prop] ?\n                            time.dateFormat(csvOptions.dateFormat, val) :\n                            null, \n                        // Linear/log yAxis\n                        val);\n                        j++;\n                    }\n                });\n                i = i + j;\n            }\n        });\n        // Make a sortable array\n        for (x in rows) {\n            if (Object.hasOwnProperty.call(rows, x)) {\n                rowArr.push(rows[x]);\n            }\n        }\n        var xAxisIndex,\n            column;\n        // Add computed column headers and top level headers to final row set\n        dataRows = multiLevelHeaders ? [topLevelColumnTitles, columnTitles] :\n            [columnTitles];\n        i = xAxisIndices.length;\n        while (i--) { // Start from end to splice in\n            xAxisIndex = xAxisIndices[i][0];\n            column = xAxisIndices[i][1];\n            xAxis = xAxes[xAxisIndex];\n            // Sort it by X values\n            rowArr.sort(function (// eslint-disable-line no-loop-func\n            a, b) {\n                return a.xValues[xAxisIndex] - b.xValues[xAxisIndex];\n            });\n            // Add header row\n            xTitle = columnHeaderFormatter(xAxis);\n            dataRows[0].splice(column, 0, xTitle);\n            if (multiLevelHeaders && dataRows[1]) {\n                // If using multi level headers, we just added top level header.\n                // Also add for sub level\n                dataRows[1].splice(column, 0, xTitle);\n            }\n            // Add the category column\n            rowArr.forEach(function (// eslint-disable-line no-loop-func\n            row) {\n                var category = row.name;\n                if (xAxis && !defined(category)) {\n                    if (xAxis.dateTime) {\n                        if (row.x instanceof Date) {\n                            row.x = row.x.getTime();\n                        }\n                        category = time.dateFormat(csvOptions.dateFormat, row.x);\n                    }\n                    else if (xAxis.categories) {\n                        category = pick(xAxis.names[row.x], xAxis.categories[row.x], row.x);\n                    }\n                    else {\n                        category = row.x;\n                    }\n                }\n                // Add the X/date/category\n                row.splice(column, 0, category);\n            });\n        }\n        dataRows = dataRows.concat(rowArr);\n        fireEvent(chart, 'exportData', { dataRows: dataRows });\n        return dataRows;\n    }\n    /**\n     * Build a HTML table with the chart's current data.\n     *\n     * @sample highcharts/export-data/viewdata/\n     * View the data from the export menu\n     *\n     * @function Highcharts.Exporting#getTable\n     *\n     * @param {boolean} [useLocalDecimalPoint]\n     * Whether to use the local decimal point as detected from the browser. This\n     * makes it easier to export data to Excel in the same locale as the user\n     * is.\n     *\n     * @return {string}\n     * HTML representation of the data.\n     *\n     * @emits Highcharts.Chart#event:afterGetTable\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function getTable(useLocalDecimalPoint) {\n        var serialize = function (node) {\n                if (!node.tagName || node.tagName === '#text') {\n                    // Text node\n                    return node.textContent || '';\n            }\n            var attributes = node.attributes;\n            var html = \"<\".concat(node.tagName);\n            if (attributes) {\n                Object.keys(attributes)\n                    .forEach(function (key) {\n                    var value = attributes[key];\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                    html += \" \".concat(key, \"=\\\"\").concat(value, \"\\\"\");\n                });\n            }\n            html += '>';\n            html += node.textContent || '';\n            (node.children || []).forEach(function (child) {\n                html += serialize(child);\n            });\n            html += \"</\".concat(node.tagName, \">\");\n            return html;\n        };\n        var tree = this.getTableAST(useLocalDecimalPoint);\n        return serialize(tree);\n    }\n    /**\n     * Get the AST of a HTML table representing the chart data.\n     *\n     * @private\n     * @function Highcharts.Exporting#getTableAST\n     *\n     * @param {boolean} [useLocalDecimalPoint]\n     * Whether to use the local decimal point as detected from the browser. This\n     * makes it easier to export data to Excel in the same locale as the user\n     * is.\n     *\n     * @return {Highcharts.ASTNode}\n     * The abstract syntax tree\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function getTableAST(useLocalDecimalPoint) {\n        var _a;\n        var rowLength = 0;\n        var treeChildren = [],\n            exporting = this,\n            chart = exporting.chart,\n            options = chart.options,\n            decimalPoint = useLocalDecimalPoint ? (1.1).toLocaleString()[1] : '.',\n            useMultiLevelHeaders = pick(exporting.options.useMultiLevelHeaders,\n            true),\n            rows = exporting.getDataRows(useMultiLevelHeaders),\n            topHeaders = useMultiLevelHeaders ? rows.shift() : null,\n            subHeaders = rows.shift(), \n            // Compare two rows for equality\n            isRowEqual = function (row1,\n            row2) {\n                var i = row1.length;\n            if (row2.length === i) {\n                while (i--) {\n                    if (row1[i] !== row2[i]) {\n                        return false;\n                    }\n                }\n            }\n            else {\n                return false;\n            }\n            return true;\n        }, \n        // Get table cell HTML from value\n        getCellHTMLFromValue = function (tagName, classes, attributes, value) {\n            var textContent = pick(value, ''), className = 'highcharts-text' + (classes ? ' ' + classes : '');\n            // Convert to string if number\n            if (typeof textContent === 'number') {\n                textContent = chart.numberFormatter(textContent, -1, decimalPoint, tagName === 'th' ? '' : void 0);\n                className = 'highcharts-number';\n            }\n            else if (!value) {\n                className = 'highcharts-empty';\n            }\n            attributes = extend({ 'class': className }, attributes);\n            return {\n                tagName: tagName,\n                attributes: attributes,\n                textContent: textContent\n            };\n        }, \n        // Get table header markup from row data\n        getTableHeaderHTML = function (topheaders, subheaders, rowLength) {\n            var theadChildren = [];\n            var i = 0,\n                len = rowLength || subheaders && subheaders.length,\n                next,\n                cur,\n                curColspan = 0,\n                rowspan;\n            // Clean up multiple table headers. Chart.getDataRows() returns\n            // two levels of headers when using multilevel, not merged. We\n            // need to merge identical headers, remove redundant headers,\n            // and keep it all marked up nicely.\n            if (useMultiLevelHeaders &&\n                topheaders &&\n                subheaders &&\n                !isRowEqual(topheaders, subheaders)) {\n                var trChildren = [];\n                for (; i < len; ++i) {\n                    cur = topheaders[i];\n                    next = topheaders[i + 1];\n                    if (cur === next) {\n                        ++curColspan;\n                    }\n                    else if (curColspan) {\n                        // Ended colspan\n                        // Add cur to HTML with colspan.\n                        trChildren.push(getCellHTMLFromValue('th', 'highcharts-table-topheading', {\n                            scope: 'col',\n                            colspan: curColspan + 1\n                        }, cur));\n                        curColspan = 0;\n                    }\n                    else {\n                        // Cur is standalone. If it is same as sublevel,\n                        // remove sublevel and add just toplevel.\n                        if (cur === subheaders[i]) {\n                            if (exporting.options.useRowspanHeaders) {\n                                rowspan = 2;\n                                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                                delete subheaders[i];\n                            }\n                            else {\n                                rowspan = 1;\n                                subheaders[i] = '';\n                            }\n                        }\n                        else {\n                            rowspan = 1;\n                        }\n                        var cell = getCellHTMLFromValue('th', 'highcharts-table-topheading', { scope: 'col' }, cur);\n                        if (rowspan > 1 && cell.attributes) {\n                            cell.attributes.valign = 'top';\n                            cell.attributes.rowspan = rowspan;\n                        }\n                        trChildren.push(cell);\n                    }\n                }\n                theadChildren.push({\n                    tagName: 'tr',\n                    children: trChildren\n                });\n            }\n            // Add the subheaders (the only headers if not using\n            // multilevels)\n            if (subheaders) {\n                var trChildren = [];\n                for (i = 0, len = subheaders.length; i < len; ++i) {\n                    if (typeof subheaders[i] !== 'undefined') {\n                        trChildren.push(getCellHTMLFromValue('th', null, { scope: 'col' }, subheaders[i]));\n                    }\n                }\n                theadChildren.push({\n                    tagName: 'tr',\n                    children: trChildren\n                });\n            }\n            return {\n                tagName: 'thead',\n                children: theadChildren\n            };\n        };\n        // Add table caption\n        var tableCaption = (exporting.options || {}).tableCaption;\n        if (tableCaption !== false) {\n            treeChildren.push({\n                tagName: 'caption',\n                attributes: {\n                    'class': 'highcharts-table-caption'\n                },\n                textContent: typeof tableCaption === 'string' ?\n                    tableCaption :\n                    ((_a = options.title) === null || _a === void 0 ? void 0 : _a.text) || options.lang.chartTitle\n            });\n        }\n        // Find longest row\n        for (var i = 0, len = rows.length; i < len; ++i) {\n            if (rows[i].length > rowLength) {\n                rowLength = rows[i].length;\n            }\n        }\n        // Add header\n        treeChildren.push(getTableHeaderHTML(topHeaders, subHeaders || [], Math.max(rowLength, (subHeaders === null || subHeaders === void 0 ? void 0 : subHeaders.length) || 0)));\n        // Transform the rows to HTML\n        var trs = [];\n        rows.forEach(function (row) {\n            var trChildren = [];\n            for (var j = 0; j < rowLength; j++) {\n                // Make first column a header too. Especially important for\n                // category axes, but also might make sense for datetime? Should\n                // await user feedback on this.\n                trChildren.push(getCellHTMLFromValue(j ? 'td' : 'th', null, j ? {} : { scope: 'row' }, row[j]));\n            }\n            trs.push({\n                tagName: 'tr',\n                children: trChildren\n            });\n        });\n        treeChildren.push({\n            tagName: 'tbody',\n            children: trs\n        });\n        var e = {\n                tree: {\n                    tagName: 'table',\n                    id: \"highcharts-data-table-\".concat(chart.index),\n                    children: treeChildren\n                }\n            };\n        fireEvent(chart, 'afterGetTableAST', e);\n        return e.tree;\n    }\n    /**\n     * Hide the data table when visible.\n     *\n     * @function Highcharts.Exporting#hideData\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function hideData() {\n        this.toggleDataTable(false);\n    }\n    /**\n     * Toggle showing data table.\n     *\n     * @private\n     * @function Highcharts.Exporting#hideData\n     *\n     * @param {boolean} [show]\n     * Whether to show data table or not.\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function toggleDataTable(show) {\n        var _a;\n        var chart = this.chart, \n            // Create the div\n            createContainer = (show = pick(show, !this.isDataTableVisible)) &&\n                !this.dataTableDiv;\n        if (createContainer) {\n            this.dataTableDiv = ExportData_doc.createElement('div');\n            this.dataTableDiv.className = 'highcharts-data-table';\n            // Insert after the chart container\n            chart.renderTo.parentNode.insertBefore(this.dataTableDiv, chart.renderTo.nextSibling);\n        }\n        // Toggle the visibility\n        if (this.dataTableDiv) {\n            var style = this.dataTableDiv.style,\n                oldDisplay = style.display;\n            style.display = show ? 'block' : 'none';\n            // Generate the data table\n            if (show) {\n                this.dataTableDiv.innerHTML = (highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default()).emptyHTML;\n                var ast = new (highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default())([this.getTableAST()]);\n                ast.addToDOM(this.dataTableDiv);\n                fireEvent(chart, 'afterViewData', {\n                    element: this.dataTableDiv,\n                    wasHidden: createContainer || oldDisplay !== style.display\n                });\n            }\n            else {\n                fireEvent(chart, 'afterHideData');\n            }\n        }\n        // Set the flag\n        this.isDataTableVisible = show;\n        // Change the menu item text\n        var exportDivElements = this.divElements,\n            options = this.options,\n            menuItems = (_a = options.buttons) === null || _a === void 0 ? void 0 : _a.contextButton.menuItems,\n            lang = chart.options.lang;\n        if (options &&\n            options.menuItemDefinitions &&\n            lang &&\n            lang.viewData &&\n            lang.hideData &&\n            menuItems &&\n            exportDivElements) {\n            var exportDivElement = exportDivElements[menuItems.indexOf('viewData')];\n            if (exportDivElement) {\n                highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().setElementHTML(exportDivElement, this.isDataTableVisible ? lang.hideData : lang.viewData);\n            }\n        }\n    }\n    /**\n     * View the data in a table below the chart.\n     *\n     * @function Highcharts.Exporting#viewData\n     *\n     * @emits Highcharts.Chart#event:afterViewData\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function viewData() {\n        this.toggleDataTable(true);\n    }\n    /**\n     * Wrapper function for the download functions, which handles showing and\n     * hiding the loading message\n     *\n     * @private\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function wrapLoading(fn) {\n        var _this = this;\n        var chart = this.chart,\n            showMessage = Boolean(this.options.showExportInProgress);\n        // Prefer requestAnimationFrame if available\n        var timeoutFn = ExportData_win.requestAnimationFrame || setTimeout;\n        // Outer timeout avoids menu freezing on click\n        timeoutFn(function () {\n            showMessage &&\n                chart.showLoading(chart.options.lang.exportInProgress);\n            timeoutFn(function () {\n                try {\n                    fn.call(_this);\n                }\n                finally {\n                    showMessage && chart.hideLoading();\n                }\n            });\n        });\n    }\n    /**\n     * Function that runs on the chart's 'afterViewData' event.\n     *\n     * @private\n     * @function Highcharts.Chart#onChartAfterViewData\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function onChartAfterViewData() {\n        var exporting = this.exporting,\n            dataTableDiv = exporting === null || exporting === void 0 ? void 0 : exporting.dataTableDiv,\n            getCellValue = function (tr,\n            index) {\n                return tr.children[index].textContent;\n        }, comparer = function (index, ascending) {\n            return function (a, b) {\n                var sort = function (v1,\n                    v2) { return (v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ?\n                        v1 - v2 :\n                        v1.toString().localeCompare(v2)); };\n                return sort(getCellValue(ascending ? a : b, index), getCellValue(ascending ? b : a, index));\n            };\n        };\n        if (dataTableDiv && exporting.options.allowTableSorting) {\n            var row = dataTableDiv.querySelector('thead tr');\n            if (row) {\n                row.childNodes.forEach(function (th) {\n                    var tableBody = dataTableDiv.querySelector('tbody');\n                    th.addEventListener('click', function () {\n                        var rows = __spreadArray([],\n                            dataTableDiv.querySelectorAll('tr:not(thead tr)'),\n                            true),\n                            headers = __spreadArray([],\n                            th.parentNode.children,\n                            true);\n                        if (exporting) {\n                            rows.sort(comparer(headers.indexOf(th), exporting.ascendingOrderInTable =\n                                !exporting.ascendingOrderInTable)).forEach(function (tr) {\n                                tableBody === null || tableBody === void 0 ? void 0 : tableBody.appendChild(tr);\n                            });\n                            headers.forEach(function (th) {\n                                [\n                                    'highcharts-sort-ascending',\n                                    'highcharts-sort-descending'\n                                ].forEach(function (className) {\n                                    if (th.classList.contains(className)) {\n                                        th.classList.remove(className);\n                                    }\n                                });\n                            });\n                            th.classList.add(exporting.ascendingOrderInTable ?\n                                'highcharts-sort-ascending' :\n                                'highcharts-sort-descending');\n                        }\n                    });\n                });\n            }\n        }\n    }\n    /**\n     * Function that runs on the chart's 'render' event. Handle the showTable\n     * option.\n     *\n     * @private\n     * @function Highcharts.Chart#onChartRenderer\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function onChartRenderer() {\n        var _a,\n            _b,\n            _c;\n        if (((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.exporting) === null || _b === void 0 ? void 0 : _b.showTable) &&\n            !this.options.chart.forExport) {\n            (_c = this.exporting) === null || _c === void 0 ? void 0 : _c.viewData();\n        }\n    }\n    /**\n     * Function that runs on the chart's 'destroy' event. Handle cleaning up the\n     * dataTableDiv element.\n     *\n     * @private\n     * @function Highcharts.Chart#onChartDestroy\n     *\n     * @requires modules/exporting\n     * @requires modules/export-data\n     */\n    function onChartDestroy() {\n        var _a,\n            _b;\n        (_b = (_a = this.exporting) === null || _a === void 0 ? void 0 : _a.dataTableDiv) === null || _b === void 0 ? void 0 : _b.remove();\n    }\n})(ExportData || (ExportData = {}));\n/* *\n *\n * Default Export\n *\n * */\n/* harmony default export */ var ExportData_ExportData = (ExportData);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Function callback to execute while data rows are processed for exporting.\n * This allows the modification of data rows before processed into the final\n * format.\n *\n * @callback Highcharts.ExportDataCallbackFunction\n * @extends Highcharts.EventCallbackFunction<Highcharts.Chart>\n *\n * @param {Highcharts.Chart} this\n * Chart context where the event occurred.\n *\n * @param {Highcharts.ExportDataEventObject} event\n * Event object with data rows that can be modified.\n */\n/**\n * Contains information about the export data event.\n *\n * @interface Highcharts.ExportDataEventObject\n */ /**\n* Contains the data rows for the current export task and can be modified.\n* @name Highcharts.ExportDataEventObject#dataRows\n* @type {Array<Array<string>>}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es5/es-modules/masters/modules/export-data.js\n\n\n\n\n\nvar G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n// Compatibility\nG.dataURLtoBlob = G.dataURLtoBlob || Extensions_DownloadURL.dataURLtoBlob;\nG.downloadURL = G.downloadURL || Extensions_DownloadURL.downloadURL;\n// Compose\nExportData_ExportData.compose(G.Chart, G.Exporting, G.Series);\n/* harmony default export */ var export_data_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__660__","__WEBPACK_EXTERNAL_MODULE__960__","ExportData","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","export_data_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","isSafari","win","doc","document","domurl","error","URL","webkitURL","dataURLtoBlob","dataURL","parts","replace","match","length","atob","ArrayBuffer","Uint8Array","Blob","createObjectURL","binStr","buf","binary","i","charCodeAt","Extensions_DownloadURL","downloadURL","filename","nav","navigator","createElement","String","msSaveOrOpenBlob","userAgent","Error","isOldEdgeBrowser","test","safariBlob","indexOf","download","href","body","appendChild","click","removeChild","open","_a","location","highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_","highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default","highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_","highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default","ExportData_ExportDataDefaults","exporting","csv","annotations","itemDelimiter","join","columnHeaderFormatter","dateFormat","decimalPoint","lineDelimiter","menuItemDefinitions","downloadCSV","textKey","onclick","downloadXLS","viewData","wrapLoading","toggleDataTable","showTable","useMultiLevelHeaders","useRowspanHeaders","showExportInProgress","lang","exportData","annotationHeader","categoryHeader","categoryDatetimeHeader","hideData","exportInProgress","__spreadArray","to","from","pack","arguments","ar","l","Array","slice","concat","getOptions","setOptions","ExportData_downloadURL","composed","ExportData_doc","ExportData_win","addEvent","defined","extend","find","fireEvent","isNumber","pick","pushUnique","_this","getCSV","getBlobFromContent","encodeURIComponent","getFilename","template","getTable","uri","btoa","unescape","content","type","MSBlobBuilder","blob","append","getBlob","useLocalDecimalPoint","rows","getDataRows","csvOptions","options","toLocaleString","forEach","row","val","j","toString","multiLevelHeaders","xAxisIndex","column","xAxis","dataRows","columnTitleObj","x","xTitle","chart","hasParallelCoords","hasParallelCoordinates","time","xAxes","rowArr","topLevelColumnTitles","columnTitles","exportDataOptions","langOptions","item","keyLength","s","bindAxes","title","text","dateTime","columnTitle","name","topLevelColumnTitle","getCategoryAndDateTimeMap","series","pointArrayMap","pIdx","categoryMap","dateTimeValueAxisMap","axisName","keyToAxis","axis","categories","getPointArray","namedPoints","data","some","y","exportKey","xAxisIndices","mockSeries","keys","valueCount","xTaken","requireSorting","categoryAndDatetimeMap","includeInDataExport","isInternal","visible","index","push","autoIncrement","mockPoint","pointClass","applyOptions","apply","hasNames","modifiedKey","pointers","originalKey","xValues","arr","i_1","getNestedProperty","sort","b","splice","category","Date","getTime","names","serialize","node","tagName","textContent","attributes","html","value","children","child","getTableAST","rowLength","treeChildren","topHeaders","shift","subHeaders","isRowEqual","row1","row2","getCellHTMLFromValue","classes","className","numberFormatter","tableCaption","chartTitle","len","getTableHeaderHTML","topheaders","subheaders","cur","rowspan","theadChildren","curColspan","trChildren","scope","colspan","cell","valign","Math","max","trs","e","tree","id","show","createContainer","isDataTableVisible","dataTableDiv","renderTo","parentNode","insertBefore","nextSibling","style","oldDisplay","display","innerHTML","emptyHTML","ast","addToDOM","element","wasHidden","exportDivElements","divElements","menuItems","buttons","contextButton","exportDivElement","setElementHTML","fn","showMessage","Boolean","timeoutFn","requestAnimationFrame","setTimeout","showLoading","hideLoading","onChartAfterViewData","getCellValue","tr","allowTableSorting","querySelector","childNodes","th","tableBody","addEventListener","ascending","querySelectorAll","headers","ascendingOrderInTable","v1","v2","isNaN","localeCompare","classList","contains","remove","add","onChartRenderer","_b","_c","forExport","onChartDestroy","compose","ChartClass","ExportingClass","SeriesClass","exportingProto","_d","types","AreaRangeSeries","arearange","GanttSeries","gantt","MapSeries","map","MapBubbleSeries","mapbubble","TreemapSeries","treemap","XRangeSeries","xrange","low","high","start","end","x2","ExportData_ExportData","G","Chart","Exporting","Series"],"mappings":"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"}