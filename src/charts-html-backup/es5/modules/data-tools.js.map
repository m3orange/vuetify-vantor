{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/data-tools\n * @requires highcharts\n *\n * Highcharts\n *\n * (c) 2010-2025 Highsoft AS\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/data-tools\", [[\"highcharts/highcharts\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/data-tools\"] = factory(require(\"highcharts\"));\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ data_tools_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n;// ./code/es5/es-modules/Data/Modifiers/DataModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - GÃ¸ran Slettemark\n *\n * */\n\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Abstract class to provide an interface for modifying a table.\n *\n */\nvar DataModifier = /** @class */ (function () {\n    function DataModifier() {\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Runs a timed execution of the modifier on the given datatable.\n     * Can be configured to run multiple times.\n     *\n     * @param {DataTable} dataTable\n     * The datatable to execute\n     *\n     * @param {DataModifier.BenchmarkOptions} options\n     * Options. Currently supports `iterations` for number of iterations.\n     *\n     * @return {Array<number>}\n     * An array of times in milliseconds\n     *\n     */\n    DataModifier.prototype.benchmark = function (dataTable, options) {\n        var results = [];\n        var modifier = this;\n        var execute = function () {\n                modifier.modifyTable(dataTable);\n            modifier.emit({\n                type: 'afterBenchmarkIteration'\n            });\n        };\n        var defaultOptions = {\n                iterations: 1\n            };\n        var iterations = merge(defaultOptions,\n            options).iterations;\n        modifier.on('afterBenchmarkIteration', function () {\n            if (results.length === iterations) {\n                modifier.emit({\n                    type: 'afterBenchmark',\n                    results: results\n                });\n                return;\n            }\n            // Run again\n            execute();\n        });\n        var times = {\n                startTime: 0,\n                endTime: 0\n            };\n        // Add timers\n        modifier.on('modify', function () {\n            times.startTime = window.performance.now();\n        });\n        modifier.on('afterModify', function () {\n            times.endTime = window.performance.now();\n            results.push(times.endTime - times.startTime);\n        });\n        // Initial run\n        execute();\n        return results;\n    };\n    /**\n     * Emits an event on the modifier to all registered callbacks of this event.\n     *\n     * @param {DataModifier.Event} [e]\n     * Event object containing additonal event information.\n     */\n    DataModifier.prototype.emit = function (e) {\n        fireEvent(this, e.type, e);\n    };\n    /**\n     * Returns a modified copy of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Table to modify.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Promise<Highcharts.DataTable>}\n     * Table with `modified` property as a reference.\n     */\n    DataModifier.prototype.modify = function (table, eventDetail) {\n        var modifier = this;\n        return new Promise(function (resolve, reject) {\n            if (table.modified === table) {\n                table.modified = table.clone(false, eventDetail);\n            }\n            try {\n                resolve(modifier.modifyTable(table, eventDetail));\n            }\n            catch (e) {\n                modifier.emit({\n                    type: 'error',\n                    detail: eventDetail,\n                    table: table\n                });\n                reject(e instanceof Error ? e : new Error('' + e));\n            }\n        });\n    };\n    /**\n     * Applies partial modifications of a cell change to the property `modified`\n     * of the given modified table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {string} columnName\n     * Column name of changed cell.\n     *\n     * @param {number|undefined} rowIndex\n     * Row index of changed cell.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Changed cell value.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    DataModifier.prototype.modifyCell = function (table, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    columnName, rowIndex, cellValue, eventDetail\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ) {\n        return this.modifyTable(table);\n    };\n    /**\n     * Applies partial modifications of column changes to the property\n     * `modified` of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Changed columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex=0]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    DataModifier.prototype.modifyColumns = function (table, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    columns, rowIndex, eventDetail\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ) {\n        return this.modifyTable(table);\n    };\n    /**\n     * Applies partial modifications of row changes to the property `modified`\n     * of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Array<(Highcharts.DataTableRow|Highcharts.DataTableRowObject)>} rows\n     * Changed rows.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    DataModifier.prototype.modifyRows = function (table, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    rows, rowIndex, eventDetail\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ) {\n        return this.modifyTable(table);\n    };\n    /**\n     * Registers a callback for a specific modifier event.\n     *\n     * @param {string} type\n     * Event type as a string.\n     *\n     * @param {DataEventEmitter.Callback} callback\n     * Function to register for an modifier callback.\n     *\n     * @return {Function}\n     * Function to unregister callback from the modifier event.\n     */\n    DataModifier.prototype.on = function (type, callback) {\n        return addEvent(this, type, callback);\n    };\n    return DataModifier;\n}());\n/* *\n *\n *  Class Namespace\n *\n * */\n/**\n * Additionally provided types for modifier events and options.\n */\n(function (DataModifier) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Registry as a record object with modifier names and their class\n     * constructor.\n     */\n    DataModifier.types = {};\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds a modifier class to the registry. The modifier class has to provide\n     * the `DataModifier.options` property and the `DataModifier.modifyTable`\n     * method to modify the table.\n     *\n     * @private\n     *\n     * @param {string} key\n     * Registry key of the modifier class.\n     *\n     * @param {DataModifierType} DataModifierClass\n     * Modifier class (aka class constructor) to register.\n     *\n     * @return {boolean}\n     * Returns true, if the registration was successful. False is returned, if\n     * their is already a modifier registered with this key.\n     */\n    function registerType(key, DataModifierClass) {\n        return (!!key &&\n            !DataModifier.types[key] &&\n            !!(DataModifier.types[key] = DataModifierClass));\n    }\n    DataModifier.registerType = registerType;\n})(DataModifier || (DataModifier = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_DataModifier = (DataModifier);\n\n;// ./code/es5/es-modules/Data/ColumnUtils.js\n/* *\n *\n *  (c) 2020-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Dawid Dragula\n *\n * */\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * Utility functions for columns that can be either arrays or typed arrays.\n * @private\n */\nvar ColumnUtils;\n(function (ColumnUtils) {\n    /* *\n    *\n    *  Declarations\n    *\n    * */\n    /* *\n    *\n    * Functions\n    *\n    * */\n    /**\n     * Sets the length of the column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} length\n     * New length of the column.\n     *\n     * @param {boolean} asSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `false`.\n     *\n     * @return {DataTable.Column}\n     * Modified column.\n     *\n     * @private\n     */\n    function setLength(column, length, asSubarray) {\n        if (Array.isArray(column)) {\n            column.length = length;\n            return column;\n        }\n        return column[asSubarray ? 'subarray' : 'slice'](0, length);\n    }\n    ColumnUtils.setLength = setLength;\n    /**\n     * Splices a column array.\n     *\n     * @param {DataTable.Column} column\n     * Column to be modified.\n     *\n     * @param {number} start\n     * Index at which to start changing the array.\n     *\n     * @param {number} deleteCount\n     * An integer indicating the number of old array elements to remove.\n     *\n     * @param {boolean} removedAsSubarray\n     * If column is a typed array, return a subarray instead of a new array. It\n     * is faster `O(1)`, but the entire buffer will be kept in memory until all\n     * views to it are destroyed. Default is `true`.\n     *\n     * @param {Array<number>|TypedArray} items\n     * The elements to add to the array, beginning at the start index. If you\n     * don't specify any elements, `splice()` will only remove elements from the\n     * array.\n     *\n     * @return {SpliceResult}\n     * Object containing removed elements and the modified column.\n     *\n     * @private\n     */\n    function splice(column, start, deleteCount, removedAsSubarray, items) {\n        if (items === void 0) { items = []; }\n        if (Array.isArray(column)) {\n            if (!Array.isArray(items)) {\n                items = Array.from(items);\n            }\n            return {\n                removed: column.splice.apply(column, __spreadArray([start, deleteCount], items, false)),\n                array: column\n            };\n        }\n        var Constructor = Object.getPrototypeOf(column)\n                .constructor;\n        var removed = column[removedAsSubarray ? 'subarray' : 'slice'](start,\n            start + deleteCount);\n        var newLength = column.length - deleteCount + items.length;\n        var result = new Constructor(newLength);\n        result.set(column.subarray(0, start), 0);\n        result.set(items, start);\n        result.set(column.subarray(start + deleteCount), start + items.length);\n        return {\n            removed: removed,\n            array: result\n        };\n    }\n    ColumnUtils.splice = splice;\n})(ColumnUtils || (ColumnUtils = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Data_ColumnUtils = (ColumnUtils);\n\n;// ./code/es5/es-modules/Data/DataTableCore.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - GÃ¸ran Slettemark\n *  - Torstein HÃ¸nsi\n *\n * */\n\n\nvar setLength = Data_ColumnUtils.setLength, splice = Data_ColumnUtils.splice;\n\nvar DataTableCore_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, objectEach = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).objectEach, uniqueKey = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).uniqueKey;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class to manage columns and rows in a table structure. It provides methods\n * to add, remove, and manipulate columns and rows, as well as to retrieve data\n * from specific cells.\n *\n * @class\n * @name Highcharts.DataTable\n *\n * @param {Highcharts.DataTableOptions} [options]\n * Options to initialize the new DataTable instance.\n */\nvar DataTableCore = /** @class */ (function () {\n    /**\n     * Constructs an instance of the DataTable class.\n     *\n     * @example\n     * const dataTable = new Highcharts.DataTableCore({\n     *   columns: {\n     *     year: [2020, 2021, 2022, 2023],\n     *     cost: [11, 13, 12, 14],\n     *     revenue: [12, 15, 14, 18]\n     *   }\n     * });\n\n     *\n     * @param {Highcharts.DataTableOptions} [options]\n     * Options to initialize the new DataTable instance.\n     */\n    function DataTableCore(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        /**\n         * Whether the ID was automatic generated or given in the constructor.\n         *\n         * @name Highcharts.DataTable#autoId\n         * @type {boolean}\n         */\n        this.autoId = !options.id;\n        this.columns = {};\n        /**\n         * ID of the table for identification purposes.\n         *\n         * @name Highcharts.DataTable#id\n         * @type {string}\n         */\n        this.id = (options.id || uniqueKey());\n        this.modified = this;\n        this.rowCount = 0;\n        this.versionTag = uniqueKey();\n        var rowCount = 0;\n        objectEach(options.columns || {}, function (column, columnName) {\n            _this.columns[columnName] = column.slice();\n            rowCount = Math.max(rowCount, column.length);\n        });\n        this.applyRowCount(rowCount);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Applies a row count to the table by setting the `rowCount` property and\n     * adjusting the length of all columns.\n     *\n     * @private\n     * @param {number} rowCount The new row count.\n     */\n    DataTableCore.prototype.applyRowCount = function (rowCount) {\n        var _this = this;\n        this.rowCount = rowCount;\n        objectEach(this.columns, function (column, columnName) {\n            if (column.length !== rowCount) {\n                _this.columns[columnName] = setLength(column, rowCount);\n            }\n        });\n    };\n    /**\n     * Delete rows. Simplified version of the full\n     * `DataTable.deleteRows` method.\n     *\n     * @param {number} rowIndex\n     * The start row index\n     *\n     * @param {number} [rowCount=1]\n     * The number of rows to delete\n     *\n     * @return {void}\n     *\n     * @emits #afterDeleteRows\n     */\n    DataTableCore.prototype.deleteRows = function (rowIndex, rowCount) {\n        var _this = this;\n        if (rowCount === void 0) { rowCount = 1; }\n        if (rowCount > 0 && rowIndex < this.rowCount) {\n            var length_1 = 0;\n            objectEach(this.columns, function (column, columnName) {\n                _this.columns[columnName] =\n                    splice(column, rowIndex, rowCount).array;\n                length_1 = column.length;\n            });\n            this.rowCount = length_1;\n        }\n        DataTableCore_fireEvent(this, 'afterDeleteRows', { rowIndex: rowIndex, rowCount: rowCount });\n        this.versionTag = uniqueKey();\n    };\n    /**\n     * Fetches the given column by the canonical column name. Simplified version\n     * of the full `DataTable.getRow` method, always returning by reference.\n     *\n     * @param {string} columnName\n     * Name of the column to get.\n     *\n     * @return {Highcharts.DataTableColumn|undefined}\n     * A copy of the column, or `undefined` if not found.\n     */\n    DataTableCore.prototype.getColumn = function (columnName, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        return this.columns[columnName];\n    };\n    /**\n     * Retrieves all or the given columns. Simplified version of the full\n     * `DataTable.getColumns` method, always returning by reference.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Highcharts.DataTableColumnCollection}\n     * Collection of columns. If a requested column was not found, it is\n     * `undefined`.\n     */\n    DataTableCore.prototype.getColumns = function (columnNames, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    asReference) {\n        var _this = this;\n        return (columnNames || Object.keys(this.columns)).reduce(function (columns, columnName) {\n            columns[columnName] = _this.columns[columnName];\n            return columns;\n        }, {});\n    };\n    /**\n     * Retrieves the row at a given index.\n     *\n     * @param {number} rowIndex\n     * Row index to retrieve. First row has index 0.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @return {Record<string, number|string|undefined>|undefined}\n     * Returns the row values, or `undefined` if not found.\n     */\n    DataTableCore.prototype.getRow = function (rowIndex, columnNames) {\n        var _this = this;\n        return (columnNames || Object.keys(this.columns)).map(function (key) { var _a; return (_a = _this.columns[key]) === null || _a === void 0 ? void 0 : _a[rowIndex]; });\n    };\n    /**\n     * Sets cell values for a column. Will insert a new column, if not found.\n     *\n     * @param {string} columnName\n     * Column name to set.\n     *\n     * @param {Highcharts.DataTableColumn} [column]\n     * Values to set in the column.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. (Default: 0)\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    DataTableCore.prototype.setColumn = function (columnName, column, rowIndex, eventDetail) {\n        var _a;\n        if (column === void 0) { column = []; }\n        if (rowIndex === void 0) { rowIndex = 0; }\n        this.setColumns((_a = {}, _a[columnName] = column, _a), rowIndex, eventDetail);\n    };\n    /**\n     * Sets cell values for multiple columns. Will insert new columns, if not\n     * found. Simplified version of the full `DataTableCore.setColumns`, limited\n     * to full replacement of the columns (undefined `rowIndex`).\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. Ignored in the `DataTableCore`, as it\n     * always replaces the full column.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    DataTableCore.prototype.setColumns = function (columns, rowIndex, eventDetail) {\n        var _this = this;\n        var rowCount = this.rowCount;\n        objectEach(columns, function (column, columnName) {\n            _this.columns[columnName] = column.slice();\n            rowCount = column.length;\n        });\n        this.applyRowCount(rowCount);\n        if (!(eventDetail === null || eventDetail === void 0 ? void 0 : eventDetail.silent)) {\n            DataTableCore_fireEvent(this, 'afterSetColumns');\n            this.versionTag = uniqueKey();\n        }\n    };\n    /**\n     * Sets cell values of a row. Will insert a new row if no index was\n     * provided, or if the index is higher than the total number of table rows.\n     * A simplified version of the full `DateTable.setRow`, limited to objects.\n     *\n     * @param {Record<string, number|string|undefined>} row\n     * Cell values to set.\n     *\n     * @param {number} [rowIndex]\n     * Index of the row to set. Leave `undefined` to add as a new row.\n     *\n     * @param {boolean} [insert]\n     * Whether to insert the row at the given index, or to overwrite the row.\n     *\n     * @param {Record<string, (boolean|number|string|null|undefined)>} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #afterSetRows\n     */\n    DataTableCore.prototype.setRow = function (row, rowIndex, insert, eventDetail) {\n        if (rowIndex === void 0) { rowIndex = this.rowCount; }\n        var columns = this.columns,\n            indexRowCount = insert ? this.rowCount + 1 : rowIndex + 1;\n        objectEach(row, function (cellValue, columnName) {\n            var column = columns[columnName] ||\n                    (eventDetail === null || eventDetail === void 0 ? void 0 : eventDetail.addColumns) !== false && new Array(indexRowCount);\n            if (column) {\n                if (insert) {\n                    column = splice(column, rowIndex, 0, true, [cellValue]).array;\n                }\n                else {\n                    column[rowIndex] = cellValue;\n                }\n                columns[columnName] = column;\n            }\n        });\n        if (indexRowCount > this.rowCount) {\n            this.applyRowCount(indexRowCount);\n        }\n        if (!(eventDetail === null || eventDetail === void 0 ? void 0 : eventDetail.silent)) {\n            DataTableCore_fireEvent(this, 'afterSetRows');\n            this.versionTag = uniqueKey();\n        }\n    };\n    return DataTableCore;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Data_DataTableCore = (DataTableCore);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * A typed array.\n * @typedef {Int8Array|Uint8Array|Uint8ClampedArray|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} Highcharts.TypedArray\n * //**\n * A column of values in a data table.\n * @typedef {Array<boolean|null|number|string|undefined>|Highcharts.TypedArray} Highcharts.DataTableColumn\n */ /**\n* A collection of data table columns defined by a object where the key is the\n* column name and the value is an array of the column values.\n* @typedef {Record<string, Highcharts.DataTableColumn>} Highcharts.DataTableColumnCollection\n*/\n/**\n * Options for the `DataTable` or `DataTableCore` classes.\n * @interface Highcharts.DataTableOptions\n */ /**\n* The column options for the data table. The columns are defined by an object\n* where the key is the column ID and the value is an array of the column\n* values.\n*\n* @name Highcharts.DataTableOptions.columns\n* @type {Highcharts.DataTableColumnCollection|undefined}\n*/ /**\n* Custom ID to identify the new DataTable instance.\n*\n* @name Highcharts.DataTableOptions.id\n* @type {string|undefined}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es5/es-modules/Data/DataTable.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - GÃ¸ran Slettemark\n *  - Jomar HÃ¸nsi\n *  - Dawid Dragula\n *\n * */\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar DataTable_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined, extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, DataTable_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, DataTable_uniqueKey = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).uniqueKey;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class to manage columns and rows in a table structure. It provides methods\n * to add, remove, and manipulate columns and rows, as well as to retrieve data\n * from specific cells.\n *\n * @class\n * @name Highcharts.DataTable\n *\n * @param {Highcharts.DataTableOptions} [options]\n * Options to initialize the new DataTable instance.\n */\nvar DataTable = /** @class */ (function (_super) {\n    __extends(DataTable, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function DataTable(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this,\n            options) || this;\n        _this.modified = _this;\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Tests whether a row contains only `null` values or is equal to\n     * DataTable.NULL. If all columns have `null` values, the function returns\n     * `true`. Otherwise, it returns `false` to indicate that the row contains\n     * at least one non-null value.\n     *\n     * @function Highcharts.DataTable.isNull\n     *\n     * @param {Highcharts.DataTableRow|Highcharts.DataTableRowObject} row\n     * Row to test.\n     *\n     * @return {boolean}\n     * Returns `true`, if the row contains only null, otherwise `false`.\n     *\n     * @example\n     * if (DataTable.isNull(row)) {\n     *   // handle null row\n     * }\n     */\n    DataTable.isNull = function (row) {\n        if (row === DataTable.NULL) {\n            return true;\n        }\n        if (row instanceof Array) {\n            if (!row.length) {\n                return false;\n            }\n            for (var i = 0, iEnd = row.length; i < iEnd; ++i) {\n                if (row[i] !== null) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var columnNames = Object.keys(row);\n            if (!columnNames.length) {\n                return false;\n            }\n            for (var i = 0, iEnd = columnNames.length; i < iEnd; ++i) {\n                if (row[columnNames[i]] !== null) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Returns a clone of this table. The cloned table is completely independent\n     * of the original, and any changes made to the clone will not affect\n     * the original table.\n     *\n     * @function Highcharts.DataTable#clone\n     *\n     * @param {boolean} [skipColumns]\n     * Whether to clone columns or not.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Clone of this data table.\n     *\n     * @emits #cloneTable\n     * @emits #afterCloneTable\n     */\n    DataTable.prototype.clone = function (skipColumns, eventDetail) {\n        var table = this,\n            tableOptions = {};\n        table.emit({ type: 'cloneTable', detail: eventDetail });\n        if (!skipColumns) {\n            tableOptions.columns = table.columns;\n        }\n        if (!table.autoId) {\n            tableOptions.id = table.id;\n        }\n        var tableClone = new DataTable(tableOptions);\n        if (!skipColumns) {\n            tableClone.versionTag = table.versionTag;\n            tableClone.originalRowIndexes = table.originalRowIndexes;\n            tableClone.localRowIndexes = table.localRowIndexes;\n        }\n        table.emit({\n            type: 'afterCloneTable',\n            detail: eventDetail,\n            tableClone: tableClone\n        });\n        return tableClone;\n    };\n    /**\n     * Deletes columns from the table.\n     *\n     * @function Highcharts.DataTable#deleteColumns\n     *\n     * @param {Array<string>} [columnNames]\n     * Names of columns to delete. If no array is provided, all\n     * columns will be deleted.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTableColumnCollection|undefined}\n     * Returns the deleted columns, if found.\n     *\n     * @emits #deleteColumns\n     * @emits #afterDeleteColumns\n     */\n    DataTable.prototype.deleteColumns = function (columnNames, eventDetail) {\n        var table = this,\n            columns = table.columns,\n            deletedColumns = {},\n            modifiedColumns = {},\n            modifier = table.modifier,\n            rowCount = table.rowCount;\n        columnNames = (columnNames || Object.keys(columns));\n        if (columnNames.length) {\n            table.emit({\n                type: 'deleteColumns',\n                columnNames: columnNames,\n                detail: eventDetail\n            });\n            for (var i = 0, iEnd = columnNames.length, column = void 0, columnName = void 0; i < iEnd; ++i) {\n                columnName = columnNames[i];\n                column = columns[columnName];\n                if (column) {\n                    deletedColumns[columnName] = column;\n                    modifiedColumns[columnName] = new Array(rowCount);\n                }\n                delete columns[columnName];\n            }\n            if (!Object.keys(columns).length) {\n                table.rowCount = 0;\n                this.deleteRowIndexReferences();\n            }\n            if (modifier) {\n                modifier.modifyColumns(table, modifiedColumns, 0, eventDetail);\n            }\n            table.emit({\n                type: 'afterDeleteColumns',\n                columns: deletedColumns,\n                columnNames: columnNames,\n                detail: eventDetail\n            });\n            return deletedColumns;\n        }\n    };\n    /**\n     * Deletes the row index references. This is useful when the original table\n     * is deleted, and the references are no longer needed. This table is\n     * then considered an original table or a table that has the same row's\n     * order as the original table.\n     */\n    DataTable.prototype.deleteRowIndexReferences = function () {\n        delete this.originalRowIndexes;\n        delete this.localRowIndexes;\n        // Here, in case of future need, can be implemented updating of the\n        // modified tables' row indexes references.\n    };\n    /**\n     * Deletes rows in this table.\n     *\n     * @function Highcharts.DataTable#deleteRows\n     *\n     * @param {number} [rowIndex]\n     * Index to start delete of rows. If not specified, all rows will be\n     * deleted.\n     *\n     * @param {number} [rowCount=1]\n     * Number of rows to delete.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Array<Highcharts.DataTableRow>}\n     * Returns the deleted rows, if found.\n     *\n     * @emits #deleteRows\n     * @emits #afterDeleteRows\n     */\n    DataTable.prototype.deleteRows = function (rowIndex, rowCount, eventDetail) {\n        if (rowCount === void 0) { rowCount = 1; }\n        var table = this,\n            deletedRows = [],\n            modifiedRows = [],\n            modifier = table.modifier;\n        table.emit({\n            type: 'deleteRows',\n            detail: eventDetail,\n            rowCount: rowCount,\n            rowIndex: (rowIndex || 0)\n        });\n        if (typeof rowIndex === 'undefined') {\n            rowIndex = 0;\n            rowCount = table.rowCount;\n        }\n        if (rowCount > 0 && rowIndex < table.rowCount) {\n            var columns = table.columns,\n                columnNames = Object.keys(columns);\n            for (var i = 0, iEnd = columnNames.length, column = void 0, deletedCells = void 0, columnName = void 0; i < iEnd; ++i) {\n                columnName = columnNames[i];\n                column = columns[columnName];\n                var result = Data_ColumnUtils.splice(column,\n                    rowIndex,\n                    rowCount);\n                deletedCells = result.removed;\n                columns[columnName] = column = result.array;\n                if (!i) {\n                    table.rowCount = column.length;\n                }\n                for (var j = 0, jEnd = deletedCells.length; j < jEnd; ++j) {\n                    deletedRows[j] = (deletedRows[j] || []);\n                    deletedRows[j][i] = deletedCells[j];\n                }\n                modifiedRows.push(new Array(iEnd));\n            }\n        }\n        if (modifier) {\n            modifier.modifyRows(table, modifiedRows, (rowIndex || 0), eventDetail);\n        }\n        table.emit({\n            type: 'afterDeleteRows',\n            detail: eventDetail,\n            rowCount: rowCount,\n            rowIndex: (rowIndex || 0),\n            rows: deletedRows\n        });\n        return deletedRows;\n    };\n    /**\n     * Emits an event on this table to all registered callbacks of the given\n     * event.\n     * @private\n     *\n     * @param {DataTable.Event} e\n     * Event object with event information.\n     */\n    DataTable.prototype.emit = function (e) {\n        if ([\n            'afterDeleteColumns',\n            'afterDeleteRows',\n            'afterSetCell',\n            'afterSetColumns',\n            'afterSetRows'\n        ].includes(e.type)) {\n            this.versionTag = DataTable_uniqueKey();\n        }\n        DataTable_fireEvent(this, e.type, e);\n    };\n    /**\n     * Fetches a single cell value.\n     *\n     * @function Highcharts.DataTable#getCell\n     *\n     * @param {string} columnName\n     * Column name of the cell to retrieve.\n     *\n     * @param {number} rowIndex\n     * Row index of the cell to retrieve.\n     *\n     * @return {Highcharts.DataTableCellType|undefined}\n     * Returns the cell value or `undefined`.\n     */\n    DataTable.prototype.getCell = function (columnName, rowIndex) {\n        var table = this;\n        var column = table.columns[columnName];\n        if (column) {\n            return column[rowIndex];\n        }\n    };\n    /**\n     * Fetches a cell value for the given row as a boolean.\n     *\n     * @function Highcharts.DataTable#getCellAsBoolean\n     *\n     * @param {string} columnName\n     * Column name to fetch.\n     *\n     * @param {number} rowIndex\n     * Row index to fetch.\n     *\n     * @return {boolean}\n     * Returns the cell value of the row as a boolean.\n     */\n    DataTable.prototype.getCellAsBoolean = function (columnName, rowIndex) {\n        var table = this;\n        var column = table.columns[columnName];\n        return !!(column && column[rowIndex]);\n    };\n    /**\n     * Fetches a cell value for the given row as a number.\n     *\n     * @function Highcharts.DataTable#getCellAsNumber\n     *\n     * @param {string} columnName\n     * Column name or to fetch.\n     *\n     * @param {number} rowIndex\n     * Row index to fetch.\n     *\n     * @param {boolean} [useNaN]\n     * Whether to return NaN instead of `null` and `undefined`.\n     *\n     * @return {number|null}\n     * Returns the cell value of the row as a number.\n     */\n    DataTable.prototype.getCellAsNumber = function (columnName, rowIndex, useNaN) {\n        var table = this;\n        var column = table.columns[columnName];\n        var cellValue = (column && column[rowIndex]);\n        switch (typeof cellValue) {\n            case 'boolean':\n                return (cellValue ? 1 : 0);\n            case 'number':\n                return (isNaN(cellValue) && !useNaN ? null : cellValue);\n        }\n        cellValue = parseFloat(\"\".concat(cellValue !== null && cellValue !== void 0 ? cellValue : ''));\n        return (isNaN(cellValue) && !useNaN ? null : cellValue);\n    };\n    /**\n     * Fetches a cell value for the given row as a string.\n     *\n     * @function Highcharts.DataTable#getCellAsString\n     *\n     * @param {string} columnName\n     * Column name to fetch.\n     *\n     * @param {number} rowIndex\n     * Row index to fetch.\n     *\n     * @return {string}\n     * Returns the cell value of the row as a string.\n     */\n    DataTable.prototype.getCellAsString = function (columnName, rowIndex) {\n        var table = this;\n        var column = table.columns[columnName];\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        return \"\".concat((column && column[rowIndex]));\n    };\n    /**\n     * Fetches the given column by the canonical column name.\n     * This function is a simplified wrap of {@link getColumns}.\n     *\n     * @function Highcharts.DataTable#getColumn\n     *\n     * @param {string} columnName\n     * Name of the column to get.\n     *\n     * @param {boolean} [asReference]\n     * Whether to return the column as a readonly reference.\n     *\n     * @return {Highcharts.DataTableColumn|undefined}\n     * A copy of the column, or `undefined` if not found.\n     */\n    DataTable.prototype.getColumn = function (columnName, asReference) {\n        return this.getColumns([columnName], asReference)[columnName];\n    };\n    /**\n     * Fetches the given column by the canonical column name, and\n     * validates the type of the first few cells. If the first defined cell is\n     * of type number, it assumes for performance reasons, that all cells are of\n     * type number or `null`. Otherwise it will convert all cells to number\n     * type, except `null`.\n     *\n     * @deprecated\n     *\n     * @function Highcharts.DataTable#getColumnAsNumbers\n     *\n     * @param {string} columnName\n     * Name of the column to get.\n     *\n     * @param {boolean} [useNaN]\n     * Whether to use NaN instead of `null` and `undefined`.\n     *\n     * @return {Array<(number|null)>}\n     * A copy of the column, or an empty array if not found.\n     */\n    DataTable.prototype.getColumnAsNumbers = function (columnName, useNaN) {\n        var table = this,\n            columns = table.columns;\n        var column = columns[columnName],\n            columnAsNumber = [];\n        if (column) {\n            var columnLength = column.length;\n            if (useNaN) {\n                for (var i = 0; i < columnLength; ++i) {\n                    columnAsNumber.push(table.getCellAsNumber(columnName, i, true));\n                }\n            }\n            else {\n                for (var i = 0, cellValue = void 0; i < columnLength; ++i) {\n                    cellValue = column[i];\n                    if (typeof cellValue === 'number') {\n                        // Assume unmixed data for performance reasons\n                        return column.slice();\n                    }\n                    if (cellValue !== null &&\n                        typeof cellValue !== 'undefined') {\n                        break;\n                    }\n                }\n                for (var i = 0; i < columnLength; ++i) {\n                    columnAsNumber.push(table.getCellAsNumber(columnName, i));\n                }\n            }\n        }\n        return columnAsNumber;\n    };\n    /**\n     * Fetches all column names.\n     *\n     * @function Highcharts.DataTable#getColumnNames\n     *\n     * @return {Array<string>}\n     * Returns all column names.\n     */\n    DataTable.prototype.getColumnNames = function () {\n        return Object.keys(this.columns);\n    };\n    /**\n     * Retrieves all or the given columns.\n     *\n     * @function Highcharts.DataTable#getColumns\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names to retrieve.\n     *\n     * @param {boolean} [asReference]\n     * Whether to return columns as a readonly reference.\n     *\n     * @param {boolean} [asBasicColumns]\n     * Whether to transform all typed array columns to normal arrays.\n     *\n     * @return {Highcharts.DataTableColumnCollection}\n     * Collection of columns. If a requested column was not found, it is\n     * `undefined`.\n     */\n    DataTable.prototype.getColumns = function (columnNames, asReference, asBasicColumns) {\n        var table = this,\n            tableColumns = table.columns,\n            columns = {};\n        columnNames = (columnNames || Object.keys(tableColumns));\n        for (var i = 0, iEnd = columnNames.length, column = void 0, columnName = void 0; i < iEnd; ++i) {\n            columnName = columnNames[i];\n            column = tableColumns[columnName];\n            if (column) {\n                if (asReference) {\n                    columns[columnName] = column;\n                }\n                else if (asBasicColumns && !Array.isArray(column)) {\n                    columns[columnName] = Array.from(column);\n                }\n                else {\n                    columns[columnName] = column.slice();\n                }\n            }\n        }\n        return columns;\n    };\n    /**\n     * Takes the original row index and returns the local row index in the\n     * modified table for which this function is called.\n     *\n     * @param {number} originalRowIndex\n     * Original row index to get the local row index for.\n     *\n     * @return {number|undefined}\n     * Returns the local row index or `undefined` if not found.\n     */\n    DataTable.prototype.getLocalRowIndex = function (originalRowIndex) {\n        var localRowIndexes = this.localRowIndexes;\n        if (localRowIndexes) {\n            return localRowIndexes[originalRowIndex];\n        }\n        return originalRowIndex;\n    };\n    /**\n     * Retrieves the modifier for the table.\n     * @private\n     *\n     * @return {Highcharts.DataModifier|undefined}\n     * Returns the modifier or `undefined`.\n     */\n    DataTable.prototype.getModifier = function () {\n        return this.modifier;\n    };\n    /**\n     * Takes the local row index and returns the index of the corresponding row\n     * in the original table.\n     *\n     * @param {number} rowIndex\n     * Local row index to get the original row index for.\n     *\n     * @return {number|undefined}\n     * Returns the original row index or `undefined` if not found.\n     */\n    DataTable.prototype.getOriginalRowIndex = function (rowIndex) {\n        var originalRowIndexes = this.originalRowIndexes;\n        if (originalRowIndexes) {\n            return originalRowIndexes[rowIndex];\n        }\n        return rowIndex;\n    };\n    /**\n     * Retrieves the row at a given index. This function is a simplified wrap of\n     * {@link getRows}.\n     *\n     * @function Highcharts.DataTable#getRow\n     *\n     * @param {number} rowIndex\n     * Row index to retrieve. First row has index 0.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names in order to retrieve.\n     *\n     * @return {Highcharts.DataTableRow}\n     * Returns the row values, or `undefined` if not found.\n     */\n    DataTable.prototype.getRow = function (rowIndex, columnNames) {\n        return this.getRows(rowIndex, 1, columnNames)[0];\n    };\n    /**\n     * Returns the number of rows in this table.\n     *\n     * @function Highcharts.DataTable#getRowCount\n     *\n     * @return {number}\n     * Number of rows in this table.\n     */\n    DataTable.prototype.getRowCount = function () {\n        // @todo Implement via property getter `.length` browsers supported\n        return this.rowCount;\n    };\n    /**\n     * Retrieves the index of the first row matching a specific cell value.\n     *\n     * @function Highcharts.DataTable#getRowIndexBy\n     *\n     * @param {string} columnName\n     * Column to search in.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Cell value to search for. `NaN` and `undefined` are not supported.\n     *\n     * @param {number} [rowIndexOffset]\n     * Index offset to start searching.\n     *\n     * @return {number|undefined}\n     * Index of the first row matching the cell value.\n     */\n    DataTable.prototype.getRowIndexBy = function (columnName, cellValue, rowIndexOffset) {\n        var table = this;\n        var column = table.columns[columnName];\n        if (column) {\n            var rowIndex = -1;\n            if (Array.isArray(column)) {\n                // Normal array\n                rowIndex = column.indexOf(cellValue, rowIndexOffset);\n            }\n            else if (isNumber(cellValue)) {\n                // Typed array\n                rowIndex = column.indexOf(cellValue, rowIndexOffset);\n            }\n            if (rowIndex !== -1) {\n                return rowIndex;\n            }\n        }\n    };\n    /**\n     * Retrieves the row at a given index. This function is a simplified wrap of\n     * {@link getRowObjects}.\n     *\n     * @function Highcharts.DataTable#getRowObject\n     *\n     * @param {number} rowIndex\n     * Row index.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names and their order to retrieve.\n     *\n     * @return {Highcharts.DataTableRowObject}\n     * Returns the row values, or `undefined` if not found.\n     */\n    DataTable.prototype.getRowObject = function (rowIndex, columnNames) {\n        return this.getRowObjects(rowIndex, 1, columnNames)[0];\n    };\n    /**\n     * Fetches all or a number of rows.\n     *\n     * @function Highcharts.DataTable#getRowObjects\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to fetch. Defaults to first row at index `0`.\n     *\n     * @param {number} [rowCount]\n     * Number of rows to fetch. Defaults to maximal number of rows.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names and their order to retrieve.\n     *\n     * @return {Highcharts.DataTableRowObject}\n     * Returns retrieved rows.\n     */\n    DataTable.prototype.getRowObjects = function (rowIndex, rowCount, columnNames) {\n        if (rowIndex === void 0) { rowIndex = 0; }\n        if (rowCount === void 0) { rowCount = (this.rowCount - rowIndex); }\n        var table = this,\n            columns = table.columns,\n            rows = new Array(rowCount);\n        columnNames = (columnNames || Object.keys(columns));\n        for (var i = rowIndex, i2 = 0, iEnd = Math.min(table.rowCount, (rowIndex + rowCount)), column = void 0, row = void 0; i < iEnd; ++i, ++i2) {\n            row = rows[i2] = {};\n            for (var _i = 0, columnNames_1 = columnNames; _i < columnNames_1.length; _i++) {\n                var columnName = columnNames_1[_i];\n                column = columns[columnName];\n                row[columnName] = (column ? column[i] : void 0);\n            }\n        }\n        return rows;\n    };\n    /**\n     * Fetches all or a number of rows.\n     *\n     * @function Highcharts.DataTable#getRows\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to fetch. Defaults to first row at index `0`.\n     *\n     * @param {number} [rowCount]\n     * Number of rows to fetch. Defaults to maximal number of rows.\n     *\n     * @param {Array<string>} [columnNames]\n     * Column names and their order to retrieve.\n     *\n     * @return {Highcharts.DataTableRow}\n     * Returns retrieved rows.\n     */\n    DataTable.prototype.getRows = function (rowIndex, rowCount, columnNames) {\n        if (rowIndex === void 0) { rowIndex = 0; }\n        if (rowCount === void 0) { rowCount = (this.rowCount - rowIndex); }\n        var table = this,\n            columns = table.columns,\n            rows = new Array(rowCount);\n        columnNames = (columnNames || Object.keys(columns));\n        for (var i = rowIndex, i2 = 0, iEnd = Math.min(table.rowCount, (rowIndex + rowCount)), column = void 0, row = void 0; i < iEnd; ++i, ++i2) {\n            row = rows[i2] = [];\n            for (var _i = 0, columnNames_2 = columnNames; _i < columnNames_2.length; _i++) {\n                var columnName = columnNames_2[_i];\n                column = columns[columnName];\n                row.push(column ? column[i] : void 0);\n            }\n        }\n        return rows;\n    };\n    /**\n     * Returns the unique version tag of the current state of the table.\n     *\n     * @function Highcharts.DataTable#getVersionTag\n     *\n     * @return {string}\n     * Unique version tag.\n     */\n    DataTable.prototype.getVersionTag = function () {\n        return this.versionTag;\n    };\n    /**\n     * Checks for given column names.\n     *\n     * @function Highcharts.DataTable#hasColumns\n     *\n     * @param {Array<string>} columnNames\n     * Column names to check.\n     *\n     * @return {boolean}\n     * Returns `true` if all columns have been found, otherwise `false`.\n     */\n    DataTable.prototype.hasColumns = function (columnNames) {\n        var table = this,\n            columns = table.columns;\n        for (var i = 0, iEnd = columnNames.length, columnName = void 0; i < iEnd; ++i) {\n            columnName = columnNames[i];\n            if (!columns[columnName]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Searches for a specific cell value.\n     *\n     * @function Highcharts.DataTable#hasRowWith\n     *\n     * @param {string} columnName\n     * Column to search in.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Cell value to search for. `NaN` and `undefined` are not supported.\n     *\n     * @return {boolean}\n     * True, if a row has been found, otherwise false.\n     */\n    DataTable.prototype.hasRowWith = function (columnName, cellValue) {\n        var table = this;\n        var column = table.columns[columnName];\n        // Normal array\n        if (Array.isArray(column)) {\n            return (column.indexOf(cellValue) !== -1);\n        }\n        // Typed array\n        if (defined(cellValue) && Number.isFinite(cellValue)) {\n            return (column.indexOf(+cellValue) !== -1);\n        }\n        return false;\n    };\n    /**\n     * Registers a callback for a specific event.\n     *\n     * @function Highcharts.DataTable#on\n     *\n     * @param {string} type\n     * Event type as a string.\n     *\n     * @param {Highcharts.EventCallbackFunction<Highcharts.DataTable>} callback\n     * Function to register for an event callback.\n     *\n     * @return {Function}\n     * Function to unregister callback from the event.\n     */\n    DataTable.prototype.on = function (type, callback) {\n        return DataTable_addEvent(this, type, callback);\n    };\n    /**\n     * Renames a column of cell values.\n     *\n     * @function Highcharts.DataTable#renameColumn\n     *\n     * @param {string} columnName\n     * Name of the column to be renamed.\n     *\n     * @param {string} newColumnName\n     * New name of the column. An existing column with the same name will be\n     * replaced.\n     *\n     * @return {boolean}\n     * Returns `true` if successful, `false` if the column was not found.\n     */\n    DataTable.prototype.renameColumn = function (columnName, newColumnName) {\n        var table = this,\n            columns = table.columns;\n        if (columns[columnName]) {\n            if (columnName !== newColumnName) {\n                columns[newColumnName] = columns[columnName];\n                delete columns[columnName];\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets a cell value based on the row index and column.  Will\n     * insert a new column, if not found.\n     *\n     * @function Highcharts.DataTable#setCell\n     *\n     * @param {string} columnName\n     * Column name to set.\n     *\n     * @param {number|undefined} rowIndex\n     * Row index to set.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Cell value to set.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setCell\n     * @emits #afterSetCell\n     */\n    DataTable.prototype.setCell = function (columnName, rowIndex, cellValue, eventDetail) {\n        var table = this,\n            columns = table.columns,\n            modifier = table.modifier;\n        var column = columns[columnName];\n        if (column && column[rowIndex] === cellValue) {\n            return;\n        }\n        table.emit({\n            type: 'setCell',\n            cellValue: cellValue,\n            columnName: columnName,\n            detail: eventDetail,\n            rowIndex: rowIndex\n        });\n        if (!column) {\n            column = columns[columnName] = new Array(table.rowCount);\n        }\n        if (rowIndex >= table.rowCount) {\n            table.rowCount = (rowIndex + 1);\n        }\n        column[rowIndex] = cellValue;\n        if (modifier) {\n            modifier.modifyCell(table, columnName, rowIndex, cellValue);\n        }\n        table.emit({\n            type: 'afterSetCell',\n            cellValue: cellValue,\n            columnName: columnName,\n            detail: eventDetail,\n            rowIndex: rowIndex\n        });\n    };\n    /**\n     * Sets cell values for multiple columns. Will insert new columns, if not\n     * found.\n     *\n     * @function Highcharts.DataTable#setColumns\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to change. Keep undefined to reset.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @param {boolean} [typeAsOriginal=false]\n     * Determines whether the original column retains its type when data\n     * replaced. If `true`, the original column keeps its type. If not\n     * (default), the original column will adopt the type of the replacement\n     * column.\n     *\n     * @emits #setColumns\n     * @emits #afterSetColumns\n     */\n    DataTable.prototype.setColumns = function (columns, rowIndex, eventDetail, typeAsOriginal) {\n        var table = this,\n            tableColumns = table.columns,\n            tableModifier = table.modifier,\n            columnNames = Object.keys(columns);\n        var rowCount = table.rowCount;\n        table.emit({\n            type: 'setColumns',\n            columns: columns,\n            columnNames: columnNames,\n            detail: eventDetail,\n            rowIndex: rowIndex\n        });\n        if (!defined(rowIndex) && !typeAsOriginal) {\n            _super.prototype.setColumns.call(this, columns, rowIndex, extend(eventDetail, { silent: true }));\n        }\n        else {\n            for (var i = 0, iEnd = columnNames.length, column = void 0, tableColumn = void 0, columnName = void 0, ArrayConstructor = void 0; i < iEnd; ++i) {\n                columnName = columnNames[i];\n                column = columns[columnName];\n                tableColumn = tableColumns[columnName];\n                ArrayConstructor = Object.getPrototypeOf((tableColumn && typeAsOriginal) ? tableColumn : column).constructor;\n                if (!tableColumn) {\n                    tableColumn = new ArrayConstructor(rowCount);\n                }\n                else if (ArrayConstructor === Array) {\n                    if (!Array.isArray(tableColumn)) {\n                        tableColumn = Array.from(tableColumn);\n                    }\n                }\n                else if (tableColumn.length < rowCount) {\n                    tableColumn =\n                        new ArrayConstructor(rowCount);\n                    tableColumn.set(tableColumns[columnName]);\n                }\n                tableColumns[columnName] = tableColumn;\n                for (var i_1 = (rowIndex || 0), iEnd_1 = column.length; i_1 < iEnd_1; ++i_1) {\n                    tableColumn[i_1] = column[i_1];\n                }\n                rowCount = Math.max(rowCount, column.length);\n            }\n            this.applyRowCount(rowCount);\n        }\n        if (tableModifier) {\n            tableModifier.modifyColumns(table, columns, rowIndex || 0);\n        }\n        table.emit({\n            type: 'afterSetColumns',\n            columns: columns,\n            columnNames: columnNames,\n            detail: eventDetail,\n            rowIndex: rowIndex\n        });\n    };\n    /**\n     * Sets or unsets the modifier for the table.\n     *\n     * @param {Highcharts.DataModifier} [modifier]\n     * Modifier to set, or `undefined` to unset.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Promise<Highcharts.DataTable>}\n     * Resolves to this table if successful, or rejects on failure.\n     *\n     * @emits #setModifier\n     * @emits #afterSetModifier\n     */\n    DataTable.prototype.setModifier = function (modifier, eventDetail) {\n        var table = this;\n        var promise;\n        table.emit({\n            type: 'setModifier',\n            detail: eventDetail,\n            modifier: modifier,\n            modified: table.modified\n        });\n        table.modified = table;\n        table.modifier = modifier;\n        if (modifier) {\n            promise = modifier.modify(table);\n        }\n        else {\n            promise = Promise.resolve(table);\n        }\n        return promise\n            .then(function (table) {\n            table.emit({\n                type: 'afterSetModifier',\n                detail: eventDetail,\n                modifier: modifier,\n                modified: table.modified\n            });\n            return table;\n        })['catch'](function (error) {\n            table.emit({\n                type: 'setModifierError',\n                error: error,\n                modifier: modifier,\n                modified: table.modified\n            });\n            throw error;\n        });\n    };\n    /**\n     * Sets the original row indexes for the table. It is used to keep the\n     * reference to the original rows when modifying the table.\n     *\n     * @param {Array<number|undefined>} originalRowIndexes\n     * Original row indexes array.\n     *\n     * @param {boolean} omitLocalRowIndexes\n     * Whether to omit the local row indexes calculation. Defaults to `false`.\n     */\n    DataTable.prototype.setOriginalRowIndexes = function (originalRowIndexes, omitLocalRowIndexes) {\n        if (omitLocalRowIndexes === void 0) { omitLocalRowIndexes = false; }\n        this.originalRowIndexes = originalRowIndexes;\n        if (omitLocalRowIndexes) {\n            return;\n        }\n        var modifiedIndexes = this.localRowIndexes = [];\n        for (var i = 0, iEnd = originalRowIndexes.length, originalIndex = void 0; i < iEnd; ++i) {\n            originalIndex = originalRowIndexes[i];\n            if (defined(originalIndex)) {\n                modifiedIndexes[originalIndex] = i;\n            }\n        }\n    };\n    /**\n     * Sets cell values of a row. Will insert a new row, if no index was\n     * provided, or if the index is higher than the total number of table rows.\n     *\n     * Note: This function is just a simplified wrap of\n     * {@link Highcharts.DataTable#setRows}.\n     *\n     * @function Highcharts.DataTable#setRow\n     *\n     * @param {Highcharts.DataTableRow|Highcharts.DataTableRowObject} row\n     * Cell values to set.\n     *\n     * @param {number} [rowIndex]\n     * Index of the row to set. Leave `undefind` to add as a new row.\n     *\n     * @param {boolean} [insert]\n     * Whether to insert the row at the given index, or to overwrite the row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setRows\n     * @emits #afterSetRows\n     */\n    DataTable.prototype.setRow = function (row, rowIndex, insert, eventDetail) {\n        this.setRows([row], rowIndex, insert, eventDetail);\n    };\n    /**\n     * Sets cell values for multiple rows. Will insert new rows, if no index was\n     * was provided, or if the index is higher than the total number of table\n     * rows.\n     *\n     * @function Highcharts.DataTable#setRows\n     *\n     * @param {Array<(Highcharts.DataTableRow|Highcharts.DataTableRowObject)>} rows\n     * Row values to set.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first row to set. Leave `undefined` to add as new rows.\n     *\n     * @param {boolean} [insert]\n     * Whether to insert the row at the given index, or to overwrite the row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits #setRows\n     * @emits #afterSetRows\n     */\n    DataTable.prototype.setRows = function (rows, rowIndex, insert, eventDetail) {\n        if (rowIndex === void 0) { rowIndex = this.rowCount; }\n        var table = this,\n            columns = table.columns,\n            columnNames = Object.keys(columns),\n            modifier = table.modifier,\n            rowCount = rows.length;\n        table.emit({\n            type: 'setRows',\n            detail: eventDetail,\n            rowCount: rowCount,\n            rowIndex: rowIndex,\n            rows: rows\n        });\n        for (var i = 0, i2 = rowIndex, row = void 0; i < rowCount; ++i, ++i2) {\n            row = rows[i];\n            if (row === DataTable.NULL) {\n                for (var j = 0, jEnd = columnNames.length; j < jEnd; ++j) {\n                    var column = columns[columnNames[j]];\n                    if (insert) {\n                        columns[columnNames[j]] = Data_ColumnUtils.splice(column, i2, 0, true, [null]).array;\n                    }\n                    else {\n                        column[i2] = null;\n                    }\n                }\n            }\n            else if (row instanceof Array) {\n                for (var j = 0, jEnd = columnNames.length; j < jEnd; ++j) {\n                    columns[columnNames[j]][i2] = row[j];\n                }\n            }\n            else {\n                _super.prototype.setRow.call(this, row, i2, void 0, { silent: true });\n            }\n        }\n        var indexRowCount = insert ?\n                rowCount + rows.length :\n                rowIndex + rowCount;\n        if (indexRowCount > table.rowCount) {\n            table.rowCount = indexRowCount;\n            for (var i = 0, iEnd = columnNames.length; i < iEnd; ++i) {\n                var columnName = columnNames[i];\n                columns[columnName] = Data_ColumnUtils.setLength(columns[columnName], indexRowCount);\n            }\n        }\n        if (modifier) {\n            modifier.modifyRows(table, rows, rowIndex);\n        }\n        table.emit({\n            type: 'afterSetRows',\n            detail: eventDetail,\n            rowCount: rowCount,\n            rowIndex: rowIndex,\n            rows: rows\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Null state for a row record. In some cases, a row in a table may not\n     * contain any data or may be invalid. In these cases, a null state can be\n     * used to indicate that the row record is empty or invalid.\n     *\n     * @name Highcharts.DataTable.NULL\n     * @type {Highcharts.DataTableRowObject}\n     *\n     * @see {@link Highcharts.DataTable.isNull} for a null test.\n     *\n     * @example\n     * table.setRows([DataTable.NULL, DataTable.NULL], 10);\n     */\n    DataTable.NULL = {};\n    /**\n     * Semantic version string of the DataTable class.\n     * @internal\n     */\n    DataTable.version = '1.0.0';\n    return DataTable;\n}(Data_DataTableCore));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Data_DataTable = (DataTable);\n\n;// ./code/es5/es-modules/Data/Connectors/DataConnector.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Wojciech Chmiel\n *  - GÃ¸ran Slettemark\n *\n * */\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0,\n        sent: function() { if (t[0] & 1) throw t[1]; return t[1]; },\n        trys: [],\n        ops: [] },\n        f,\n        y,\n        t,\n        g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar DataConnector_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, DataConnector_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, DataConnector_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Abstract class providing an interface for managing a DataConnector.\n *\n * @private\n */\nvar DataConnector = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructor for the connector class.\n     *\n     * @param {DataConnector.UserOptions} [options]\n     * Options to use in the connector.\n     *\n     * @param {Array<DataTableOptions>} [dataTables]\n     * Multiple connector data tables options.\n     */\n    function DataConnector(options, dataTables) {\n        if (options === void 0) { options = {}; }\n        if (dataTables === void 0) { dataTables = []; }\n        /**\n         * Tables managed by this DataConnector instance.\n         */\n        this.dataTables = {};\n        /**\n         * Helper flag for detecting whether the data connector is loaded.\n         * @internal\n         */\n        this.loaded = false;\n        this.metadata = options.metadata || { columns: {} };\n        // Create a data table for each defined in the dataTables user options.\n        var dataTableIndex = 0;\n        if ((dataTables === null || dataTables === void 0 ? void 0 : dataTables.length) > 0) {\n            for (var i = 0, iEnd = dataTables.length; i < iEnd; ++i) {\n                var dataTable = dataTables[i];\n                var key = dataTable === null || dataTable === void 0 ? void 0 : dataTable.key;\n                this.dataTables[key !== null && key !== void 0 ? key : dataTableIndex] =\n                    new Data_DataTable(dataTable);\n                if (!key) {\n                    dataTableIndex++;\n                }\n            }\n            // If user options dataTables is not defined, generate a default table.\n        }\n        else {\n            this.dataTables[0] = new Data_DataTable(options.dataTable);\n        }\n    }\n    Object.defineProperty(DataConnector.prototype, \"polling\", {\n        /**\n         * Poll timer ID, if active.\n         */\n        get: function () {\n            return !!this._polling;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataConnector.prototype, \"table\", {\n        /**\n         * Gets the first data table.\n         *\n         * @return {DataTable}\n         * The data table instance.\n         */\n        get: function () {\n            return this.getTable();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Method for adding metadata for a single column.\n     *\n     * @param {string} name\n     * The name of the column to be described.\n     *\n     * @param {DataConnector.MetaColumn} columnMeta\n     * The metadata to apply to the column.\n     */\n    DataConnector.prototype.describeColumn = function (name, columnMeta) {\n        var connector = this,\n            columns = connector.metadata.columns;\n        columns[name] = DataConnector_merge(columns[name] || {}, columnMeta);\n    };\n    /**\n     * Method for applying columns meta information to the whole DataConnector.\n     *\n     * @param {Highcharts.Dictionary<DataConnector.MetaColumn>} columns\n     * Pairs of column names and MetaColumn objects.\n     */\n    DataConnector.prototype.describeColumns = function (columns) {\n        var connector = this,\n            columnNames = Object.keys(columns);\n        var columnName;\n        while (typeof (columnName = columnNames.pop()) === 'string') {\n            connector.describeColumn(columnName, columns[columnName]);\n        }\n    };\n    /**\n     * Emits an event on the connector to all registered callbacks of this\n     * event.\n     *\n     * @param {DataConnector.Event} [e]\n     * Event object containing additional event information.\n     */\n    DataConnector.prototype.emit = function (e) {\n        DataConnector_fireEvent(this, e.type, e);\n    };\n    /**\n     * Returns the order of columns.\n     *\n     * @param {boolean} [usePresentationState]\n     * Whether to use the column order of the presentation state of the table.\n     *\n     * @return {Array<string>|undefined}\n     * Order of columns.\n     */\n    DataConnector.prototype.getColumnOrder = function (\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    usePresentationState) {\n        var connector = this,\n            columns = connector.metadata.columns,\n            names = Object.keys(columns || {});\n        if (names.length) {\n            return names.sort(function (a, b) { return (pick(columns[a].index, 0) - pick(columns[b].index, 0)); });\n        }\n    };\n    /**\n     * Returns a single data table instance based on the provided key.\n     * Otherwise, returns the first data table.\n     *\n     * @param {string} [key]\n     * The data table key.\n     *\n     * @return {DataTable}\n     * The data table instance.\n     */\n    DataConnector.prototype.getTable = function (key) {\n        if (key) {\n            return this.dataTables[key];\n        }\n        return Object.values(this.dataTables)[0];\n    };\n    /**\n     * Retrieves the columns of the dataTable,\n     * applies column order from meta.\n     *\n     * @param {boolean} [usePresentationOrder]\n     * Whether to use the column order of the presentation state of the table.\n     *\n     * @return {Highcharts.DataTableColumnCollection}\n     * An object with the properties `columnNames` and `columnValues`\n     */\n    DataConnector.prototype.getSortedColumns = function (usePresentationOrder) {\n        return this.table.getColumns(this.getColumnOrder(usePresentationOrder));\n    };\n    /**\n     * The default load method, which fires the `afterLoad` event\n     *\n     * @return {Promise<DataConnector>}\n     * The loaded connector.\n     *\n     * @emits DataConnector#afterLoad\n     */\n    DataConnector.prototype.load = function () {\n        DataConnector_fireEvent(this, 'afterLoad', { table: this.table });\n        return Promise.resolve(this);\n    };\n    /**\n     * Registers a callback for a specific connector event.\n     *\n     * @param {string} type\n     * Event type as a string.\n     *\n     * @param {DataEventEmitter.Callback} callback\n     * Function to register for the connector callback.\n     *\n     * @return {Function}\n     * Function to unregister callback from the connector event.\n     */\n    DataConnector.prototype.on = function (type, callback) {\n        return DataConnector_addEvent(this, type, callback);\n    };\n    /**\n     * The default save method, which fires the `afterSave` event.\n     *\n     * @return {Promise<DataConnector>}\n     * The saved connector.\n     *\n     * @emits DataConnector#afterSave\n     * @emits DataConnector#saveError\n     */\n    DataConnector.prototype.save = function () {\n        DataConnector_fireEvent(this, 'saveError', { table: this.table });\n        return Promise.reject(new Error('Not implemented'));\n    };\n    /**\n     * Sets the index and order of columns.\n     *\n     * @param {Array<string>} columnNames\n     * Order of columns.\n     */\n    DataConnector.prototype.setColumnOrder = function (columnNames) {\n        var connector = this;\n        for (var i = 0, iEnd = columnNames.length; i < iEnd; ++i) {\n            connector.describeColumn(columnNames[i], { index: i });\n        }\n    };\n    DataConnector.prototype.setModifierOptions = function (modifierOptions, tablesOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_1,\n                _i,\n                _a,\n                _b,\n                key,\n                table;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _loop_1 = function (key, table) {\n                            var tableOptions,\n                                mergedModifierOptions,\n                                ModifierClass;\n                            return __generator(this, function (_d) {\n                                switch (_d.label) {\n                                    case 0:\n                                        tableOptions = tablesOptions === null || tablesOptions === void 0 ? void 0 : tablesOptions.find(function (dataTable) { return dataTable.key === key; });\n                                        mergedModifierOptions = DataConnector_merge(tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.dataModifier, modifierOptions);\n                                        ModifierClass = (mergedModifierOptions &&\n                                            Modifiers_DataModifier.types[mergedModifierOptions.type]);\n                                        return [4 /*yield*/, table.setModifier(ModifierClass ?\n                                                new ModifierClass(mergedModifierOptions) :\n                                                void 0)];\n                                    case 1:\n                                        _d.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        _i = 0, _a = Object.entries(this.dataTables);\n                        _c.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        _b = _a[_i], key = _b[0], table = _b[1];\n                        return [5 /*yield**/, _loop_1(key, table)];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Starts polling new data after the specific time span in milliseconds.\n     *\n     * @param {number} refreshTime\n     * Refresh time in milliseconds between polls.\n     */\n    DataConnector.prototype.startPolling = function (refreshTime) {\n        if (refreshTime === void 0) { refreshTime = 1000; }\n        var connector = this;\n        var tables = connector.dataTables;\n        // Assign a new abort controller.\n        this.pollingController = new AbortController();\n        // Clear the polling timeout.\n        window.clearTimeout(connector._polling);\n        connector._polling = window.setTimeout(function () { return connector\n            .load()['catch'](function (error) { return connector.emit({\n            type: 'loadError',\n            error: error,\n            tables: tables\n        }); })\n            .then(function () {\n            if (connector._polling) {\n                connector.startPolling(refreshTime);\n            }\n        }); }, refreshTime);\n    };\n    /**\n     * Stops polling data. Shouldn't be performed if polling is already stopped.\n     */\n    DataConnector.prototype.stopPolling = function () {\n        var _a;\n        var connector = this;\n        if (!connector.polling) {\n            return;\n        }\n        // Abort the existing request.\n        (_a = connector === null || connector === void 0 ? void 0 : connector.pollingController) === null || _a === void 0 ? void 0 : _a.abort();\n        // Clear the polling timeout.\n        window.clearTimeout(connector._polling);\n        delete connector._polling;\n    };\n    /**\n     * Retrieves metadata from a single column.\n     *\n     * @param {string} name\n     * The identifier for the column that should be described\n     *\n     * @return {DataConnector.MetaColumn|undefined}\n     * Returns a MetaColumn object if found.\n     */\n    DataConnector.prototype.whatIs = function (name) {\n        return this.metadata.columns[name];\n    };\n    /**\n     * Iterates over the dataTables and initiates the corresponding converters.\n     * Updates the dataTables and assigns the first converter.\n     *\n     * @param {T}[data]\n     * Data specific to the corresponding converter.\n     *\n     * @param {DataConnector.CreateConverterFunction}[createConverter]\n     * Creates a specific converter combining the dataTable options.\n     *\n     * @param {DataConnector.ParseDataFunction<T>}[parseData]\n     * Runs the converter parse method with the specific data type.\n     */\n    DataConnector.prototype.initConverters = function (data, createConverter, parseData) {\n        var index = 0;\n        for (var _i = 0, _a = Object.entries(this.dataTables); _i < _a.length; _i++) {\n            var _b = _a[_i],\n                key = _b[0],\n                table = _b[1];\n            // Create a proper converter and parse its data.\n            var converter = createConverter(key,\n                table);\n            parseData(converter, data);\n            // Update the dataTable.\n            table.deleteColumns();\n            table.setColumns(converter.getTable().getColumns());\n            // Assign the first converter.\n            if (index === 0) {\n                this.converter = converter;\n            }\n            index++;\n        }\n    };\n    return DataConnector;\n}());\n/* *\n *\n *  Class Namespace\n *\n * */\n(function (DataConnector) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Registry as a record object with connector names and their class.\n     */\n    DataConnector.types = {};\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds a connector class to the registry. The connector has to provide the\n     * `DataConnector.options` property and the `DataConnector.load` method to\n     * modify the table.\n     *\n     * @private\n     *\n     * @param {string} key\n     * Registry key of the connector class.\n     *\n     * @param {DataConnectorType} DataConnectorClass\n     * Connector class (aka class constructor) to register.\n     *\n     * @return {boolean}\n     * Returns true, if the registration was successful. False is returned, if\n     * their is already a connector registered with this key.\n     */\n    function registerType(key, DataConnectorClass) {\n        return (!!key &&\n            !DataConnector.types[key] &&\n            !!(DataConnector.types[key] = DataConnectorClass));\n    }\n    DataConnector.registerType = registerType;\n})(DataConnector || (DataConnector = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Connectors_DataConnector = (DataConnector);\n\n;// ./code/es5/es-modules/Data/Converters/DataConverter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Sebastian Bochan\n *  - GÃ¸ran Slettemark\n *  - Torstein HÃ¸nsi\n *  - Wojciech Chmiel\n *  - Jomar HÃ¸nsi\n *\n * */\n\n\n\nvar DataConverter_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, DataConverter_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, DataConverter_isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, DataConverter_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Base class providing an interface and basic methods for a DataConverter\n *\n * @private\n */\nvar DataConverter = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the DataConverter.\n     *\n     * @param {DataConverter.UserOptions} [options]\n     * Options for the DataConverter.\n     */\n    function DataConverter(options) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        /**\n         * A collection of available date formats.\n         */\n        this.dateFormats = {\n            'YYYY/mm/dd': {\n                regex: /^(\\d{4})([\\-\\.\\/])(\\d{1,2})\\2(\\d{1,2})$/,\n                parser: function (match) {\n                    return (match ?\n                        Date.UTC(+match[1], match[3] - 1, +match[4]) :\n                        NaN);\n                }\n            },\n            'dd/mm/YYYY': {\n                regex: /^(\\d{1,2})([\\-\\.\\/])(\\d{1,2})\\2(\\d{4})$/,\n                parser: function (match) {\n                    return (match ?\n                        Date.UTC(+match[4], match[3] - 1, +match[1]) :\n                        NaN);\n                },\n                alternative: 'mm/dd/YYYY' // Different format with the same regex\n            },\n            'mm/dd/YYYY': {\n                regex: /^(\\d{1,2})([\\-\\.\\/])(\\d{1,2})\\2(\\d{4})$/,\n                parser: function (match) {\n                    return (match ?\n                        Date.UTC(+match[4], match[1] - 1, +match[3]) :\n                        NaN);\n                }\n            },\n            'dd/mm/YY': {\n                regex: /^(\\d{1,2})([\\-\\.\\/])(\\d{1,2})\\2(\\d{2})$/,\n                parser: function (match) {\n                    var d = new Date();\n                    if (!match) {\n                        return NaN;\n                    }\n                    var year = +match[4];\n                    if (year > (d.getFullYear() - 2000)) {\n                        year += 1900;\n                    }\n                    else {\n                        year += 2000;\n                    }\n                    return Date.UTC(year, match[3] - 1, +match[1]);\n                },\n                alternative: 'mm/dd/YY' // Different format with the same regex\n            },\n            'mm/dd/YY': {\n                regex: /^(\\d{1,2})([\\-\\.\\/])(\\d{1,2})\\2(\\d{2})$/,\n                parser: function (match) {\n                    return (match ?\n                        Date.UTC(+match[4] + 2000, match[1] - 1, +match[3]) :\n                        NaN);\n                }\n            }\n        };\n        var mergedOptions = DataConverter_merge(DataConverter.defaultOptions,\n            options);\n        var regExpPoint = mergedOptions.decimalPoint;\n        if (regExpPoint === '.' || regExpPoint === ',') {\n            regExpPoint = regExpPoint === '.' ? '\\\\.' : ',';\n            this.decimalRegExp =\n                new RegExp('^(-?[0-9]+)' + regExpPoint + '([0-9]+)$');\n        }\n        this.options = mergedOptions;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Converts a value to a boolean.\n     *\n     * @param {DataConverter.Type} value\n     * Value to convert.\n     *\n     * @return {boolean}\n     * Converted value as a boolean.\n     */\n    DataConverter.prototype.asBoolean = function (value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return value !== '' && value !== '0' && value !== 'false';\n        }\n        return !!this.asNumber(value);\n    };\n    /**\n     * Converts a value to a Date.\n     *\n     * @param {DataConverter.Type} value\n     * Value to convert.\n     *\n     * @return {globalThis.Date}\n     * Converted value as a Date.\n     */\n    DataConverter.prototype.asDate = function (value) {\n        var timestamp;\n        if (typeof value === 'string') {\n            timestamp = this.parseDate(value);\n        }\n        else if (typeof value === 'number') {\n            timestamp = value;\n        }\n        else if (value instanceof Date) {\n            return value;\n        }\n        else {\n            timestamp = this.parseDate(this.asString(value));\n        }\n        return new Date(timestamp);\n    };\n    /**\n     * Casts a string value to it's guessed type\n     *\n     * @param {*} value\n     * The value to examine.\n     *\n     * @return {number|string|Date}\n     * The converted value.\n     */\n    DataConverter.prototype.asGuessedType = function (value) {\n        var converter = this,\n            typeMap = {\n                'number': converter.asNumber,\n                'Date': converter.asDate,\n                'string': converter.asString\n            };\n        return typeMap[converter.guessType(value)].call(converter, value);\n    };\n    /**\n     * Converts a value to a number.\n     *\n     * @param {DataConverter.Type} value\n     * Value to convert.\n     *\n     * @return {number}\n     * Converted value as a number.\n     */\n    DataConverter.prototype.asNumber = function (value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'boolean') {\n            return value ? 1 : 0;\n        }\n        if (typeof value === 'string') {\n            var decimalRegex = this.decimalRegExp;\n            if (value.indexOf(' ') > -1) {\n                value = value.replace(/\\s+/g, '');\n            }\n            if (decimalRegex) {\n                if (!decimalRegex.test(value)) {\n                    return NaN;\n                }\n                value = value.replace(decimalRegex, '$1.$2');\n            }\n            return parseFloat(value);\n        }\n        if (value instanceof Date) {\n            return value.getDate();\n        }\n        if (value) {\n            return value.getRowCount();\n        }\n        return NaN;\n    };\n    /**\n     * Converts a value to a string.\n     *\n     * @param {DataConverter.Type} value\n     * Value to convert.\n     *\n     * @return {string}\n     * Converted value as a string.\n     */\n    DataConverter.prototype.asString = function (value) {\n        return '' + value;\n    };\n    /**\n     * Tries to guess the date format\n     *  - Check if either month candidate exceeds 12\n     *  - Check if year is missing (use current year)\n     *  - Check if a shortened year format is used (e.g. 1/1/99)\n     *  - If no guess can be made, the user must be prompted\n     * data is the data to deduce a format based on\n     * @private\n     *\n     * @param {Array<string>} data\n     * Data to check the format.\n     *\n     * @param {number} limit\n     * Max data to check the format.\n     *\n     * @param {boolean} save\n     * Whether to save the date format in the converter options.\n     */\n    DataConverter.prototype.deduceDateFormat = function (data, limit, save) {\n        var parser = this,\n            stable = [],\n            max = [];\n        var format = 'YYYY/mm/dd', thing, guessedFormat = [], i = 0, madeDeduction = false, \n            /// candidates = {},\n            elem, j;\n        if (!limit || limit > data.length) {\n            limit = data.length;\n        }\n        for (; i < limit; i++) {\n            if (typeof data[i] !== 'undefined' &&\n                data[i] && data[i].length) {\n                thing = data[i]\n                    .trim()\n                    .replace(/[\\-\\.\\/]/g, ' ')\n                    .split(' ');\n                guessedFormat = [\n                    '',\n                    '',\n                    ''\n                ];\n                for (j = 0; j < thing.length; j++) {\n                    if (j < guessedFormat.length) {\n                        elem = parseInt(thing[j], 10);\n                        if (elem) {\n                            max[j] = (!max[j] || max[j] < elem) ? elem : max[j];\n                            if (typeof stable[j] !== 'undefined') {\n                                if (stable[j] !== elem) {\n                                    stable[j] = false;\n                                }\n                            }\n                            else {\n                                stable[j] = elem;\n                            }\n                            if (elem > 31) {\n                                if (elem < 100) {\n                                    guessedFormat[j] = 'YY';\n                                }\n                                else {\n                                    guessedFormat[j] = 'YYYY';\n                                }\n                                /// madeDeduction = true;\n                            }\n                            else if (elem > 12 &&\n                                elem <= 31) {\n                                guessedFormat[j] = 'dd';\n                                madeDeduction = true;\n                            }\n                            else if (!guessedFormat[j].length) {\n                                guessedFormat[j] = 'mm';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (madeDeduction) {\n            // This handles a few edge cases with hard to guess dates\n            for (j = 0; j < stable.length; j++) {\n                if (stable[j] !== false) {\n                    if (max[j] > 12 &&\n                        guessedFormat[j] !== 'YY' &&\n                        guessedFormat[j] !== 'YYYY') {\n                        guessedFormat[j] = 'YY';\n                    }\n                }\n                else if (max[j] > 12 && guessedFormat[j] === 'mm') {\n                    guessedFormat[j] = 'dd';\n                }\n            }\n            // If the middle one is dd, and the last one is dd,\n            // the last should likely be year.\n            if (guessedFormat.length === 3 &&\n                guessedFormat[1] === 'dd' &&\n                guessedFormat[2] === 'dd') {\n                guessedFormat[2] = 'YY';\n            }\n            format = guessedFormat.join('/');\n            // If the caculated format is not valid, we need to present an\n            // error.\n        }\n        // Save the deduced format in the converter options.\n        if (save) {\n            parser.options.dateFormat = format;\n        }\n        return format;\n    };\n    /**\n     * Emits an event on the DataConverter instance.\n     *\n     * @param {DataConverter.Event} [e]\n     * Event object containing additional event data\n     */\n    DataConverter.prototype.emit = function (e) {\n        DataConverter_fireEvent(this, e.type, e);\n    };\n    /**\n     * Initiates the data exporting. Should emit `exportError` on failure.\n     *\n     * @param {DataConnector} connector\n     * Connector to export from.\n     *\n     * @param {DataConverter.Options} [options]\n     * Options for the export.\n     */\n    DataConverter.prototype.export = function (\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    connector, options\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ) {\n        this.emit({\n            type: 'exportError',\n            columns: [],\n            headers: []\n        });\n        throw new Error('Not implemented');\n    };\n    /**\n     * Getter for the data table.\n     *\n     * @return {DataTable}\n     * Table of parsed data.\n     */\n    DataConverter.prototype.getTable = function () {\n        throw new Error('Not implemented');\n    };\n    /**\n     * Guesses the potential type of a string value for parsing CSV etc.\n     *\n     * @param {*} value\n     * The value to examine.\n     *\n     * @return {'number'|'string'|'Date'}\n     * Type string, either `string`, `Date`, or `number`.\n     */\n    DataConverter.prototype.guessType = function (value) {\n        var converter = this;\n        var result = 'string';\n        if (typeof value === 'string') {\n            var trimedValue = converter.trim(\"\".concat(value)),\n                decimalRegExp = converter.decimalRegExp;\n            var innerTrimedValue = converter.trim(trimedValue,\n                true);\n            if (decimalRegExp) {\n                innerTrimedValue = (decimalRegExp.test(innerTrimedValue) ?\n                    innerTrimedValue.replace(decimalRegExp, '$1.$2') :\n                    '');\n            }\n            var floatValue = parseFloat(innerTrimedValue);\n            if (+innerTrimedValue === floatValue) {\n                // String is numeric\n                value = floatValue;\n            }\n            else {\n                // Determine if a date string\n                var dateValue = converter.parseDate(value);\n                result = DataConverter_isNumber(dateValue) ? 'Date' : 'string';\n            }\n        }\n        if (typeof value === 'number') {\n            // Greater than milliseconds in a year assumed timestamp\n            result = value > 365 * 24 * 3600 * 1000 ? 'Date' : 'number';\n        }\n        return result;\n    };\n    /**\n     * Registers a callback for a specific event.\n     *\n     * @param {string} type\n     * Event type as a string.\n     *\n     * @param {DataEventEmitter.Callback} callback\n     * Function to register for an modifier callback.\n     *\n     * @return {Function}\n     * Function to unregister callback from the modifier event.\n     */\n    DataConverter.prototype.on = function (type, callback) {\n        return DataConverter_addEvent(this, type, callback);\n    };\n    /**\n     * Initiates the data parsing. Should emit `parseError` on failure.\n     *\n     * @param {DataConverter.UserOptions} options\n     * Options of the DataConverter.\n     */\n    DataConverter.prototype.parse = function (\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    options) {\n        this.emit({\n            type: 'parseError',\n            columns: [],\n            headers: []\n        });\n        throw new Error('Not implemented');\n    };\n    /**\n     * Parse a date and return it as a number.\n     *\n     * @param {string} value\n     * Value to parse.\n     *\n     * @param {string} dateFormatProp\n     * Which of the predefined date formats\n     * to use to parse date values.\n     */\n    DataConverter.prototype.parseDate = function (value, dateFormatProp) {\n        var converter = this,\n            options = converter.options;\n        var dateFormat = dateFormatProp || options.dateFormat,\n            result = NaN,\n            key,\n            format,\n            match;\n        if (options.parseDate) {\n            result = options.parseDate(value);\n        }\n        else {\n            // Auto-detect the date format the first time\n            if (!dateFormat) {\n                for (key in converter.dateFormats) { // eslint-disable-line guard-for-in\n                    format = converter.dateFormats[key];\n                    match = value.match(format.regex);\n                    if (match) {\n                        // `converter.options.dateFormat` = dateFormat = key;\n                        dateFormat = key;\n                        // `converter.options.alternativeFormat` =\n                        // format.alternative || '';\n                        result = format.parser(match);\n                        break;\n                    }\n                }\n                // Next time, use the one previously found\n            }\n            else {\n                format = converter.dateFormats[dateFormat];\n                if (!format) {\n                    // The selected format is invalid\n                    format = converter.dateFormats['YYYY/mm/dd'];\n                }\n                match = value.match(format.regex);\n                if (match) {\n                    result = format.parser(match);\n                }\n            }\n            // Fall back to Date.parse\n            if (!match) {\n                match = Date.parse(value);\n                // External tools like Date.js and MooTools extend Date object\n                // and returns a date.\n                if (typeof match === 'object' &&\n                    match !== null &&\n                    match.getTime) {\n                    result = (match.getTime() -\n                        match.getTimezoneOffset() *\n                            60000);\n                    // Timestamp\n                }\n                else if (DataConverter_isNumber(match)) {\n                    result = match - (new Date(match)).getTimezoneOffset() * 60000;\n                    if ( // Reset dates without year in Chrome\n                    value.indexOf('2001') === -1 &&\n                        (new Date(result)).getFullYear() === 2001) {\n                        result = NaN;\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * Trim a string from whitespaces.\n     *\n     * @param {string} str\n     * String to trim.\n     *\n     * @param {boolean} [inside=false]\n     * Remove all spaces between numbers.\n     *\n     * @return {string}\n     * Trimed string\n     */\n    DataConverter.prototype.trim = function (str, inside) {\n        if (typeof str === 'string') {\n            str = str.replace(/^\\s+|\\s+$/g, '');\n            // Clear white space insdie the string, like thousands separators\n            if (inside && /^[\\d\\s]+$/.test(str)) {\n                str = str.replace(/\\s/g, '');\n            }\n        }\n        return str;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options\n     */\n    DataConverter.defaultOptions = {\n        dateFormat: '',\n        alternativeFormat: '',\n        startColumn: 0,\n        endColumn: Number.MAX_VALUE,\n        startRow: 0,\n        endRow: Number.MAX_VALUE,\n        firstRowAsNames: true,\n        switchRowsAndColumns: false\n    };\n    return DataConverter;\n}());\n/* *\n *\n *  Class Namespace\n *\n * */\n/**\n * Additionally provided types for events and conversion.\n */\n(function (DataConverter) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    /**\n     * Registry as a record object with connector names and their class.\n     */\n    DataConverter.types = {};\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds a converter class to the registry.\n     *\n     * @private\n     *\n     * @param {string} key\n     * Registry key of the converter class.\n     *\n     * @param {DataConverterTypes} DataConverterClass\n     * Connector class (aka class constructor) to register.\n     *\n     * @return {boolean}\n     * Returns true, if the registration was successful. False is returned, if\n     * their is already a converter registered with this key.\n     */\n    function registerType(key, DataConverterClass) {\n        return (!!key &&\n            !DataConverter.types[key] &&\n            !!(DataConverter.types[key] = DataConverterClass));\n    }\n    DataConverter.registerType = registerType;\n    /**\n     * Converts an array of columns to a table instance. Second dimension of the\n     * array are the row cells.\n     *\n     * @param {Array<DataTable.Column>} [columns]\n     * Array to convert.\n     *\n     * @param {Array<string>} [headers]\n     * Column names to use.\n     *\n     * @return {DataTable}\n     * Table instance from the arrays.\n     */\n    function getTableFromColumns(columns, headers) {\n        if (columns === void 0) { columns = []; }\n        if (headers === void 0) { headers = []; }\n        var table = new Data_DataTable();\n        for (var i = 0, iEnd = Math.max(headers.length, columns.length); i < iEnd; ++i) {\n            table.setColumn(headers[i] || \"\".concat(i), columns[i]);\n        }\n        return table;\n    }\n    DataConverter.getTableFromColumns = getTableFromColumns;\n})(DataConverter || (DataConverter = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Converters_DataConverter = (DataConverter);\n\n;// ./code/es5/es-modules/Data/DataCursor.js\n/* *\n *\n *  (c) 2020-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * This class manages state cursors pointing on {@link Data.DataTable}. It\n * creates a relation between states of the user interface and the table cells,\n * columns, or rows.\n *\n * @class\n * @name Data.DataCursor\n */\nvar DataCursor = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function DataCursor(stateMap) {\n        if (stateMap === void 0) { stateMap = {}; }\n        this.emittingRegister = [];\n        this.listenerMap = {};\n        this.stateMap = stateMap;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * This function registers a listener for a specific state and table.\n     *\n     * @example\n     * ```TypeScript\n     * dataCursor.addListener(myTable.id, 'hover', (e: DataCursor.Event) => {\n     *     if (e.cursor.type === 'position') {\n     *         console.log(`Hover over row #${e.cursor.row}.`);\n     *     }\n     * });\n     * ```\n     *\n     * @function #addListener\n     *\n     * @param {Data.DataCursor.TableId} tableId\n     * The ID of the table to listen to.\n     *\n     * @param {Data.DataCursor.State} state\n     * The state on the table to listen to.\n     *\n     * @param {Data.DataCursor.Listener} listener\n     * The listener to register.\n     *\n     * @return {Data.DataCursor}\n     * Returns the DataCursor instance for a call chain.\n     */\n    DataCursor.prototype.addListener = function (tableId, state, listener) {\n        var listenerMap = this.listenerMap[tableId] = (this.listenerMap[tableId] ||\n                {});\n        var listeners = listenerMap[state] = (listenerMap[state] ||\n                []);\n        listeners.push(listener);\n        return this;\n    };\n    /**\n     * @private\n     */\n    DataCursor.prototype.buildEmittingTag = function (e) {\n        return (e.cursor.type === 'position' ?\n            [\n                e.table.id,\n                e.cursor.column,\n                e.cursor.row,\n                e.cursor.state,\n                e.cursor.type\n            ] :\n            [\n                e.table.id,\n                e.cursor.columns,\n                e.cursor.firstRow,\n                e.cursor.lastRow,\n                e.cursor.state,\n                e.cursor.type\n            ]).join('\\0');\n    };\n    /**\n     * This function emits a state cursor related to a table. It will provide\n     * lasting state cursors of the table to listeners.\n     *\n     * @example\n     * ```ts\n     * dataCursor.emit(myTable, {\n     *     type: 'position',\n     *     column: 'city',\n     *     row: 4,\n     *     state: 'hover',\n     * });\n     * ```\n     *\n     * @param {Data.DataTable} table\n     * The related table of the cursor.\n     *\n     * @param {Data.DataCursor.Type} cursor\n     * The state cursor to emit.\n     *\n     * @param {Event} [event]\n     * Optional event information from a related source.\n     *\n     * @param {boolean} [lasting]\n     * Whether this state cursor should be kept until it is cleared with\n     * {@link DataCursor#remitCursor}.\n     *\n     * @return {Data.DataCursor}\n     * Returns the DataCursor instance for a call chain.\n     */\n    DataCursor.prototype.emitCursor = function (table, cursor, event, lasting) {\n        var _a;\n        var tableId = table.id,\n            state = cursor.state,\n            listeners = (this.listenerMap[tableId] &&\n                this.listenerMap[tableId][state]);\n        if (listeners) {\n            var stateMap = this.stateMap[tableId] = ((_a = this.stateMap[tableId]) !== null && _a !== void 0 ? _a : {});\n            var cursors = stateMap[cursor.state] || [];\n            if (lasting) {\n                if (!cursors.length) {\n                    stateMap[cursor.state] = cursors;\n                }\n                if (DataCursor.getIndex(cursor, cursors) === -1) {\n                    cursors.push(cursor);\n                }\n            }\n            var e = {\n                    cursor: cursor,\n                    cursors: cursors,\n                    table: table\n                };\n            if (event) {\n                e.event = event;\n            }\n            var emittingRegister = this.emittingRegister,\n                emittingTag = this.buildEmittingTag(e);\n            if (emittingRegister.indexOf(emittingTag) >= 0) {\n                // Break call stack loops\n                return this;\n            }\n            try {\n                this.emittingRegister.push(emittingTag);\n                for (var i = 0, iEnd = listeners.length; i < iEnd; ++i) {\n                    listeners[i].call(this, e);\n                }\n            }\n            finally {\n                var index = this.emittingRegister.indexOf(emittingTag);\n                if (index >= 0) {\n                    this.emittingRegister.splice(index, 1);\n                }\n            }\n        }\n        return this;\n    };\n    /**\n     * Removes a lasting state cursor.\n     *\n     * @function #remitCursor\n     *\n     * @param {string} tableId\n     * ID of the related cursor table.\n     *\n     * @param {Data.DataCursor.Type} cursor\n     * Copy or reference of the cursor.\n     *\n     * @return {Data.DataCursor}\n     * Returns the DataCursor instance for a call chain.\n     */\n    DataCursor.prototype.remitCursor = function (tableId, cursor) {\n        var cursors = (this.stateMap[tableId] &&\n                this.stateMap[tableId][cursor.state]);\n        if (cursors) {\n            var index = DataCursor.getIndex(cursor,\n                cursors);\n            if (index >= 0) {\n                cursors.splice(index, 1);\n            }\n        }\n        return this;\n    };\n    /**\n     * This function removes a listener.\n     *\n     * @function #addListener\n     *\n     * @param {Data.DataCursor.TableId} tableId\n     * The ID of the table the listener is connected to.\n     *\n     * @param {Data.DataCursor.State} state\n     * The state on the table the listener is listening to.\n     *\n     * @param {Data.DataCursor.Listener} listener\n     * The listener to deregister.\n     *\n     * @return {Data.DataCursor}\n     * Returns the DataCursor instance for a call chain.\n     */\n    DataCursor.prototype.removeListener = function (tableId, state, listener) {\n        var listeners = (this.listenerMap[tableId] &&\n                this.listenerMap[tableId][state]);\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index >= 0) {\n                listeners.splice(index, 1);\n            }\n        }\n        return this;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Semantic version string of the DataCursor class.\n     * @internal\n     */\n    DataCursor.version = '1.0.0';\n    return DataCursor;\n}());\n/* *\n *\n *  Class Namespace\n *\n * */\n/**\n * @class Data.DataCursor\n */\n(function (DataCursor) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Finds the index of an cursor in an array.\n     * @private\n     */\n    function getIndex(needle, cursors) {\n        if (needle.type === 'position') {\n            for (var cursor = void 0, i = 0, iEnd = cursors.length; i < iEnd; ++i) {\n                cursor = cursors[i];\n                if (cursor.type === 'position' &&\n                    cursor.state === needle.state &&\n                    cursor.column === needle.column &&\n                    cursor.row === needle.row) {\n                    return i;\n                }\n            }\n        }\n        else {\n            var columnNeedle = JSON.stringify(needle.columns);\n            for (var cursor = void 0, i = 0, iEnd = cursors.length; i < iEnd; ++i) {\n                cursor = cursors[i];\n                if (cursor.type === 'range' &&\n                    cursor.state === needle.state &&\n                    cursor.firstRow === needle.firstRow &&\n                    cursor.lastRow === needle.lastRow &&\n                    JSON.stringify(cursor.columns) === columnNeedle) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    DataCursor.getIndex = getIndex;\n    /**\n     * Checks whether two cursor share the same properties.\n     * @private\n     */\n    function isEqual(cursorA, cursorB) {\n        if (cursorA.type === 'position' && cursorB.type === 'position') {\n            return (cursorA.column === cursorB.column &&\n                cursorA.row === cursorB.row &&\n                cursorA.state === cursorB.state);\n        }\n        if (cursorA.type === 'range' && cursorB.type === 'range') {\n            return (cursorA.firstRow === cursorB.firstRow &&\n                cursorA.lastRow === cursorB.lastRow &&\n                (JSON.stringify(cursorA.columns) ===\n                    JSON.stringify(cursorB.columns)));\n        }\n        return false;\n    }\n    DataCursor.isEqual = isEqual;\n    /**\n     * Checks whether a cursor is in a range.\n     * @private\n     */\n    function isInRange(needle, range) {\n        if (range.type === 'position') {\n            range = toRange(range);\n        }\n        if (needle.type === 'position') {\n            needle = toRange(needle, range);\n        }\n        var needleColumns = needle.columns;\n        var rangeColumns = range.columns;\n        return (needle.firstRow >= range.firstRow &&\n            needle.lastRow <= range.lastRow &&\n            (!needleColumns ||\n                !rangeColumns ||\n                needleColumns.every(function (column) { return rangeColumns.indexOf(column) >= 0; })));\n    }\n    DataCursor.isInRange = isInRange;\n    /**\n     * @private\n     */\n    function toPositions(cursor) {\n        if (cursor.type === 'position') {\n            return [cursor];\n        }\n        var columns = (cursor.columns || []);\n        var positions = [];\n        var state = cursor.state;\n        for (var row = cursor.firstRow, rowEnd = cursor.lastRow; row < rowEnd; ++row) {\n            if (!columns.length) {\n                positions.push({\n                    type: 'position',\n                    row: row,\n                    state: state\n                });\n                continue;\n            }\n            for (var column = 0, columnEnd = columns.length; column < columnEnd; ++column) {\n                positions.push({\n                    type: 'position',\n                    column: columns[column],\n                    row: row,\n                    state: state\n                });\n            }\n        }\n        return positions;\n    }\n    DataCursor.toPositions = toPositions;\n    /**\n     * @private\n     */\n    function toRange(cursor, defaultRange) {\n        var _a,\n            _b,\n            _c,\n            _d;\n        if (cursor.type === 'range') {\n            return cursor;\n        }\n        var range = {\n                type: 'range',\n                firstRow: ((_b = (_a = cursor.row) !== null && _a !== void 0 ? _a : (defaultRange && defaultRange.firstRow)) !== null && _b !== void 0 ? _b : 0),\n                lastRow: ((_d = (_c = cursor.row) !== null && _c !== void 0 ? _c : (defaultRange && defaultRange.lastRow)) !== null && _d !== void 0 ? _d : Number.MAX_VALUE),\n                state: cursor.state\n            };\n        if (typeof cursor.column !== 'undefined') {\n            range.columns = [cursor.column];\n        }\n        return range;\n    }\n    DataCursor.toRange = toRange;\n})(DataCursor || (DataCursor = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Data_DataCursor = (DataCursor);\n\n;// ./code/es5/es-modules/Data/DataPoolDefaults.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\nvar DataPoolDefaults = {\n    connectors: []\n};\n/* *\n *\n *  Export Defaults\n *\n * */\n/* harmony default export */ var Data_DataPoolDefaults = (DataPoolDefaults);\n\n;// ./code/es5/es-modules/Data/DataPool.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * Data pool to load connectors on-demand.\n *\n * @class\n * @name Data.DataPool\n *\n * @param {Data.DataPoolOptions} options\n * Pool options with all connectors.\n */\nvar DataPool = /** @class */ (function () {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function DataPool(options) {\n        if (options === void 0) { options = Data_DataPoolDefaults; }\n        options.connectors = (options.connectors || []);\n        this.connectors = {};\n        this.options = options;\n        this.waiting = {};\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Emits an event on this data pool to all registered callbacks of the given\n     * event.\n     * @private\n     *\n     * @param {DataTable.Event} e\n     * Event object with event information.\n     */\n    DataPool.prototype.emit = function (e) {\n        highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().fireEvent(this, e.type, e);\n    };\n    /**\n     * Loads the connector.\n     *\n     * @function Data.DataPool#getConnector\n     *\n     * @param {string} connectorId\n     * ID of the connector.\n     *\n     * @return {Promise<Data.DataConnectorType>}\n     * Returns the connector.\n     */\n    DataPool.prototype.getConnector = function (connectorId) {\n        var _this = this;\n        var connector = this.connectors[connectorId];\n        // Already loaded\n        if (connector === null || connector === void 0 ? void 0 : connector.loaded) {\n            return Promise.resolve(connector);\n        }\n        var waitingList = this.waiting[connectorId];\n        // Start loading\n        if (!waitingList) {\n            waitingList = this.waiting[connectorId] = [];\n            var connectorOptions = this.getConnectorOptions(connectorId);\n            if (!connectorOptions) {\n                throw new Error(\"Connector '\".concat(connectorId, \"' not found.\"));\n            }\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this\n                .loadConnector(connectorOptions)\n                .then(function (connector) {\n                delete _this.waiting[connectorId];\n                for (var i = 0, iEnd = waitingList.length; i < iEnd; ++i) {\n                    waitingList[i][0](connector);\n                }\n            })['catch'](function (error) {\n                delete _this.waiting[connectorId];\n                for (var i = 0, iEnd = waitingList.length; i < iEnd; ++i) {\n                    waitingList[i][1](error);\n                }\n            });\n        }\n        // Add request to waiting list\n        return new Promise(function (resolve, reject) {\n            waitingList.push([resolve, reject]);\n        });\n    };\n    /**\n     * Returns the IDs of all connectors.\n     *\n     * @private\n     *\n     * @return {Array<string>}\n     * Names of all connectors.\n     */\n    DataPool.prototype.getConnectorIds = function () {\n        var connectors = this.options.connectors,\n            connectorIds = [];\n        for (var i = 0, iEnd = connectors.length; i < iEnd; ++i) {\n            connectorIds.push(connectors[i].id);\n        }\n        return connectorIds;\n    };\n    /**\n     * Loads the options of the connector.\n     *\n     * @private\n     *\n     * @param {string} connectorId\n     * ID of the connector.\n     *\n     * @return {DataPoolConnectorOptions|undefined}\n     * Returns the options of the connector, or `undefined` if not found.\n     */\n    DataPool.prototype.getConnectorOptions = function (connectorId) {\n        var connectors = this.options.connectors;\n        for (var i = 0, iEnd = connectors.length; i < iEnd; ++i) {\n            if (connectors[i].id === connectorId) {\n                return connectors[i];\n            }\n        }\n    };\n    /**\n     * Loads the connector table.\n     *\n     * @function Data.DataPool#getConnectorTable\n     *\n     * @param {string} connectorId\n     * ID of the connector.\n     *\n     * @return {Promise<Data.DataTable>}\n     * Returns the connector table.\n     */\n    DataPool.prototype.getConnectorTable = function (connectorId) {\n        return this\n            .getConnector(connectorId)\n            .then(function (connector) { return connector.table; });\n    };\n    /**\n     * Tests whether the connector has never been requested.\n     *\n     * @param {string} connectorId\n     * Name of the connector.\n     *\n     * @return {boolean}\n     * Returns `true`, if the connector has never been requested, otherwise\n     * `false`.\n     */\n    DataPool.prototype.isNewConnector = function (connectorId) {\n        return !this.connectors[connectorId];\n    };\n    /**\n     * Creates and loads the connector.\n     *\n     * @private\n     *\n     * @param {Data.DataPoolConnectorOptions} options\n     * Options of connector.\n     *\n     * @return {Promise<Data.DataConnectorType>}\n     * Returns the connector.\n     */\n    DataPool.prototype.loadConnector = function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.emit({\n                type: 'load',\n                options: options\n            });\n            var ConnectorClass = Connectors_DataConnector.types[options.type];\n            if (!ConnectorClass) {\n                throw new Error(\"Connector type not found. (\".concat(options.type, \")\"));\n            }\n            var connector = _this.connectors[options.id] = new ConnectorClass(options.options,\n                options.dataTables);\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            connector\n                .load()\n                .then(function (_a) {\n                var converter = _a.converter,\n                    dataTables = _a.dataTables;\n                connector.dataTables = dataTables;\n                connector.converter = converter;\n                connector.loaded = true;\n                _this.emit({\n                    type: 'afterLoad',\n                    options: options\n                });\n                resolve(connector);\n            })['catch'](reject);\n        });\n    };\n    /**\n     * Cancels all data connectors pending requests.\n     */\n    DataPool.prototype.cancelPendingRequests = function () {\n        var connectors = this.connectors;\n        for (var _i = 0, _a = Object.keys(connectors); _i < _a.length; _i++) {\n            var connectorKey = _a[_i];\n            connectors[connectorKey].stopPolling();\n        }\n    };\n    /**\n     * Registers a callback for a specific event.\n     *\n     * @function Highcharts.DataPool#on\n     *\n     * @param {string} type\n     * Event type as a string.\n     *\n     * @param {Highcharts.EventCallbackFunction<Highcharts.DataPool>} callback\n     * Function to register for an event callback.\n     *\n     * @return {Function}\n     * Function to unregister callback from the event.\n     */\n    DataPool.prototype.on = function (type, callback) {\n        return highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().addEvent(this, type, callback);\n    };\n    /**\n     * Sets connector options under the specified `options.id`.\n     *\n     * @param {Data.DataPoolConnectorOptions} options\n     * Connector options to set.\n     */\n    DataPool.prototype.setConnectorOptions = function (options) {\n        var connectors = this.options.connectors,\n            instances = this.connectors;\n        this.emit({\n            type: 'setConnectorOptions',\n            options: options\n        });\n        for (var i = 0, iEnd = connectors.length; i < iEnd; ++i) {\n            if (connectors[i].id === options.id) {\n                connectors.splice(i, 1);\n                break;\n            }\n        }\n        if (instances[options.id]) {\n            instances[options.id].stopPolling();\n            delete instances[options.id];\n        }\n        connectors.push(options);\n        this.emit({\n            type: 'afterSetConnectorOptions',\n            options: options\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Semantic version string of the DataPool class.\n     * @internal\n     */\n    DataPool.version = '1.0.0';\n    return DataPool;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Data_DataPool = (DataPool);\n\n;// ./code/es5/es-modules/Data/Formula/FormulaParser.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar isString = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isString;\n/* *\n *\n *  Constants\n *\n * */\n/**\n * @private\n */\nvar booleanRegExp = /^(?:FALSE|TRUE)/;\n/**\n * `.`-separated decimal.\n * @private\n */\nvar decimal1RegExp = /^[+\\-]?\\d+(?:\\.\\d+)?(?:e[+\\-]\\d+)?/;\n/**\n * `,`-separated decimal.\n * @private\n */\nvar decimal2RegExp = /^[+\\-]?\\d+(?:,\\d+)?(?:e[+\\-]\\d+)?/;\n/**\n * - Group 1: Function name\n * @private\n */\nvar functionRegExp = /^([A-Z][A-Z\\d\\.]*)\\(/;\n/**\n * @private\n */\nvar operatorRegExp = /^(?:[+\\-*\\/^<=>]|<=|=>)/;\n/**\n * - Group 1: Start column\n * - Group 2: Start row\n * - Group 3: End column\n * - Group 4: End row\n * @private\n */\nvar rangeA1RegExp = /^(\\$?[A-Z]+)(\\$?\\d+)\\:(\\$?[A-Z]+)(\\$?\\d+)/;\n/**\n * - Group 1: Start row\n * - Group 2: Start column\n * - Group 3: End row\n * - Group 4: End column\n * @private\n */\nvar rangeR1C1RegExp = /^R(\\d*|\\[\\d+\\])C(\\d*|\\[\\d+\\])\\:R(\\d*|\\[\\d+\\])C(\\d*|\\[\\d+\\])/;\n/**\n * - Group 1: Column\n * - Group 2: Row\n * @private\n */\nvar referenceA1RegExp = /^(\\$?[A-Z]+)(\\$?\\d+)(?![\\:C])/;\n/**\n * - Group 1: Row\n * - Group 2: Column\n * @private\n */\nvar referenceR1C1RegExp = /^R(\\d*|\\[\\d+\\])C(\\d*|\\[\\d+\\])(?!\\:)/;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Extracts the inner string of the most outer parantheses.\n *\n * @private\n *\n * @param {string} text\n * Text string to extract from.\n *\n * @return {string}\n * Extracted parantheses. If not found an exception will be thrown.\n */\nfunction extractParantheses(text) {\n    var parantheseLevel = 0;\n    for (var i = 0, iEnd = text.length, char = void 0, parantheseStart = 1; i < iEnd; ++i) {\n        char = text[i];\n        if (char === '(') {\n            if (!parantheseLevel) {\n                parantheseStart = i + 1;\n            }\n            ++parantheseLevel;\n            continue;\n        }\n        if (char === ')') {\n            --parantheseLevel;\n            if (!parantheseLevel) {\n                return text.substring(parantheseStart, i);\n            }\n        }\n    }\n    if (parantheseLevel > 0) {\n        var error = new Error('Incomplete parantheses.');\n        error.name = 'FormulaParseError';\n        throw error;\n    }\n    return '';\n}\n/**\n * Extracts the inner string value.\n *\n * @private\n *\n * @param {string} text\n * Text string to extract from.\n *\n * @return {string}\n * Extracted string. If not found an exception will be thrown.\n */\nfunction extractString(text) {\n    var start = -1;\n    for (var i = 0, iEnd = text.length, char = void 0, escaping = false; i < iEnd; ++i) {\n        char = text[i];\n        if (char === '\\\\') {\n            escaping = !escaping;\n            continue;\n        }\n        if (escaping) {\n            escaping = false;\n            continue;\n        }\n        if (char === '\"') {\n            if (start < 0) {\n                start = i;\n            }\n            else {\n                return text.substring(start + 1, i); // `Ã¬` is excluding\n            }\n        }\n    }\n    var error = new Error('Incomplete string.');\n    error.name = 'FormulaParseError';\n    throw error;\n}\n/**\n * Parses an argument string. Formula arrays with a single term will be\n * simplified to the term.\n *\n * @private\n *\n * @param {string} text\n * Argument string to parse.\n *\n * @param {boolean} alternativeSeparators\n * Whether to expect `;` as argument separator and `,` as decimal separator.\n *\n * @return {Formula|Function|Range|Reference|Value}\n * The recognized term structure.\n */\nfunction parseArgument(text, alternativeSeparators) {\n    var match;\n    // Check for a R1C1:R1C1 range notation\n    match = text.match(rangeR1C1RegExp);\n    if (match) {\n        var beginColumnRelative = (match[2] === '' || match[2][0] === '[');\n        var beginRowRelative = (match[1] === '' || match[1][0] === '[');\n        var endColumnRelative = (match[4] === '' || match[4][0] === '[');\n        var endRowRelative = (match[3] === '' || match[3][0] === '[');\n        var range = {\n                type: 'range',\n                beginColumn: (beginColumnRelative ?\n                    parseInt(match[2].substring(1, -1) || '0', 10) :\n                    parseInt(match[2], 10) - 1),\n                beginRow: (beginRowRelative ?\n                    parseInt(match[1].substring(1, -1) || '0', 10) :\n                    parseInt(match[1], 10) - 1),\n                endColumn: (endColumnRelative ?\n                    parseInt(match[4].substring(1, -1) || '0', 10) :\n                    parseInt(match[4], 10) - 1),\n                endRow: (endRowRelative ?\n                    parseInt(match[3].substring(1, -1) || '0', 10) :\n                    parseInt(match[3], 10) - 1)\n            };\n        if (beginColumnRelative) {\n            range.beginColumnRelative = true;\n        }\n        if (beginRowRelative) {\n            range.beginRowRelative = true;\n        }\n        if (endColumnRelative) {\n            range.endColumnRelative = true;\n        }\n        if (endRowRelative) {\n            range.endRowRelative = true;\n        }\n        return range;\n    }\n    // Check for a A1:A1 range notation\n    match = text.match(rangeA1RegExp);\n    if (match) {\n        var beginColumnRelative = match[1][0] !== '$';\n        var beginRowRelative = match[2][0] !== '$';\n        var endColumnRelative = match[3][0] !== '$';\n        var endRowRelative = match[4][0] !== '$';\n        var range = {\n                type: 'range',\n                beginColumn: parseReferenceColumn(beginColumnRelative ?\n                    match[1] :\n                    match[1].substring(1)) - 1,\n                beginRow: parseInt(beginRowRelative ?\n                    match[2] :\n                    match[2].substring(1), 10) - 1,\n                endColumn: parseReferenceColumn(endColumnRelative ?\n                    match[3] :\n                    match[3].substring(1)) - 1,\n                endRow: parseInt(endRowRelative ?\n                    match[4] :\n                    match[4].substring(1), 10) - 1\n            };\n        if (beginColumnRelative) {\n            range.beginColumnRelative = true;\n        }\n        if (beginRowRelative) {\n            range.beginRowRelative = true;\n        }\n        if (endColumnRelative) {\n            range.endColumnRelative = true;\n        }\n        if (endRowRelative) {\n            range.endRowRelative = true;\n        }\n        return range;\n    }\n    // Fallback to formula processing for other pattern types\n    var formula = parseFormula(text,\n        alternativeSeparators);\n    return (formula.length === 1 && typeof formula[0] !== 'string' ?\n        formula[0] :\n        formula);\n}\n/**\n * Parse arguments string inside function parantheses.\n *\n * @private\n *\n * @param {string} text\n * Parantheses string of the function.\n *\n * @param {boolean} alternativeSeparators\n * Whether to expect `;` as argument separator and `,` as decimal separator.\n *\n * @return {Highcharts.FormulaArguments}\n * Parsed arguments array.\n */\nfunction parseArguments(text, alternativeSeparators) {\n    var args = [], argumentsSeparator = (alternativeSeparators ? ';' : ',');\n    var parantheseLevel = 0,\n        term = '';\n    for (var i = 0, iEnd = text.length, char = void 0; i < iEnd; ++i) {\n        char = text[i];\n        // Check for separator\n        if (char === argumentsSeparator &&\n            !parantheseLevel &&\n            term) {\n            args.push(parseArgument(term, alternativeSeparators));\n            term = '';\n            // Check for a quoted string before skip logic\n        }\n        else if (char === '\"' &&\n            !parantheseLevel &&\n            !term) {\n            var string = extractString(text.substring(i));\n            args.push(string);\n            i += string.length + 1; // Only +1 to cover ++i in for-loop\n            // Skip space and check paranthesis nesting\n        }\n        else if (char !== ' ') {\n            term += char;\n            if (char === '(') {\n                ++parantheseLevel;\n            }\n            else if (char === ')') {\n                --parantheseLevel;\n            }\n        }\n    }\n    // Look for left-overs from last argument\n    if (!parantheseLevel && term) {\n        args.push(parseArgument(term, alternativeSeparators));\n    }\n    return args;\n}\n/**\n * Checks if there's one of the following operator before the negative number\n * value: '*', '/' or '^'.\n *\n * Used to properly indicate a negative value reference or negate a directly\n * passed number value.\n */\nfunction negativeReference(formula) {\n    var formulaLength = formula.length;\n    var priorFormula = formula[formulaLength - 2];\n    return (formula[formulaLength - 1] === '-' &&\n        isString(priorFormula) &&\n        !!priorFormula.match(/\\*|\\/|\\^/));\n}\n/**\n * Converts a spreadsheet formula string into a formula array. Throws a\n * `FormulaParserError` when the string can not be parsed.\n *\n * @private\n * @function Formula.parseFormula\n *\n * @param {string} text\n * Spreadsheet formula string, without the leading `=`.\n *\n * @param {boolean} alternativeSeparators\n * * `false` to expect `,` between arguments and `.` in decimals.\n * * `true` to expect `;` between arguments and `,` in decimals.\n *\n * @return {Formula.Formula}\n * Formula array representing the string.\n */\nfunction parseFormula(text, alternativeSeparators) {\n    var decimalRegExp = (alternativeSeparators ?\n            decimal2RegExp :\n            decimal1RegExp),\n        formula = [];\n    var match,\n        next = (text[0] === '=' ? text.substring(1) : text).trim();\n    while (next) {\n        // Check for an R1C1 reference notation\n        match = next.match(referenceR1C1RegExp);\n        if (match) {\n            var columnRelative = (match[2] === '' || match[2][0] === '[');\n            var rowRelative = (match[1] === '' || match[1][0] === '[');\n            var reference = {\n                    type: 'reference',\n                    column: (columnRelative ?\n                        parseInt(match[2].substring(1, -1) || '0', 10) :\n                        parseInt(match[2], 10) - 1),\n                    row: (rowRelative ?\n                        parseInt(match[1].substring(1, -1) || '0', 10) :\n                        parseInt(match[1], 10) - 1)\n                };\n            if (columnRelative) {\n                reference.columnRelative = true;\n            }\n            if (rowRelative) {\n                reference.rowRelative = true;\n            }\n            if (negativeReference(formula)) {\n                formula.pop();\n                reference.isNegative = true;\n            }\n            formula.push(reference);\n            next = next.substring(match[0].length).trim();\n            continue;\n        }\n        // Check for an A1 reference notation\n        match = next.match(referenceA1RegExp);\n        if (match) {\n            var columnRelative = match[1][0] !== '$';\n            var rowRelative = match[2][0] !== '$';\n            var reference = {\n                    type: 'reference',\n                    column: parseReferenceColumn(columnRelative ?\n                        match[1] :\n                        match[1].substring(1)) - 1,\n                    row: parseInt(rowRelative ?\n                        match[2] :\n                        match[2].substring(1), 10) - 1\n                };\n            if (columnRelative) {\n                reference.columnRelative = true;\n            }\n            if (rowRelative) {\n                reference.rowRelative = true;\n            }\n            if (negativeReference(formula)) {\n                formula.pop();\n                reference.isNegative = true;\n            }\n            formula.push(reference);\n            next = next.substring(match[0].length).trim();\n            continue;\n        }\n        // Check for a formula operator\n        match = next.match(operatorRegExp);\n        if (match) {\n            formula.push(match[0]);\n            next = next.substring(match[0].length).trim();\n            continue;\n        }\n        // Check for a boolean value\n        match = next.match(booleanRegExp);\n        if (match) {\n            formula.push(match[0] === 'TRUE');\n            next = next.substring(match[0].length).trim();\n            continue;\n        }\n        // Check for a number value\n        match = next.match(decimalRegExp);\n        if (match) {\n            var number = parseFloat(match[0]);\n            // If the current value is multiplication-related and the previous\n            // one is a minus sign, set the current value to negative and remove\n            // the minus sign.\n            if (negativeReference(formula)) {\n                formula.pop();\n                number = -number;\n            }\n            formula.push(number);\n            next = next.substring(match[0].length).trim();\n            continue;\n        }\n        // Check for a quoted string\n        if (next[0] === '\"') {\n            var string = extractString(next);\n            formula.push(string.substring(1, -1));\n            next = next.substring(string.length + 2).trim();\n            continue;\n        }\n        // Check for a function\n        match = next.match(functionRegExp);\n        if (match) {\n            next = next.substring(match[1].length).trim();\n            var parantheses = extractParantheses(next);\n            formula.push({\n                type: 'function',\n                name: match[1],\n                args: parseArguments(parantheses, alternativeSeparators)\n            });\n            next = next.substring(parantheses.length + 2).trim();\n            continue;\n        }\n        // Check for a formula in parantheses\n        if (next[0] === '(') {\n            var paranteses = extractParantheses(next);\n            if (paranteses) {\n                formula\n                    .push(parseFormula(paranteses, alternativeSeparators));\n                next = next.substring(paranteses.length + 2).trim();\n                continue;\n            }\n        }\n        // Something is not right\n        var position = text.length - next.length, error = new Error('Unexpected character `' +\n                text.substring(position, position + 1) +\n                '` at position ' + (position + 1) +\n                '. (`...' + text.substring(position - 5, position + 6) + '...`)');\n        error.name = 'FormulaParseError';\n        throw error;\n    }\n    return formula;\n}\n/**\n * Converts a reference column `A` of `A1` into a number. Supports endless sizes\n * `ZZZ...`, just limited by integer precision.\n *\n * @private\n *\n * @param {string} text\n * Column string to convert.\n *\n * @return {number}\n * Converted column index.\n */\nfunction parseReferenceColumn(text) {\n    var column = 0;\n    for (var i = 0, iEnd = text.length, code = void 0, factor = text.length - 1; i < iEnd; ++i) {\n        code = text.charCodeAt(i);\n        if (code >= 65 && code <= 90) {\n            column += (code - 64) * Math.pow(26, factor);\n        }\n        --factor;\n    }\n    return column;\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar FormulaParser = {\n    parseFormula: parseFormula\n};\n/* harmony default export */ var Formula_FormulaParser = (FormulaParser);\n\n;// ./code/es5/es-modules/Data/Formula/FormulaTypes.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Array of all possible operators.\n * @private\n */\nvar operators = ['+', '-', '*', '/', '^', '=', '<', '<=', '>', '>='];\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Tests an item for a Formula array.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is a formula (or argument) array.\n */\nfunction isFormula(item) {\n    return item instanceof Array;\n}\n/**\n * Tests an item for a Function structure.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is a formula function.\n */\nfunction isFunction(item) {\n    return (typeof item === 'object' &&\n        !(item instanceof Array) &&\n        item.type === 'function');\n}\n/**\n * Tests an item for an Operator string.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is an operator string.\n */\nfunction isOperator(item) {\n    return (typeof item === 'string' &&\n        operators.indexOf(item) >= 0);\n}\n/**\n * Tests an item for a Range structure.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is a range.\n */\nfunction isRange(item) {\n    return (typeof item === 'object' &&\n        !(item instanceof Array) &&\n        item.type === 'range');\n}\n/**\n * Tests an item for a Reference structure.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is a reference.\n */\nfunction isReference(item) {\n    return (typeof item === 'object' &&\n        !(item instanceof Array) &&\n        item.type === 'reference');\n}\n/**\n * Tests an item for a Value structure.\n *\n * @private\n *\n * @param {Highcharts.FormulaItem|null|undefined} item\n * Item to test.\n *\n * @return {boolean}\n * `true`, if the item is a value.\n */\nfunction isValue(item) {\n    return (typeof item === 'boolean' ||\n        typeof item === 'number' ||\n        typeof item === 'string');\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar MathFormula = {\n    isFormula: isFormula,\n    isFunction: isFunction,\n    isOperator: isOperator,\n    isRange: isRange,\n    isReference: isReference,\n    isValue: isValue\n};\n/* harmony default export */ var FormulaTypes = (MathFormula);\n\n;// ./code/es5/es-modules/Data/Formula/FormulaProcessor.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar FormulaProcessor_isFormula = FormulaTypes.isFormula, FormulaProcessor_isFunction = FormulaTypes.isFunction, FormulaProcessor_isOperator = FormulaTypes.isOperator, FormulaProcessor_isRange = FormulaTypes.isRange, FormulaProcessor_isReference = FormulaTypes.isReference, FormulaProcessor_isValue = FormulaTypes.isValue;\n\nvar FormulaProcessor_defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined;\n/* *\n *\n *  Constants\n *\n * */\nvar asLogicalStringRegExp = / */;\nvar MAX_FALSE = Number.MAX_VALUE / 1.000000000001;\nvar MAX_STRING = Number.MAX_VALUE / 1.000000000002;\nvar MAX_TRUE = Number.MAX_VALUE;\nvar operatorPriority = {\n    '^': 3,\n    '*': 2,\n    '/': 2,\n    '+': 1,\n    '-': 1,\n    '=': 0,\n    '<': 0,\n    '<=': 0,\n    '>': 0,\n    '>=': 0\n};\nvar processorFunctions = {};\nvar processorFunctionNameRegExp = /^[A-Z][A-Z\\.]*$/;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Converts non-number types to logical numbers.\n *\n * @param {Highcharts.FormulaValue} value\n * Value to convert.\n *\n * @return {number}\n * Logical number value. `NaN` if not convertable.\n */\nfunction asLogicalNumber(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return value ? MAX_TRUE : MAX_FALSE;\n        case 'string':\n            return MAX_STRING;\n        case 'number':\n            return value;\n        default:\n            return NaN;\n    }\n}\n/**\n * Converts strings to logical strings, while other types get passed through. In\n * logical strings the space character is the lowest value and letters are case\n * insensitive.\n *\n * @param {Highcharts.FormulaValue} value\n * Value to convert.\n *\n * @return {Highcharts.FormulaValue}\n * Logical string value or passed through value.\n */\nfunction asLogicalString(value) {\n    if (typeof value === 'string') {\n        return value.toLowerCase().replace(asLogicalStringRegExp, '\\0');\n    }\n    return value;\n}\n/**\n * Converts non-number types to a logic number.\n *\n * @param {Highcharts.FormulaValue} value\n * Value to convert.\n *\n * @return {number}\n * Number value. `NaN` if not convertable.\n */\nfunction asNumber(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return value ? 1 : 0;\n        case 'string':\n            return parseFloat(value.replace(',', '.'));\n        case 'number':\n            return value;\n        default:\n            return NaN;\n    }\n}\n/**\n * Process a basic operation of two given values.\n *\n * @private\n *\n * @param {Highcharts.FormulaOperator} operator\n * Operator between values.\n *\n * @param {Highcharts.FormulaValue} x\n * First value for operation.\n *\n * @param {Highcharts.FormulaValue} y\n * Second value for operation.\n *\n * @return {Highcharts.FormulaValue}\n * Operation result. `NaN` if operation is not support.\n */\nfunction basicOperation(operator, x, y) {\n    switch (operator) {\n        case '=':\n            return asLogicalString(x) === asLogicalString(y);\n        case '<':\n            if (typeof x === typeof y) {\n                return asLogicalString(x) < asLogicalString(y);\n            }\n            return asLogicalNumber(x) < asLogicalNumber(y);\n        case '<=':\n            if (typeof x === typeof y) {\n                return asLogicalString(x) <= asLogicalString(y);\n            }\n            return asLogicalNumber(x) <= asLogicalNumber(y);\n        case '>':\n            if (typeof x === typeof y) {\n                return asLogicalString(x) > asLogicalString(y);\n            }\n            return asLogicalNumber(x) > asLogicalNumber(y);\n        case '>=':\n            if (typeof x === typeof y) {\n                return asLogicalString(x) >= asLogicalString(y);\n            }\n            return asLogicalNumber(x) >= asLogicalNumber(y);\n    }\n    x = asNumber(x);\n    y = asNumber(y);\n    var result;\n    switch (operator) {\n        case '+':\n            result = x + y;\n            break;\n        case '-':\n            result = x - y;\n            break;\n        case '*':\n            result = x * y;\n            break;\n        case '/':\n            result = x / y;\n            break;\n        case '^':\n            result = Math.pow(x, y);\n            break;\n        default:\n            return NaN;\n    }\n    // Limit decimal to 9 digits\n    return (result % 1 ?\n        Math.round(result * 1000000000) / 1000000000 :\n        result);\n}\n/**\n * Converts an argument to Value and in case of a range to an array of Values.\n *\n * @function Highcharts.Formula.getArgumentValue\n *\n * @param {Highcharts.FormulaRange|Highcharts.FormulaTerm} arg\n * Formula range or term to convert.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {Highcharts.FormulaValue|Array<Highcharts.FormulaValue>}\n * Converted value.\n */\nfunction getArgumentValue(arg, table) {\n    // Add value\n    if (FormulaProcessor_isValue(arg)) {\n        return arg;\n    }\n    // Add values of a range\n    if (FormulaProcessor_isRange(arg)) {\n        return (table && getRangeValues(arg, table) || []);\n    }\n    // Add values of a function\n    if (FormulaProcessor_isFunction(arg)) {\n        return processFunction(arg, table);\n    }\n    // Process functions, operations, references with formula processor\n    return processFormula((FormulaProcessor_isFormula(arg) ? arg : [arg]), table);\n}\n/**\n * Converts all arguments to Values and in case of ranges to arrays of Values.\n *\n * @function Highcharts.Formula.getArgumentsValues\n *\n * @param {Highcharts.FormulaArguments} args\n * Formula arguments to convert.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {Array<(Highcharts.FormulaValue|Array<Highcharts.FormulaValue>)>}\n * Converted values.\n */\nfunction getArgumentsValues(args, table) {\n    var values = [];\n    for (var i = 0, iEnd = args.length; i < iEnd; ++i) {\n        values.push(getArgumentValue(args[i], table));\n    }\n    return values;\n}\n/**\n * Extracts cell values from a table for a given range.\n *\n * @function Highcharts.Formula.getRangeValues\n *\n * @param {Highcharts.FormulaRange} range\n * Formula range to use.\n *\n * @param {Highcharts.DataTable} table\n * Table to extract from.\n *\n * @return {Array<Highcharts.FormulaValue>}\n * Extracted values.\n */\nfunction getRangeValues(range, table) {\n    var columnNames = table\n            .getColumnNames()\n            .slice(range.beginColumn,\n        range.endColumn + 1),\n        values = [];\n    for (var i = 0, iEnd = columnNames.length, cell = void 0; i < iEnd; ++i) {\n        var cells = table.getColumn(columnNames[i],\n            true) || [];\n        for (var j = range.beginRow, jEnd = range.endRow + 1; j < jEnd; ++j) {\n            cell = cells[j];\n            if (typeof cell === 'string' &&\n                cell[0] === '=' &&\n                table !== table.modified) {\n                // Look in the modified table for formula result\n                cell = table.modified.getCell(columnNames[i], j);\n            }\n            values.push(FormulaProcessor_isValue(cell) ? cell : NaN);\n        }\n    }\n    return values;\n}\n/**\n * Extracts the cell value from a table for a given reference.\n *\n * @private\n *\n * @param {Highcharts.FormulaReference} reference\n * Formula reference to use.\n *\n * @param {Highcharts.DataTable} table\n * Table to extract from.\n *\n * @return {Highcharts.FormulaValue}\n * Extracted value. 'undefined' might also indicate that the cell was not found.\n */\nfunction getReferenceValue(reference, table) {\n    var columnName = table.getColumnNames()[reference.column];\n    if (columnName) {\n        var cell = table.getCell(columnName,\n            reference.row);\n        if (typeof cell === 'string' &&\n            cell[0] === '=' &&\n            table !== table.modified) {\n            // Look in the modified table for formula result\n            var result = table.modified.getCell(columnName,\n                reference.row);\n            return FormulaProcessor_isValue(result) ? result : NaN;\n        }\n        if (FormulaProcessor_isValue(cell)) {\n            return reference.isNegative ? -cell : cell;\n        }\n        return NaN;\n    }\n    return NaN;\n}\n/**\n * Calculates a value based on the two top values and the related operator.\n *\n * Used to properly process the formula's values based on its operators.\n *\n * @private\n * @function Highcharts.applyOperator\n *\n * @param {Array<Highcharts.Value>} values\n * Processed formula values.\n *\n * @param {Array<Highcharts.Operator>} operators\n * Processed formula operators.\n */\nfunction applyOperator(values, operators) {\n    if (values.length < 2 || operators.length < 1) {\n        values.push(NaN);\n    }\n    var secondValue = values.pop();\n    var firstValue = values.pop();\n    var operator = operators.pop();\n    if (!FormulaProcessor_defined(secondValue) || !FormulaProcessor_defined(firstValue) || !FormulaProcessor_defined(operator)) {\n        values.push(NaN);\n    }\n    else {\n        values.push(basicOperation(operator, firstValue, secondValue));\n    }\n}\n/**\n * Processes a formula array on the given table. If the formula does not contain\n * references or ranges, then no table has to be provided.\n *\n * Performs formulas considering the operators precedence.\n *\n * // Example of the `2 * 3 + 4` formula:\n * 2 -> values: [2], operators: []\n * * -> values: [2], operators: [*]\n * 3 -> values: [2, 3], operators: [*]\n * // Since the higher precedence operator exists (* > +), perform it first.\n * + -> values: [6], operators: [+]\n * 4 -> values: [6, 4], operators: [+]\n * // When non-higher precedence operators remain, perform rest calculations.\n * -> values: [10], operators: []\n *\n * @private\n * @function Highcharts.processFormula\n *\n * @param {Highcharts.Formula} formula\n * Formula array to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {Highcharts.FormulaValue}\n * Result value of the process. `NaN` indicates an error.\n */\nfunction processFormula(formula, table) {\n    // Keeps all the values to calculate them in a proper priority, based on the\n    // given operators.\n    var values = [];\n    // Keeps all the operators to calculate the values above, following the\n    // proper priority.\n    var operators = [];\n    // Indicates if the next item is a value (not an operator).\n    var expectingValue = true;\n    for (var i = 0, iEnd = formula.length; i < iEnd; ++i) {\n        var item = formula[i];\n        if (FormulaProcessor_isOperator(item)) {\n            if (expectingValue && item === '-') {\n                // Split the negative values to be handled as a binary\n                // operation if the next item is a value.\n                values.push(0);\n                operators.push('-');\n                expectingValue = true;\n            }\n            else {\n                // Perform if the higher precedence operator exist.\n                while (operators.length &&\n                    operatorPriority[operators[operators.length - 1]] >=\n                        operatorPriority[item]) {\n                    applyOperator(values, operators);\n                }\n                operators.push(item);\n                expectingValue = true;\n            }\n            continue;\n        }\n        var value = void 0;\n        // Assign the proper value, starting from the most common types.\n        if (FormulaProcessor_isValue(item)) {\n            value = item;\n        }\n        else if (FormulaProcessor_isReference(item)) {\n            value = table ? getReferenceValue(item, table) : NaN;\n        }\n        else if (FormulaProcessor_isFunction(item)) {\n            var result = processFunction(item,\n                table);\n            value = FormulaProcessor_isValue(result) ? result : NaN;\n        }\n        else if (FormulaProcessor_isFormula(item)) {\n            value = processFormula(item, table);\n        }\n        if (typeof value !== 'undefined') {\n            values.push(value);\n            expectingValue = false;\n        }\n        else {\n            return NaN;\n        }\n    }\n    // Handle the remaining operators that weren't taken into consideration, due\n    // to non-higher precedence.\n    while (operators.length) {\n        applyOperator(values, operators);\n    }\n    if (values.length !== 1) {\n        return NaN;\n    }\n    return values[0];\n}\n/**\n * Process a function on the given table. If the arguments do not contain\n * references or ranges, then no table has to be provided.\n *\n * @private\n *\n * @param {Highcharts.FormulaFunction} formulaFunction\n * Formula function to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @param {Highcharts.FormulaReference} [reference]\n * Table cell reference to use for relative references and ranges.\n *\n * @return {Highcharts.FormulaValue|Array<Highcharts.FormulaValue>}\n * Result value (or values) of the process. `NaN` indicates an error.\n */\nfunction processFunction(formulaFunction, table, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nreference // @todo\n) {\n    var processor = processorFunctions[formulaFunction.name];\n    if (processor) {\n        try {\n            return processor(formulaFunction.args, table);\n        }\n        catch (_a) {\n            return NaN;\n        }\n    }\n    var error = new Error(\"Function \\\"\".concat(formulaFunction.name, \"\\\" not found.\"));\n    error.name = 'FormulaProcessError';\n    throw error;\n}\n/**\n * Registers a function for the FormulaProcessor.\n *\n * @param {string} name\n * Name of the function in spreadsheets notation with upper case.\n *\n * @param {Highcharts.FormulaFunction} processorFunction\n * ProcessorFunction for the FormulaProcessor. This is an object so that it\n * can take additional parameter for future validation routines.\n *\n * @return {boolean}\n * Return true, if the ProcessorFunction has been registered.\n */\nfunction registerProcessorFunction(name, processorFunction) {\n    return (processorFunctionNameRegExp.test(name) &&\n        !processorFunctions[name] &&\n        !!(processorFunctions[name] = processorFunction));\n}\n/**\n * Translates relative references and ranges in-place.\n *\n * @param {Highcharts.Formula} formula\n * Formula to translate references and ranges in.\n *\n * @param {number} [columnDelta=0]\n * Column delta to translate to. Negative translate back.\n *\n * @param {number} [rowDelta=0]\n * Row delta to translate to. Negative numbers translate back.\n *\n * @return {Highcharts.Formula}\n * Formula with translated reference and ranges. This formula is equal to the\n * first argument.\n */\nfunction translateReferences(formula, columnDelta, rowDelta) {\n    if (columnDelta === void 0) { columnDelta = 0; }\n    if (rowDelta === void 0) { rowDelta = 0; }\n    for (var i = 0, iEnd = formula.length, item = void 0; i < iEnd; ++i) {\n        item = formula[i];\n        if (item instanceof Array) {\n            translateReferences(item, columnDelta, rowDelta);\n        }\n        else if (FormulaProcessor_isFunction(item)) {\n            translateReferences(item.args, columnDelta, rowDelta);\n        }\n        else if (FormulaProcessor_isRange(item)) {\n            if (item.beginColumnRelative) {\n                item.beginColumn += columnDelta;\n            }\n            if (item.beginRowRelative) {\n                item.beginRow += rowDelta;\n            }\n            if (item.endColumnRelative) {\n                item.endColumn += columnDelta;\n            }\n            if (item.endRowRelative) {\n                item.endRow += rowDelta;\n            }\n        }\n        else if (FormulaProcessor_isReference(item)) {\n            if (item.columnRelative) {\n                item.column += columnDelta;\n            }\n            if (item.rowRelative) {\n                item.row += rowDelta;\n            }\n        }\n    }\n    return formula;\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar FormulaProcessor = {\n    asNumber: asNumber,\n    getArgumentValue: getArgumentValue,\n    getArgumentsValues: getArgumentsValues,\n    getRangeValues: getRangeValues,\n    getReferenceValue: getReferenceValue,\n    processFormula: processFormula,\n    processorFunctions: processorFunctions,\n    registerProcessorFunction: registerProcessorFunction,\n    translateReferences: translateReferences\n};\n/* harmony default export */ var Formula_FormulaProcessor = (FormulaProcessor);\n\n;// ./code/es5/es-modules/Data/Formula/Functions/ABS.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar ABS_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `ABS(value)` implementation. Returns positive numbers.\n *\n * @private\n * @function Formula.processorFunctions.AND\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {Array<number>}\n * Result value of the process.\n */\nfunction ABS(args, table) {\n    var value = ABS_getArgumentValue(args[0],\n        table);\n    switch (typeof value) {\n        case 'number':\n            return Math.abs(value);\n        case 'object': {\n            var values = [];\n            for (var i = 0, iEnd = value.length, value2 = void 0; i < iEnd; ++i) {\n                value2 = value[i];\n                if (typeof value2 !== 'number') {\n                    return NaN;\n                }\n                values.push(Math.abs(value2));\n            }\n            return values;\n        }\n        default:\n            return NaN;\n    }\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('ABS', ABS);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_ABS = ((/* unused pure expression or super */ null && (ABS)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/AND.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar AND_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `AND(...tests)` implementation. Returns `TRUE`, if all test\n * results are not `0` or `FALSE`.\n *\n * @private\n * @function Formula.processorFunctions.AND\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {boolean}\n * Result value of the process.\n */\nfunction AND(args, table) {\n    for (var i = 0, iEnd = args.length, value = void 0; i < iEnd; ++i) {\n        value = AND_getArgumentValue(args[i], table);\n        if (!value ||\n            (typeof value === 'object' &&\n                !AND(value, table))) {\n            return false;\n        }\n    }\n    return true;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('AND', AND);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_AND = ((/* unused pure expression or super */ null && (AND)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/AVERAGE.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar AVERAGE_getArgumentsValues = Formula_FormulaProcessor.getArgumentsValues;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `AVERAGE(...values)` implementation. Calculates the average\n * of the given values that are numbers.\n *\n * @private\n * @function Formula.processorFunctions.AVERAGE\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction AVERAGE(args, table) {\n    var values = AVERAGE_getArgumentsValues(args,\n        table);\n    var count = 0,\n        result = 0;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    ++count;\n                    result += value;\n                }\n                break;\n            case 'object':\n                for (var j = 0, jEnd = value.length, value2 = void 0; j < jEnd; ++j) {\n                    value2 = value[j];\n                    if (typeof value2 === 'number' &&\n                        !isNaN(value2)) {\n                        ++count;\n                        result += value2;\n                    }\n                }\n                break;\n        }\n    }\n    return (count ? (result / count) : 0);\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('AVERAGE', AVERAGE);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_AVERAGE = ((/* unused pure expression or super */ null && (AVERAGE)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/AVERAGEA.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar AVERAGEA_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `AVERAGEA(...values)` implementation. Calculates the\n * average of the given values. Strings and FALSE are calculated as 0.\n *\n * @private\n * @function Formula.processorFunctions.AVERAGEA\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction AVERAGEA(args, table) {\n    var count = 0,\n        result = 0;\n    for (var i = 0, iEnd = args.length, value = void 0; i < iEnd; ++i) {\n        value = AVERAGEA_getArgumentValue(args[i], table);\n        switch (typeof value) {\n            case 'boolean':\n                ++count;\n                result += (value ? 1 : 0);\n                continue;\n            case 'number':\n                if (!isNaN(value)) {\n                    ++count;\n                    result += value;\n                }\n                continue;\n            case 'string':\n                ++count;\n                continue;\n            default:\n                for (var j = 0, jEnd = value.length, value2 = void 0; j < jEnd; ++j) {\n                    value2 = value[j];\n                    switch (typeof value2) {\n                        case 'boolean':\n                            ++count;\n                            result += (value2 ? 1 : 0);\n                            continue;\n                        case 'number':\n                            if (!isNaN(value2)) {\n                                ++count;\n                                result += value2;\n                            }\n                            continue;\n                        case 'string':\n                            ++count;\n                            continue;\n                    }\n                }\n                continue;\n        }\n    }\n    return (count ? (result / count) : 0);\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('AVERAGEA', AVERAGEA);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_AVERAGEA = ((/* unused pure expression or super */ null && (AVERAGEA)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/COUNT.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `COUNT(...values)` implementation. Returns the count of\n * given values that are numbers.\n *\n * @private\n * @function Formula.processorFunctions.COUNT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction COUNT(args, table) {\n    var values = Formula_FormulaProcessor.getArgumentsValues(args,\n        table);\n    var count = 0;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    ++count;\n                }\n                break;\n            case 'object':\n                count += COUNT(value, table);\n                break;\n        }\n    }\n    return count;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('COUNT', COUNT);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_COUNT = ((/* unused pure expression or super */ null && (COUNT)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/COUNTA.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `COUNTA(...values)` implementation. Returns the count of\n * given values that are not empty.\n *\n * @private\n * @function Formula.processorFunctions.COUNT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction COUNTA(args, table) {\n    var values = Formula_FormulaProcessor.getArgumentsValues(args,\n        table);\n    var count = 0;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (isNaN(value)) {\n                    continue;\n                }\n                break;\n            case 'object':\n                count += COUNTA(value, table);\n                continue;\n            case 'string':\n                if (!value) {\n                    continue;\n                }\n                break;\n        }\n        ++count;\n    }\n    return count;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('COUNTA', COUNTA);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_COUNTA = ((/* unused pure expression or super */ null && (COUNTA)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/IF.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar IF_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `IF(test, value1, value2)` implementation. Returns one of\n * the values based on the test result. `value1` will be returned, if the test\n * result is not `0` or `FALSE`.\n *\n * @private\n * @function Formula.processorFunctions.IF\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {Highcharts.FormulaValue|Array<Highcharts.FormulaValue>}\n * Result value of the process.\n */\nfunction IF(args, table) {\n    return (IF_getArgumentValue(args[0], table) ?\n        IF_getArgumentValue(args[1], table) :\n        IF_getArgumentValue(args[2], table));\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('IF', IF);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_IF = ((/* unused pure expression or super */ null && (IF)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/ISNA.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar ISNA_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `ISNA(value)` implementation. Returns TRUE if value is not\n * a number.\n *\n * @private\n * @function Formula.processorFunctions.ISNA\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {boolean}\n * Result value of the process.\n */\nfunction ISNA(args, table) {\n    var value = ISNA_getArgumentValue(args[0],\n        table);\n    return (typeof value !== 'number' || isNaN(value));\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('ISNA', ISNA);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_ISNA = ((/* unused pure expression or super */ null && (ISNA)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/MAX.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar MAX_getArgumentsValues = Formula_FormulaProcessor.getArgumentsValues;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `MAX(...values)` implementation. Calculates the largest\n * of the given values that are numbers.\n *\n * @private\n * @function Formula.processorFunctions.MAX\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction MAX(args, table) {\n    var values = MAX_getArgumentsValues(args,\n        table);\n    var result = Number.NEGATIVE_INFINITY;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (value > result) {\n                    result = value;\n                }\n                break;\n            case 'object':\n                value = MAX(value);\n                if (value > result) {\n                    result = value;\n                }\n                break;\n        }\n    }\n    return isFinite(result) ? result : 0;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('MAX', MAX);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_MAX = ((/* unused pure expression or super */ null && (MAX)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/MEDIAN.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `MEDIAN(...values)` implementation. Calculates the median\n * average of the given values.\n *\n * @private\n * @function Formula.processorFunctions.MEDIAN\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to process.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction MEDIAN(args, table) {\n    var median = [],\n        values = Formula_FormulaProcessor.getArgumentsValues(args,\n        table);\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    median.push(value);\n                }\n                break;\n            case 'object':\n                for (var j = 0, jEnd = value.length, value2 = void 0; j < jEnd; ++j) {\n                    value2 = value[j];\n                    if (typeof value2 === 'number' &&\n                        !isNaN(value2)) {\n                        median.push(value2);\n                    }\n                }\n                break;\n        }\n    }\n    var count = median.length;\n    if (!count) {\n        return NaN;\n    }\n    var half = Math.floor(count / 2); // Floor because index starts at 0\n        return (count % 2 ?\n            median[half] : // Odd\n            (median[half - 1] + median[half]) / 2 // Even\n        );\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('MEDIAN', MEDIAN);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_MEDIAN = ((/* unused pure expression or super */ null && (MEDIAN)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/MIN.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar MIN_getArgumentsValues = Formula_FormulaProcessor.getArgumentsValues;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `MIN(...values)` implementation. Calculates the lowest\n * of the given values that are numbers.\n *\n * @private\n * @function Formula.processorFunctions.MIN\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction MIN(args, table) {\n    var values = MIN_getArgumentsValues(args,\n        table);\n    var result = Number.POSITIVE_INFINITY;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (value < result) {\n                    result = value;\n                }\n                break;\n            case 'object':\n                value = MIN(value);\n                if (value < result) {\n                    result = value;\n                }\n                break;\n        }\n    }\n    return isFinite(result) ? result : 0;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('MIN', MIN);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_MIN = ((/* unused pure expression or super */ null && (MIN)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/MOD.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar MOD_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `MOD(value1, value2)` implementation. Calculates the rest\n * of the division with the given values.\n *\n * @private\n * @function Formula.processorFunctions.MOD\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction MOD(args, table) {\n    var value1 = MOD_getArgumentValue(args[0],\n        table),\n        value2 = MOD_getArgumentValue(args[1],\n        table);\n    if (typeof value1 === 'object') {\n        value1 = value1[0];\n    }\n    if (typeof value2 === 'object') {\n        value2 = value2[0];\n    }\n    if (typeof value1 !== 'number' ||\n        typeof value2 !== 'number' ||\n        value2 === 0) {\n        return NaN;\n    }\n    return value1 % value2;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('MOD', MOD);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_MOD = ((/* unused pure expression or super */ null && (MOD)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/MODE.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates the mode map of the given arguments.\n *\n * @private\n * @function Formula.processorFunctions.MULT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to process.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction getModeMap(args, table) {\n    var modeMap = {},\n        values = Formula_FormulaProcessor.getArgumentsValues(args,\n        table);\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    modeMap[value] = (modeMap[value] || 0) + 1;\n                }\n                break;\n            case 'object':\n                for (var j = 0, jEnd = value.length, value2 = void 0; j < jEnd; ++j) {\n                    value2 = value[j];\n                    if (typeof value2 === 'number' &&\n                        !isNaN(value2)) {\n                        modeMap[value2] = (modeMap[value2] || 0) + 1;\n                    }\n                }\n                break;\n        }\n    }\n    return modeMap;\n}\n/**\n * Processor for the `MODE.MULT(...values)` implementation. Calculates the most\n * frequent values of the give values.\n *\n * @private\n * @function Formula.processorFunctions.MULT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to process.\n *\n * @return {number|Array<number>}\n * Result value of the process.\n */\nfunction MULT(args, table) {\n    var modeMap = getModeMap(args,\n        table),\n        keys = Object.keys(modeMap);\n    if (!keys.length) {\n        return NaN;\n    }\n    var modeKeys = [parseFloat(keys[0])],\n        modeCount = modeMap[keys[0]];\n    for (var i = 1, iEnd = keys.length, key = void 0, count = void 0; i < iEnd; ++i) {\n        key = keys[i];\n        count = modeMap[key];\n        if (modeCount < count) {\n            modeKeys = [parseFloat(key)];\n            modeCount = count;\n        }\n        else if (modeCount === count) {\n            modeKeys.push(parseFloat(key));\n        }\n    }\n    return modeCount > 1 ? modeKeys : NaN;\n}\n/**\n * Processor for the `MODE.SNGL(...values)` implementation. Calculates the\n * lowest most frequent value of the give values.\n *\n * @private\n * @function Formula.processorFunctions['MODE.SNGL']\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to process.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction SNGL(args, table) {\n    var modeMap = getModeMap(args,\n        table),\n        keys = Object.keys(modeMap);\n    if (!keys.length) {\n        return NaN;\n    }\n    var modeKey = parseFloat(keys[0]),\n        modeCount = modeMap[keys[0]];\n    for (var i = 1, iEnd = keys.length, key = void 0, keyValue = void 0, count = void 0; i < iEnd; ++i) {\n        key = keys[i];\n        count = modeMap[key];\n        if (modeCount < count) {\n            modeKey = parseFloat(key);\n            modeCount = count;\n        }\n        else if (modeCount === count) {\n            keyValue = parseFloat(key);\n            if (modeKey > keyValue) {\n                modeKey = keyValue;\n                modeCount = count;\n            }\n        }\n    }\n    return modeCount > 1 ? modeKey : NaN;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('MODE', SNGL);\nFormula_FormulaProcessor.registerProcessorFunction('MODE.MULT', MULT);\nFormula_FormulaProcessor.registerProcessorFunction('MODE.SNGL', SNGL);\n/* *\n *\n *  Default Export\n *\n * */\nvar MODE = {\n    MULT: MULT,\n    SNGL: SNGL\n};\n/* harmony default export */ var Functions_MODE = ((/* unused pure expression or super */ null && (MODE)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/NOT.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar NOT_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `NOT(value)` implementation. Returns the opposite test\n * result.\n *\n * @private\n * @function Formula.processorFunctions.NOT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {boolean|number}\n * Result value of the process.\n */\nfunction NOT(args, table) {\n    var value = NOT_getArgumentValue(args[0],\n        table);\n    if (typeof value === 'object') {\n        value = value[0];\n    }\n    switch (typeof value) {\n        case 'boolean':\n        case 'number':\n            return !value;\n    }\n    return NaN;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('NOT', NOT);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_NOT = ((/* unused pure expression or super */ null && (NOT)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/OR.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar OR_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `OR(...tests)` implementation. Returns `TRUE`, if one test\n * result is not `0` or `FALSE`.\n *\n * @private\n * @function Formula.processorFunctions.AND\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {boolean}\n * Result value of the process.\n */\nfunction OR(args, table) {\n    for (var i = 0, iEnd = args.length, value = void 0; i < iEnd; ++i) {\n        value = OR_getArgumentValue(args[i], table);\n        if (typeof value === 'object') {\n            if (OR(value, table)) {\n                return true;\n            }\n        }\n        else if (value) {\n            return true;\n        }\n    }\n    return false;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('OR', OR);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_OR = ((/* unused pure expression or super */ null && (OR)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/PRODUCT.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar PRODUCT_getArgumentsValues = Formula_FormulaProcessor.getArgumentsValues;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `PRODUCT(...values)` implementation. Calculates the product\n * of the given values.\n *\n * @private\n * @function Formula.processorFunctions.PRODUCT\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction PRODUCT(args, table) {\n    var values = PRODUCT_getArgumentsValues(args,\n        table);\n    var result = 1,\n        calculated = false;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    calculated = true;\n                    result *= value;\n                }\n                break;\n            case 'object':\n                calculated = true;\n                result *= PRODUCT(value, table);\n                break;\n        }\n    }\n    return (calculated ? result : 0);\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('PRODUCT', PRODUCT);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_PRODUCT = ((/* unused pure expression or super */ null && (PRODUCT)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/SUM.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `SUM(...values)` implementation. Calculates the sum of the\n * given values.\n *\n * @private\n * @function Formula.processorFunctions.SUM\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to process.\n *\n * @return {number}\n * Result value of the process.\n */\nfunction SUM(args, table) {\n    var values = Formula_FormulaProcessor.getArgumentsValues(args,\n        table);\n    var result = 0;\n    for (var i = 0, iEnd = values.length, value = void 0; i < iEnd; ++i) {\n        value = values[i];\n        switch (typeof value) {\n            case 'number':\n                if (!isNaN(value)) {\n                    result += value;\n                }\n                break;\n            case 'object':\n                result += SUM(value, table);\n                break;\n        }\n    }\n    return result;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('SUM', SUM); // ð\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_SUM = ((/* unused pure expression or super */ null && (SUM)));\n\n;// ./code/es5/es-modules/Data/Formula/Functions/XOR.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\n\nvar XOR_getArgumentValue = Formula_FormulaProcessor.getArgumentValue;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Processor for the `XOR(...tests)` implementation. Returns `TRUE`, if at least\n * one of the given tests differs in result of other tests.\n *\n * @private\n * @function Formula.processorFunctions.AND\n *\n * @param {Highcharts.FormulaArguments} args\n * Arguments to process.\n *\n * @param {Highcharts.DataTable} [table]\n * Table to use for references and ranges.\n *\n * @return {boolean|number}\n * Result value of the process.\n */\nfunction XOR(args, table) {\n    for (var i = 0, iEnd = args.length, lastValue = void 0, value = void 0; i < iEnd; ++i) {\n        value = XOR_getArgumentValue(args[i], table);\n        switch (typeof value) {\n            case 'boolean':\n            case 'number':\n                if (typeof lastValue === 'undefined') {\n                    lastValue = !!value;\n                }\n                else if (!!value !== lastValue) {\n                    return true;\n                }\n                break;\n            case 'object':\n                for (var j = 0, jEnd = value.length, value2 = void 0; j < jEnd; ++j) {\n                    value2 = value[j];\n                    switch (typeof value2) {\n                        case 'boolean':\n                        case 'number':\n                            if (typeof lastValue === 'undefined') {\n                                lastValue = !!value2;\n                            }\n                            else if (!!value2 !== lastValue) {\n                                return true;\n                            }\n                            break;\n                    }\n                }\n                break;\n        }\n    }\n    return false;\n}\n/* *\n *\n *  Registry\n *\n * */\nFormula_FormulaProcessor.registerProcessorFunction('XOR', XOR);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Functions_XOR = ((/* unused pure expression or super */ null && (XOR)));\n\n;// ./code/es5/es-modules/Data/Formula/Formula.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* *\n *\n *  Imports\n *\n * */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* *\n *\n *  Default Export\n *\n * */\n/**\n * Formula engine to make use of spreadsheet formula strings.\n * @internal\n */\nvar Formula = __assign(__assign(__assign({}, Formula_FormulaParser), Formula_FormulaProcessor), FormulaTypes);\n/* harmony default export */ var Formula_Formula = (Formula);\n\n;// ./code/es5/es-modules/Data/Converters/CSVConverter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - Christer Vasseng\n *  - GÃ¸ran Slettemark\n *  - Sophie Bremer\n *\n * */\n\nvar CSVConverter_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar CSVConverter_assign = (undefined && undefined.__assign) || function () {\n    CSVConverter_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return CSVConverter_assign.apply(this, arguments);\n};\n\n\nvar CSVConverter_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Handles parsing and transforming CSV to a table.\n *\n * @private\n */\nvar CSVConverter = /** @class */ (function (_super) {\n    CSVConverter_extends(CSVConverter, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the CSV parser.\n     *\n     * @param {CSVConverter.UserOptions} [options]\n     * Options for the CSV parser.\n     */\n    function CSVConverter(options) {\n        var _this = this;\n        var mergedOptions = CSVConverter_merge(CSVConverter.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.columns = [];\n        _this.headers = [];\n        _this.dataTypes = [];\n        _this.options = mergedOptions;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Creates a CSV string from the datatable on the connector instance.\n     *\n     * @param {DataConnector} connector\n     * Connector instance to export from.\n     *\n     * @param {CSVConverter.Options} [options]\n     * Options used for the export.\n     *\n     * @return {string}\n     * CSV string from the connector table.\n     */\n    CSVConverter.prototype.export = function (connector, options) {\n        if (options === void 0) { options = this.options; }\n        var useLocalDecimalPoint = options.useLocalDecimalPoint,\n            lineDelimiter = options.lineDelimiter,\n            exportNames = (this.options.firstRowAsNames !== false);\n        var decimalPoint = options.decimalPoint,\n            itemDelimiter = options.itemDelimiter;\n        if (!decimalPoint) {\n            decimalPoint = (itemDelimiter !== ',' && useLocalDecimalPoint ?\n                (1.1).toLocaleString()[1] :\n                '.');\n        }\n        if (!itemDelimiter) {\n            itemDelimiter = (decimalPoint === ',' ? ';' : ',');\n        }\n        var columns = connector.getSortedColumns(options.usePresentationOrder),\n            columnNames = Object.keys(columns),\n            csvRows = [],\n            columnsCount = columnNames.length;\n        var rowArray = [];\n        // Add the names as the first row if they should be exported\n        if (exportNames) {\n            csvRows.push(columnNames.map(function (columnName) { return \"\\\"\".concat(columnName, \"\\\"\"); }).join(itemDelimiter));\n        }\n        for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\n            var columnName = columnNames[columnIndex],\n                column = columns[columnName],\n                columnLength = column.length;\n            var columnMeta = connector.whatIs(columnName);\n            var columnDataType = void 0;\n            if (columnMeta) {\n                columnDataType = columnMeta.dataType;\n            }\n            for (var rowIndex = 0; rowIndex < columnLength; rowIndex++) {\n                var cellValue = column[rowIndex];\n                if (!rowArray[rowIndex]) {\n                    rowArray[rowIndex] = [];\n                }\n                // Prefer datatype from metadata\n                if (columnDataType === 'string') {\n                    cellValue = '\"' + cellValue + '\"';\n                }\n                else if (typeof cellValue === 'number') {\n                    cellValue = String(cellValue).replace('.', decimalPoint);\n                }\n                else if (typeof cellValue === 'string') {\n                    cellValue = \"\\\"\".concat(cellValue, \"\\\"\");\n                }\n                rowArray[rowIndex][columnIndex] = cellValue;\n                // On the final column, push the row to the CSV\n                if (columnIndex === columnsCount - 1) {\n                    // Trim repeated undefined values starting at the end\n                    // Currently, we export the first \"comma\" even if the\n                    // second value is undefined\n                    var i = columnIndex;\n                    while (rowArray[rowIndex].length > 2) {\n                        var cellVal = rowArray[rowIndex][i];\n                        if (cellVal !== void 0) {\n                            break;\n                        }\n                        rowArray[rowIndex].pop();\n                        i--;\n                    }\n                    csvRows.push(rowArray[rowIndex].join(itemDelimiter));\n                }\n            }\n        }\n        return csvRows.join(lineDelimiter);\n    };\n    /**\n     * Initiates parsing of CSV\n     *\n     * @param {CSVConverter.UserOptions}[options]\n     * Options for the parser\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits CSVDataParser#parse\n     * @emits CSVDataParser#afterParse\n     */\n    CSVConverter.prototype.parse = function (options, eventDetail) {\n        var converter = this,\n            dataTypes = converter.dataTypes,\n            parserOptions = CSVConverter_merge(this.options,\n            options),\n            beforeParse = parserOptions.beforeParse,\n            lineDelimiter = parserOptions.lineDelimiter,\n            firstRowAsNames = parserOptions.firstRowAsNames,\n            itemDelimiter = parserOptions.itemDelimiter;\n        var lines,\n            rowIt = 0,\n            csv = parserOptions.csv,\n            startRow = parserOptions.startRow,\n            endRow = parserOptions.endRow,\n            column;\n        converter.columns = [];\n        converter.emit({\n            type: 'parse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.headers\n        });\n        if (csv && beforeParse) {\n            csv = beforeParse(csv);\n        }\n        if (csv) {\n            lines = csv\n                .replace(/\\r\\n|\\r/g, '\\n') // Windows | Mac\n                .split(lineDelimiter || '\\n');\n            if (!startRow || startRow < 0) {\n                startRow = 0;\n            }\n            if (!endRow || endRow >= lines.length) {\n                endRow = lines.length - 1;\n            }\n            if (!itemDelimiter) {\n                converter.guessedItemDelimiter =\n                    converter.guessDelimiter(lines);\n            }\n            // If the first row contain names, add them to the\n            // headers array and skip the row.\n            if (firstRowAsNames) {\n                var headers = lines[0].split(itemDelimiter || converter.guessedItemDelimiter || ',');\n                // Remove \"\"s from the headers\n                for (var i = 0; i < headers.length; i++) {\n                    headers[i] = headers[i].trim().replace(/^[\"']|[\"']$/g, '');\n                }\n                converter.headers = headers;\n                startRow++;\n            }\n            var offset = 0;\n            for (rowIt = startRow; rowIt <= endRow; rowIt++) {\n                if (lines[rowIt][0] === '#') {\n                    offset++;\n                }\n                else {\n                    converter\n                        .parseCSVRow(lines[rowIt], rowIt - startRow - offset);\n                }\n            }\n            if (dataTypes.length &&\n                dataTypes[0].length &&\n                dataTypes[0][1] === 'date' && // Format is a string date\n                !converter.options.dateFormat) {\n                converter.deduceDateFormat(converter.columns[0], null, true);\n            }\n            // Guess types.\n            for (var i = 0, iEnd = converter.columns.length; i < iEnd; ++i) {\n                column = converter.columns[i];\n                for (var j = 0, jEnd = column.length; j < jEnd; ++j) {\n                    if (column[j] && typeof column[j] === 'string') {\n                        var cellValue = converter.asGuessedType(column[j]);\n                        if (cellValue instanceof Date) {\n                            cellValue = cellValue.getTime();\n                        }\n                        converter.columns[i][j] = cellValue;\n                    }\n                }\n            }\n        }\n        converter.emit({\n            type: 'afterParse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.headers\n        });\n    };\n    /**\n     * Internal method that parses a single CSV row\n     */\n    CSVConverter.prototype.parseCSVRow = function (columnStr, rowNumber) {\n        var converter = this,\n            columns = converter.columns || [],\n            dataTypes = converter.dataTypes,\n            _a = converter.options,\n            startColumn = _a.startColumn,\n            endColumn = _a.endColumn,\n            itemDelimiter = (converter.options.itemDelimiter ||\n                converter.guessedItemDelimiter);\n        var decimalPoint = converter.options.decimalPoint;\n        if (!decimalPoint || decimalPoint === itemDelimiter) {\n            decimalPoint = converter.guessedDecimalPoint || '.';\n        }\n        var i = 0, c = '', token = '', actualColumn = 0, column = 0;\n        var read = function (j) {\n                c = columnStr[j];\n        };\n        var pushType = function (type) {\n                if (dataTypes.length < column + 1) {\n                    dataTypes.push([type]);\n            }\n            if (dataTypes[column][dataTypes[column].length - 1] !== type) {\n                dataTypes[column].push(type);\n            }\n        };\n        var push = function () {\n                if (startColumn > actualColumn || actualColumn > endColumn) {\n                    // Skip this column, but increment the column count (#7272)\n                    ++actualColumn;\n                token = '';\n                return;\n            }\n            // Save the type of the token.\n            if (typeof token === 'string') {\n                if (!isNaN(parseFloat(token)) && isFinite(token)) {\n                    token = parseFloat(token);\n                    pushType('number');\n                }\n                else if (!isNaN(Date.parse(token))) {\n                    token = token.replace(/\\//g, '-');\n                    pushType('date');\n                }\n                else {\n                    pushType('string');\n                }\n            }\n            else {\n                pushType('number');\n            }\n            if (columns.length < column + 1) {\n                columns.push([]);\n            }\n            // Try to apply the decimal point, and check if the token then is a\n            // number. If not, reapply the initial value\n            if (typeof token !== 'number' &&\n                converter.guessType(token) !== 'number' &&\n                decimalPoint) {\n                var initialValue = token;\n                token = token.replace(decimalPoint, '.');\n                if (converter.guessType(token) !== 'number') {\n                    token = initialValue;\n                }\n            }\n            columns[column][rowNumber] = token;\n            token = '';\n            ++column;\n            ++actualColumn;\n        };\n        if (!columnStr.trim().length) {\n            return;\n        }\n        if (columnStr.trim()[0] === '#') {\n            return;\n        }\n        for (; i < columnStr.length; i++) {\n            read(i);\n            if (c === '#') {\n                // If there are hexvalues remaining (#13283)\n                if (!/^#[A-F\\d]{3,3}|[A-F\\d]{6,6}/i.test(columnStr.substring(i))) {\n                    // The rest of the row is a comment\n                    push();\n                    return;\n                }\n            }\n            // Quoted string\n            if (c === '\"') {\n                read(++i);\n                while (i < columnStr.length) {\n                    if (c === '\"') {\n                        break;\n                    }\n                    token += c;\n                    read(++i);\n                }\n            }\n            else if (c === itemDelimiter) {\n                push();\n                // Actual column data\n            }\n            else {\n                token += c;\n            }\n        }\n        push();\n    };\n    /**\n     * Internal method that guesses the delimiter from the first\n     * 13 lines of the CSV\n     * @param {Array<string>} lines\n     * The CSV, split into lines\n     */\n    CSVConverter.prototype.guessDelimiter = function (lines) {\n        var points = 0,\n            commas = 0,\n            guessed;\n        var potDelimiters = {\n                ',': 0,\n                ';': 0,\n                '\\t': 0\n            }, linesCount = lines.length;\n        for (var i = 0; i < linesCount; i++) {\n            var inStr = false,\n                c = void 0,\n                cn = void 0,\n                cl = void 0,\n                token = '';\n            // We should be able to detect dateformats within 13 rows\n            if (i > 13) {\n                break;\n            }\n            var columnStr = lines[i];\n            for (var j = 0; j < columnStr.length; j++) {\n                c = columnStr[j];\n                cn = columnStr[j + 1];\n                cl = columnStr[j - 1];\n                if (c === '#') {\n                    // Skip the rest of the line - it's a comment\n                    break;\n                }\n                if (c === '\"') {\n                    if (inStr) {\n                        if (cl !== '\"' && cn !== '\"') {\n                            while (cn === ' ' && j < columnStr.length) {\n                                cn = columnStr[++j];\n                            }\n                            // After parsing a string, the next non-blank\n                            // should be a delimiter if the CSV is properly\n                            // formed.\n                            if (typeof potDelimiters[cn] !== 'undefined') {\n                                potDelimiters[cn]++;\n                            }\n                            inStr = false;\n                        }\n                    }\n                    else {\n                        inStr = true;\n                    }\n                }\n                else if (typeof potDelimiters[c] !== 'undefined') {\n                    token = token.trim();\n                    if (!isNaN(Date.parse(token))) {\n                        potDelimiters[c]++;\n                    }\n                    else if (isNaN(Number(token)) ||\n                        !isFinite(Number(token))) {\n                        potDelimiters[c]++;\n                    }\n                    token = '';\n                }\n                else {\n                    token += c;\n                }\n                if (c === ',') {\n                    commas++;\n                }\n                if (c === '.') {\n                    points++;\n                }\n            }\n        }\n        // Count the potential delimiters.\n        // This could be improved by checking if the number of delimiters\n        // equals the number of columns - 1\n        if (potDelimiters[';'] > potDelimiters[',']) {\n            guessed = ';';\n        }\n        else if (potDelimiters[','] > potDelimiters[';']) {\n            guessed = ',';\n        }\n        else {\n            // No good guess could be made..\n            guessed = ',';\n        }\n        // Try to deduce the decimal point if it's not explicitly set.\n        // If both commas or points is > 0 there is likely an issue\n        if (points > commas) {\n            this.guessedDecimalPoint = '.';\n        }\n        else {\n            this.guessedDecimalPoint = ',';\n        }\n        return guessed;\n    };\n    /**\n     * Handles converting the parsed data to a table.\n     *\n     * @return {DataTable}\n     * Table from the parsed CSV.\n     */\n    CSVConverter.prototype.getTable = function () {\n        return Converters_DataConverter.getTableFromColumns(this.columns, this.headers);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options\n     */\n    CSVConverter.defaultOptions = CSVConverter_assign(CSVConverter_assign({}, Converters_DataConverter.defaultOptions), { lineDelimiter: '\\n' });\n    return CSVConverter;\n}(Converters_DataConverter));\nConverters_DataConverter.registerType('CSV', CSVConverter);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Converters_CSVConverter = (CSVConverter);\n\n;// ./code/es5/es-modules/Data/Connectors/CSVConnector.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - Christer Vasseng\n *  - GÃ¸ran Slettemark\n *  - Sophie Bremer\n *\n * */\n\nvar CSVConnector_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar CSVConnector_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, CSVConnector_defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class that handles creating a DataConnector from CSV\n *\n * @private\n */\nvar CSVConnector = /** @class */ (function (_super) {\n    CSVConnector_extends(CSVConnector, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of CSVConnector.\n     *\n     * @param {CSVConnector.UserOptions} [options]\n     * Options for the connector and converter.\n     *\n     * @param {Array<DataTableOptions>} [dataTables]\n     * Multiple connector data tables options.\n     *\n     */\n    function CSVConnector(options, dataTables) {\n        var _this = this;\n        var mergedOptions = CSVConnector_merge(CSVConnector.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions, dataTables) || this;\n        _this.options = CSVConnector_defined(dataTables) ?\n            CSVConnector_merge(mergedOptions, { dataTables: dataTables }) : mergedOptions;\n        if (mergedOptions.enablePolling) {\n            _this.startPolling(Math.max(mergedOptions.dataRefreshRate || 0, 1) * 1000);\n        }\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initiates the loading of the CSV source to the connector\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits CSVConnector#load\n     * @emits CSVConnector#afterLoad\n     */\n    CSVConnector.prototype.load = function (eventDetail) {\n        var _this = this;\n        var _a;\n        var connector = this,\n            tables = connector.dataTables,\n            _b = connector.options,\n            csv = _b.csv,\n            csvURL = _b.csvURL,\n            dataModifier = _b.dataModifier,\n            dataTables = _b.dataTables;\n        connector.emit({\n            type: 'load',\n            csv: csv,\n            detail: eventDetail,\n            tables: tables\n        });\n        return Promise\n            .resolve(csvURL ?\n            fetch(csvURL, {\n                signal: (_a = connector === null || connector === void 0 ? void 0 : connector.pollingController) === null || _a === void 0 ? void 0 : _a.signal\n            }).then(function (response) { return response.text(); }) :\n            csv || '')\n            .then(function (csv) {\n            if (csv) {\n                _this.initConverters(csv, function (key) {\n                    var _a,\n                        _b;\n                    var options = _this.options;\n                    var tableOptions = dataTables === null || dataTables === void 0 ? void 0 : dataTables.find(function (dataTable) { return dataTable.key === key; });\n                    // Takes over the connector default options.\n                    var mergedTableOptions = {\n                            dataTableKey: key,\n                            firstRowAsNames: (_a = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.firstRowAsNames) !== null && _a !== void 0 ? _a : options.firstRowAsNames,\n                            beforeParse: (_b = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.beforeParse) !== null && _b !== void 0 ? _b : options.beforeParse\n                        };\n                    return new Converters_CSVConverter(CSVConnector_merge(_this.options, mergedTableOptions));\n                }, function (converter, data) {\n                    converter.parse({ csv: data });\n                });\n            }\n            return connector\n                .setModifierOptions(dataModifier, dataTables)\n                .then(function () { return csv; });\n        })\n            .then(function (csv) {\n            connector.emit({\n                type: 'afterLoad',\n                csv: csv,\n                detail: eventDetail,\n                tables: tables\n            });\n            return connector;\n        })['catch'](function (error) {\n            connector.emit({\n                type: 'loadError',\n                detail: eventDetail,\n                error: error,\n                tables: tables\n            });\n            throw error;\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    CSVConnector.defaultOptions = {\n        csv: '',\n        csvURL: '',\n        enablePolling: false,\n        dataRefreshRate: 1,\n        firstRowAsNames: true\n    };\n    return CSVConnector;\n}(Connectors_DataConnector));\nConnectors_DataConnector.registerType('CSV', CSVConnector);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Connectors_CSVConnector = ((/* unused pure expression or super */ null && (CSVConnector)));\n\n;// ./code/es5/es-modules/Data/Converters/JSONConverter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Pawel Lysy\n *\n * */\n\nvar JSONConverter_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar JSONConverter_assign = (undefined && undefined.__assign) || function () {\n    JSONConverter_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return JSONConverter_assign.apply(this, arguments);\n};\n\n\n\nvar error = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).error, isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, JSONConverter_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, JSONConverter_objectEach = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).objectEach;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Handles parsing and transforming JSON to a table.\n *\n * @private\n */\nvar JSONConverter = /** @class */ (function (_super) {\n    JSONConverter_extends(JSONConverter, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the JSON parser.\n     *\n     * @param {JSONConverter.UserOptions} [options]\n     * Options for the JSON parser.\n     */\n    function JSONConverter(options) {\n        var _this = this;\n        var mergedOptions = JSONConverter_merge(JSONConverter.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.columns = [];\n        _this.headers = [];\n        _this.options = mergedOptions;\n        _this.table = new Data_DataTable();\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initiates parsing of JSON structure.\n     *\n     * @param {JSONConverter.UserOptions}[options]\n     * Options for the parser\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits JSONConverter#parse\n     * @emits JSONConverter#afterParse\n     */\n    JSONConverter.prototype.parse = function (options, eventDetail) {\n        var converter = this;\n        options = JSONConverter_merge(converter.options, options);\n        var beforeParse = options.beforeParse,\n            orientation = options.orientation,\n            firstRowAsNames = options.firstRowAsNames,\n            columnNames = options.columnNames;\n        var data = options.data;\n        if (!data) {\n            return;\n        }\n        converter.columns = [];\n        converter.emit({\n            type: 'parse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.headers\n        });\n        if (beforeParse) {\n            data = beforeParse(data);\n        }\n        data = data.slice();\n        if (orientation === 'columns') {\n            for (var i = 0, iEnd = data.length; i < iEnd; i++) {\n                var item = data[i];\n                if (!(item instanceof Array)) {\n                    return;\n                }\n                if (converter.headers instanceof Array) {\n                    if (firstRowAsNames) {\n                        converter.headers.push(\"\".concat(item.shift()));\n                    }\n                    else if (columnNames && columnNames instanceof Array) {\n                        converter.headers.push(columnNames[i]);\n                    }\n                    converter.table.setColumn(converter.headers[i] || i.toString(), item);\n                }\n                else {\n                    error('JSONConverter: Invalid `columnNames` option.', false);\n                }\n            }\n        }\n        else if (orientation === 'rows') {\n            if (firstRowAsNames) {\n                converter.headers = data.shift();\n            }\n            else if (columnNames) {\n                converter.headers = columnNames;\n            }\n            var _loop_1 = function (rowIndex,\n                iEnd) {\n                    var row = data[rowIndex];\n                if (isArray(row)) {\n                    for (var columnIndex = 0, jEnd = row.length; columnIndex < jEnd; columnIndex++) {\n                        if (converter.columns.length < columnIndex + 1) {\n                            converter.columns.push([]);\n                        }\n                        converter.columns[columnIndex].push(row[columnIndex]);\n                        if (converter.headers instanceof Array) {\n                            this_1.table.setColumn(converter.headers[columnIndex] ||\n                                columnIndex.toString(), converter.columns[columnIndex]);\n                        }\n                        else {\n                            error('JSONConverter: Invalid `columnNames` option.', false);\n                        }\n                    }\n                }\n                else {\n                    var columnNames_1 = converter.headers;\n                    if (columnNames_1 && !(columnNames_1 instanceof Array)) {\n                        var newRow_1 = {};\n                        JSONConverter_objectEach(columnNames_1, function (arrayWithPath, name) {\n                            newRow_1[name] = arrayWithPath.reduce(function (acc, key) {\n                                return acc[key];\n                            }, row);\n                        });\n                        row = newRow_1;\n                    }\n                    this_1.table.setRows([row], rowIndex);\n                }\n            };\n            var this_1 = this;\n            for (var rowIndex = 0, iEnd = data.length; rowIndex < iEnd; rowIndex++) {\n                _loop_1(rowIndex, iEnd);\n            }\n        }\n        converter.emit({\n            type: 'afterParse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.headers\n        });\n    };\n    /**\n     * Handles converting the parsed data to a table.\n     *\n     * @return {DataTable}\n     * Table from the parsed CSV.\n     */\n    JSONConverter.prototype.getTable = function () {\n        return this.table;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options\n     */\n    JSONConverter.defaultOptions = JSONConverter_assign(JSONConverter_assign({}, Converters_DataConverter.defaultOptions), { orientation: 'rows' });\n    return JSONConverter;\n}(Converters_DataConverter));\nConverters_DataConverter.registerType('JSON', JSONConverter);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Converters_JSONConverter = (JSONConverter);\n\n;// ./code/es5/es-modules/Data/Connectors/JSONConnector.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Pawel Lysy\n *\n * */\n\nvar JSONConnector_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar JSONConnector_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, JSONConnector_defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class that handles creating a DataConnector from JSON structure\n *\n * @private\n */\nvar JSONConnector = /** @class */ (function (_super) {\n    JSONConnector_extends(JSONConnector, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of JSONConnector.\n     *\n     * @param {JSONConnector.UserOptions} [options]\n     * Options for the connector and converter.\n     *\n     * @param {Array<DataTableOptions>} [dataTables]\n     * Multiple connector data tables options.\n     */\n    function JSONConnector(options, dataTables) {\n        var _this = this;\n        var mergedOptions = JSONConnector_merge(JSONConnector.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions, dataTables) || this;\n        _this.options = JSONConnector_defined(dataTables) ?\n            JSONConnector_merge(mergedOptions, { dataTables: dataTables }) : mergedOptions;\n        if (mergedOptions.enablePolling) {\n            _this.startPolling(Math.max(mergedOptions.dataRefreshRate || 0, 1) * 1000);\n        }\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initiates the loading of the JSON source to the connector\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits JSONConnector#load\n     * @emits JSONConnector#afterLoad\n     */\n    JSONConnector.prototype.load = function (eventDetail) {\n        var _this = this;\n        var _a;\n        var connector = this,\n            tables = connector.dataTables,\n            _b = connector.options,\n            data = _b.data,\n            dataUrl = _b.dataUrl,\n            dataModifier = _b.dataModifier,\n            dataTables = _b.dataTables;\n        connector.emit({\n            type: 'load',\n            data: data,\n            detail: eventDetail,\n            tables: tables\n        });\n        return Promise\n            .resolve(dataUrl ?\n            fetch(dataUrl, {\n                signal: (_a = connector === null || connector === void 0 ? void 0 : connector.pollingController) === null || _a === void 0 ? void 0 : _a.signal\n            }).then(function (response) { return response.json(); })['catch'](function (error) {\n                connector.emit({\n                    type: 'loadError',\n                    detail: eventDetail,\n                    error: error,\n                    tables: tables\n                });\n                console.warn(\"Unable to fetch data from \".concat(dataUrl, \".\")); // eslint-disable-line no-console\n            }) :\n            data || [])\n            .then(function (data) {\n            if (data) {\n                _this.initConverters(data, function (key) {\n                    var _a,\n                        _b,\n                        _c,\n                        _d;\n                    var options = _this.options;\n                    var tableOptions = dataTables === null || dataTables === void 0 ? void 0 : dataTables.find(function (dataTable) { return dataTable.key === key; });\n                    // Takes over the connector default options.\n                    var mergedTableOptions = {\n                            dataTableKey: key,\n                            columnNames: (_a = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.columnNames) !== null && _a !== void 0 ? _a : options.columnNames,\n                            firstRowAsNames: (_b = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.firstRowAsNames) !== null && _b !== void 0 ? _b : options.firstRowAsNames,\n                            orientation: (_c = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.orientation) !== null && _c !== void 0 ? _c : options.orientation,\n                            beforeParse: (_d = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.beforeParse) !== null && _d !== void 0 ? _d : options.beforeParse\n                        };\n                    return new Converters_JSONConverter(JSONConnector_merge(_this.options, mergedTableOptions));\n                }, function (converter, data) {\n                    converter.parse({ data: data });\n                });\n            }\n            return connector.setModifierOptions(dataModifier, dataTables)\n                .then(function () { return data; });\n        })\n            .then(function (data) {\n            connector.emit({\n                type: 'afterLoad',\n                data: data,\n                detail: eventDetail,\n                tables: tables\n            });\n            return connector;\n        })['catch'](function (error) {\n            connector.emit({\n                type: 'loadError',\n                detail: eventDetail,\n                error: error,\n                tables: tables\n            });\n            throw error;\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    JSONConnector.defaultOptions = {\n        enablePolling: false,\n        dataRefreshRate: 0,\n        firstRowAsNames: true,\n        orientation: 'rows'\n    };\n    return JSONConnector;\n}(Connectors_DataConnector));\nConnectors_DataConnector.registerType('JSON', JSONConnector);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Connectors_JSONConnector = ((/* unused pure expression or super */ null && (JSONConnector)));\n\n;// ./code/es5/es-modules/Data/Converters/GoogleSheetsConverter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - GÃ¸ran Slettemark\n *  - Wojciech Chmiel\n *  - Sophie Bremer\n *\n * */\n\nvar GoogleSheetsConverter_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar GoogleSheetsConverter_assign = (undefined && undefined.__assign) || function () {\n    GoogleSheetsConverter_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return GoogleSheetsConverter_assign.apply(this, arguments);\n};\n\n\nvar GoogleSheetsConverter_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, GoogleSheetsConverter_uniqueKey = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).uniqueKey;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Handles parsing and transformation of an Google Sheets to a table.\n *\n * @private\n */\nvar GoogleSheetsConverter = /** @class */ (function (_super) {\n    GoogleSheetsConverter_extends(GoogleSheetsConverter, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the GoogleSheetsConverter.\n     *\n     * @param {GoogleSheetsConverter.UserOptions} [options]\n     * Options for the GoogleSheetsConverter.\n     */\n    function GoogleSheetsConverter(options) {\n        var _this = this;\n        var mergedOptions = GoogleSheetsConverter_merge(GoogleSheetsConverter.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions) || this;\n        _this.columns = [];\n        _this.header = [];\n        _this.options = mergedOptions;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initiates the parsing of the Google Sheet\n     *\n     * @param {GoogleSheetsConverter.UserOptions}[options]\n     * Options for the parser\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits GoogleSheetsParser#parse\n     * @emits GoogleSheetsParser#afterParse\n     */\n    GoogleSheetsConverter.prototype.parse = function (options, eventDetail) {\n        var _a;\n        var converter = this,\n            parseOptions = GoogleSheetsConverter_merge(converter.options,\n            options);\n        var columns = (((_a = parseOptions.json) === null || _a === void 0 ? void 0 : _a.values) || []).map(function (column) { return column.slice(); });\n        if (columns.length === 0) {\n            return false;\n        }\n        converter.header = [];\n        converter.columns = [];\n        converter.emit({\n            type: 'parse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.header\n        });\n        // If beforeParse is defined, use it to modify the data\n        var beforeParse = parseOptions.beforeParse,\n            json = parseOptions.json;\n        if (beforeParse && json) {\n            columns = beforeParse(json.values);\n        }\n        var column;\n        converter.columns = columns;\n        for (var i = 0, iEnd = columns.length; i < iEnd; i++) {\n            column = columns[i];\n            converter.header[i] = (parseOptions.firstRowAsNames ?\n                \"\".concat(column.shift()) :\n                GoogleSheetsConverter_uniqueKey());\n            for (var j = 0, jEnd = column.length; j < jEnd; ++j) {\n                if (column[j] && typeof column[j] === 'string') {\n                    var cellValue = converter.asGuessedType(column[j]);\n                    if (cellValue instanceof Date) {\n                        cellValue = cellValue.getTime();\n                    }\n                    converter.columns[i][j] = cellValue;\n                }\n            }\n        }\n        converter.emit({\n            type: 'afterParse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.header\n        });\n    };\n    /**\n     * Handles converting the parsed data to a table.\n     *\n     * @return {DataTable}\n     * Table from the parsed Google Sheet\n     */\n    GoogleSheetsConverter.prototype.getTable = function () {\n        return Converters_DataConverter.getTableFromColumns(this.columns, this.header);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options\n     */\n    GoogleSheetsConverter.defaultOptions = GoogleSheetsConverter_assign({}, Converters_DataConverter.defaultOptions);\n    return GoogleSheetsConverter;\n}(Converters_DataConverter));\nConverters_DataConverter.registerType('GoogleSheets', GoogleSheetsConverter);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Converters_GoogleSheetsConverter = (GoogleSheetsConverter);\n\n;// ./code/es5/es-modules/Data/Connectors/GoogleSheetsConnector.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - GÃ¸ran Slettemark\n *  - Wojciech Chmiel\n *  - Sophie Bremer\n *  - Jomar HÃ¸nsi\n *\n * */\n\nvar GoogleSheetsConnector_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar GoogleSheetsConnector_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, GoogleSheetsConnector_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, GoogleSheetsConnector_defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Tests Google's response for error.\n * @private\n */\nfunction isGoogleError(json) {\n    return (typeof json === 'object' && json &&\n        typeof json.error === 'object' && json.error &&\n        typeof json.error.code === 'number' &&\n        typeof json.error.message === 'string' &&\n        typeof json.error.status === 'string');\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @todo implement save, requires oauth2\n */\nvar GoogleSheetsConnector = /** @class */ (function (_super) {\n    GoogleSheetsConnector_extends(GoogleSheetsConnector, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of GoogleSheetsConnector\n     *\n     * @param {GoogleSheetsConnector.UserOptions} [options]\n     * Options for the connector and converter.\n     *\n     * @param {Array<DataTableOptions>} [dataTables]\n     * Multiple connector data tables options.\n     *\n     */\n    function GoogleSheetsConnector(options, dataTables) {\n        var _this = this;\n        var mergedOptions = GoogleSheetsConnector_merge(GoogleSheetsConnector.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions, dataTables) || this;\n        _this.options = GoogleSheetsConnector_defined(dataTables) ?\n            GoogleSheetsConnector_merge(mergedOptions, { dataTables: dataTables }) : mergedOptions;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Loads data from a Google Spreadsheet.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Promise<this>}\n     * Same connector instance with modified table.\n     */\n    GoogleSheetsConnector.prototype.load = function (eventDetail) {\n        var _this = this;\n        var _a;\n        var connector = this,\n            tables = connector.dataTables,\n            _b = connector.options,\n            dataModifier = _b.dataModifier,\n            dataRefreshRate = _b.dataRefreshRate,\n            enablePolling = _b.enablePolling,\n            googleAPIKey = _b.googleAPIKey,\n            googleSpreadsheetKey = _b.googleSpreadsheetKey,\n            dataTables = _b.dataTables,\n            url = GoogleSheetsConnector.buildFetchURL(googleAPIKey,\n            googleSpreadsheetKey,\n            connector.options);\n        connector.emit({\n            type: 'load',\n            detail: eventDetail,\n            tables: tables,\n            url: url\n        });\n        if (!URL.canParse(url)) {\n            throw new Error('Invalid URL: ' + url);\n        }\n        return fetch(url, { signal: (_a = connector === null || connector === void 0 ? void 0 : connector.pollingController) === null || _a === void 0 ? void 0 : _a.signal })\n            .then(function (response) { return (response.json()); })\n            .then(function (json) {\n            if (isGoogleError(json)) {\n                throw new Error(json.error.message);\n            }\n            _this.initConverters(json, function (key) {\n                var _a,\n                    _b;\n                var options = _this.options;\n                var tableOptions = dataTables === null || dataTables === void 0 ? void 0 : dataTables.find(function (dataTable) { return dataTable.key === key; });\n                // Takes over the connector default options.\n                var mergedTableOptions = {\n                        dataTableKey: key,\n                        firstRowAsNames: (_a = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.firstRowAsNames) !== null && _a !== void 0 ? _a : options.firstRowAsNames,\n                        beforeParse: (_b = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.beforeParse) !== null && _b !== void 0 ? _b : options.beforeParse\n                    };\n                return new Converters_GoogleSheetsConverter(GoogleSheetsConnector_merge(_this.options, mergedTableOptions));\n            }, function (converter, data) {\n                converter.parse({ json: data });\n            });\n            return connector.setModifierOptions(dataModifier, dataTables);\n        })\n            .then(function () {\n            connector.emit({\n                type: 'afterLoad',\n                detail: eventDetail,\n                tables: tables,\n                url: url\n            });\n            // Polling\n            if (enablePolling) {\n                setTimeout(function () { return connector.load(); }, Math.max(dataRefreshRate || 0, 1) * 1000);\n            }\n            return connector;\n        })['catch'](function (error) {\n            connector.emit({\n                type: 'loadError',\n                detail: eventDetail,\n                error: error,\n                tables: tables\n            });\n            throw error;\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    GoogleSheetsConnector.defaultOptions = {\n        googleAPIKey: '',\n        googleSpreadsheetKey: '',\n        enablePolling: false,\n        dataRefreshRate: 2,\n        firstRowAsNames: true\n    };\n    return GoogleSheetsConnector;\n}(Connectors_DataConnector));\n/* *\n *\n *  Class Namespace\n *\n * */\n(function (GoogleSheetsConnector) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Creates GoogleSheets API v4 URL.\n     * @private\n     */\n    function buildFetchURL(apiKey, sheetKey, options) {\n        if (options === void 0) { options = {}; }\n        var url = new URL(\"https://sheets.googleapis.com/v4/spreadsheets/\".concat(sheetKey, \"/values/\"));\n        var range = options.onlyColumnNames ?\n                'A1:Z1' : buildQueryRange(options);\n        url.pathname += range;\n        var searchParams = url.searchParams;\n        searchParams.set('alt', 'json');\n        if (!options.onlyColumnNames) {\n            searchParams.set('dateTimeRenderOption', 'FORMATTED_STRING');\n            searchParams.set('majorDimension', 'COLUMNS');\n            searchParams.set('valueRenderOption', 'UNFORMATTED_VALUE');\n        }\n        searchParams.set('prettyPrint', 'false');\n        searchParams.set('key', apiKey);\n        return url.href;\n    }\n    GoogleSheetsConnector.buildFetchURL = buildFetchURL;\n    /**\n     * Creates sheets range.\n     * @private\n     */\n    function buildQueryRange(options) {\n        if (options === void 0) { options = {}; }\n        var endColumn = options.endColumn,\n            endRow = options.endRow,\n            googleSpreadsheetRange = options.googleSpreadsheetRange,\n            startColumn = options.startColumn,\n            startRow = options.startRow;\n        return googleSpreadsheetRange || ((alphabet[startColumn || 0] || 'A') +\n            (Math.max((startRow || 0), 0) + 1) +\n            ':' +\n            (alphabet[GoogleSheetsConnector_pick(endColumn, 25)] || 'Z') +\n            (endRow ?\n                Math.max(endRow, 0) :\n                'Z'));\n    }\n    GoogleSheetsConnector.buildQueryRange = buildQueryRange;\n})(GoogleSheetsConnector || (GoogleSheetsConnector = {}));\nConnectors_DataConnector.registerType('GoogleSheets', GoogleSheetsConnector);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Connectors_GoogleSheetsConnector = ((/* unused pure expression or super */ null && (GoogleSheetsConnector)));\n\n;// ./code/es5/es-modules/Data/Converters/HTMLTableConverter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - GÃ¸ran Slettemark\n *  - Wojciech Chmiel\n *  - Sophie Bremer\n *\n * */\n\nvar HTMLTableConverter_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar HTMLTableConverter_assign = (undefined && undefined.__assign) || function () {\n    HTMLTableConverter_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return HTMLTableConverter_assign.apply(this, arguments);\n};\n\n\nvar HTMLTableConverter_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Row equal\n */\nfunction isRowEqual(row1, row2) {\n    var i = row1.length;\n    if (row2.length === i) {\n        while (--i) {\n            if (row1[i] !== row2[i]) {\n                return false;\n            }\n        }\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Handles parsing and transformation of an HTML table to a table.\n *\n * @private\n */\nvar HTMLTableConverter = /** @class */ (function (_super) {\n    HTMLTableConverter_extends(HTMLTableConverter, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the HTMLTableConverter.\n     *\n     * @param {HTMLTableConverter.UserOptions} [options]\n     * Options for the HTMLTableConverter.\n     */\n    function HTMLTableConverter(options) {\n        var _this = this;\n        var mergedOptions = HTMLTableConverter_merge(HTMLTableConverter.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions) || this;\n        _this.columns = [];\n        _this.headers = [];\n        _this.options = mergedOptions;\n        if (mergedOptions.tableElement) {\n            _this.tableElement = mergedOptions.tableElement;\n            _this.tableElementID = mergedOptions.tableElement.id;\n        }\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Exports the dataconnector as an HTML string, using the options\n     * provided on import unless other options are provided.\n     *\n     * @param {DataConnector} connector\n     * Connector instance to export from.\n     *\n     * @param {HTMLTableConnector.ExportOptions} [options]\n     * Options that override default or existing export options.\n     *\n     * @return {string}\n     * HTML from the current dataTable.\n     */\n    HTMLTableConverter.prototype.export = function (connector, options) {\n        if (options === void 0) { options = this.options; }\n        var exportNames = (options.firstRowAsNames !== false),\n            useMultiLevelHeaders = options.useMultiLevelHeaders;\n        var columns = connector.getSortedColumns(options.usePresentationOrder),\n            columnNames = Object.keys(columns),\n            htmlRows = [],\n            columnsCount = columnNames.length;\n        var rowArray = [];\n        var tableHead = '';\n        // Add the names as the first row if they should be exported\n        if (exportNames) {\n            var subcategories = [];\n            // If using multilevel headers, the first value\n            // of each column is a subcategory\n            if (useMultiLevelHeaders) {\n                for (var _i = 0, columnNames_1 = columnNames; _i < columnNames_1.length; _i++) {\n                    var name_1 = columnNames_1[_i];\n                    var column = columns[name_1];\n                    if (!Array.isArray(column)) {\n                        // Convert to conventional array from typed array\n                        // if needed\n                        column = Array.from(column);\n                    }\n                    var subhead = (column.shift() || '').toString();\n                    columns[name_1] = column;\n                    subcategories.push(subhead);\n                }\n                tableHead = this.getTableHeaderHTML(columnNames, subcategories, options);\n            }\n            else {\n                tableHead = this.getTableHeaderHTML(void 0, columnNames, options);\n            }\n        }\n        for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\n            var columnName = columnNames[columnIndex],\n                column = columns[columnName],\n                columnLength = column.length;\n            for (var rowIndex = 0; rowIndex < columnLength; rowIndex++) {\n                var cellValue = column[rowIndex];\n                if (!rowArray[rowIndex]) {\n                    rowArray[rowIndex] = [];\n                }\n                // Alternative: Datatype from HTML attribute with\n                // connector.whatIs(columnName)\n                if (!(typeof cellValue === 'string' ||\n                    typeof cellValue === 'number' ||\n                    typeof cellValue === 'undefined')) {\n                    cellValue = (cellValue || '').toString();\n                }\n                rowArray[rowIndex][columnIndex] = this.getCellHTMLFromValue(columnIndex ? 'td' : 'th', null, columnIndex ? '' : 'scope=\"row\"', cellValue);\n                // On the final column, push the row to the array\n                if (columnIndex === columnsCount - 1) {\n                    htmlRows.push('<tr>' +\n                        rowArray[rowIndex].join('') +\n                        '</tr>');\n                }\n            }\n        }\n        var caption = '';\n        // Add table caption\n        // Current exportdata falls back to chart title\n        // but that should probably be handled elsewhere?\n        if (options.tableCaption) {\n            caption = '<caption class=\"highcharts-table-caption\">' +\n                options.tableCaption +\n                '</caption>';\n        }\n        return ('<table>' +\n            caption +\n            tableHead +\n            '<tbody>' +\n            htmlRows.join('') +\n            '</tbody>' +\n            '</table>');\n    };\n    /**\n     * Get table cell markup from row data.\n     */\n    HTMLTableConverter.prototype.getCellHTMLFromValue = function (tag, classes, attrs, value, decimalPoint) {\n        var val = value,\n            className = 'text' + (classes ? ' ' + classes : '');\n        // Convert to string if number\n        if (typeof val === 'number') {\n            val = val.toString();\n            if (decimalPoint === ',') {\n                val = val.replace('.', decimalPoint);\n            }\n            className = 'number';\n        }\n        else if (!value) {\n            val = '';\n            className = 'empty';\n        }\n        return '<' + tag + (attrs ? ' ' + attrs : '') +\n            ' class=\"' + className + '\">' +\n            val + '</' + tag + '>';\n    };\n    /**\n     * Get table header markup from row data.\n     */\n    HTMLTableConverter.prototype.getTableHeaderHTML = function (topheaders, subheaders, options) {\n        if (topheaders === void 0) { topheaders = []; }\n        if (subheaders === void 0) { subheaders = []; }\n        if (options === void 0) { options = this.options; }\n        var useMultiLevelHeaders = options.useMultiLevelHeaders,\n            useRowspanHeaders = options.useRowspanHeaders;\n        var html = '<thead>',\n            i = 0,\n            len = subheaders && subheaders.length,\n            next,\n            cur,\n            curColspan = 0,\n            rowspan;\n        // Clean up multiple table headers. Exporting.getDataRows() returns two\n        // levels of headers when using multilevel, not merged. We need to\n        // merge identical headers, remove redundant headers, and keep it\n        // all marked up nicely.\n        if (useMultiLevelHeaders &&\n            topheaders &&\n            subheaders &&\n            !isRowEqual(topheaders, subheaders)) {\n            html += '<tr>';\n            for (; i < len; ++i) {\n                cur = topheaders[i];\n                next = topheaders[i + 1];\n                if (cur === next) {\n                    ++curColspan;\n                }\n                else if (curColspan) {\n                    // Ended colspan\n                    // Add cur to HTML with colspan.\n                    html += this.getCellHTMLFromValue('th', 'highcharts-table-topheading', 'scope=\"col\" ' +\n                        'colspan=\"' + (curColspan + 1) + '\"', cur);\n                    curColspan = 0;\n                }\n                else {\n                    // Cur is standalone. If it is same as sublevel,\n                    // remove sublevel and add just toplevel.\n                    if (cur === subheaders[i]) {\n                        if (useRowspanHeaders) {\n                            rowspan = 2;\n                            subheaders.splice(i, 1);\n                        }\n                        else {\n                            rowspan = 1;\n                            subheaders[i] = '';\n                        }\n                    }\n                    else {\n                        rowspan = 1;\n                    }\n                    html += this.getCellHTMLFromValue('th', 'highcharts-table-topheading', 'scope=\"col\"' +\n                        (rowspan > 1 ?\n                            ' valign=\"top\" rowspan=\"' + rowspan + '\"' :\n                            ''), cur);\n                }\n            }\n            html += '</tr>';\n        }\n        // Add the subheaders (the only headers if not using multilevels)\n        if (subheaders) {\n            html += '<tr>';\n            for (i = 0, len = subheaders.length; i < len; ++i) {\n                if (typeof subheaders[i] !== 'undefined') {\n                    html += this.getCellHTMLFromValue('th', null, 'scope=\"col\"', subheaders[i]);\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</thead>';\n        return html;\n    };\n    /**\n     * Initiates the parsing of the HTML table\n     *\n     * @param {HTMLTableConverter.UserOptions}[options]\n     * Options for the parser\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits CSVDataParser#parse\n     * @emits CSVDataParser#afterParse\n     * @emits HTMLTableParser#parseError\n     */\n    HTMLTableConverter.prototype.parse = function (options, eventDetail) {\n        var converter = this,\n            columns = [],\n            headers = [],\n            parseOptions = HTMLTableConverter_merge(converter.options,\n            options),\n            endRow = parseOptions.endRow,\n            startColumn = parseOptions.startColumn,\n            endColumn = parseOptions.endColumn,\n            firstRowAsNames = parseOptions.firstRowAsNames,\n            tableHTML = parseOptions.tableElement || this.tableElement;\n        if (!(tableHTML instanceof HTMLElement)) {\n            converter.emit({\n                type: 'parseError',\n                columns: columns,\n                detail: eventDetail,\n                headers: headers,\n                error: 'Not a valid HTML Table'\n            });\n            return;\n        }\n        converter.tableElement = tableHTML;\n        converter.tableElementID = tableHTML.id;\n        this.emit({\n            type: 'parse',\n            columns: converter.columns,\n            detail: eventDetail,\n            headers: converter.headers\n        });\n        var rows = tableHTML.getElementsByTagName('tr'),\n            rowsCount = rows.length;\n        var rowIndex = 0,\n            item,\n            startRow = parseOptions.startRow;\n        // Insert headers from the first row\n        if (firstRowAsNames && rowsCount) {\n            var items = rows[0].children,\n                itemsLength = items.length;\n            for (var i = startColumn; i < itemsLength; i++) {\n                if (i > endColumn) {\n                    break;\n                }\n                item = items[i];\n                if (item.tagName === 'TD' ||\n                    item.tagName === 'TH') {\n                    headers.push(item.innerHTML);\n                }\n            }\n            startRow++;\n        }\n        while (rowIndex < rowsCount) {\n            if (rowIndex >= startRow && rowIndex <= endRow) {\n                var columnsInRow = rows[rowIndex].children,\n                    columnsInRowLength = columnsInRow.length;\n                var columnIndex = 0;\n                while (columnIndex < columnsInRowLength) {\n                    var relativeColumnIndex = columnIndex - startColumn,\n                        row = columns[relativeColumnIndex];\n                    item = columnsInRow[columnIndex];\n                    if ((item.tagName === 'TD' ||\n                        item.tagName === 'TH') &&\n                        (columnIndex >= startColumn &&\n                            columnIndex <= endColumn)) {\n                        if (!columns[relativeColumnIndex]) {\n                            columns[relativeColumnIndex] = [];\n                        }\n                        var cellValue = converter.asGuessedType(item.innerHTML);\n                        if (cellValue instanceof Date) {\n                            cellValue = cellValue.getTime();\n                        }\n                        columns[relativeColumnIndex][rowIndex - startRow] = cellValue;\n                        // Loop over all previous indices and make sure\n                        // they are nulls, not undefined.\n                        var i = 1;\n                        while (rowIndex - startRow >= i &&\n                            row[rowIndex - startRow - i] === void 0) {\n                            row[rowIndex - startRow - i] = null;\n                            i++;\n                        }\n                    }\n                    columnIndex++;\n                }\n            }\n            rowIndex++;\n        }\n        this.columns = columns;\n        this.headers = headers;\n        this.emit({\n            type: 'afterParse',\n            columns: columns,\n            detail: eventDetail,\n            headers: headers\n        });\n    };\n    /**\n     * Handles converting the parsed data to a table.\n     *\n     * @return {DataTable}\n     * Table from the parsed HTML table\n     */\n    HTMLTableConverter.prototype.getTable = function () {\n        return Converters_DataConverter.getTableFromColumns(this.columns, this.headers);\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options\n     */\n    HTMLTableConverter.defaultOptions = HTMLTableConverter_assign(HTMLTableConverter_assign({}, Converters_DataConverter.defaultOptions), { useRowspanHeaders: true, useMultiLevelHeaders: true });\n    return HTMLTableConverter;\n}(Converters_DataConverter));\nConverters_DataConverter.registerType('HTMLTable', HTMLTableConverter);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Converters_HTMLTableConverter = (HTMLTableConverter);\n\n;// ./code/es5/es-modules/Data/Connectors/HTMLTableConnector.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Torstein HÃ¸nsi\n *  - GÃ¸ran Slettemark\n *  - Wojciech Chmiel\n *  - Sophie Bremer\n *\n * */\n\nvar HTMLTableConnector_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win;\n\n\nvar HTMLTableConnector_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Class that handles creating a data connector from an HTML table.\n *\n * @private\n */\nvar HTMLTableConnector = /** @class */ (function (_super) {\n    HTMLTableConnector_extends(HTMLTableConnector, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of HTMLTableConnector.\n     *\n     * @param {HTMLTableConnector.UserOptions} [options]\n     * Options for the connector and converter.\n     */\n    function HTMLTableConnector(options) {\n        var _this = this;\n        var mergedOptions = HTMLTableConnector_merge(HTMLTableConnector.defaultOptions,\n            options);\n        _this = _super.call(this, mergedOptions) || this;\n        _this.converter = new Converters_HTMLTableConverter(mergedOptions);\n        _this.options = mergedOptions;\n        return _this;\n    }\n    /**\n     * Initiates creating the dataconnector from the HTML table\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @emits HTMLTableConnector#load\n     * @emits HTMLTableConnector#afterLoad\n     * @emits HTMLTableConnector#loadError\n     */\n    HTMLTableConnector.prototype.load = function (eventDetail) {\n        var connector = this,\n            converter = connector.converter,\n            table = connector.table,\n            _a = connector.options,\n            dataModifier = _a.dataModifier,\n            tableHTML = _a.table;\n        connector.emit({\n            type: 'load',\n            detail: eventDetail,\n            tables: { table: table },\n            tableElement: connector.tableElement\n        });\n        var tableElement;\n        if (typeof tableHTML === 'string') {\n            connector.tableID = tableHTML;\n            tableElement = win.document.getElementById(tableHTML);\n        }\n        else {\n            tableElement = tableHTML;\n            connector.tableID = tableElement.id;\n        }\n        connector.tableElement = tableElement || void 0;\n        if (!connector.tableElement) {\n            var error = 'HTML table not provided, or element with ID not found';\n            connector.emit({\n                type: 'loadError',\n                detail: eventDetail,\n                error: error,\n                tables: { table: table }\n            });\n            return Promise.reject(new Error(error));\n        }\n        converter.parse(HTMLTableConnector_merge({ tableElement: connector.tableElement }, connector.options), eventDetail);\n        // If already loaded, clear the current rows\n        table.deleteColumns();\n        table.setColumns(converter.getTable().getColumns());\n        return connector\n            .setModifierOptions(dataModifier)\n            .then(function () {\n            connector.emit({\n                type: 'afterLoad',\n                detail: eventDetail,\n                tables: { table: table },\n                tableElement: connector.tableElement\n            });\n            return connector;\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    HTMLTableConnector.defaultOptions = {\n        table: ''\n    };\n    return HTMLTableConnector;\n}(Connectors_DataConnector));\nConnectors_DataConnector.registerType('HTMLTable', HTMLTableConnector);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Connectors_HTMLTableConnector = ((/* unused pure expression or super */ null && (HTMLTableConnector)));\n\n;// ./code/es5/es-modules/Data/Modifiers/ChainModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Dawid Dragula\n *\n * */\n\nvar ChainModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ChainModifier_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar ChainModifier_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0,\n        sent: function() { if (t[0] & 1) throw t[1]; return t[1]; },\n        trys: [],\n        ops: [] },\n        f,\n        y,\n        t,\n        g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\nvar ChainModifier_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Modifies a table with the help of modifiers in an ordered chain.\n *\n */\nvar ChainModifier = /** @class */ (function (_super) {\n    ChainModifier_extends(ChainModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the modifier chain.\n     *\n     * @param {Partial<ChainModifier.Options>} [options]\n     * Options to configure the modifier chain.\n     *\n     * @param {...DataModifier} [chain]\n     * Ordered chain of modifiers.\n     */\n    function ChainModifier(options) {\n        var chain = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            chain[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.chain = chain;\n        _this.options = ChainModifier_merge(ChainModifier.defaultOptions, options);\n        var optionsChain = _this.options.chain || [];\n        for (var i = 0, iEnd = optionsChain.length, modifierOptions = void 0, ModifierClass = void 0; i < iEnd; ++i) {\n            modifierOptions = optionsChain[i];\n            if (!modifierOptions.type) {\n                continue;\n            }\n            ModifierClass = Modifiers_DataModifier.types[modifierOptions.type];\n            if (ModifierClass) {\n                chain.push(new ModifierClass(modifierOptions));\n            }\n        }\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds a configured modifier to the end of the modifier chain. Please note,\n     * that the modifier can be added multiple times.\n     *\n     * @param {DataModifier} modifier\n     * Configured modifier to add.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     */\n    ChainModifier.prototype.add = function (modifier, eventDetail) {\n        this.emit({\n            type: 'addModifier',\n            detail: eventDetail,\n            modifier: modifier\n        });\n        this.chain.push(modifier);\n        this.emit({\n            type: 'addModifier',\n            detail: eventDetail,\n            modifier: modifier\n        });\n    };\n    /**\n     * Clears all modifiers from the chain.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     */\n    ChainModifier.prototype.clear = function (eventDetail) {\n        this.emit({\n            type: 'clearChain',\n            detail: eventDetail\n        });\n        this.chain.length = 0;\n        this.emit({\n            type: 'afterClearChain',\n            detail: eventDetail\n        });\n    };\n    /**\n     * Applies several modifications to the table and returns a modified copy of\n     * the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Table to modify.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Promise<Highcharts.DataTable>}\n     * Table with `modified` property as a reference.\n     */\n    ChainModifier.prototype.modify = function (table, eventDetail) {\n        return ChainModifier_awaiter(this, void 0, void 0, function () {\n            var modifiers,\n                modified,\n                i,\n                iEnd,\n                error_1;\n            return ChainModifier_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        modifiers = (this.options.reverse ?\n                            this.chain.slice().reverse() :\n                            this.chain.slice());\n                        if (table.modified === table) {\n                            table.modified = table.clone(false, eventDetail);\n                        }\n                        modified = table;\n                        i = 0, iEnd = modifiers.length;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < iEnd)) return [3 /*break*/, 7];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, modifiers[i].modify(modified, eventDetail)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        this.emit({\n                            type: 'error',\n                            detail: eventDetail,\n                            table: table\n                        });\n                        throw error_1;\n                    case 5:\n                        modified = modified.modified;\n                        _a.label = 6;\n                    case 6:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 7:\n                        table.modified = modified;\n                        return [2 /*return*/, table];\n                }\n            });\n        });\n    };\n    /**\n     * Applies partial modifications of a cell change to the property `modified`\n     * of the given modified table.\n     *\n     * *Note:* The `modified` property of the table gets replaced.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {string} columnName\n     * Column name of changed cell.\n     *\n     * @param {number|undefined} rowIndex\n     * Row index of changed cell.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Changed cell value.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    ChainModifier.prototype.modifyCell = function (table, columnName, rowIndex, cellValue, eventDetail) {\n        var modifiers = (this.options.reverse ?\n                this.chain.reverse() :\n                this.chain);\n        if (modifiers.length) {\n            var clone = table.clone();\n            for (var i = 0, iEnd = modifiers.length; i < iEnd; ++i) {\n                modifiers[i].modifyCell(clone, columnName, rowIndex, cellValue, eventDetail);\n                clone = clone.modified;\n            }\n            table.modified = clone;\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of column changes to the property\n     * `modified` of the given table.\n     *\n     * *Note:* The `modified` property of the table gets replaced.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Changed columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex=0]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    ChainModifier.prototype.modifyColumns = function (table, columns, rowIndex, eventDetail) {\n        var modifiers = (this.options.reverse ?\n                this.chain.reverse() :\n                this.chain.slice());\n        if (modifiers.length) {\n            var clone = table.clone();\n            for (var i = 0, iEnd = modifiers.length; i < iEnd; ++i) {\n                modifiers[i].modifyColumns(clone, columns, rowIndex, eventDetail);\n                clone = clone.modified;\n            }\n            table.modified = clone;\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of row changes to the property `modified`\n     * of the given table.\n     *\n     * *Note:* The `modified` property of the table gets replaced.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Array<(Highcharts.DataTableRow|Highcharts.DataTableRowObject)>} rows\n     * Changed rows.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    ChainModifier.prototype.modifyRows = function (table, rows, rowIndex, eventDetail) {\n        var modifiers = (this.options.reverse ?\n                this.chain.reverse() :\n                this.chain.slice());\n        if (modifiers.length) {\n            var clone = table.clone();\n            for (var i = 0, iEnd = modifiers.length; i < iEnd; ++i) {\n                modifiers[i].modifyRows(clone, rows, rowIndex, eventDetail);\n                clone = clone.modified;\n            }\n            table.modified = clone;\n        }\n        return table;\n    };\n    /**\n     * Applies several modifications to the table.\n     *\n     * *Note:* The `modified` property of the table gets replaced.\n     *\n     * @param {DataTable} table\n     * Table to modify.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {DataTable}\n     * Table as a reference.\n     *\n     * @emits ChainDataModifier#execute\n     * @emits ChainDataModifier#afterExecute\n     */\n    ChainModifier.prototype.modifyTable = function (table, eventDetail) {\n        var chain = this;\n        chain.emit({\n            type: 'modify',\n            detail: eventDetail,\n            table: table\n        });\n        var modifiers = (chain.options.reverse ?\n                chain.chain.reverse() :\n                chain.chain.slice());\n        var modified = table.modified;\n        for (var i = 0, iEnd = modifiers.length, modifier = void 0; i < iEnd; ++i) {\n            modifier = modifiers[i];\n            modified = modifier.modifyTable(modified, eventDetail).modified;\n        }\n        table.modified = modified;\n        chain.emit({\n            type: 'afterModify',\n            detail: eventDetail,\n            table: table\n        });\n        return table;\n    };\n    /**\n     * Removes a configured modifier from all positions in the modifier chain.\n     *\n     * @param {DataModifier} modifier\n     * Configured modifier to remove.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     */\n    ChainModifier.prototype.remove = function (modifier, eventDetail) {\n        var modifiers = this.chain;\n        this.emit({\n            type: 'removeModifier',\n            detail: eventDetail,\n            modifier: modifier\n        });\n        modifiers.splice(modifiers.indexOf(modifier), 1);\n        this.emit({\n            type: 'afterRemoveModifier',\n            detail: eventDetail,\n            modifier: modifier\n        });\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default option for the ordered modifier chain.\n     */\n    ChainModifier.defaultOptions = {\n        type: 'Chain'\n    };\n    return ChainModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Chain', ChainModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_ChainModifier = ((/* unused pure expression or super */ null && (ChainModifier)));\n\n;// ./code/es5/es-modules/Data/Modifiers/InvertModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Wojciech Chmiel\n *  - Sophie Bremer\n *\n * */\n\nvar InvertModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar InvertModifier_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Inverts columns and rows in a table.\n *\n * @private\n */\nvar InvertModifier = /** @class */ (function (_super) {\n    InvertModifier_extends(InvertModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the invert modifier.\n     *\n     * @param {Partial<InvertModifier.Options>} [options]\n     * Options to configure the invert modifier.\n     */\n    function InvertModifier(options) {\n        var _this = _super.call(this) || this;\n        _this.options = InvertModifier_merge(InvertModifier.defaultOptions, options);\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Applies partial modifications of a cell change to the property `modified`\n     * of the given modified table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {string} columnName\n     * Column name of changed cell.\n     *\n     * @param {number|undefined} rowIndex\n     * Row index of changed cell.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Changed cell value.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    InvertModifier.prototype.modifyCell = function (table, columnName, rowIndex, cellValue, eventDetail) {\n        var modified = table.modified,\n            modifiedRowIndex = modified.getRowIndexBy('columnNames',\n            columnName);\n        if (typeof modifiedRowIndex === 'undefined') {\n            modified.setColumns(this.modifyTable(table.clone()).getColumns(), void 0, eventDetail);\n        }\n        else {\n            modified.setCell(\"\".concat(rowIndex), modifiedRowIndex, cellValue, eventDetail);\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of column changes to the property\n     * `modified` of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Changed columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex=0]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    InvertModifier.prototype.modifyColumns = function (table, columns, rowIndex, eventDetail) {\n        var modified = table.modified,\n            modifiedColumnNames = (modified.getColumn('columnNames') || []);\n        var columnNames = table.getColumnNames(),\n            reset = (table.getRowCount() !== modifiedColumnNames.length);\n        if (!reset) {\n            for (var i = 0, iEnd = columnNames.length; i < iEnd; ++i) {\n                if (columnNames[i] !== modifiedColumnNames[i]) {\n                    reset = true;\n                    break;\n                }\n            }\n        }\n        if (reset) {\n            return this.modifyTable(table, eventDetail);\n        }\n        columnNames = Object.keys(columns);\n        for (var i = 0, iEnd = columnNames.length, column = void 0, columnName = void 0, modifiedRowIndex = void 0; i < iEnd; ++i) {\n            columnName = columnNames[i];\n            column = columns[columnName];\n            modifiedRowIndex = (modified.getRowIndexBy('columnNames', columnName) ||\n                modified.getRowCount());\n            for (var j = 0, j2 = rowIndex, jEnd = column.length; j < jEnd; ++j, ++j2) {\n                modified.setCell(\"\".concat(j2), modifiedRowIndex, column[j], eventDetail);\n            }\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of row changes to the property `modified`\n     * of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Array<(Highcharts.DataTableRow|Highcharts.DataTableRowObject)>} rows\n     * Changed rows.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    InvertModifier.prototype.modifyRows = function (table, rows, rowIndex, eventDetail) {\n        var columnNames = table.getColumnNames(),\n            modified = table.modified,\n            modifiedColumnNames = (modified.getColumn('columnNames') || []);\n        var reset = (table.getRowCount() !== modifiedColumnNames.length);\n        if (!reset) {\n            for (var i = 0, iEnd = columnNames.length; i < iEnd; ++i) {\n                if (columnNames[i] !== modifiedColumnNames[i]) {\n                    reset = true;\n                    break;\n                }\n            }\n        }\n        if (reset) {\n            return this.modifyTable(table, eventDetail);\n        }\n        for (var i = 0, i2 = rowIndex, iEnd = rows.length, row = void 0; i < iEnd; ++i, ++i2) {\n            row = rows[i];\n            if (row instanceof Array) {\n                modified.setColumn(\"\".concat(i2), row);\n            }\n            else {\n                for (var j = 0, jEnd = columnNames.length; j < jEnd; ++j) {\n                    modified.setCell(\"\".concat(i2), j, row[columnNames[j]], eventDetail);\n                }\n            }\n        }\n        return table;\n    };\n    /**\n     * Inverts rows and columns in the table.\n     *\n     * @param {DataTable} table\n     * Table to invert.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {DataTable}\n     * Table with inverted `modified` property as a reference.\n     */\n    InvertModifier.prototype.modifyTable = function (table, eventDetail) {\n        var modifier = this;\n        modifier.emit({ type: 'modify', detail: eventDetail, table: table });\n        var modified = table.modified;\n        if (table.hasColumns(['columnNames'])) { // Inverted table\n            var columnNamesColumn = ((table.deleteColumns(['columnNames']) || {})\n                    .columnNames || []),\n                columns = {},\n                columnNames = [];\n            for (var i = 0, iEnd = columnNamesColumn.length; i < iEnd; ++i) {\n                columnNames.push('' + columnNamesColumn[i]);\n            }\n            for (var i = 0, iEnd = table.getRowCount(), row = void 0; i < iEnd; ++i) {\n                row = table.getRow(i);\n                if (row) {\n                    columns[columnNames[i]] = row;\n                }\n            }\n            modified.deleteColumns();\n            modified.setColumns(columns);\n        }\n        else { // Regular table\n            var columns = {};\n            for (var i = 0, iEnd = table.getRowCount(), row = void 0; i < iEnd; ++i) {\n                row = table.getRow(i);\n                if (row) {\n                    columns[\"\".concat(i)] = row;\n                }\n            }\n            columns.columnNames = table.getColumnNames();\n            modified.deleteColumns();\n            modified.setColumns(columns);\n        }\n        modifier.emit({ type: 'afterModify', detail: eventDetail, table: table });\n        return table;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options for the invert modifier.\n     */\n    InvertModifier.defaultOptions = {\n        type: 'Invert'\n    };\n    return InvertModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Invert', InvertModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_InvertModifier = ((/* unused pure expression or super */ null && (InvertModifier)));\n\n;// ./code/es5/es-modules/Data/Modifiers/MathModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *\n * */\n\nvar MathModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MathModifier_assign = (undefined && undefined.__assign) || function () {\n    MathModifier_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return MathModifier_assign.apply(this, arguments);\n};\n\n\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * Replaces formula strings in a table with calculated values.\n *\n * @class\n * @name Highcharts.DataModifier.types.MathModifier\n * @augments Highcharts.DataModifier\n */\nvar MathModifier = /** @class */ (function (_super) {\n    MathModifier_extends(MathModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function MathModifier(options) {\n        var _this = _super.call(this) || this;\n        _this.options = MathModifier_assign(MathModifier_assign({}, MathModifier.defaultOptions), options);\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    MathModifier.prototype.modifyTable = function (table, eventDetail) {\n        var modifier = this;\n        modifier.emit({ type: 'modify', detail: eventDetail, table: table });\n        var alternativeSeparators = modifier.options.alternativeSeparators,\n            formulaColumns = (modifier.options.formulaColumns ||\n                table.getColumnNames()),\n            modified = table.modified;\n        for (var i = 0, iEnd = formulaColumns.length, columnName = void 0; i < iEnd; ++i) {\n            columnName = formulaColumns[i];\n            if (formulaColumns.indexOf(columnName) >= 0) {\n                modified.setColumn(columnName, modifier.processColumn(table, columnName));\n            }\n        }\n        var columnFormulas = (modifier.options.columnFormulas || []);\n        for (var i = 0, iEnd = columnFormulas.length, columnFormula = void 0, formula = void 0; i < iEnd; ++i) {\n            columnFormula = columnFormulas[i];\n            formula = Formula_FormulaParser.parseFormula(columnFormula.formula, alternativeSeparators);\n            modified.setColumn(columnFormula.column, modifier.processColumnFormula(formula, table, columnFormula.rowStart, columnFormula.rowEnd));\n        }\n        modifier.emit({ type: 'afterModify', detail: eventDetail, table: table });\n        return table;\n    };\n    /**\n     * Process a column by replacing formula strings with calculated values.\n     *\n     * @private\n     *\n     * @param {Highcharts.DataTable} table\n     * Table to extract column from and use as reference.\n     *\n     * @param {string} columnName\n     * Name of column to process.\n     *\n     * @param {number} rowIndex\n     * Row index to start the replacing process from.\n     *\n     * @return {Highcharts.DataTableColumn}\n     * Returns the processed table column.\n     */\n    MathModifier.prototype.processColumn = function (table, columnName, rowIndex) {\n        if (rowIndex === void 0) { rowIndex = 0; }\n        var alternativeSeparators = this.options.alternativeSeparators,\n            column = (table.getColumn(columnName,\n            true) || [])\n                .slice(rowIndex > 0 ? rowIndex : 0);\n        for (var i = 0, iEnd = column.length, cacheFormula = [], cacheString = '', cell = void 0; i < iEnd; ++i) {\n            cell = column[i];\n            if (typeof cell === 'string' &&\n                cell[0] === '=') {\n                try {\n                    // Use cache while formula string is repetitive\n                    cacheFormula = (cacheString === cell ?\n                        cacheFormula :\n                        Formula_FormulaParser.parseFormula(cell.substring(1), alternativeSeparators));\n                    // Process parsed formula string\n                    column[i] =\n                        Formula_FormulaProcessor.processFormula(cacheFormula, table);\n                }\n                catch (_a) {\n                    column[i] = NaN;\n                }\n            }\n        }\n        return column;\n    };\n    /**\n     * Process a column by replacing cell values with calculated values from a\n     * given formula.\n     *\n     * @private\n     *\n     * @param {Highcharts.Formula} formula\n     * Formula to use for processing.\n     *\n     * @param {Highcharts.DataTable} table\n     * Table to extract column from and use as reference.\n     *\n     * @param {number} rowStart\n     * Row index to start the replacing process from.\n     *\n     * @param {number} rowEnd\n     * Row index to end the replacing process.\n     *\n     * @return {Highcharts.DataTableColumn}\n     * Returns the processed table column.\n     */\n    MathModifier.prototype.processColumnFormula = function (formula, table, rowStart, rowEnd) {\n        if (rowStart === void 0) { rowStart = 0; }\n        if (rowEnd === void 0) { rowEnd = table.getRowCount(); }\n        rowStart = rowStart >= 0 ? rowStart : 0;\n        rowEnd = rowEnd >= 0 ? rowEnd : table.getRowCount() + rowEnd;\n        var column = [],\n            modified = table.modified;\n        for (var i = 0, iEnd = (rowEnd - rowStart); i < iEnd; ++i) {\n            try {\n                column[i] = Formula_FormulaProcessor.processFormula(formula, modified);\n            }\n            catch (_a) {\n                column[i] = NaN;\n            }\n            finally {\n                formula = Formula_FormulaProcessor.translateReferences(formula, 0, 1);\n            }\n        }\n        return column;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options of MathModifier.\n     * @private\n     */\n    MathModifier.defaultOptions = {\n        type: 'Math',\n        alternativeSeparators: false\n    };\n    return MathModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Math', MathModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_MathModifier = ((/* unused pure expression or super */ null && (MathModifier)));\n\n;// ./code/es5/es-modules/Data/Modifiers/RangeModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Dawid Dragula\n *\n * */\n\nvar RangeModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar RangeModifier_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Filters out table rows with a specific value range.\n *\n */\nvar RangeModifier = /** @class */ (function (_super) {\n    RangeModifier_extends(RangeModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the range modifier.\n     *\n     * @param {Partial<RangeModifier.Options>} [options]\n     * Options to configure the range modifier.\n     */\n    function RangeModifier(options) {\n        var _this = _super.call(this) || this;\n        _this.options = RangeModifier_merge(RangeModifier.defaultOptions, options);\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Replaces table rows with filtered rows.\n     *\n     * @param {DataTable} table\n     * Table to modify.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {DataTable}\n     * Table with `modified` property as a reference.\n     */\n    RangeModifier.prototype.modifyTable = function (table, eventDetail) {\n        var modifier = this;\n        modifier.emit({ type: 'modify', detail: eventDetail, table: table });\n        var indexes = [];\n        var _a = modifier.options,\n            additive = _a.additive,\n            ranges = _a.ranges,\n            strict = _a.strict;\n        if (ranges.length) {\n            var modified = table.modified;\n            var columns = table.getColumns(),\n                rows = [];\n            for (var i = 0, iEnd = ranges.length, range = void 0, rangeColumn = void 0; i < iEnd; ++i) {\n                range = ranges[i];\n                if (strict &&\n                    typeof range.minValue !== typeof range.maxValue) {\n                    continue;\n                }\n                if (i > 0 && !additive) {\n                    modified.deleteRows();\n                    modified.setRows(rows);\n                    modified.setOriginalRowIndexes(indexes, true);\n                    columns = modified.getColumns();\n                    rows = [];\n                    indexes = [];\n                }\n                rangeColumn = (columns[range.column] || []);\n                for (var j = 0, jEnd = rangeColumn.length, cell = void 0, row = void 0, originalRowIndex = void 0; j < jEnd; ++j) {\n                    cell = rangeColumn[j];\n                    switch (typeof cell) {\n                        default:\n                            continue;\n                        case 'boolean':\n                        case 'number':\n                        case 'string':\n                            break;\n                    }\n                    if (strict &&\n                        typeof cell !== typeof range.minValue) {\n                        continue;\n                    }\n                    if (cell >= range.minValue &&\n                        cell <= range.maxValue) {\n                        if (additive) {\n                            row = table.getRow(j);\n                            originalRowIndex = table.getOriginalRowIndex(j);\n                        }\n                        else {\n                            row = modified.getRow(j);\n                            originalRowIndex = modified.getOriginalRowIndex(j);\n                        }\n                        if (row) {\n                            rows.push(row);\n                            indexes.push(originalRowIndex);\n                        }\n                    }\n                }\n            }\n            modified.deleteRows();\n            modified.setRows(rows);\n            modified.setOriginalRowIndexes(indexes);\n        }\n        modifier.emit({ type: 'afterModify', detail: eventDetail, table: table });\n        return table;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options for the range modifier.\n     */\n    RangeModifier.defaultOptions = {\n        type: 'Range',\n        ranges: []\n    };\n    return RangeModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Range', RangeModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_RangeModifier = ((/* unused pure expression or super */ null && (RangeModifier)));\n\n;// ./code/es5/es-modules/Data/Modifiers/SortModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Sophie Bremer\n *  - Dawid Dragula\n *\n * */\n\nvar SortModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar SortModifier_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Sort table rows according to values of a column.\n *\n */\nvar SortModifier = /** @class */ (function (_super) {\n    SortModifier_extends(SortModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the range modifier.\n     *\n     * @param {Partial<RangeDataModifier.Options>} [options]\n     * Options to configure the range modifier.\n     */\n    function SortModifier(options) {\n        var _this = _super.call(this) || this;\n        _this.options = SortModifier_merge(SortModifier.defaultOptions, options);\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    SortModifier.ascending = function (a, b) {\n        return ((a || 0) < (b || 0) ? -1 :\n            (a || 0) > (b || 0) ? 1 :\n                0);\n    };\n    SortModifier.descending = function (a, b) {\n        return ((b || 0) < (a || 0) ? -1 :\n            (b || 0) > (a || 0) ? 1 :\n                0);\n    };\n    SortModifier.compareFactory = function (direction, customCompare) {\n        if (customCompare) {\n            if (direction === 'desc') {\n                return function (a, b) { return -customCompare(a, b); };\n            }\n            return customCompare;\n        }\n        return (direction === 'asc' ?\n            SortModifier.ascending :\n            SortModifier.descending);\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Returns index and row for sort reference.\n     *\n     * @private\n     *\n     * @param {Highcharts.DataTable} table\n     * Table with rows to reference.\n     *\n     * @return {Array<SortModifier.RowReference>}\n     * Array of row references.\n     */\n    SortModifier.prototype.getRowReferences = function (table) {\n        var rows = table.getRows(),\n            rowReferences = [];\n        for (var i = 0, iEnd = rows.length; i < iEnd; ++i) {\n            rowReferences.push({\n                index: i,\n                row: rows[i]\n            });\n        }\n        return rowReferences;\n    };\n    /**\n     * Applies partial modifications of a cell change to the property `modified`\n     * of the given modified table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {string} columnName\n     * Column name of changed cell.\n     *\n     * @param {number|undefined} rowIndex\n     * Row index of changed cell.\n     *\n     * @param {Highcharts.DataTableCellType} cellValue\n     * Changed cell value.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    SortModifier.prototype.modifyCell = function (table, columnName, rowIndex, cellValue, eventDetail) {\n        var modifier = this,\n            _a = modifier.options,\n            orderByColumn = _a.orderByColumn,\n            orderInColumn = _a.orderInColumn;\n        if (columnName === orderByColumn) {\n            if (orderInColumn) {\n                table.modified.setCell(columnName, rowIndex, cellValue);\n                table.modified.setColumn(orderInColumn, modifier\n                    .modifyTable(new Data_DataTable({\n                    columns: table\n                        .getColumns([orderByColumn, orderInColumn])\n                }))\n                    .modified\n                    .getColumn(orderInColumn));\n            }\n            else {\n                modifier.modifyTable(table, eventDetail);\n            }\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of column changes to the property\n     * `modified` of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Highcharts.DataTableColumnCollection} columns\n     * Changed columns as a collection, where the keys are the column names.\n     *\n     * @param {number} [rowIndex=0]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    SortModifier.prototype.modifyColumns = function (table, columns, rowIndex, eventDetail) {\n        var modifier = this,\n            _a = modifier.options,\n            orderByColumn = _a.orderByColumn,\n            orderInColumn = _a.orderInColumn,\n            columnNames = Object.keys(columns);\n        if (columnNames.indexOf(orderByColumn) > -1) {\n            if (orderInColumn &&\n                columns[columnNames[0]].length) {\n                table.modified.setColumns(columns, rowIndex);\n                table.modified.setColumn(orderInColumn, modifier\n                    .modifyTable(new Data_DataTable({\n                    columns: table\n                        .getColumns([orderByColumn, orderInColumn])\n                }))\n                    .modified\n                    .getColumn(orderInColumn));\n            }\n            else {\n                modifier.modifyTable(table, eventDetail);\n            }\n        }\n        return table;\n    };\n    /**\n     * Applies partial modifications of row changes to the property `modified`\n     * of the given table.\n     *\n     * @param {Highcharts.DataTable} table\n     * Modified table.\n     *\n     * @param {Array<(Highcharts.DataTableRow|Highcharts.DataTableRowObject)>} rows\n     * Changed rows.\n     *\n     * @param {number} [rowIndex]\n     * Index of the first changed row.\n     *\n     * @param {Highcharts.DataTableEventDetail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {Highcharts.DataTable}\n     * Table with `modified` property as a reference.\n     */\n    SortModifier.prototype.modifyRows = function (table, rows, rowIndex, eventDetail) {\n        var modifier = this,\n            _a = modifier.options,\n            orderByColumn = _a.orderByColumn,\n            orderInColumn = _a.orderInColumn;\n        if (orderInColumn &&\n            rows.length) {\n            table.modified.setRows(rows, rowIndex);\n            table.modified.setColumn(orderInColumn, modifier\n                .modifyTable(new Data_DataTable({\n                columns: table\n                    .getColumns([orderByColumn, orderInColumn])\n            }))\n                .modified\n                .getColumn(orderInColumn));\n        }\n        else {\n            modifier.modifyTable(table, eventDetail);\n        }\n        return table;\n    };\n    /**\n     * Sorts rows in the table.\n     *\n     * @param {DataTable} table\n     * Table to sort in.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {DataTable}\n     * Table with `modified` property as a reference.\n     */\n    SortModifier.prototype.modifyTable = function (table, eventDetail) {\n        var _a;\n        var modifier = this;\n        modifier.emit({ type: 'modify', detail: eventDetail, table: table });\n        var columnNames = table.getColumnNames(),\n            rowCount = table.getRowCount(),\n            rowReferences = this.getRowReferences(table),\n            _b = modifier.options,\n            direction = _b.direction,\n            orderByColumn = _b.orderByColumn,\n            orderInColumn = _b.orderInColumn,\n            customCompare = _b.compare,\n            compare = SortModifier.compareFactory(direction,\n            customCompare),\n            orderByColumnIndex = columnNames.indexOf(orderByColumn),\n            modified = table.modified;\n        if (orderByColumnIndex !== -1) {\n            rowReferences.sort(function (a, b) { return compare(a.row[orderByColumnIndex], b.row[orderByColumnIndex]); });\n        }\n        if (orderInColumn) {\n            var column = [];\n            for (var i = 0; i < rowCount; ++i) {\n                column[rowReferences[i].index] = i;\n            }\n            modified.setColumns((_a = {}, _a[orderInColumn] = column, _a));\n        }\n        else {\n            var originalIndexes = [];\n            var rows = [];\n            var rowReference = void 0;\n            for (var i = 0; i < rowCount; ++i) {\n                rowReference = rowReferences[i];\n                originalIndexes.push(modified.getOriginalRowIndex(rowReference.index));\n                rows.push(rowReference.row);\n            }\n            modified.setRows(rows, 0);\n            modified.setOriginalRowIndexes(originalIndexes);\n        }\n        modifier.emit({ type: 'afterModify', detail: eventDetail, table: table });\n        return table;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options to group table rows.\n     */\n    SortModifier.defaultOptions = {\n        type: 'Sort',\n        direction: 'desc',\n        orderByColumn: 'y'\n    };\n    return SortModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Sort', SortModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_SortModifier = ((/* unused pure expression or super */ null && (SortModifier)));\n\n;// ./code/es5/es-modules/Data/Modifiers/FilterModifier.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Authors:\n *  - Dawid Dragula\n *\n * */\n\nvar FilterModifier_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d,\n        b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d,\n        b) { d.__proto__ = b; }) ||\n                function (d,\n        b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b,\n        p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar FilterModifier_isFunction = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isFunction, FilterModifier_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * Filters out table rows matching a given condition.\n */\nvar FilterModifier = /** @class */ (function (_super) {\n    FilterModifier_extends(FilterModifier, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    /**\n     * Constructs an instance of the filter modifier.\n     *\n     * @param {Partial<FilterModifier.Options>} [options]\n     * Options to configure the filter modifier.\n     */\n    function FilterModifier(options) {\n        var _this = _super.call(this) || this;\n        _this.options = FilterModifier_merge(FilterModifier.defaultOptions, options);\n        return _this;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Compiles a filter condition into a callback function.\n     *\n     * @param {FilterCondition} condition\n     * Condition to compile.\n     */\n    FilterModifier.compile = function (condition) {\n        var _this = this;\n        if (FilterModifier_isFunction(condition)) {\n            return condition;\n        }\n        var op = condition.operator;\n        switch (op) {\n            case 'and': {\n                var subs_1 = condition.conditions.map(function (c) { return _this.compile(c); });\n                return function (row, table, i) { return subs_1.every(function (cond) { return cond(row, table, i); }); };\n            }\n            case 'or': {\n                var subs_2 = condition.conditions.map(function (c) { return _this.compile(c); });\n                return function (row, table, i) { return subs_2.some(function (cond) { return cond(row, table, i); }); };\n            }\n            case 'not': {\n                var sub_1 = this.compile(condition.condition);\n                return function (row, table, i) { return !sub_1(row, table, i); };\n            }\n        }\n        var col = condition.columnName,\n            value = condition.value;\n        switch (op) {\n            case '==':\n                // eslint-disable-next-line eqeqeq\n                return function (row) { return row[col] == value; };\n            case '===':\n                return function (row) { return row[col] === value; };\n            case '!=':\n                // eslint-disable-next-line eqeqeq\n                return function (row) { return row[col] != value; };\n            case '!==':\n                return function (row) { return row[col] !== value; };\n            case '>':\n                return function (row) { return (row[col] || 0) > (value || 0); };\n            case '>=':\n                return function (row) { return (row[col] || 0) >= (value || 0); };\n            case '<':\n                return function (row) { return (row[col] || 0) < (value || 0); };\n            case '<=':\n                return function (row) { return (row[col] || 0) <= (value || 0); };\n        }\n        var ignoreCase = condition.ignoreCase;\n        var str = function (val) {\n                var s = '' + val;\n            return (ignoreCase !== null && ignoreCase !== void 0 ? ignoreCase : true) ? s.toLowerCase() : s;\n        };\n        switch (op) {\n            case 'contains':\n                return function (row) { return str(row[col]).includes(str(value)); };\n            default:\n                return function (row) { return str(row[col])[op](str(value)); };\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Replaces table rows with filtered rows.\n     *\n     * @param {DataTable} table\n     * Table to modify.\n     *\n     * @param {DataEvent.Detail} [eventDetail]\n     * Custom information for pending events.\n     *\n     * @return {DataTable}\n     * Table with `modified` property as a reference.\n     */\n    FilterModifier.prototype.modifyTable = function (table, eventDetail) {\n        var modifier = this;\n        modifier.emit({ type: 'modify', detail: eventDetail, table: table });\n        var condition = modifier.options.condition;\n        if (!condition) {\n            // If no condition is set, return the unmodified table.\n            return table;\n        }\n        var matchRow = FilterModifier.compile(condition);\n        // This line should be investigated further when reworking Data Layer.\n        var modified = table.modified;\n        var rows = [];\n        var indexes = [];\n        for (var i = 0, iEnd = table.getRowCount(); i < iEnd; ++i) {\n            var row = table.getRowObject(i);\n            if (!row) {\n                continue;\n            }\n            if (matchRow(row, table, i)) {\n                rows.push(row);\n                indexes.push(modified.getOriginalRowIndex(i));\n            }\n        }\n        modified.deleteRows();\n        modified.setRows(rows);\n        modified.setOriginalRowIndexes(indexes);\n        modifier.emit({ type: 'afterModify', detail: eventDetail, table: table });\n        return table;\n    };\n    /* *\n     *\n     *  Static Properties\n     *\n     * */\n    /**\n     * Default options for the filter modifier.\n     */\n    FilterModifier.defaultOptions = {\n        type: 'Filter'\n    };\n    return FilterModifier;\n}(Modifiers_DataModifier));\nModifiers_DataModifier.registerType('Filter', FilterModifier);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Modifiers_FilterModifier = ((/* unused pure expression or super */ null && (FilterModifier)));\n\n;// ./code/es5/es-modules/masters/modules/data-tools.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nG.DataConnector = G.DataConnector || Connectors_DataConnector;\nG.DataConverter = G.DataConverter || Converters_DataConverter;\nG.DataCursor = G.DataCursor || Data_DataCursor;\nG.DataModifier = G.DataModifier || Modifiers_DataModifier;\nG.DataPool = G.DataPool || Data_DataPool;\nG.DataTable = G.DataTable || Data_DataTable;\nG.Formula = G.Formula || Formula_Formula;\n/* harmony default export */ var data_tools_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","DataModifier","ColumnUtils","extendStatics","DataConnector","DataConverter","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","data_tools_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","addEvent","fireEvent","merge","benchmark","dataTable","options","results","modifier","execute","modifyTable","emit","type","iterations","on","length","times","startTime","endTime","window","performance","now","push","e","modify","table","eventDetail","Promise","resolve","reject","modified","clone","detail","Error","modifyCell","columnName","rowIndex","cellValue","modifyColumns","columns","modifyRows","rows","callback","types","registerType","DataModifierClass","Modifiers_DataModifier","__spreadArray","to","from","pack","arguments","ar","i","l","Array","slice","concat","setLength","column","asSubarray","isArray","splice","start","deleteCount","removedAsSubarray","items","removed","apply","array","Constructor","getPrototypeOf","constructor","result","set","subarray","Data_ColumnUtils","DataTableCore_fireEvent","objectEach","uniqueKey","DataTableCore","_this","autoId","id","rowCount","versionTag","Math","max","applyRowCount","deleteRows","length_1","getColumn","asReference","getColumns","columnNames","keys","reduce","getRow","map","_a","setColumn","setColumns","silent","setRow","row","insert","indexRowCount","addColumns","__extends","b","setPrototypeOf","__proto__","p","__","create","DataTable_addEvent","defined","extend","DataTable_fireEvent","isNumber","DataTable_uniqueKey","DataTable","_super","isNull","NULL","iEnd","skipColumns","tableOptions","tableClone","originalRowIndexes","localRowIndexes","deleteColumns","deletedColumns","modifiedColumns","deleteRowIndexReferences","deletedRows","modifiedRows","deletedCells","j","jEnd","includes","getCell","getCellAsBoolean","getCellAsNumber","useNaN","isNaN","parseFloat","getCellAsString","getColumnAsNumbers","columnAsNumber","columnLength","getColumnNames","asBasicColumns","tableColumns","getLocalRowIndex","originalRowIndex","getModifier","getOriginalRowIndex","getRows","getRowCount","getRowIndexBy","rowIndexOffset","indexOf","getRowObject","getRowObjects","i2","min","_i","columnNames_1","columnNames_2","getVersionTag","hasColumns","hasRowWith","Number","isFinite","renameColumn","newColumnName","setCell","typeAsOriginal","tableModifier","tableColumn","ArrayConstructor","i_1","iEnd_1","setModifier","promise","then","error","setOriginalRowIndexes","omitLocalRowIndexes","modifiedIndexes","originalIndex","setRows","version","__generator","thisArg","body","f","y","t","_","label","sent","trys","ops","g","Iterator","next","verb","Symbol","iterator","v","op","TypeError","done","value","pop","DataConnector_addEvent","DataConnector_fireEvent","DataConnector_merge","pick","dataTables","loaded","metadata","dataTableIndex","_polling","configurable","getTable","describeColumn","name","columnMeta","connector","describeColumns","getColumnOrder","usePresentationState","names","sort","index","values","getSortedColumns","usePresentationOrder","load","save","setColumnOrder","setModifierOptions","modifierOptions","tablesOptions","_arguments","P","generator","_loop_1","_b","_c","mergedModifierOptions","ModifierClass","_d","find","dataModifier","entries","fulfilled","step","rejected","adopt","startPolling","refreshTime","tables","pollingController","AbortController","clearTimeout","setTimeout","stopPolling","polling","abort","whatIs","initConverters","data","createConverter","parseData","converter","DataConnectorClass","Connectors_DataConnector","DataConverter_addEvent","DataConverter_fireEvent","DataConverter_isNumber","DataConverter_merge","dateFormats","regex","parser","match","Date","UTC","NaN","alternative","year","getFullYear","mergedOptions","defaultOptions","regExpPoint","decimalPoint","decimalRegExp","RegExp","asBoolean","asNumber","asDate","timestamp","parseDate","asString","asGuessedType","typeMap","guessType","decimalRegex","replace","test","getDate","deduceDateFormat","limit","thing","elem","stable","format","guessedFormat","madeDeduction","trim","split","parseInt","join","dateFormat","export","headers","trimedValue","innerTrimedValue","floatValue","parse","dateFormatProp","getTime","getTimezoneOffset","str","inside","alternativeFormat","startColumn","endColumn","MAX_VALUE","startRow","endRow","firstRowAsNames","switchRowsAndColumns","DataConverterClass","getTableFromColumns","Converters_DataConverter","DataCursor","stateMap","emittingRegister","listenerMap","addListener","tableId","state","listener","listeners","buildEmittingTag","cursor","firstRow","lastRow","emitCursor","event","lasting","cursors","getIndex","emittingTag","remitCursor","removeListener","toRange","defaultRange","range","needle","columnNeedle","JSON","stringify","isEqual","cursorA","cursorB","isInRange","needleColumns","rangeColumns","every","toPositions","positions","rowEnd","columnEnd","Data_DataCursor","Data_DataPoolDefaults","connectors","DataPool","waiting","getConnector","connectorId","waitingList","connectorOptions","getConnectorOptions","loadConnector","getConnectorIds","connectorIds","getConnectorTable","isNewConnector","ConnectorClass","cancelPendingRequests","setConnectorOptions","instances","isString","booleanRegExp","decimal1RegExp","decimal2RegExp","functionRegExp","operatorRegExp","rangeA1RegExp","rangeR1C1RegExp","referenceA1RegExp","referenceR1C1RegExp","extractParantheses","text","parantheseLevel","char","parantheseStart","substring","extractString","escaping","parseArgument","alternativeSeparators","beginColumnRelative","beginRowRelative","endColumnRelative","endRowRelative","beginColumn","beginRow","parseReferenceColumn","formula","parseFormula","negativeReference","formulaLength","priorFormula","columnRelative","rowRelative","reference","isNegative","number","string","parantheses","args","parseArguments","argumentsSeparator","term","paranteses","position","code","factor","charCodeAt","pow","Formula_FormulaParser","operators","FormulaTypes","isFormula","item","isFunction","isOperator","isRange","isReference","isValue","FormulaProcessor_isFormula","FormulaProcessor_isFunction","FormulaProcessor_isOperator","FormulaProcessor_isRange","FormulaProcessor_isReference","FormulaProcessor_isValue","FormulaProcessor_defined","asLogicalStringRegExp","MAX_FALSE","MAX_STRING","MAX_TRUE","operatorPriority","processorFunctions","processorFunctionNameRegExp","asLogicalNumber","asLogicalString","toLowerCase","getArgumentValue","arg","getRangeValues","processFunction","processFormula","cell","cells","getReferenceValue","applyOperator","secondValue","firstValue","operator","basicOperation","x","round","expectingValue","formulaFunction","processor","Formula_FormulaProcessor","getArgumentsValues","registerProcessorFunction","processorFunction","translateReferences","columnDelta","rowDelta","ABS_getArgumentValue","abs","value2","AND_getArgumentValue","AND","AVERAGE_getArgumentsValues","count","AVERAGEA_getArgumentValue","COUNT","COUNTA","IF_getArgumentValue","ISNA_getArgumentValue","MAX_getArgumentsValues","MAX","NEGATIVE_INFINITY","median","half","floor","MIN_getArgumentsValues","MIN","POSITIVE_INFINITY","MOD_getArgumentValue","getModeMap","modeMap","SNGL","modeKey","modeCount","keyValue","value1","modeKeys","NOT_getArgumentValue","OR_getArgumentValue","OR","PRODUCT_getArgumentsValues","PRODUCT","calculated","SUM","XOR_getArgumentValue","lastValue","__assign","assign","s","Formula","CSVConverter_extends","String","CSVConverter_assign","CSVConverter_merge","CSVConverter","dataTypes","useLocalDecimalPoint","lineDelimiter","exportNames","itemDelimiter","toLocaleString","csvRows","columnsCount","rowArray","columnIndex","columnDataType","dataType","cellVal","lines","parserOptions","beforeParse","rowIt","csv","guessedItemDelimiter","guessDelimiter","offset","parseCSVRow","columnStr","rowNumber","guessedDecimalPoint","c","token","actualColumn","read","pushType","initialValue","guessed","points","commas","potDelimiters","linesCount","inStr","cn","cl","CSVConnector_extends","CSVConnector_merge","CSVConnector_defined","CSVConnector","enablePolling","dataRefreshRate","csvURL","fetch","signal","response","mergedTableOptions","dataTableKey","JSONConverter_extends","JSONConverter_assign","JSONConverter_merge","JSONConverter_objectEach","JSONConverter","orientation","shift","toString","this_1","newRow_1","arrayWithPath","acc","JSONConnector_extends","JSONConnector_merge","JSONConnector_defined","JSONConnector","dataUrl","json","console","warn","GoogleSheetsConverter_extends","GoogleSheetsConverter_assign","GoogleSheetsConverter_merge","GoogleSheetsConverter_uniqueKey","GoogleSheetsConverter","header","parseOptions","GoogleSheetsConnector_extends","GoogleSheetsConnector_merge","GoogleSheetsConnector_pick","GoogleSheetsConnector_defined","GoogleSheetsConnector","googleAPIKey","googleSpreadsheetKey","url","buildFetchURL","URL","canParse","message","status","alphabet","buildQueryRange","googleSpreadsheetRange","apiKey","sheetKey","onlyColumnNames","pathname","searchParams","href","HTMLTableConverter_extends","HTMLTableConverter_assign","HTMLTableConverter_merge","HTMLTableConverter","tableElement","tableElementID","useMultiLevelHeaders","htmlRows","tableHead","subcategories","name_1","subhead","getTableHeaderHTML","getCellHTMLFromValue","caption","tableCaption","tag","classes","attrs","val","className","topheaders","subheaders","cur","rowspan","useRowspanHeaders","html","len","curColspan","isRowEqual","row1","row2","tableHTML","HTMLElement","getElementsByTagName","rowsCount","children","itemsLength","tagName","innerHTML","columnsInRow","columnsInRowLength","relativeColumnIndex","HTMLTableConnector_extends","win","HTMLTableConnector_merge","HTMLTableConnector","tableID","document","getElementById","ChainModifier_extends","ChainModifier_generator","ChainModifier_merge","ChainModifier","chain","optionsChain","add","clear","modifiers","error_1","reverse","remove","InvertModifier_extends","InvertModifier_merge","InvertModifier","modifiedRowIndex","modifiedColumnNames","reset","j2","columnNamesColumn","MathModifier_extends","MathModifier_assign","MathModifier","formulaColumns","processColumn","columnFormulas","columnFormula","processColumnFormula","rowStart","cacheFormula","cacheString","RangeModifier_extends","RangeModifier_merge","RangeModifier","indexes","additive","ranges","strict","rangeColumn","minValue","maxValue","SortModifier_extends","SortModifier_merge","SortModifier","ascending","descending","compareFactory","direction","customCompare","getRowReferences","rowReferences","orderByColumn","orderInColumn","compare","orderByColumnIndex","originalIndexes","rowReference","FilterModifier_extends","FilterModifier_isFunction","FilterModifier_merge","FilterModifier","compile","condition","subs_1","conditions","cond","subs_2","some","sub_1","col","ignoreCase","matchRow","G"],"mappings":"CAWA,AAXA;;;;;;;;;;CAUC,EACA,SAA0CA,CAAI,CAAEC,CAAO,EACpD,AAAmB,UAAnB,OAAOC,SAAwB,AAAkB,UAAlB,OAAOC,OACxCA,OAAOD,OAAO,CAAGD,EAAQG,QAAQ,eAC1B,AAAkB,YAAlB,OAAOC,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,gCAAiC,CAAC,CAAC,wBAAwB,CAAC,CAAEJ,GAC9D,AAAmB,UAAnB,OAAOC,QACdA,OAAO,CAAC,gCAAgC,CAAGD,EAAQG,QAAQ,eAE3DJ,EAAK,UAAa,CAAGC,EAAQD,EAAK,UAAa,CACjD,EAAG,IAAI,CAAE,SAASO,CAAgC,EAClD,OAAgB,AAAC,WACP,aACA,IAuTCC,EA+EAC,EAwbHC,EAmjDGC,EA6mBAC,EA6zGHF,EA4fAA,EA8KAA,EAiOAA,EA0LAA,EAgLAA,EAqQAA,EAmbAA,EAqJAA,EAyaAA,EA2QAA,EA8MAA,EAwKAA,EAgUAA,EAl0SJD,EArYUI,EAAuB,CAE/B,IACC,SAASV,CAAM,EAEtBA,EAAOD,OAAO,CAAGK,CAEX,CAEI,EAGIO,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,CAAQ,EAEpC,IAAIC,EAAeH,CAAwB,CAACE,EAAS,CACrD,GAAIC,AAAiBC,KAAAA,IAAjBD,EACH,OAAOA,EAAaf,OAAO,CAG5B,IAAIC,EAASW,CAAwB,CAACE,EAAS,CAAG,CAGjDd,QAAS,CAAC,CACX,EAMA,OAHAW,CAAmB,CAACG,EAAS,CAACb,EAAQA,EAAOD,OAAO,CAAEa,GAG/CZ,EAAOD,OAAO,AACtB,CAMCa,EAAoBI,CAAC,CAAG,SAAShB,CAAM,EACtC,IAAIiB,EAASjB,GAAUA,EAAOkB,UAAU,CACvC,WAAa,OAAOlB,EAAO,OAAU,AAAE,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAY,EAAoBO,CAAC,CAACF,EAAQ,CAAEG,EAAGH,CAAO,GACnCA,CACR,EAMAL,EAAoBO,CAAC,CAAG,SAASpB,CAAO,CAAEsB,CAAU,EACnD,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,CAAC,CAACF,EAAYC,IAAQ,CAACV,EAAoBW,CAAC,CAACxB,EAASuB,IAC5EE,OAAOC,cAAc,CAAC1B,EAASuB,EAAK,CAAEI,WAAY,CAAA,EAAMC,IAAKN,CAAU,CAACC,EAAI,AAAC,EAGhF,EAKAV,EAAoBW,CAAC,CAAG,SAASK,CAAG,CAAEC,CAAI,EAAI,OAAOL,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,EAAKC,EAAO,EAIjH,IAAII,EAAsB,CAAC,EAG3BrB,EAAoBO,CAAC,CAACc,EAAqB,CACzC,QAAW,WAAa,OAAqBC,EAAgB,CAC/D,GAGA,IAAIC,EAAuEvB,EAAoB,KAC3FwB,EAA2FxB,EAAoBI,CAAC,CAACmB,GAiBjHE,EAAW,AAACD,IAA+EC,QAAQ,CAAEC,EAAY,AAACF,IAA+EE,SAAS,CAAEC,EAAQ,AAACH,IAA+EG,KAAK,CAUzSlC,EAA8B,WAC9B,SAASA,IACT,CAqMA,OAjLAA,EAAayB,SAAS,CAACU,SAAS,CAAG,SAAUC,CAAS,CAAEC,CAAO,EAC3D,IAAIC,EAAU,EAAE,CACZC,EAAW,IAAI,CACfC,EAAU,WACND,EAASE,WAAW,CAACL,GACzBG,EAASG,IAAI,CAAC,CACVC,KAAM,yBACV,EACJ,EAIIC,EAAaV,EAHI,CACbU,WAAY,CAChB,EAEAP,GAASO,UAAU,CACvBL,EAASM,EAAE,CAAC,0BAA2B,WACnC,GAAIP,EAAQQ,MAAM,GAAKF,EAAY,YAC/BL,EAASG,IAAI,CAAC,CACVC,KAAM,iBACNL,QAASA,CACb,GAIJE,GACJ,GACA,IAAIO,EAAQ,CACJC,UAAW,EACXC,QAAS,CACb,EAWJ,OATAV,EAASM,EAAE,CAAC,SAAU,WAClBE,EAAMC,SAAS,CAAGE,OAAOC,WAAW,CAACC,GAAG,EAC5C,GACAb,EAASM,EAAE,CAAC,cAAe,WACvBE,EAAME,OAAO,CAAGC,OAAOC,WAAW,CAACC,GAAG,GACtCd,EAAQe,IAAI,CAACN,EAAME,OAAO,CAAGF,EAAMC,SAAS,CAChD,GAEAR,IACOF,CACX,EAOAtC,EAAayB,SAAS,CAACiB,IAAI,CAAG,SAAUY,CAAC,EACrCrB,EAAU,IAAI,CAAEqB,EAAEX,IAAI,CAAEW,EAC5B,EAaAtD,EAAayB,SAAS,CAAC8B,MAAM,CAAG,SAAUC,CAAK,CAAEC,CAAW,EACxD,IAAIlB,EAAW,IAAI,CACnB,OAAO,IAAImB,QAAQ,SAAUC,CAAO,CAAEC,CAAM,EACpCJ,EAAMK,QAAQ,GAAKL,GACnBA,CAAAA,EAAMK,QAAQ,CAAGL,EAAMM,KAAK,CAAC,CAAA,EAAOL,EAAW,EAEnD,GAAI,CACAE,EAAQpB,EAASE,WAAW,CAACe,EAAOC,GACxC,CACA,MAAOH,EAAG,CACNf,EAASG,IAAI,CAAC,CACVC,KAAM,QACNoB,OAAQN,EACRD,MAAOA,CACX,GACAI,EAAON,aAAaU,MAAQV,EAAI,AAAIU,MAAM,GAAKV,GACnD,CACJ,EACJ,EAuBAtD,EAAayB,SAAS,CAACwC,UAAU,CAAG,SAAUT,CAAK,CAEnDU,CAAU,CAAEC,CAAQ,CAAEC,CAAS,CAAEX,CAAW,EAGxC,OAAO,IAAI,CAAChB,WAAW,CAACe,EAC5B,EAoBAxD,EAAayB,SAAS,CAAC4C,aAAa,CAAG,SAAUb,CAAK,CAEtDc,CAAO,CAAEH,CAAQ,CAAEV,CAAW,EAG1B,OAAO,IAAI,CAAChB,WAAW,CAACe,EAC5B,EAoBAxD,EAAayB,SAAS,CAAC8C,UAAU,CAAG,SAAUf,CAAK,CAEnDgB,CAAI,CAAEL,CAAQ,CAAEV,CAAW,EAGvB,OAAO,IAAI,CAAChB,WAAW,CAACe,EAC5B,EAaAxD,EAAayB,SAAS,CAACoB,EAAE,CAAG,SAAUF,CAAI,CAAE8B,CAAQ,EAChD,OAAOzC,EAAS,IAAI,CAAEW,EAAM8B,EAChC,EACOzE,CACX,GAwBIA,EAfOA,EA4CRA,GAAiBA,CAAAA,EAAe,CAAC,CAAA,GA7BnB0E,KAAK,CAAG,CAAC,EA4BtB1E,EAAa2E,YAAY,CALzB,SAAsB1D,CAAG,CAAE2D,CAAiB,EACxC,MAAQ,CAAC,CAAC3D,GACN,CAACjB,EAAa0E,KAAK,CAACzD,EAAI,EACxB,CAAC,CAAEjB,CAAAA,EAAa0E,KAAK,CAACzD,EAAI,CAAG2D,CAAgB,CACrD,EAQyB,IAAIC,EAA0B7E,EAevD8E,EAA0D,SAAUC,CAAE,CAAEC,CAAI,CAAEC,CAAI,EAClF,GAAIA,GAAQC,AAAqB,GAArBA,UAAUpC,MAAM,CAAQ,IAAK,IAA4BqC,EAAxBC,EAAI,EAAGC,EAAIL,EAAKlC,MAAM,CAAMsC,EAAIC,EAAGD,KACxED,GAAQC,KAAKJ,IACT,AAACG,GAAIA,CAAAA,EAAKG,MAAM7D,SAAS,CAAC8D,KAAK,CAAC5D,IAAI,CAACqD,EAAM,EAAGI,EAAC,EACnDD,CAAE,CAACC,EAAE,CAAGJ,CAAI,CAACI,EAAE,EAGvB,OAAOL,EAAGS,MAAM,CAACL,GAAMG,MAAM7D,SAAS,CAAC8D,KAAK,CAAC5D,IAAI,CAACqD,GACtD,CA2CI/E,EArCOA,EA2FRA,GAAgBA,CAAAA,EAAc,CAAC,CAAA,GAtDlBwF,SAAS,CAPrB,SAAmBC,CAAM,CAAE5C,CAAM,CAAE6C,CAAU,SACzC,AAAIL,MAAMM,OAAO,CAACF,IACdA,EAAO5C,MAAM,CAAGA,EACT4C,GAEJA,CAAM,CAACC,EAAa,WAAa,QAAQ,CAAC,EAAG7C,EACxD,EAsDA7C,EAAY4F,MAAM,CAzBlB,SAAgBH,CAAM,CAAEI,CAAK,CAAEC,CAAW,CAAEC,CAAiB,CAAEC,CAAK,EAEhE,GADIA,AAAU,KAAK,IAAfA,GAAoBA,CAAAA,EAAQ,EAAE,AAAD,EAC7BX,MAAMM,OAAO,CAACF,GAId,OAHI,AAACJ,MAAMM,OAAO,CAACK,IACfA,CAAAA,EAAQX,MAAMN,IAAI,CAACiB,EAAK,EAErB,CACHC,QAASR,EAAOG,MAAM,CAACM,KAAK,CAACT,EAAQZ,EAAc,CAACgB,EAAOC,EAAY,CAAEE,EAAO,CAAA,IAChFG,MAAOV,CACX,EAEJ,IAAIW,EAAclF,OAAOmF,cAAc,CAACZ,GAC/Ba,WAAW,CAChBL,EAAUR,CAAM,CAACM,EAAoB,WAAa,QAAQ,CAACF,EAC3DA,EAAQC,GAERS,EAAS,IAAIH,EADDX,EAAO5C,MAAM,CAAGiD,EAAcE,EAAMnD,MAAM,EAK1D,OAHA0D,EAAOC,GAAG,CAACf,EAAOgB,QAAQ,CAAC,EAAGZ,GAAQ,GACtCU,EAAOC,GAAG,CAACR,EAAOH,GAClBU,EAAOC,GAAG,CAACf,EAAOgB,QAAQ,CAACZ,EAAQC,GAAcD,EAAQG,EAAMnD,MAAM,EAC9D,CACHoD,QAASA,EACTE,MAAOI,CACX,CACJ,EAQyB,IAAIG,EAAoB1G,EAmBjDwF,EAAYkB,EAAiBlB,SAAS,CAAEI,EAASc,EAAiBd,MAAM,CAExEe,EAA0B,AAAC7E,IAA+EE,SAAS,CAAE4E,EAAa,AAAC9E,IAA+E8E,UAAU,CAAEC,EAAY,AAAC/E,IAA+E+E,SAAS,CAiBnUC,EAA+B,WAiB/B,SAASA,EAAc1E,CAAO,EACtBA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAI2E,EAAQ,IAAI,AAOhB,CAAA,IAAI,CAACC,MAAM,CAAG,CAAC5E,EAAQ6E,EAAE,CACzB,IAAI,CAAC5C,OAAO,CAAG,CAAC,EAOhB,IAAI,CAAC4C,EAAE,CAAI7E,EAAQ6E,EAAE,EAAIJ,IACzB,IAAI,CAACjD,QAAQ,CAAG,IAAI,CACpB,IAAI,CAACsD,QAAQ,CAAG,EAChB,IAAI,CAACC,UAAU,CAAGN,IAClB,IAAIK,EAAW,EACfN,EAAWxE,EAAQiC,OAAO,EAAI,CAAC,EAAG,SAAUoB,CAAM,CAAExB,CAAU,EAC1D8C,EAAM1C,OAAO,CAACJ,EAAW,CAAGwB,EAAOH,KAAK,GACxC4B,EAAWE,KAAKC,GAAG,CAACH,EAAUzB,EAAO5C,MAAM,CAC/C,GACA,IAAI,CAACyE,aAAa,CAACJ,EACvB,CAyMA,OA5LAJ,EAActF,SAAS,CAAC8F,aAAa,CAAG,SAAUJ,CAAQ,EACtD,IAAIH,EAAQ,IAAI,AAChB,CAAA,IAAI,CAACG,QAAQ,CAAGA,EAChBN,EAAW,IAAI,CAACvC,OAAO,CAAE,SAAUoB,CAAM,CAAExB,CAAU,EAC7CwB,EAAO5C,MAAM,GAAKqE,GAClBH,CAAAA,EAAM1C,OAAO,CAACJ,EAAW,CAAGuB,EAAUC,EAAQyB,EAAQ,CAE9D,EACJ,EAeAJ,EAActF,SAAS,CAAC+F,UAAU,CAAG,SAAUrD,CAAQ,CAAEgD,CAAQ,EAC7D,IAAIH,EAAQ,IAAI,CAEhB,GADIG,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EAClCA,EAAW,GAAKhD,EAAW,IAAI,CAACgD,QAAQ,CAAE,CAC1C,IAAIM,EAAW,EACfZ,EAAW,IAAI,CAACvC,OAAO,CAAE,SAAUoB,CAAM,CAAExB,CAAU,EACjD8C,EAAM1C,OAAO,CAACJ,EAAW,CACrB2B,EAAOH,EAAQvB,EAAUgD,GAAUf,KAAK,CAC5CqB,EAAW/B,EAAO5C,MAAM,AAC5B,GACA,IAAI,CAACqE,QAAQ,CAAGM,CACpB,CACAb,EAAwB,IAAI,CAAE,kBAAmB,CAAEzC,SAAUA,EAAUgD,SAAUA,CAAS,GAC1F,IAAI,CAACC,UAAU,CAAGN,GACtB,EAWAC,EAActF,SAAS,CAACiG,SAAS,CAAG,SAAUxD,CAAU,CAExDyD,CAAW,EACP,OAAO,IAAI,CAACrD,OAAO,CAACJ,EAAW,AACnC,EAYA6C,EAActF,SAAS,CAACmG,UAAU,CAAG,SAAUC,CAAW,CAE1DF,CAAW,EACP,IAAIX,EAAQ,IAAI,CAChB,MAAO,AAACa,CAAAA,GAAe1G,OAAO2G,IAAI,CAAC,IAAI,CAACxD,OAAO,CAAA,EAAGyD,MAAM,CAAC,SAAUzD,CAAO,CAAEJ,CAAU,EAElF,OADAI,CAAO,CAACJ,EAAW,CAAG8C,EAAM1C,OAAO,CAACJ,EAAW,CACxCI,CACX,EAAG,CAAC,EACR,EAaAyC,EAActF,SAAS,CAACuG,MAAM,CAAG,SAAU7D,CAAQ,CAAE0D,CAAW,EAC5D,IAAIb,EAAQ,IAAI,CAChB,MAAO,AAACa,CAAAA,GAAe1G,OAAO2G,IAAI,CAAC,IAAI,CAACxD,OAAO,CAAA,EAAG2D,GAAG,CAAC,SAAUhH,CAAG,EAAI,IAAIiH,EAAI,OAAO,MAACA,CAAAA,EAAKlB,EAAM1C,OAAO,CAACrD,EAAI,AAAD,EAA+B,KAAK,EAAIiH,CAAE,CAAC/D,EAAS,AAAE,EACvK,EAmBA4C,EAActF,SAAS,CAAC0G,SAAS,CAAG,SAAUjE,CAAU,CAAEwB,CAAM,CAAEvB,CAAQ,CAAEV,CAAW,EACnF,IAAIyE,CACAxC,AAAW,MAAK,IAAhBA,GAAqBA,CAAAA,EAAS,EAAE,AAAD,EAC/BvB,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EACtC,IAAI,CAACiE,UAAU,CAAEF,CAAAA,AAASA,CAATA,EAAK,CAAC,CAAA,CAAK,CAAChE,EAAW,CAAGwB,EAAQwC,CAAC,EAAI/D,EAAUV,EACtE,EAmBAsD,EAActF,SAAS,CAAC2G,UAAU,CAAG,SAAU9D,CAAO,CAAEH,CAAQ,CAAEV,CAAW,EACzE,IAAIuD,EAAQ,IAAI,CACZG,EAAW,IAAI,CAACA,QAAQ,CAC5BN,EAAWvC,EAAS,SAAUoB,CAAM,CAAExB,CAAU,EAC5C8C,EAAM1C,OAAO,CAACJ,EAAW,CAAGwB,EAAOH,KAAK,GACxC4B,EAAWzB,EAAO5C,MAAM,AAC5B,GACA,IAAI,CAACyE,aAAa,CAACJ,GACb1D,CAAAA,MAAAA,EAAiD,KAAK,EAAIA,EAAY4E,MAAM,AAAD,IAC7EzB,EAAwB,IAAI,CAAE,mBAC9B,IAAI,CAACQ,UAAU,CAAGN,IAE1B,EAoBAC,EAActF,SAAS,CAAC6G,MAAM,CAAG,SAAUC,CAAG,CAAEpE,CAAQ,CAAEqE,CAAM,CAAE/E,CAAW,EACrEU,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,IAAI,CAACgD,QAAQ,AAAD,EAClD,IAAI7C,EAAU,IAAI,CAACA,OAAO,CACtBmE,EAAgBD,EAAS,IAAI,CAACrB,QAAQ,CAAG,EAAIhD,EAAW,EAC5D0C,EAAW0B,EAAK,SAAUnE,CAAS,CAAEF,CAAU,EAC3C,IAAIwB,EAASpB,CAAO,CAACJ,EAAW,EACxB,AAACT,CAAAA,MAAAA,EAAiD,KAAK,EAAIA,EAAYiF,UAAU,AAAD,IAAO,CAAA,GAAS,AAAIpD,MAAMmD,GAC9G/C,IACI8C,EACA9C,EAASG,EAAOH,EAAQvB,EAAU,EAAG,CAAA,EAAM,CAACC,EAAU,EAAEgC,KAAK,CAG7DV,CAAM,CAACvB,EAAS,CAAGC,EAEvBE,CAAO,CAACJ,EAAW,CAAGwB,EAE9B,GACI+C,EAAgB,IAAI,CAACtB,QAAQ,EAC7B,IAAI,CAACI,aAAa,CAACkB,GAEjBhF,CAAAA,MAAAA,EAAiD,KAAK,EAAIA,EAAY4E,MAAM,AAAD,IAC7EzB,EAAwB,IAAI,CAAE,gBAC9B,IAAI,CAACQ,UAAU,CAAGN,IAE1B,EACOC,CACX,IA0DI4B,GACIzI,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAMD,MAAO1I,AALHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOA,EAAElH,cAAc,CAACqH,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACvCjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EAEjB,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAKAE,EAAqB,AAACnH,IAA+EC,QAAQ,CAAEmH,EAAU,AAACpH,IAA+EoH,OAAO,CAAEC,EAAS,AAACrH,IAA+EqH,MAAM,CAAEC,EAAsB,AAACtH,IAA+EE,SAAS,CAAEqH,EAAW,AAACvH,IAA+EuH,QAAQ,CAAEC,EAAsB,AAACxH,IAA+E+E,SAAS,CAiBxnB0C,EAA2B,SAAUC,CAAM,EAO3C,SAASD,EAAUnH,CAAO,EAClBA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CACxBU,IAAY,IAAI,CAEpB,OADA2E,EAAMnD,QAAQ,CAAGmD,EACVA,CACX,CAglCA,OA5lCA2B,EAAUa,EAAWC,GAqCrBD,EAAUE,MAAM,CAAG,SAAUnB,CAAG,EAC5B,GAAIA,IAAQiB,EAAUG,IAAI,CACtB,MAAO,CAAA,EAEX,GAAIpB,aAAejD,MAAO,CACtB,GAAI,CAACiD,EAAIzF,MAAM,CACX,MAAO,CAAA,EAEX,IAAK,IAAIsC,EAAI,EAAGwE,EAAOrB,EAAIzF,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAC3C,GAAImD,AAAW,OAAXA,CAAG,CAACnD,EAAE,CACN,MAAO,CAAA,CAGnB,KACK,CACD,IAAIyC,EAAc1G,OAAO2G,IAAI,CAACS,GAC9B,GAAI,CAACV,EAAY/E,MAAM,CACnB,MAAO,CAAA,EAEX,IAAK,IAAIsC,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnD,GAAImD,AAAwB,OAAxBA,CAAG,CAACV,CAAW,CAACzC,EAAE,CAAC,CACnB,MAAO,CAAA,CAGnB,CACA,MAAO,CAAA,CACX,EAyBAoE,EAAU/H,SAAS,CAACqC,KAAK,CAAG,SAAU+F,CAAW,CAAEpG,CAAW,EAC1D,IACIqG,EAAe,CAAC,EACpBtG,AAFY,IAAI,CAEVd,IAAI,CAAC,CAAEC,KAAM,aAAcoB,OAAQN,CAAY,GACjD,AAACoG,GACDC,CAAAA,EAAaxF,OAAO,CAAGd,AAJf,IAAI,CAIiBc,OAAO,AAAD,EAEnC,AAACd,AANO,IAAI,CAMLyD,MAAM,EACb6C,CAAAA,EAAa5C,EAAE,CAAG1D,AAPV,IAAI,CAOY0D,EAAE,AAAD,EAE7B,IAAI6C,EAAa,IAAIP,EAAUM,GAW/B,OAVKD,IACDE,EAAW3C,UAAU,CAAG5D,AAXhB,IAAI,CAWkB4D,UAAU,CACxC2C,EAAWC,kBAAkB,CAAGxG,AAZxB,IAAI,CAY0BwG,kBAAkB,CACxDD,EAAWE,eAAe,CAAGzG,AAbrB,IAAI,CAauByG,eAAe,EAEtDzG,AAfY,IAAI,CAeVd,IAAI,CAAC,CACPC,KAAM,kBACNoB,OAAQN,EACRsG,WAAYA,CAChB,GACOA,CACX,EAmBAP,EAAU/H,SAAS,CAACyI,aAAa,CAAG,SAAUrC,CAAW,CAAEpE,CAAW,EAClE,IACIa,EAAUd,AADF,IAAI,CACIc,OAAO,CACvB6F,EAAiB,CAAC,EAClBC,EAAkB,CAAC,EACnB7H,EAAWiB,AAJH,IAAI,CAIKjB,QAAQ,CACzB4E,EAAW3D,AALH,IAAI,CAKK2D,QAAQ,CAE7B,GAAIU,AADJA,CAAAA,EAAeA,GAAe1G,OAAO2G,IAAI,CAACxD,EAAQ,EAClCxB,MAAM,CAAE,CACpBU,AARQ,IAAI,CAQNd,IAAI,CAAC,CACPC,KAAM,gBACNkF,YAAaA,EACb9D,OAAQN,CACZ,GACA,IAAK,IAAI2B,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAE4C,EAAS,KAAK,EAAGxB,EAAa,KAAK,EAAGkB,EAAIwE,EAAM,EAAExE,EAEzFM,CAAAA,EAASpB,CAAO,CADhBJ,EAAa2D,CAAW,CAACzC,EAAE,CACC,AAAD,IAEvB+E,CAAc,CAACjG,EAAW,CAAGwB,EAC7B0E,CAAe,CAAClG,EAAW,CAAG,AAAIoB,MAAM6B,IAE5C,OAAO7C,CAAO,CAACJ,EAAW,CAe9B,OAbK/C,OAAO2G,IAAI,CAACxD,GAASxB,MAAM,GAC5BU,AAvBI,IAAI,CAuBF2D,QAAQ,CAAG,EACjB,IAAI,CAACkD,wBAAwB,IAE7B9H,GACAA,EAAS8B,aAAa,CA3BlB,IAAI,CA2BsB+F,EAAiB,EAAG3G,GAEtDD,AA7BQ,IAAI,CA6BNd,IAAI,CAAC,CACPC,KAAM,qBACN2B,QAAS6F,EACTtC,YAAaA,EACb9D,OAAQN,CACZ,GACO0G,CACX,CACJ,EAOAX,EAAU/H,SAAS,CAAC4I,wBAAwB,CAAG,WAC3C,OAAO,IAAI,CAACL,kBAAkB,CAC9B,OAAO,IAAI,CAACC,eAAe,AAG/B,EAsBAT,EAAU/H,SAAS,CAAC+F,UAAU,CAAG,SAAUrD,CAAQ,CAAEgD,CAAQ,CAAE1D,CAAW,EAClE0D,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EACtC,IACImD,EAAc,EAAE,CAChBC,EAAe,EAAE,CACjBhI,EAAWiB,AAHH,IAAI,CAGKjB,QAAQ,CAW7B,GAVAiB,AAJY,IAAI,CAIVd,IAAI,CAAC,CACPC,KAAM,aACNoB,OAAQN,EACR0D,SAAUA,EACVhD,SAAWA,GAAY,CAC3B,GACwB,KAAA,IAAbA,IACPA,EAAW,EACXgD,EAAW3D,AAZH,IAAI,CAYK2D,QAAQ,EAEzBA,EAAW,GAAKhD,EAAWX,AAdnB,IAAI,CAcqB2D,QAAQ,CAGzC,IAAK,IAFD7C,EAAUd,AAfN,IAAI,CAeQc,OAAO,CACvBuD,EAAc1G,OAAO2G,IAAI,CAACxD,GACrBc,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAE4C,EAAS,KAAK,EAAG8E,EAAe,KAAK,EAAGtG,EAAa,KAAK,EAAGkB,EAAIwE,EAAM,EAAExE,EAAG,CAEnHM,EAASpB,CAAO,CADhBJ,EAAa2D,CAAW,CAACzC,EAAE,CACC,CAC5B,IAAIoB,EAASG,EAAiBd,MAAM,CAACH,EACjCvB,EACAgD,GACJqD,EAAehE,EAAON,OAAO,CAC7B5B,CAAO,CAACJ,EAAW,CAAGwB,EAASc,EAAOJ,KAAK,CACvC,AAAChB,GACD5B,CAAAA,AA1BA,IAAI,CA0BE2D,QAAQ,CAAGzB,EAAO5C,MAAM,AAAD,EAEjC,IAAK,IAAI2H,EAAI,EAAGC,EAAOF,EAAa1H,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EACpDH,CAAW,CAACG,EAAE,CAAIH,CAAW,CAACG,EAAE,EAAI,EAAE,CACtCH,CAAW,CAACG,EAAE,CAACrF,EAAE,CAAGoF,CAAY,CAACC,EAAE,CAEvCF,EAAalH,IAAI,CAAC,AAAIiC,MAAMsE,GAChC,CAYJ,OAVIrH,GACAA,EAASgC,UAAU,CApCX,IAAI,CAoCegG,EAAepG,GAAY,EAAIV,GAE9DD,AAtCY,IAAI,CAsCVd,IAAI,CAAC,CACPC,KAAM,kBACNoB,OAAQN,EACR0D,SAAUA,EACVhD,SAAWA,GAAY,EACvBK,KAAM8F,CACV,GACOA,CACX,EASAd,EAAU/H,SAAS,CAACiB,IAAI,CAAG,SAAUY,CAAC,EAC9B,CACA,qBACA,kBACA,eACA,kBACA,eACH,CAACqH,QAAQ,CAACrH,EAAEX,IAAI,GACb,CAAA,IAAI,CAACyE,UAAU,CAAGmC,GAAoB,EAE1CF,EAAoB,IAAI,CAAE/F,EAAEX,IAAI,CAAEW,EACtC,EAeAkG,EAAU/H,SAAS,CAACmJ,OAAO,CAAG,SAAU1G,CAAU,CAAEC,CAAQ,EAExD,IAAIuB,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,CACtC,GAAIwB,EACA,OAAOA,CAAM,CAACvB,EAAS,AAE/B,EAeAqF,EAAU/H,SAAS,CAACoJ,gBAAgB,CAAG,SAAU3G,CAAU,CAAEC,CAAQ,EAEjE,IAAIuB,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,CACtC,MAAO,CAAC,CAAEwB,CAAAA,GAAUA,CAAM,CAACvB,EAAS,AAAD,CACvC,EAkBAqF,EAAU/H,SAAS,CAACqJ,eAAe,CAAG,SAAU5G,CAAU,CAAEC,CAAQ,CAAE4G,CAAM,EAExE,IAAIrF,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,CAClCE,EAAasB,GAAUA,CAAM,CAACvB,EAAS,CAC3C,OAAQ,OAAOC,GACX,IAAK,UACD,MAAQA,GAAAA,CACZ,KAAK,SACD,OAAQ4G,MAAM5G,IAAc,CAAC2G,EAAS,KAAO3G,CACrD,CAEA,OAAQ4G,MADR5G,EAAY6G,WAAW,GAAGzF,MAAM,CAACpB,MAAAA,EAA6CA,EAAY,OAC9D,CAAC2G,EAAS,KAAO3G,CACjD,EAeAoF,EAAU/H,SAAS,CAACyJ,eAAe,CAAG,SAAUhH,CAAU,CAAEC,CAAQ,EAEhE,IAAIuB,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,CAEtC,MAAO,GAAGsB,MAAM,CAAEE,GAAUA,CAAM,CAACvB,EAAS,CAChD,EAgBAqF,EAAU/H,SAAS,CAACiG,SAAS,CAAG,SAAUxD,CAAU,CAAEyD,CAAW,EAC7D,OAAO,IAAI,CAACC,UAAU,CAAC,CAAC1D,EAAW,CAAEyD,EAAY,CAACzD,EAAW,AACjE,EAqBAsF,EAAU/H,SAAS,CAAC0J,kBAAkB,CAAG,SAAUjH,CAAU,CAAE6G,CAAM,EAGjE,IAAIrF,EAASpB,AADCd,AADF,IAAI,CACIc,OAAO,AACP,CAACJ,EAAW,CAC5BkH,EAAiB,EAAE,CACvB,GAAI1F,EAAQ,CACR,IAAI2F,EAAe3F,EAAO5C,MAAM,CAChC,GAAIiI,EACA,IAAK,IAAI3F,EAAI,EAAGA,EAAIiG,EAAc,EAAEjG,EAChCgG,EAAe/H,IAAI,CAACG,AARpB,IAAI,CAQsBsH,eAAe,CAAC5G,EAAYkB,EAAG,CAAA,QAG5D,CACD,IAAK,IAAIA,EAAI,EAAGhB,EAAY,KAAK,EAAGgB,EAAIiG,EAAc,EAAEjG,EAAG,CAEvD,GAAI,AAAqB,UAArB,MADJhB,CAAAA,EAAYsB,CAAM,CAACN,EAAE,AAAD,EAGhB,OAAOM,EAAOH,KAAK,GAEvB,GAAInB,MAAAA,EAEA,KAER,CACA,IAAK,IAAIgB,EAAI,EAAGA,EAAIiG,EAAc,EAAEjG,EAChCgG,EAAe/H,IAAI,CAACG,AAxBpB,IAAI,CAwBsBsH,eAAe,CAAC5G,EAAYkB,GAE9D,CACJ,CACA,OAAOgG,CACX,EASA5B,EAAU/H,SAAS,CAAC6J,cAAc,CAAG,WACjC,OAAOnK,OAAO2G,IAAI,CAAC,IAAI,CAACxD,OAAO,CACnC,EAmBAkF,EAAU/H,SAAS,CAACmG,UAAU,CAAG,SAAUC,CAAW,CAAEF,CAAW,CAAE4D,CAAc,EAC/E,IACIC,EAAehI,AADP,IAAI,CACSc,OAAO,CAC5BA,EAAU,CAAC,EACfuD,EAAeA,GAAe1G,OAAO2G,IAAI,CAAC0D,GAC1C,IAAK,IAAIpG,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAE4C,EAAS,KAAK,EAAGxB,EAAa,KAAK,EAAGkB,EAAIwE,EAAM,EAAExE,EAEzFM,CAAAA,EAAS8F,CAAY,CADrBtH,EAAa2D,CAAW,CAACzC,EAAE,CACM,AAAD,IAExBuC,EACArD,CAAO,CAACJ,EAAW,CAAGwB,EAEjB6F,GAAkB,CAACjG,MAAMM,OAAO,CAACF,GACtCpB,CAAO,CAACJ,EAAW,CAAGoB,MAAMN,IAAI,CAACU,GAGjCpB,CAAO,CAACJ,EAAW,CAAGwB,EAAOH,KAAK,IAI9C,OAAOjB,CACX,EAWAkF,EAAU/H,SAAS,CAACgK,gBAAgB,CAAG,SAAUC,CAAgB,EAC7D,IAAIzB,EAAkB,IAAI,CAACA,eAAe,QAC1C,AAAIA,EACOA,CAAe,CAACyB,EAAiB,CAErCA,CACX,EAQAlC,EAAU/H,SAAS,CAACkK,WAAW,CAAG,WAC9B,OAAO,IAAI,CAACpJ,QAAQ,AACxB,EAWAiH,EAAU/H,SAAS,CAACmK,mBAAmB,CAAG,SAAUzH,CAAQ,EACxD,IAAI6F,EAAqB,IAAI,CAACA,kBAAkB,QAChD,AAAIA,EACOA,CAAkB,CAAC7F,EAAS,CAEhCA,CACX,EAgBAqF,EAAU/H,SAAS,CAACuG,MAAM,CAAG,SAAU7D,CAAQ,CAAE0D,CAAW,EACxD,OAAO,IAAI,CAACgE,OAAO,CAAC1H,EAAU,EAAG0D,EAAY,CAAC,EAAE,AACpD,EASA2B,EAAU/H,SAAS,CAACqK,WAAW,CAAG,WAE9B,OAAO,IAAI,CAAC3E,QAAQ,AACxB,EAkBAqC,EAAU/H,SAAS,CAACsK,aAAa,CAAG,SAAU7H,CAAU,CAAEE,CAAS,CAAE4H,CAAc,EAE/E,IAAItG,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,CACtC,GAAIwB,EAAQ,CACR,IAAIvB,EAAW,GASf,GARImB,MAAMM,OAAO,CAACF,GAEdvB,EAAWuB,EAAOuG,OAAO,CAAC7H,EAAW4H,GAEhC1C,EAASlF,IAEdD,CAAAA,EAAWuB,EAAOuG,OAAO,CAAC7H,EAAW4H,EAAc,EAEnD7H,AAAa,KAAbA,EACA,OAAOA,CAEf,CACJ,EAgBAqF,EAAU/H,SAAS,CAACyK,YAAY,CAAG,SAAU/H,CAAQ,CAAE0D,CAAW,EAC9D,OAAO,IAAI,CAACsE,aAAa,CAAChI,EAAU,EAAG0D,EAAY,CAAC,EAAE,AAC1D,EAkBA2B,EAAU/H,SAAS,CAAC0K,aAAa,CAAG,SAAUhI,CAAQ,CAAEgD,CAAQ,CAAEU,CAAW,EACrE1D,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EAClCgD,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAY,IAAI,CAACA,QAAQ,CAAGhD,CAAQ,EAC/D,IACIG,EAAUd,AADF,IAAI,CACIc,OAAO,CACvBE,EAAO,AAAIc,MAAM6B,GACrBU,EAAeA,GAAe1G,OAAO2G,IAAI,CAACxD,GAC1C,IAAK,IAAIc,EAAIjB,EAAUiI,EAAK,EAAGxC,EAAOvC,KAAKgF,GAAG,CAAC7I,AAJnC,IAAI,CAIqC2D,QAAQ,CAAGhD,EAAWgD,GAAYzB,EAAS,KAAK,EAAG6C,EAAM,KAAK,EAAGnD,EAAIwE,EAAM,EAAExE,EAAG,EAAEgH,EAAI,CACvI7D,EAAM/D,CAAI,CAAC4H,EAAG,CAAG,CAAC,EAClB,IAAK,IAAIE,EAAK,EAAGC,EAAgB1E,EAAayE,EAAKC,EAAczJ,MAAM,CAAEwJ,IAAM,CAC3E,IAAIpI,EAAaqI,CAAa,CAACD,EAAG,CAClC5G,EAASpB,CAAO,CAACJ,EAAW,CAC5BqE,CAAG,CAACrE,EAAW,CAAIwB,EAASA,CAAM,CAACN,EAAE,CAAG,KAAK,CACjD,CACJ,CACA,OAAOZ,CACX,EAkBAgF,EAAU/H,SAAS,CAACoK,OAAO,CAAG,SAAU1H,CAAQ,CAAEgD,CAAQ,CAAEU,CAAW,EAC/D1D,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EAClCgD,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAY,IAAI,CAACA,QAAQ,CAAGhD,CAAQ,EAC/D,IACIG,EAAUd,AADF,IAAI,CACIc,OAAO,CACvBE,EAAO,AAAIc,MAAM6B,GACrBU,EAAeA,GAAe1G,OAAO2G,IAAI,CAACxD,GAC1C,IAAK,IAAIc,EAAIjB,EAAUiI,EAAK,EAAGxC,EAAOvC,KAAKgF,GAAG,CAAC7I,AAJnC,IAAI,CAIqC2D,QAAQ,CAAGhD,EAAWgD,GAAYzB,EAAS,KAAK,EAAG6C,EAAM,KAAK,EAAGnD,EAAIwE,EAAM,EAAExE,EAAG,EAAEgH,EAAI,CACvI7D,EAAM/D,CAAI,CAAC4H,EAAG,CAAG,EAAE,CACnB,IAAK,IAAIE,EAAK,EAAGE,EAAgB3E,EAAayE,EAAKE,EAAc1J,MAAM,CAAEwJ,IAErE5G,EAASpB,CAAO,CADCkI,CAAa,CAACF,EAAG,CACN,CAC5B/D,EAAIlF,IAAI,CAACqC,EAASA,CAAM,CAACN,EAAE,CAAG,KAAK,EAE3C,CACA,OAAOZ,CACX,EASAgF,EAAU/H,SAAS,CAACgL,aAAa,CAAG,WAChC,OAAO,IAAI,CAACrF,UAAU,AAC1B,EAYAoC,EAAU/H,SAAS,CAACiL,UAAU,CAAG,SAAU7E,CAAW,EAGlD,IAAK,IADDvD,EAAUd,AADF,IAAI,CACIc,OAAO,CAClBc,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEoB,EAAa,KAAK,EAAGkB,EAAIwE,EAAM,EAAExE,EAExE,GAAI,CAACd,CAAO,CADCuD,CAAW,CAACzC,EAAE,CACH,CACpB,MAAO,CAAA,EAGf,MAAO,CAAA,CACX,EAeAoE,EAAU/H,SAAS,CAACkL,UAAU,CAAG,SAAUzI,CAAU,CAAEE,CAAS,EAE5D,IAAIsB,EAASlC,AADD,IAAI,CACGc,OAAO,CAACJ,EAAW,QAEtC,AAAIoB,MAAMM,OAAO,CAACF,GACNA,AAA8B,KAA9BA,EAAOuG,OAAO,CAAC7H,KAGvB+E,CAAAA,EAAQ/E,IAAcwI,OAAOC,QAAQ,CAACzI,EAAS,GACvCsB,AAA+B,KAA/BA,EAAOuG,OAAO,CAAC,CAAC7H,EAGhC,EAeAoF,EAAU/H,SAAS,CAACoB,EAAE,CAAG,SAAUF,CAAI,CAAE8B,CAAQ,EAC7C,OAAOyE,EAAmB,IAAI,CAAEvG,EAAM8B,EAC1C,EAgBA+E,EAAU/H,SAAS,CAACqL,YAAY,CAAG,SAAU5I,CAAU,CAAE6I,CAAa,EAClE,IACIzI,EAAUd,AADF,IAAI,CACIc,OAAO,OAC3B,EAAIA,CAAO,CAACJ,EAAW,GACfA,IAAe6I,IACfzI,CAAO,CAACyI,EAAc,CAAGzI,CAAO,CAACJ,EAAW,CAC5C,OAAOI,CAAO,CAACJ,EAAW,EAEvB,CAAA,EAGf,EAsBAsF,EAAU/H,SAAS,CAACuL,OAAO,CAAG,SAAU9I,CAAU,CAAEC,CAAQ,CAAEC,CAAS,CAAEX,CAAW,EAChF,IACIa,EAAUd,AADF,IAAI,CACIc,OAAO,CACvB/B,EAAWiB,AAFH,IAAI,CAEKjB,QAAQ,CACzBmD,EAASpB,CAAO,CAACJ,EAAW,CAC5BwB,GAAUA,CAAM,CAACvB,EAAS,GAAKC,IAGnCZ,AAPY,IAAI,CAOVd,IAAI,CAAC,CACPC,KAAM,UACNyB,UAAWA,EACXF,WAAYA,EACZH,OAAQN,EACRU,SAAUA,CACd,GACI,AAACuB,GACDA,CAAAA,EAASpB,CAAO,CAACJ,EAAW,CAAG,AAAIoB,MAAM9B,AAfjC,IAAI,CAemC2D,QAAQ,CAAA,EAEvDhD,GAAYX,AAjBJ,IAAI,CAiBM2D,QAAQ,EAC1B3D,CAAAA,AAlBQ,IAAI,CAkBN2D,QAAQ,CAAIhD,EAAW,CAAC,EAElCuB,CAAM,CAACvB,EAAS,CAAGC,EACf7B,GACAA,EAAS0B,UAAU,CAtBX,IAAI,CAsBeC,EAAYC,EAAUC,GAErDZ,AAxBY,IAAI,CAwBVd,IAAI,CAAC,CACPC,KAAM,eACNyB,UAAWA,EACXF,WAAYA,EACZH,OAAQN,EACRU,SAAUA,CACd,GACJ,EAyBAqF,EAAU/H,SAAS,CAAC2G,UAAU,CAAG,SAAU9D,CAAO,CAAEH,CAAQ,CAAEV,CAAW,CAAEwJ,CAAc,EACrF,IACIzB,EAAehI,AADP,IAAI,CACSc,OAAO,CAC5B4I,EAAgB1J,AAFR,IAAI,CAEUjB,QAAQ,CAC9BsF,EAAc1G,OAAO2G,IAAI,CAACxD,GAC1B6C,EAAW3D,AAJH,IAAI,CAIK2D,QAAQ,CAQ7B,GAPA3D,AALY,IAAI,CAKVd,IAAI,CAAC,CACPC,KAAM,aACN2B,QAASA,EACTuD,YAAaA,EACb9D,OAAQN,EACRU,SAAUA,CACd,GACI,AAACgF,EAAQhF,IAAc8I,EAGtB,CACD,IAAK,IAAI7H,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAE4C,EAAS,KAAK,EAAGyH,EAAc,KAAK,EAAGjJ,EAAa,KAAK,EAAGkJ,EAAmB,KAAK,EAAGhI,EAAIwE,EAAM,EAAExE,EAAG,CAE7IM,EAASpB,CAAO,CADhBJ,EAAa2D,CAAW,CAACzC,EAAE,CACC,CAE5BgI,EAAmBjM,OAAOmF,cAAc,CAAC,AAAC6G,AAD1CA,CAAAA,EAAc3B,CAAY,CAACtH,EAAW,AAAD,GACoB+I,EAAkBE,EAAczH,GAAQa,WAAW,CACvG4G,EAGIC,IAAqB9H,MACtB,AAACA,MAAMM,OAAO,CAACuH,IACfA,CAAAA,EAAc7H,MAAMN,IAAI,CAACmI,EAAW,EAGnCA,EAAYrK,MAAM,CAAGqE,GAG1BgG,AAFAA,CAAAA,EACI,IAAIC,EAAiBjG,EAAQ,EACrBV,GAAG,CAAC+E,CAAY,CAACtH,EAAW,EAVxCiJ,EAAc,IAAIC,EAAiBjG,GAYvCqE,CAAY,CAACtH,EAAW,CAAGiJ,EAC3B,IAAK,IAAIE,EAAOlJ,GAAY,EAAImJ,EAAS5H,EAAO5C,MAAM,CAAEuK,EAAMC,EAAQ,EAAED,EACpEF,CAAW,CAACE,EAAI,CAAG3H,CAAM,CAAC2H,EAAI,CAElClG,EAAWE,KAAKC,GAAG,CAACH,EAAUzB,EAAO5C,MAAM,CAC/C,CACA,IAAI,CAACyE,aAAa,CAACJ,EACvB,MA5BIsC,EAAOhI,SAAS,CAAC2G,UAAU,CAACzG,IAAI,CAAC,IAAI,CAAE2C,EAASH,EAAUiF,EAAO3F,EAAa,CAAE4E,OAAQ,CAAA,CAAK,GA6B7F6E,CAAAA,GACAA,EAAc7I,aAAa,CA3CnB,IAAI,CA2CuBC,EAASH,GAAY,GAE5DX,AA7CY,IAAI,CA6CVd,IAAI,CAAC,CACPC,KAAM,kBACN2B,QAASA,EACTuD,YAAaA,EACb9D,OAAQN,EACRU,SAAUA,CACd,EACJ,EAgBAqF,EAAU/H,SAAS,CAAC8L,WAAW,CAAG,SAAUhL,CAAQ,CAAEkB,CAAW,EAC7D,IACI+J,EADAhK,EAAQ,IAAI,CAgBhB,OAdAA,EAAMd,IAAI,CAAC,CACPC,KAAM,cACNoB,OAAQN,EACRlB,SAAUA,EACVsB,SAAUL,EAAMK,QAAQ,AAC5B,GACAL,EAAMK,QAAQ,CAAGL,EACjBA,EAAMjB,QAAQ,CAAGA,EAOViL,CANHjL,EACUA,EAASgB,MAAM,CAACC,GAGhBE,QAAQC,OAAO,CAACH,IAGzBiK,IAAI,CAAC,SAAUjK,CAAK,EAOrB,OANAA,EAAMd,IAAI,CAAC,CACPC,KAAM,mBACNoB,OAAQN,EACRlB,SAAUA,EACVsB,SAAUL,EAAMK,QAAQ,AAC5B,GACOL,CACX,GAAG,KAAQ,CAAC,SAAUkK,CAAK,EAOvB,MANAlK,EAAMd,IAAI,CAAC,CACPC,KAAM,mBACN+K,MAAOA,EACPnL,SAAUA,EACVsB,SAAUL,EAAMK,QAAQ,AAC5B,GACM6J,CACV,EACJ,EAWAlE,EAAU/H,SAAS,CAACkM,qBAAqB,CAAG,SAAU3D,CAAkB,CAAE4D,CAAmB,EAGzF,GAFIA,AAAwB,KAAK,IAA7BA,GAAkCA,CAAAA,EAAsB,CAAA,CAAI,EAChE,IAAI,CAAC5D,kBAAkB,CAAGA,GACtB4D,EAIJ,IAAK,IADDC,EAAkB,IAAI,CAAC5D,eAAe,CAAG,EAAE,CACtC7E,EAAI,EAAGwE,EAAOI,EAAmBlH,MAAM,CAAEgL,EAAgB,KAAK,EAAG1I,EAAIwE,EAAM,EAAExE,EAE9E+D,EADJ2E,EAAgB9D,CAAkB,CAAC5E,EAAE,GAEjCyI,CAAAA,CAAe,CAACC,EAAc,CAAG1I,CAAAA,CAG7C,EAyBAoE,EAAU/H,SAAS,CAAC6G,MAAM,CAAG,SAAUC,CAAG,CAAEpE,CAAQ,CAAEqE,CAAM,CAAE/E,CAAW,EACrE,IAAI,CAACsK,OAAO,CAAC,CAACxF,EAAI,CAAEpE,EAAUqE,EAAQ/E,EAC1C,EAuBA+F,EAAU/H,SAAS,CAACsM,OAAO,CAAG,SAAUvJ,CAAI,CAAEL,CAAQ,CAAEqE,CAAM,CAAE/E,CAAW,EACnEU,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,IAAI,CAACgD,QAAQ,AAAD,EAClD,IACI7C,EAAUd,AADF,IAAI,CACIc,OAAO,CACvBuD,EAAc1G,OAAO2G,IAAI,CAACxD,GAC1B/B,EAAWiB,AAHH,IAAI,CAGKjB,QAAQ,CACzB4E,EAAW3C,EAAK1B,MAAM,CAC1BU,AALY,IAAI,CAKVd,IAAI,CAAC,CACPC,KAAM,UACNoB,OAAQN,EACR0D,SAAUA,EACVhD,SAAUA,EACVK,KAAMA,CACV,GACA,IAAK,IAAIY,EAAI,EAAGgH,EAAKjI,EAAUoE,EAAM,KAAK,EAAGnD,EAAI+B,EAAU,EAAE/B,EAAG,EAAEgH,EAE9D,GAAI7D,AADJA,CAAAA,EAAM/D,CAAI,CAACY,EAAE,AAAD,IACAoE,EAAUG,IAAI,CACtB,IAAK,IAAIc,EAAI,EAAGC,EAAO7C,EAAY/E,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EAAG,CACtD,IAAI/E,EAASpB,CAAO,CAACuD,CAAW,CAAC4C,EAAE,CAAC,CAChCjC,EACAlE,CAAO,CAACuD,CAAW,CAAC4C,EAAE,CAAC,CAAG9D,EAAiBd,MAAM,CAACH,EAAQ0G,EAAI,EAAG,CAAA,EAAM,CAAC,KAAK,EAAEhG,KAAK,CAGpFV,CAAM,CAAC0G,EAAG,CAAG,IAErB,MAEC,GAAI7D,aAAejD,MACpB,IAAK,IAAImF,EAAI,EAAGC,EAAO7C,EAAY/E,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EACnDnG,CAAO,CAACuD,CAAW,CAAC4C,EAAE,CAAC,CAAC2B,EAAG,CAAG7D,CAAG,CAACkC,EAAE,MAIxChB,EAAOhI,SAAS,CAAC6G,MAAM,CAAC3G,IAAI,CAAC,IAAI,CAAE4G,EAAK6D,EAAI,KAAK,EAAG,CAAE/D,OAAQ,CAAA,CAAK,GAG3E,IAAII,EAAgBD,EACZrB,EAAW3C,EAAK1B,MAAM,CACtBqB,EAAWgD,EACnB,GAAIsB,EAAgBjF,AArCR,IAAI,CAqCU2D,QAAQ,CAAE,CAChC3D,AAtCQ,IAAI,CAsCN2D,QAAQ,CAAGsB,EACjB,IAAK,IAAIrD,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAAG,CACtD,IAAIlB,EAAa2D,CAAW,CAACzC,EAAE,AAC/Bd,CAAAA,CAAO,CAACJ,EAAW,CAAGyC,EAAiBlB,SAAS,CAACnB,CAAO,CAACJ,EAAW,CAAEuE,EAC1E,CACJ,CACIlG,GACAA,EAASgC,UAAU,CA7CX,IAAI,CA6CeC,EAAML,GAErCX,AA/CY,IAAI,CA+CVd,IAAI,CAAC,CACPC,KAAM,eACNoB,OAAQN,EACR0D,SAAUA,EACVhD,SAAUA,EACVK,KAAMA,CACV,EACJ,EAmBAgF,EAAUG,IAAI,CAAG,CAAC,EAKlBH,EAAUwE,OAAO,CAAG,QACbxE,CACX,EAtrCuDzC,GAutCnDkH,EAAsD,SAAUC,CAAO,CAAEC,CAAI,EAC7E,IAIIC,EACAC,EACAC,EANAC,EAAI,CAAEC,MAAO,EACbC,KAAM,WAAa,GAAIH,AAAO,EAAPA,CAAC,CAAC,EAAE,CAAM,MAAMA,CAAC,CAAC,EAAE,CAAE,OAAOA,CAAC,CAAC,EAAE,AAAE,EAC1DI,KAAM,EAAE,CACRC,IAAK,EAAE,AAAC,EAIRC,EAAIzN,OAAO8H,MAAM,CAAC,AAAC,CAAA,AAAoB,YAApB,OAAO4F,SAA0BA,SAAW1N,MAAK,EAAGM,SAAS,EACpF,OAAOmN,EAAEE,IAAI,CAAGC,EAAK,GAAIH,EAAE,KAAQ,CAAGG,EAAK,GAAIH,EAAE,MAAS,CAAGG,EAAK,GAAI,AAAkB,YAAlB,OAAOC,QAA0BJ,CAAAA,CAAC,CAACI,OAAOC,QAAQ,CAAC,CAAG,WAAa,OAAO,IAAI,AAAE,CAAA,EAAIL,EAC1J,SAASG,EAAKpO,CAAC,EAAI,OAAO,SAAUuO,CAAC,MACvBC,EADuC,CAACxO,EAAGuO,EAAE,CAEvD,GAAId,EAAG,MAAM,AAAIgB,UAAU,mCAC3B,KAAOR,GAAMA,CAAAA,EAAI,EAAGO,CAAE,CAAC,EAAE,EAAKZ,CAAAA,EAAI,CAAA,CAAC,EAAIA,GAAG,GAAI,CAC1C,GAAIH,EAAI,EAAGC,GAAMC,CAAAA,EAAIa,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAOd,EAAE,MAAS,CAAGc,CAAE,CAAC,EAAE,CAAGd,EAAE,KAAQ,EAAK,CAAA,AAACC,CAAAA,EAAID,EAAE,MAAS,AAAD,GAAMC,EAAE3M,IAAI,CAAC0M,GAAI,CAAA,EAAKA,EAAES,IAAI,AAAD,GAAM,CAAC,AAACR,CAAAA,EAAIA,EAAE3M,IAAI,CAAC0M,EAAGc,CAAE,CAAC,EAAE,CAAA,EAAGE,IAAI,CAAE,OAAOf,EAE3J,OADID,EAAI,EAAJA,AAAOC,GAAGa,CAAAA,EAAK,CAACA,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAMb,EAAEgB,KAAK,CAAC,AAAD,EAC9BH,CAAE,CAAC,EAAE,EACT,KAAK,EAAG,KAAK,EAAGb,EAAIa,EAAI,KACxB,MAAK,EAAc,OAAXZ,EAAEC,KAAK,GAAW,CAAEc,MAAOH,CAAE,CAAC,EAAE,CAAEE,KAAM,CAAA,CAAM,CACtD,MAAK,EAAGd,EAAEC,KAAK,GAAIH,EAAIc,CAAE,CAAC,EAAE,CAAEA,EAAK,CAAC,EAAE,CAAE,QACxC,MAAK,EAAGA,EAAKZ,EAAEI,GAAG,CAACY,GAAG,GAAIhB,EAAEG,IAAI,CAACa,GAAG,GAAI,QACxC,SACI,GAAI,CAAcjB,CAAAA,EAAIA,AAAhBA,CAAAA,EAAIC,EAAEG,IAAI,AAAD,EAAS5L,MAAM,CAAG,GAAKwL,CAAC,CAACA,EAAExL,MAAM,CAAG,EAAE,AAAD,GAAOqM,CAAAA,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAUA,AAAU,IAAVA,CAAE,CAAC,EAAE,AAAK,EAAI,CAAEZ,EAAI,EAAG,QAAU,CAC3G,GAAIY,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAW,CAAA,CAACb,GAAMa,CAAE,CAAC,EAAE,CAAGb,CAAC,CAAC,EAAE,EAAIa,CAAE,CAAC,EAAE,CAAGb,CAAC,CAAC,EAAE,EAAI,CAAEC,EAAEC,KAAK,CAAGW,CAAE,CAAC,EAAE,CAAE,KAAO,CACrF,GAAIA,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAUZ,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAE,CAAEC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAEA,EAAIa,EAAI,KAAO,CACpE,GAAIb,GAAKC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAE,CAAEC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAEC,EAAEI,GAAG,CAACtL,IAAI,CAAC8L,GAAK,KAAO,CAC9Db,CAAC,CAAC,EAAE,EAAEC,EAAEI,GAAG,CAACY,GAAG,GACnBhB,EAAEG,IAAI,CAACa,GAAG,GAAI,QACtB,CACAJ,EAAKhB,EAAKxM,IAAI,CAACuM,EAASK,EAC5B,CAAE,MAAOjL,EAAG,CAAE6L,EAAK,CAAC,EAAG7L,EAAE,CAAE+K,EAAI,CAAG,QAAU,CAAED,EAAIE,EAAI,CAAG,CACzD,GAAIa,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAM,MAAMA,CAAE,CAAC,EAAE,CAAE,MAAO,CAAEG,MAAOH,CAAE,CAAC,EAAE,CAAGA,CAAE,CAAC,EAAE,CAAG,KAAK,EAAGE,KAAM,CAAA,CAAK,CArBrB,CAAG,CAuBrE,EAIIG,EAAyB,AAACzN,IAA+EC,QAAQ,CAAEyN,EAA0B,AAAC1N,IAA+EE,SAAS,CAAEyN,EAAsB,AAAC3N,IAA+EG,KAAK,CAAEyN,EAAO,AAAC5N,IAA+E4N,IAAI,CAWhbxP,EAA+B,WAe/B,SAASA,EAAckC,CAAO,CAAEuN,CAAU,EAClCvN,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACjCuN,AAAe,KAAK,IAApBA,GAAyBA,CAAAA,EAAa,EAAE,AAAD,EAI3C,IAAI,CAACA,UAAU,CAAG,CAAC,EAKnB,IAAI,CAACC,MAAM,CAAG,CAAA,EACd,IAAI,CAACC,QAAQ,CAAGzN,EAAQyN,QAAQ,EAAI,CAAExL,QAAS,CAAC,CAAE,EAElD,IAAIyL,EAAiB,EACrB,GAAI,AAACH,CAAAA,MAAAA,EAA+C,KAAK,EAAIA,EAAW9M,MAAM,AAAD,EAAK,EAC9E,IAAK,IAAIsC,EAAI,EAAGwE,EAAOgG,EAAW9M,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAAG,CACrD,IAAIhD,EAAYwN,CAAU,CAACxK,EAAE,CACzBnE,EAAMmB,MAAAA,EAA6C,KAAK,EAAIA,EAAUnB,GAAG,AAC7E,CAAA,IAAI,CAAC2O,UAAU,CAAC3O,MAAAA,EAAiCA,EAAM8O,EAAe,CAClE,IA9G+BvG,EA8GZpH,GACnB,CAACnB,GACD8O,GAER,MAIA,IAAI,CAACH,UAAU,CAAC,EAAE,CAAG,IAtHkBpG,EAsHCnH,EAAQD,SAAS,CAEjE,CA6SA,OA5SAjB,OAAOC,cAAc,CAACjB,EAAcsB,SAAS,CAAE,UAAW,CAItDH,IAAK,WACD,MAAO,CAAC,CAAC,IAAI,CAAC0O,QAAQ,AAC1B,EACA3O,WAAY,CAAA,EACZ4O,aAAc,CAAA,CAClB,GACA9O,OAAOC,cAAc,CAACjB,EAAcsB,SAAS,CAAE,QAAS,CAOpDH,IAAK,WACD,OAAO,IAAI,CAAC4O,QAAQ,EACxB,EACA7O,WAAY,CAAA,EACZ4O,aAAc,CAAA,CAClB,GAeA9P,EAAcsB,SAAS,CAAC0O,cAAc,CAAG,SAAUC,CAAI,CAAEC,CAAU,EAC/D,IACI/L,EAAUgM,AADE,IAAI,CACIR,QAAQ,CAACxL,OAAO,AACxCA,CAAAA,CAAO,CAAC8L,EAAK,CAAGV,EAAoBpL,CAAO,CAAC8L,EAAK,EAAI,CAAC,EAAGC,EAC7D,EAOAlQ,EAAcsB,SAAS,CAAC8O,eAAe,CAAG,SAAUjM,CAAO,EAIvD,IAHA,IAEIJ,EADA2D,EAAc1G,OAAO2G,IAAI,CAACxD,GAEvB,AAA4C,UAA5C,MAAQJ,CAAAA,EAAa2D,EAAY0H,GAAG,EAAC,GACxCe,AAJY,IAAI,CAINH,cAAc,CAACjM,EAAYI,CAAO,CAACJ,EAAW,CAEhE,EAQA/D,EAAcsB,SAAS,CAACiB,IAAI,CAAG,SAAUY,CAAC,EACtCmM,EAAwB,IAAI,CAAEnM,EAAEX,IAAI,CAAEW,EAC1C,EAUAnD,EAAcsB,SAAS,CAAC+O,cAAc,CAAG,SAEzCC,CAAoB,EAChB,IACInM,EAAUgM,AADE,IAAI,CACIR,QAAQ,CAACxL,OAAO,CACpCoM,EAAQvP,OAAO2G,IAAI,CAACxD,GAAW,CAAC,GACpC,GAAIoM,EAAM5N,MAAM,CACZ,OAAO4N,EAAMC,IAAI,CAAC,SAAU5P,CAAC,CAAE6H,CAAC,EAAI,OAAQ+G,EAAKrL,CAAO,CAACvD,EAAE,CAAC6P,KAAK,CAAE,GAAKjB,EAAKrL,CAAO,CAACsE,EAAE,CAACgI,KAAK,CAAE,EAAK,EAE5G,EAWAzQ,EAAcsB,SAAS,CAACyO,QAAQ,CAAG,SAAUjP,CAAG,SAC5C,AAAIA,EACO,IAAI,CAAC2O,UAAU,CAAC3O,EAAI,CAExBE,OAAO0P,MAAM,CAAC,IAAI,CAACjB,UAAU,CAAC,CAAC,EAAE,AAC5C,EAWAzP,EAAcsB,SAAS,CAACqP,gBAAgB,CAAG,SAAUC,CAAoB,EACrE,OAAO,IAAI,CAACvN,KAAK,CAACoE,UAAU,CAAC,IAAI,CAAC4I,cAAc,CAACO,GACrD,EASA5Q,EAAcsB,SAAS,CAACuP,IAAI,CAAG,WAE3B,OADAvB,EAAwB,IAAI,CAAE,YAAa,CAAEjM,MAAO,IAAI,CAACA,KAAK,AAAC,GACxDE,QAAQC,OAAO,CAAC,IAAI,CAC/B,EAaAxD,EAAcsB,SAAS,CAACoB,EAAE,CAAG,SAAUF,CAAI,CAAE8B,CAAQ,EACjD,OAAO+K,EAAuB,IAAI,CAAE7M,EAAM8B,EAC9C,EAUAtE,EAAcsB,SAAS,CAACwP,IAAI,CAAG,WAE3B,OADAxB,EAAwB,IAAI,CAAE,YAAa,CAAEjM,MAAO,IAAI,CAACA,KAAK,AAAC,GACxDE,QAAQE,MAAM,CAAC,AAAII,MAAM,mBACpC,EAOA7D,EAAcsB,SAAS,CAACyP,cAAc,CAAG,SAAUrJ,CAAW,EAE1D,IAAK,IAAIzC,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnDkL,AAFY,IAAI,CAENH,cAAc,CAACtI,CAAW,CAACzC,EAAE,CAAE,CAAEwL,MAAOxL,CAAE,EAE5D,EACAjF,EAAcsB,SAAS,CAAC0P,kBAAkB,CAAG,SAAUC,CAAe,CAAEC,CAAa,MA7QzBnD,EAASoD,EAAYC,EAAGC,EA8QhF,OA9QwDtD,EA8QvC,IAAI,CA9Q4CoD,EA8Q1C,KAAK,EA9QiDC,EA8Q9C,KAAK,EA9Q4CC,EA8QzC,WACnC,IAAIC,EACAnF,EACApE,EACAwJ,EACAzQ,EACAuC,EACJ,OAAOyK,EAAY,IAAI,CAAE,SAAU0D,CAAE,EACjC,OAAQA,EAAGnD,KAAK,EACZ,KAAK,EACDiD,EAAU,SAAUxQ,CAAG,CAAEuC,CAAK,EAC1B,IAAIsG,EACA8H,EACAC,EACJ,OAAO5D,EAAY,IAAI,CAAE,SAAU6D,CAAE,EACjC,OAAQA,EAAGtD,KAAK,EACZ,KAAK,EAKD,OAFAqD,EAAiBD,AADjBA,CAAAA,EAAwBlC,EAAoB5F,MAD5CA,CAAAA,EAAeuH,MAAAA,EAAqD,KAAK,EAAIA,EAAcU,IAAI,CAAC,SAAU3P,CAAS,EAAI,OAAOA,EAAUnB,GAAG,GAAKA,CAAK,EAAC,EACvD,KAAK,EAAI6I,EAAakI,YAAY,CAAEZ,EAAe,GAE9IvM,EAAuBH,KAAK,CAACkN,EAAsBjP,IAAI,CAAC,CACrD,CAAC,EAAaa,EAAM+J,WAAW,CAACsE,EAC/B,IAAIA,EAAcD,GAClB,KAAK,GAAG,AACpB,MAAK,EAED,OADAE,EAAGrD,IAAI,GACA,CAAC,EAAa,AAC7B,CACJ,EACJ,EACAnC,EAAK,EAAGpE,EAAK/G,OAAO8Q,OAAO,CAAC,IAAI,CAACrC,UAAU,EAC3C+B,EAAGnD,KAAK,CAAG,CACf,MAAK,EACD,GAAI,CAAElC,CAAAA,EAAKpE,EAAGpF,MAAM,AAAD,EAAI,MAAO,CAAC,EAAa,EAAE,CAE9C,OADa7B,EAAMyQ,AAAnBA,CAAAA,EAAKxJ,CAAE,CAACoE,EAAG,AAAD,CAAW,CAAC,EAAE,CAAE9I,EAAQkO,CAAE,CAAC,EAAE,CAChC,CAAC,EAAcD,EAAQxQ,EAAKuC,GAAO,AAC9C,MAAK,EACDmO,EAAGlD,IAAI,GACPkD,EAAGnD,KAAK,CAAG,CACf,MAAK,EAED,OADAlC,IACO,CAAC,EAAa,EAAE,AAC3B,MAAK,EAAG,MAAO,CAAC,EAAc,IAAI,CAAC,AACvC,CACJ,EACJ,EAzTG,GAAKiF,CAAAA,GAAMA,CAAAA,EAAI7N,OAAM,CAAC,EAAG,SAAUC,CAAO,CAAEC,CAAM,EACrD,SAASsO,EAAU5C,CAAK,EAAI,GAAI,CAAE6C,EAAKX,EAAU1C,IAAI,CAACQ,GAAS,CAAE,MAAOhM,EAAG,CAAEM,EAAON,EAAI,CAAE,CAC1F,SAAS8O,EAAS9C,CAAK,EAAI,GAAI,CAAE6C,EAAKX,EAAU,KAAQ,CAAClC,GAAS,CAAE,MAAOhM,EAAG,CAAEM,EAAON,EAAI,CAAE,CAC7F,SAAS6O,EAAK3L,CAAM,MAJT8I,CAIa9I,CAAAA,EAAO6I,IAAI,CAAG1L,EAAQ6C,EAAO8I,KAAK,EAAI+C,AAJnC/C,CAAAA,CAAhBA,EAIyD9I,EAAO8I,KAAK,YAJpCiC,EAAIjC,EAAQ,IAAIiC,EAAE,SAAU5N,CAAO,EAAIA,EAAQ2L,EAAQ,EAAC,EAIlB7B,IAAI,CAACyE,EAAWE,EAAW,CAC7GD,EAAK,AAACX,CAAAA,EAAYA,EAAUrL,KAAK,CAAC+H,EAASoD,GAAc,EAAE,CAAA,EAAGxC,IAAI,GACtE,EAqTA,EAOA3O,EAAcsB,SAAS,CAAC6Q,YAAY,CAAG,SAAUC,CAAW,EACpDA,AAAgB,KAAK,IAArBA,GAA0BA,CAAAA,EAAc,GAAG,EAC/C,IAAIjC,EAAY,IAAI,CAChBkC,EAASlC,EAAUV,UAAU,AAEjC,CAAA,IAAI,CAAC6C,iBAAiB,CAAG,IAAIC,gBAE7BxP,OAAOyP,YAAY,CAACrC,EAAUN,QAAQ,EACtCM,EAAUN,QAAQ,CAAG9M,OAAO0P,UAAU,CAAC,WAAc,OAAOtC,EACvDU,IAAI,GAAG,KAAQ,CAAC,SAAUtD,CAAK,EAAI,OAAO4C,EAAU5N,IAAI,CAAC,CAC1DC,KAAM,YACN+K,MAAOA,EACP8E,OAAQA,CACZ,EAAI,GACC/E,IAAI,CAAC,WACF6C,EAAUN,QAAQ,EAClBM,EAAUgC,YAAY,CAACC,EAE/B,EAAI,EAAGA,EACX,EAIApS,EAAcsB,SAAS,CAACoR,WAAW,CAAG,WAElC,IADI3K,CAECoI,CADW,IAAI,CACLwC,OAAO,GAItB,MAAC5K,CAAAA,EAAKoI,AAAc,OALJ,IAAI,EAKQA,AAAc,KAAK,IAL/B,IAAI,CAK+B,KAAK,EAAIA,AAL5C,IAAI,CAKkDmC,iBAAiB,AAAD,GAAwCvK,EAAG6K,KAAK,GAEtI7P,OAAOyP,YAAY,CAACrC,AAPJ,IAAI,CAOUN,QAAQ,EACtC,OAAOM,AARS,IAAI,CAQHN,QAAQ,CAC7B,EAUA7P,EAAcsB,SAAS,CAACuR,MAAM,CAAG,SAAU5C,CAAI,EAC3C,OAAO,IAAI,CAACN,QAAQ,CAACxL,OAAO,CAAC8L,EAAK,AACtC,EAcAjQ,EAAcsB,SAAS,CAACwR,cAAc,CAAG,SAAUC,CAAI,CAAEC,CAAe,CAAEC,CAAS,EAE/E,IAAK,IADDxC,EAAQ,EACHtE,EAAK,EAAGpE,EAAK/G,OAAO8Q,OAAO,CAAC,IAAI,CAACrC,UAAU,EAAGtD,EAAKpE,EAAGpF,MAAM,CAAEwJ,IAAM,CACzE,IAAIoF,EAAKxJ,CAAE,CAACoE,EAAG,CACXrL,EAAMyQ,CAAE,CAAC,EAAE,CACXlO,EAAQkO,CAAE,CAAC,EAAE,CAEb2B,EAAYF,EAAgBlS,EAC5BuC,GACJ4P,EAAUC,EAAWH,GAErB1P,EAAM0G,aAAa,GACnB1G,EAAM4E,UAAU,CAACiL,EAAUnD,QAAQ,GAAGtI,UAAU,IAE5CgJ,AAAU,IAAVA,GACA,CAAA,IAAI,CAACyC,SAAS,CAAGA,CAAQ,EAE7BzC,GACJ,CACJ,EACOzQ,CACX,GAoBIA,EAdOA,EA2CRA,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GA7BpBuE,KAAK,CAAG,CAAC,EA4BvBvE,EAAcwE,YAAY,CAL1B,SAAsB1D,CAAG,CAAEqS,CAAkB,EACzC,MAAQ,CAAC,CAACrS,GACN,CAACd,EAAcuE,KAAK,CAACzD,EAAI,EACzB,CAAC,CAAEd,CAAAA,EAAcuE,KAAK,CAACzD,EAAI,CAAGqS,CAAiB,CACvD,EAQyB,IAAIC,GAA4BpT,EAuBzDqT,GAAyB,AAACzR,IAA+EC,QAAQ,CAAEyR,GAA0B,AAAC1R,IAA+EE,SAAS,CAAEyR,GAAyB,AAAC3R,IAA+EuH,QAAQ,CAAEqK,GAAsB,AAAC5R,IAA+EG,KAAK,CAWtc9B,GAA+B,WAY/B,SAASA,EAAciC,CAAO,EAS1B,IAAI,CAACuR,WAAW,CAAG,CACf,aAAc,CACVC,MAAO,0CACPC,OAAQ,SAAUC,CAAK,EACnB,OAAQA,EACJC,KAAKC,GAAG,CAAC,CAACF,CAAK,CAAC,EAAE,CAAEA,CAAK,CAAC,EAAE,CAAG,EAAG,CAACA,CAAK,CAAC,EAAE,EAC3CG,GACR,CACJ,EACA,aAAc,CACVL,MAAO,0CACPC,OAAQ,SAAUC,CAAK,EACnB,OAAQA,EACJC,KAAKC,GAAG,CAAC,CAACF,CAAK,CAAC,EAAE,CAAEA,CAAK,CAAC,EAAE,CAAG,EAAG,CAACA,CAAK,CAAC,EAAE,EAC3CG,GACR,EACAC,YAAa,YACjB,EACA,aAAc,CACVN,MAAO,0CACPC,OAAQ,SAAUC,CAAK,EACnB,OAAQA,EACJC,KAAKC,GAAG,CAAC,CAACF,CAAK,CAAC,EAAE,CAAEA,CAAK,CAAC,EAAE,CAAG,EAAG,CAACA,CAAK,CAAC,EAAE,EAC3CG,GACR,CACJ,EACA,WAAY,CACRL,MAAO,0CACPC,OAAQ,SAAUC,CAAK,EACnB,IAAIjT,EAAI,IAAIkT,KACZ,GAAI,CAACD,EACD,OAAOG,IAEX,IAAIE,EAAO,CAACL,CAAK,CAAC,EAAE,CAOpB,OANIK,EAAQtT,EAAEuT,WAAW,GAAK,IAC1BD,GAAQ,KAGRA,GAAQ,IAELJ,KAAKC,GAAG,CAACG,EAAML,CAAK,CAAC,EAAE,CAAG,EAAG,CAACA,CAAK,CAAC,EAAE,CACjD,EACAI,YAAa,UACjB,EACA,WAAY,CACRN,MAAO,0CACPC,OAAQ,SAAUC,CAAK,EACnB,OAAQA,EACJC,KAAKC,GAAG,CAAC,CAACF,CAAK,CAAC,EAAE,CAAG,IAAMA,CAAK,CAAC,EAAE,CAAG,EAAG,CAACA,CAAK,CAAC,EAAE,EAClDG,GACR,CACJ,CACJ,EACA,IAAII,EAAgBX,GAAoBvT,EAAcmU,cAAc,CAChElS,GACAmS,EAAcF,EAAcG,YAAY,CACxCD,CAAAA,AAAgB,MAAhBA,GAAuBA,AAAgB,MAAhBA,CAAkB,IACzCA,EAAcA,AAAgB,MAAhBA,EAAsB,MAAQ,IAC5C,IAAI,CAACE,aAAa,CACd,AAAIC,OAAO,cAAgBH,EAAc,cAEjD,IAAI,CAACnS,OAAO,CAAGiS,CACnB,CA6bA,OA9aAlU,EAAcqB,SAAS,CAACmT,SAAS,CAAG,SAAUtF,CAAK,QAC/C,AAAI,AAAiB,WAAjB,OAAOA,EACAA,EAEP,AAAiB,UAAjB,OAAOA,EACAA,AAAU,KAAVA,GAAgBA,AAAU,MAAVA,GAAiBA,AAAU,UAAVA,EAErC,CAAC,CAAC,IAAI,CAACuF,QAAQ,CAACvF,EAC3B,EAUAlP,EAAcqB,SAAS,CAACqT,MAAM,CAAG,SAAUxF,CAAK,EAC5C,IAAIyF,EACJ,GAAI,AAAiB,UAAjB,OAAOzF,EACPyF,EAAY,IAAI,CAACC,SAAS,CAAC1F,QAE1B,GAAI,AAAiB,UAAjB,OAAOA,EACZyF,EAAYzF,OAEX,GAAIA,aAAiB0E,KACtB,OAAO1E,EAGPyF,EAAY,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,QAAQ,CAAC3F,IAE7C,OAAO,IAAI0E,KAAKe,EACpB,EAUA3U,EAAcqB,SAAS,CAACyT,aAAa,CAAG,SAAU5F,CAAK,EAOnD,MAAO6F,AALO,CAAA,CACN,OAAU9B,AAFF,IAAI,CAEQwB,QAAQ,CAC5B,KAAQxB,AAHA,IAAI,CAGMyB,MAAM,CACxB,OAAUzB,AAJF,IAAI,CAIQ4B,QAAQ,AAChC,CAAA,CACU,CAAC5B,AANC,IAAI,CAMK+B,SAAS,CAAC9F,GAAO,CAAC3N,IAAI,CAN/B,IAAI,CAMuC2N,EAC/D,EAUAlP,EAAcqB,SAAS,CAACoT,QAAQ,CAAG,SAAUvF,CAAK,EAC9C,GAAI,AAAiB,UAAjB,OAAOA,EACP,OAAOA,EAEX,GAAI,AAAiB,WAAjB,OAAOA,EACP,MAAOA,GAAAA,EAEX,GAAI,AAAiB,UAAjB,OAAOA,EAAoB,CAC3B,IAAI+F,EAAe,IAAI,CAACX,aAAa,CAIrC,GAHIpF,EAAMrD,OAAO,CAAC,KAAO,IACrBqD,CAAAA,EAAQA,EAAMgG,OAAO,CAAC,OAAQ,GAAE,EAEhCD,EAAc,CACd,GAAI,CAACA,EAAaE,IAAI,CAACjG,GACnB,OAAO4E,IAEX5E,EAAQA,EAAMgG,OAAO,CAACD,EAAc,QACxC,CACA,OAAOpK,WAAWqE,EACtB,QACA,AAAIA,aAAiB0E,KACV1E,EAAMkG,OAAO,GAEpBlG,EACOA,EAAMxD,WAAW,GAErBoI,GACX,EAUA9T,EAAcqB,SAAS,CAACwT,QAAQ,CAAG,SAAU3F,CAAK,EAC9C,MAAO,GAAKA,CAChB,EAmBAlP,EAAcqB,SAAS,CAACgU,gBAAgB,CAAG,SAAUvC,CAAI,CAAEwC,CAAK,CAAEzE,CAAI,EAClE,IAG2B0E,EAEvBC,EAAMnL,EAJNoL,EAAS,EAAE,CACXvO,EAAM,EAAE,CACRwO,EAAS,aAAqBC,EAAgB,EAAE,CAAE3Q,EAAI,EAAG4Q,EAAgB,CAAA,EAM7E,IAHI,CAAA,CAACN,GAASA,EAAQxC,EAAKpQ,MAAM,AAAD,GAC5B4S,CAAAA,EAAQxC,EAAKpQ,MAAM,AAAD,EAEfsC,EAAIsQ,EAAOtQ,IACd,GAAI,AAAmB,KAAA,IAAZ8N,CAAI,CAAC9N,EAAE,EACd8N,CAAI,CAAC9N,EAAE,EAAI8N,CAAI,CAAC9N,EAAE,CAACtC,MAAM,CAUzB,IAAK2H,EAAI,EATTkL,EAAQzC,CAAI,CAAC9N,EAAE,CACV6Q,IAAI,GACJX,OAAO,CAAC,YAAa,KACrBY,KAAK,CAAC,KACXH,EAAgB,CACZ,GACA,GACA,GACH,CACWtL,EAAIkL,EAAM7S,MAAM,CAAE2H,IACtBA,EAAIsL,EAAcjT,MAAM,EACxB8S,CAAAA,EAAOO,SAASR,CAAK,CAAClL,EAAE,CAAE,GAAE,IAExBnD,CAAG,CAACmD,EAAE,CAAG,AAAC,CAACnD,CAAG,CAACmD,EAAE,EAAInD,CAAG,CAACmD,EAAE,CAAGmL,EAAQA,EAAOtO,CAAG,CAACmD,EAAE,CAC/C,AAAqB,KAAA,IAAdoL,CAAM,CAACpL,EAAE,CACZoL,CAAM,CAACpL,EAAE,GAAKmL,GACdC,CAAAA,CAAM,CAACpL,EAAE,CAAG,CAAA,CAAI,EAIpBoL,CAAM,CAACpL,EAAE,CAAGmL,EAEZA,EAAO,GACHA,EAAO,IACPG,CAAa,CAACtL,EAAE,CAAG,KAGnBsL,CAAa,CAACtL,EAAE,CAAG,OAIlBmL,EAAO,IACZA,GAAQ,IACRG,CAAa,CAACtL,EAAE,CAAG,KACnBuL,EAAgB,CAAA,GAEX,AAACD,CAAa,CAACtL,EAAE,CAAC3H,MAAM,EAC7BiT,CAAAA,CAAa,CAACtL,EAAE,CAAG,IAAG,GAO9C,GAAIuL,EAAe,CAEf,IAAKvL,EAAI,EAAGA,EAAIoL,EAAO/S,MAAM,CAAE2H,IACvBoL,AAAc,CAAA,IAAdA,CAAM,CAACpL,EAAE,CACLnD,CAAG,CAACmD,EAAE,CAAG,IACTsL,AAAqB,OAArBA,CAAa,CAACtL,EAAE,EAChBsL,AAAqB,SAArBA,CAAa,CAACtL,EAAE,EAChBsL,CAAAA,CAAa,CAACtL,EAAE,CAAG,IAAG,EAGrBnD,CAAG,CAACmD,EAAE,CAAG,IAAMsL,AAAqB,OAArBA,CAAa,CAACtL,EAAE,EACpCsL,CAAAA,CAAa,CAACtL,EAAE,CAAG,IAAG,CAK1BsL,AAAyB,CAAA,IAAzBA,EAAcjT,MAAM,EACpBiT,AAAqB,OAArBA,CAAa,CAAC,EAAE,EAChBA,AAAqB,OAArBA,CAAa,CAAC,EAAE,EAChBA,CAAAA,CAAa,CAAC,EAAE,CAAG,IAAG,EAE1BD,EAASC,EAAcK,IAAI,CAAC,IAGhC,CAKA,OAHInF,GACA6C,CAAAA,AAnFS,IAAI,CAmFNzR,OAAO,CAACgU,UAAU,CAAGP,CAAK,EAE9BA,CACX,EAOA1V,EAAcqB,SAAS,CAACiB,IAAI,CAAG,SAAUY,CAAC,EACtCmQ,GAAwB,IAAI,CAAEnQ,EAAEX,IAAI,CAAEW,EAC1C,EAUAlD,EAAcqB,SAAS,CAAC6U,MAAM,CAAG,SAEjChG,CAAS,CAAEjO,CAAO,EAQd,MALA,IAAI,CAACK,IAAI,CAAC,CACNC,KAAM,cACN2B,QAAS,EAAE,CACXiS,QAAS,EAAE,AACf,GACM,AAAIvS,MAAM,kBACpB,EAOA5D,EAAcqB,SAAS,CAACyO,QAAQ,CAAG,WAC/B,MAAM,AAAIlM,MAAM,kBACpB,EAUA5D,EAAcqB,SAAS,CAAC2T,SAAS,CAAG,SAAU9F,CAAK,EAE/C,IAAI9I,EAAS,SACb,GAAI,AAAiB,UAAjB,OAAO8I,EAAoB,CAC3B,IAAIkH,EAAcnD,AAHN,IAAI,CAGY4C,IAAI,CAAC,GAAGzQ,MAAM,CAAC8J,IACvCoF,EAAgBrB,AAJR,IAAI,CAIcqB,aAAa,CACvC+B,EAAmBpD,AALX,IAAI,CAKiB4C,IAAI,CAACO,EAClC,CAAA,EACA9B,CAAAA,GACA+B,CAAAA,EAAoB/B,EAAca,IAAI,CAACkB,GACnCA,EAAiBnB,OAAO,CAACZ,EAAe,SACxC,EAAE,EAEV,IAAIgC,EAAazL,WAAWwL,EACxB,EAACA,IAAqBC,EAEtBpH,EAAQoH,EAKRlQ,EAASkN,GADOL,AAnBR,IAAI,CAmBc2B,SAAS,CAAC1F,IACS,OAAS,QAE9D,CAKA,MAJI,AAAiB,UAAjB,OAAOA,GAEP9I,CAAAA,EAAS8I,EAAQ,QAAyB,OAAS,QAAO,EAEvD9I,CACX,EAaApG,EAAcqB,SAAS,CAACoB,EAAE,CAAG,SAAUF,CAAI,CAAE8B,CAAQ,EACjD,OAAO+O,GAAuB,IAAI,CAAE7Q,EAAM8B,EAC9C,EAOArE,EAAcqB,SAAS,CAACkV,KAAK,CAAG,SAEhCtU,CAAO,EAMH,MALA,IAAI,CAACK,IAAI,CAAC,CACNC,KAAM,aACN2B,QAAS,EAAE,CACXiS,QAAS,EAAE,AACf,GACM,AAAIvS,MAAM,kBACpB,EAWA5D,EAAcqB,SAAS,CAACuT,SAAS,CAAG,SAAU1F,CAAK,CAAEsH,CAAc,EAC/D,IAII3V,EACA6U,EACA/B,EALA1R,EAAUgR,AADE,IAAI,CACIhR,OAAO,CAC3BgU,EAAaO,GAAkBvU,EAAQgU,UAAU,CACjD7P,EAAS0N,IAIb,GAAI7R,EAAQ2S,SAAS,CACjBxO,EAASnE,EAAQ2S,SAAS,CAAC1F,OAE1B,CAED,GAAK+G,EAiBG,AADJP,CAAAA,EAASzC,AA5BD,IAAI,CA4BOO,WAAW,CAACyC,EAAW,AAAD,GAGrCP,CAAAA,EAASzC,AA/BL,IAAI,CA+BWO,WAAW,CAAC,aAAa,AAAD,EAG3CG,AADJA,CAAAA,EAAQzE,EAAMyE,KAAK,CAAC+B,EAAOjC,KAAK,CAAA,GAE5BrN,CAAAA,EAASsP,EAAOhC,MAAM,CAACC,EAAK,OAtBhC,IAAK9S,KAAOoS,AAbJ,IAAI,CAaUO,WAAW,CAG7B,GAFAkC,EAASzC,AAdL,IAAI,CAcWO,WAAW,CAAC3S,EAAI,CACnC8S,EAAQzE,EAAMyE,KAAK,CAAC+B,EAAOjC,KAAK,EACrB,CAEPwC,EAAapV,EAGbuF,EAASsP,EAAOhC,MAAM,CAACC,GACvB,KACJ,CAgBJ,CAACA,IAIG,AAAiB,UAAjB,MAHJA,CAAAA,EAAQC,KAAK2C,KAAK,CAACrH,EAAK,GAIpByE,AAAU,OAAVA,GACAA,EAAM8C,OAAO,CACbrQ,EAAUuN,EAAM8C,OAAO,GACnB9C,AACI,IADJA,EAAM+C,iBAAiB,GAItBpD,GAAuBK,KAC5BvN,EAASuN,EAAQ,AAAwC,IAAxC,AAAC,IAAIC,KAAKD,GAAQ+C,iBAAiB,GAEpDxH,AAA0B,KAA1BA,EAAMrD,OAAO,CAAC,SACV,AAAqC,OAArC,AAAC,IAAI+H,KAAKxN,GAAS6N,WAAW,IAC9B7N,CAAAA,EAAS0N,GAAE,GAI3B,CACA,OAAO1N,CACX,EAaApG,EAAcqB,SAAS,CAACwU,IAAI,CAAG,SAAUc,CAAG,CAAEC,CAAM,EAQhD,MAPmB,UAAf,OAAOD,IACPA,EAAMA,EAAIzB,OAAO,CAAC,aAAc,IAE5B0B,GAAU,YAAYzB,IAAI,CAACwB,IAC3BA,CAAAA,EAAMA,EAAIzB,OAAO,CAAC,MAAO,GAAE,GAG5ByB,CACX,EASA3W,EAAcmU,cAAc,CAAG,CAC3B8B,WAAY,GACZY,kBAAmB,GACnBC,YAAa,EACbC,UAAWvK,OAAOwK,SAAS,CAC3BC,SAAU,EACVC,OAAQ1K,OAAOwK,SAAS,CACxBG,gBAAiB,CAAA,EACjBC,qBAAsB,CAAA,CAC1B,EACOpX,CACX,GAuBIA,EAdOA,EAgERA,IAAkBA,CAAAA,GAAgB,CAAC,CAAA,GAlDpBsE,KAAK,CAAG,CAAC,EA0BvBtE,EAAcuE,YAAY,CAL1B,SAAsB1D,CAAG,CAAEwW,CAAkB,EACzC,MAAQ,CAAC,CAACxW,GACN,CAACb,EAAcsE,KAAK,CAACzD,EAAI,EACzB,CAAC,CAAEb,CAAAA,EAAcsE,KAAK,CAACzD,EAAI,CAAGwW,CAAiB,CACvD,EAwBArX,EAAcsX,mBAAmB,CATjC,SAA6BpT,CAAO,CAAEiS,CAAO,EACrCjS,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,EAAE,AAAD,EACjCiS,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,EAAE,AAAD,EAErC,IAAK,IADD/S,EAAQ,IAllC+BgG,EAmlClCpE,EAAI,EAAGwE,EAAOvC,KAAKC,GAAG,CAACiP,EAAQzT,MAAM,CAAEwB,EAAQxB,MAAM,EAAGsC,EAAIwE,EAAM,EAAExE,EACzE5B,EAAM2E,SAAS,CAACoO,CAAO,CAACnR,EAAE,EAAI,GAAGI,MAAM,CAACJ,GAAId,CAAO,CAACc,EAAE,EAE1D,OAAO5B,CACX,EAQyB,IAAImU,GAA4BvX,GA6BzDwX,GAA4B,WAM5B,SAASA,EAAWC,CAAQ,EACpBA,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAC,CAAA,EACvC,IAAI,CAACC,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAACC,WAAW,CAAG,CAAC,EACpB,IAAI,CAACF,QAAQ,CAAGA,CACpB,CAyMA,OAzKAD,EAAWnW,SAAS,CAACuW,WAAW,CAAG,SAAUC,CAAO,CAAEC,CAAK,CAAEC,CAAQ,EACjE,IAAIJ,EAAc,IAAI,CAACA,WAAW,CAACE,EAAQ,CAAI,IAAI,CAACF,WAAW,CAACE,EAAQ,EAChE,CAAC,EAIT,MADAG,AAFgBL,CAAAA,CAAW,CAACG,EAAM,CAAIH,CAAW,CAACG,EAAM,EAChD,EAAE,EACA7U,IAAI,CAAC8U,GACR,IAAI,AACf,EAIAP,EAAWnW,SAAS,CAAC4W,gBAAgB,CAAG,SAAU/U,CAAC,EAC/C,MAAO,AAACA,CAAAA,AAAkB,aAAlBA,EAAEgV,MAAM,CAAC3V,IAAI,CACjB,CACIW,EAAEE,KAAK,CAAC0D,EAAE,CACV5D,EAAEgV,MAAM,CAAC5S,MAAM,CACfpC,EAAEgV,MAAM,CAAC/P,GAAG,CACZjF,EAAEgV,MAAM,CAACJ,KAAK,CACd5U,EAAEgV,MAAM,CAAC3V,IAAI,CAChB,CACD,CACIW,EAAEE,KAAK,CAAC0D,EAAE,CACV5D,EAAEgV,MAAM,CAAChU,OAAO,CAChBhB,EAAEgV,MAAM,CAACC,QAAQ,CACjBjV,EAAEgV,MAAM,CAACE,OAAO,CAChBlV,EAAEgV,MAAM,CAACJ,KAAK,CACd5U,EAAEgV,MAAM,CAAC3V,IAAI,CAChB,AAAD,EAAGyT,IAAI,CAAC,KAChB,EA+BAwB,EAAWnW,SAAS,CAACgX,UAAU,CAAG,SAAUjV,CAAK,CAAE8U,CAAM,CAAEI,CAAK,CAAEC,CAAO,EAErE,IADIzQ,EACA+P,EAAUzU,EAAM0D,EAAE,CAClBgR,EAAQI,EAAOJ,KAAK,CACpBE,EAAa,IAAI,CAACL,WAAW,CAACE,EAAQ,EAClC,IAAI,CAACF,WAAW,CAACE,EAAQ,CAACC,EAAM,CACxC,GAAIE,EAAW,CACX,IAAIP,EAAW,IAAI,CAACA,QAAQ,CAACI,EAAQ,CAAI,MAAC/P,CAAAA,EAAK,IAAI,CAAC2P,QAAQ,CAACI,EAAQ,AAAD,EAA+B/P,EAAK,CAAC,EACrG0Q,EAAUf,CAAQ,CAACS,EAAOJ,KAAK,CAAC,EAAI,EAAE,CACtCS,IACI,AAACC,EAAQ9V,MAAM,EACf+U,CAAAA,CAAQ,CAACS,EAAOJ,KAAK,CAAC,CAAGU,CAAM,EAE/BhB,AAAyC,KAAzCA,EAAWiB,QAAQ,CAACP,EAAQM,IAC5BA,EAAQvV,IAAI,CAACiV,IAGrB,IAAIhV,EAAI,CACAgV,OAAQA,EACRM,QAASA,EACTpV,MAAOA,CACX,CACAkV,CAAAA,GACApV,CAAAA,EAAEoV,KAAK,CAAGA,CAAI,EAElB,IAAIZ,EAAmB,IAAI,CAACA,gBAAgB,CACxCgB,EAAc,IAAI,CAACT,gBAAgB,CAAC/U,GACxC,GAAIwU,EAAiB7L,OAAO,CAAC6M,IAAgB,EAEzC,OAAO,IAAI,CAEf,GAAI,CACA,IAAI,CAAChB,gBAAgB,CAACzU,IAAI,CAACyV,GAC3B,IAAK,IAAI1T,EAAI,EAAGwE,EAAOwO,EAAUtV,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACjDgT,CAAS,CAAChT,EAAE,CAACzD,IAAI,CAAC,IAAI,CAAE2B,EAEhC,QACQ,CACJ,IAAIsN,EAAQ,IAAI,CAACkH,gBAAgB,CAAC7L,OAAO,CAAC6M,EACtClI,CAAAA,GAAS,GACT,IAAI,CAACkH,gBAAgB,CAACjS,MAAM,CAAC+K,EAAO,EAE5C,CACJ,CACA,OAAO,IAAI,AACf,EAeAgH,EAAWnW,SAAS,CAACsX,WAAW,CAAG,SAAUd,CAAO,CAAEK,CAAM,EACxD,IAAIM,EAAW,IAAI,CAACf,QAAQ,CAACI,EAAQ,EAC7B,IAAI,CAACJ,QAAQ,CAACI,EAAQ,CAACK,EAAOJ,KAAK,CAAC,CAC5C,GAAIU,EAAS,CACT,IAAIhI,EAAQgH,EAAWiB,QAAQ,CAACP,EAC5BM,EACAhI,CAAAA,GAAS,GACTgI,EAAQ/S,MAAM,CAAC+K,EAAO,EAE9B,CACA,OAAO,IAAI,AACf,EAkBAgH,EAAWnW,SAAS,CAACuX,cAAc,CAAG,SAAUf,CAAO,CAAEC,CAAK,CAAEC,CAAQ,EACpE,IAAIC,EAAa,IAAI,CAACL,WAAW,CAACE,EAAQ,EAClC,IAAI,CAACF,WAAW,CAACE,EAAQ,CAACC,EAAM,CACxC,GAAIE,EAAW,CACX,IAAIxH,EAAQwH,EAAUnM,OAAO,CAACkM,EAC1BvH,CAAAA,GAAS,GACTwH,EAAUvS,MAAM,CAAC+K,EAAO,EAEhC,CACA,OAAO,IAAI,AACf,EAUAgH,EAAW5J,OAAO,CAAG,QACd4J,CACX,IASWA,GAwIRA,IAAeA,CAAAA,GAAa,CAAC,CAAA,EApB5B,SAASqB,GAAQX,CAAM,CAAEY,CAAY,EAKjC,GAAIZ,AAAgB,UAAhBA,EAAO3V,IAAI,CACX,OAAO2V,EAEX,IAPIpQ,EACAwJ,EACAC,EACAG,EAIAqH,EAAQ,CACJxW,KAAM,QACN4V,SAAW,MAAC7G,CAAAA,EAAK,MAACxJ,CAAAA,EAAKoQ,EAAO/P,GAAG,AAAD,EAA+BL,EAAMgR,GAAgBA,EAAaX,QAAQ,EAA+B7G,EAAK,EAC9I8G,QAAU,MAAC1G,CAAAA,EAAK,MAACH,CAAAA,EAAK2G,EAAO/P,GAAG,AAAD,EAA+BoJ,EAAMuH,GAAgBA,EAAaV,OAAO,EAA+B1G,EAAKlF,OAAOwK,SAAS,CAC5Jc,MAAOI,EAAOJ,KAAK,AACvB,EAIJ,OAHI,AAAyB,KAAA,IAAlBI,EAAO5S,MAAM,EACpByT,CAAAA,EAAM7U,OAAO,CAAG,CAACgU,EAAO5S,MAAM,CAAC,AAAD,EAE3ByT,CACX,CA5FAvB,GAAWiB,QAAQ,CA3BnB,SAAkBO,CAAM,CAAER,CAAO,EAC7B,GAAIQ,AAAgB,aAAhBA,EAAOzW,IAAI,CACX,CAAA,IAAK,IAAI2V,EAAS,KAAK,EAAGlT,EAAI,EAAGwE,EAAOgP,EAAQ9V,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAEhE,GAAIkT,AAAgB,aAAhBA,AADJA,CAAAA,EAASM,CAAO,CAACxT,EAAE,AAAD,EACPzC,IAAI,EACX2V,EAAOJ,KAAK,GAAKkB,EAAOlB,KAAK,EAC7BI,EAAO5S,MAAM,GAAK0T,EAAO1T,MAAM,EAC/B4S,EAAO/P,GAAG,GAAK6Q,EAAO7Q,GAAG,CACzB,OAAOnD,CAEf,MAIA,IAAK,IADDiU,EAAeC,KAAKC,SAAS,CAACH,EAAO9U,OAAO,EACvCgU,EAAS,KAAK,EAAGlT,EAAI,EAAGwE,EAAOgP,EAAQ9V,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAEhE,GAAIkT,AAAgB,UAAhBA,AADJA,CAAAA,EAASM,CAAO,CAACxT,EAAE,AAAD,EACPzC,IAAI,EACX2V,EAAOJ,KAAK,GAAKkB,EAAOlB,KAAK,EAC7BI,EAAOC,QAAQ,GAAKa,EAAOb,QAAQ,EACnCD,EAAOE,OAAO,GAAKY,EAAOZ,OAAO,EACjCc,KAAKC,SAAS,CAACjB,EAAOhU,OAAO,IAAM+U,EACnC,OAAOjU,EAInB,OAAO,EACX,EAoBAwS,GAAW4B,OAAO,CAdlB,SAAiBC,CAAO,CAAEC,CAAO,QAC7B,AAAID,AAAiB,aAAjBA,EAAQ9W,IAAI,EAAmB+W,AAAiB,aAAjBA,EAAQ/W,IAAI,CACnC8W,EAAQ/T,MAAM,GAAKgU,EAAQhU,MAAM,EACrC+T,EAAQlR,GAAG,GAAKmR,EAAQnR,GAAG,EAC3BkR,EAAQvB,KAAK,GAAKwB,EAAQxB,KAAK,CAElB,UAAjBuB,EAAQ9W,IAAI,EAAgB+W,AAAiB,UAAjBA,EAAQ/W,IAAI,EAChC8W,EAAQlB,QAAQ,GAAKmB,EAAQnB,QAAQ,EACzCkB,EAAQjB,OAAO,GAAKkB,EAAQlB,OAAO,EAClCc,KAAKC,SAAS,CAACE,EAAQnV,OAAO,IAC3BgV,KAAKC,SAAS,CAACG,EAAQpV,OAAO,CAG9C,EAqBAsT,GAAW+B,SAAS,CAfpB,SAAmBP,CAAM,CAAED,CAAK,EACxBA,AAAe,aAAfA,EAAMxW,IAAI,EACVwW,CAAAA,EAAQF,GAAQE,EAAK,EAErBC,AAAgB,aAAhBA,EAAOzW,IAAI,EACXyW,CAAAA,EAASH,GAAQG,EAAQD,EAAK,EAElC,IAAIS,EAAgBR,EAAO9U,OAAO,CAC9BuV,EAAeV,EAAM7U,OAAO,CAChC,OAAQ8U,EAAOb,QAAQ,EAAIY,EAAMZ,QAAQ,EACrCa,EAAOZ,OAAO,EAAIW,EAAMX,OAAO,EAC9B,CAAA,CAACoB,GACE,CAACC,GACDD,EAAcE,KAAK,CAAC,SAAUpU,CAAM,EAAI,OAAOmU,EAAa5N,OAAO,CAACvG,IAAW,CAAG,EAAC,CAC/F,EAgCAkS,GAAWmC,WAAW,CA3BtB,SAAqBzB,CAAM,EACvB,GAAIA,AAAgB,aAAhBA,EAAO3V,IAAI,CACX,MAAO,CAAC2V,EAAO,CAKnB,IAAK,IAHDhU,EAAWgU,EAAOhU,OAAO,EAAI,EAAE,CAC/B0V,EAAY,EAAE,CACd9B,EAAQI,EAAOJ,KAAK,CACf3P,EAAM+P,EAAOC,QAAQ,CAAE0B,EAAS3B,EAAOE,OAAO,CAAEjQ,EAAM0R,EAAQ,EAAE1R,EAAK,CAC1E,GAAI,CAACjE,EAAQxB,MAAM,CAAE,CACjBkX,EAAU3W,IAAI,CAAC,CACXV,KAAM,WACN4F,IAAKA,EACL2P,MAAOA,CACX,GACA,QACJ,CACA,IAAK,IAAIxS,EAAS,EAAGwU,EAAY5V,EAAQxB,MAAM,CAAE4C,EAASwU,EAAW,EAAExU,EACnEsU,EAAU3W,IAAI,CAAC,CACXV,KAAM,WACN+C,OAAQpB,CAAO,CAACoB,EAAO,CACvB6C,IAAKA,EACL2P,MAAOA,CACX,EAER,CACA,OAAO8B,CACX,EAwBApC,GAAWqB,OAAO,CAAGA,GAOI,IAAIkB,GAAmBvC,GA6BnBwC,GARV,CACnBC,WAAY,EAAE,AAClB,EAuCIC,GAA0B,WAM1B,SAASA,EAASjY,CAAO,EACjBA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU+X,EAAoB,EACxD/X,EAAQgY,UAAU,CAAIhY,EAAQgY,UAAU,EAAI,EAAE,CAC9C,IAAI,CAACA,UAAU,CAAG,CAAC,EACnB,IAAI,CAAChY,OAAO,CAAGA,EACf,IAAI,CAACkY,OAAO,CAAG,CAAC,CACpB,CA0OA,OA5NAD,EAAS7Y,SAAS,CAACiB,IAAI,CAAG,SAAUY,CAAC,EACjCvB,IAA8EE,SAAS,CAAC,IAAI,CAAEqB,EAAEX,IAAI,CAAEW,EAC1G,EAYAgX,EAAS7Y,SAAS,CAAC+Y,YAAY,CAAG,SAAUC,CAAW,EACnD,IAAIzT,EAAQ,IAAI,CACZsJ,EAAY,IAAI,CAAC+J,UAAU,CAACI,EAAY,CAE5C,GAAInK,MAAAA,EAA6C,KAAK,EAAIA,EAAUT,MAAM,CACtE,OAAOnM,QAAQC,OAAO,CAAC2M,GAE3B,IAAIoK,EAAc,IAAI,CAACH,OAAO,CAACE,EAAY,CAE3C,GAAI,CAACC,EAAa,CACdA,EAAc,IAAI,CAACH,OAAO,CAACE,EAAY,CAAG,EAAE,CAC5C,IAAIE,EAAmB,IAAI,CAACC,mBAAmB,CAACH,GAChD,GAAI,CAACE,EACD,MAAM,AAAI3W,MAAM,cAAcwB,MAAM,CAACiV,EAAa,iBAGtD,IAAI,CACCI,aAAa,CAACF,GACdlN,IAAI,CAAC,SAAU6C,CAAS,EACzB,OAAOtJ,EAAMuT,OAAO,CAACE,EAAY,CACjC,IAAK,IAAIrV,EAAI,EAAGwE,EAAO8Q,EAAY5X,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnDsV,CAAW,CAACtV,EAAE,CAAC,EAAE,CAACkL,EAE1B,GAAG,KAAQ,CAAC,SAAU5C,CAAK,EACvB,OAAO1G,EAAMuT,OAAO,CAACE,EAAY,CACjC,IAAK,IAAIrV,EAAI,EAAGwE,EAAO8Q,EAAY5X,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnDsV,CAAW,CAACtV,EAAE,CAAC,EAAE,CAACsI,EAE1B,EACJ,CAEA,OAAO,IAAIhK,QAAQ,SAAUC,CAAO,CAAEC,CAAM,EACxC8W,EAAYrX,IAAI,CAAC,CAACM,EAASC,EAAO,CACtC,EACJ,EASA0W,EAAS7Y,SAAS,CAACqZ,eAAe,CAAG,WAGjC,IAAK,IAFDT,EAAa,IAAI,CAAChY,OAAO,CAACgY,UAAU,CACpCU,EAAe,EAAE,CACZ3V,EAAI,EAAGwE,EAAOyQ,EAAWvX,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAClD2V,EAAa1X,IAAI,CAACgX,CAAU,CAACjV,EAAE,CAAC8B,EAAE,EAEtC,OAAO6T,CACX,EAYAT,EAAS7Y,SAAS,CAACmZ,mBAAmB,CAAG,SAAUH,CAAW,EAE1D,IAAK,IADDJ,EAAa,IAAI,CAAChY,OAAO,CAACgY,UAAU,CAC/BjV,EAAI,EAAGwE,EAAOyQ,EAAWvX,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAClD,GAAIiV,CAAU,CAACjV,EAAE,CAAC8B,EAAE,GAAKuT,EACrB,OAAOJ,CAAU,CAACjV,EAAE,AAGhC,EAYAkV,EAAS7Y,SAAS,CAACuZ,iBAAiB,CAAG,SAAUP,CAAW,EACxD,OAAO,IAAI,CACND,YAAY,CAACC,GACbhN,IAAI,CAAC,SAAU6C,CAAS,EAAI,OAAOA,EAAU9M,KAAK,AAAE,EAC7D,EAWA8W,EAAS7Y,SAAS,CAACwZ,cAAc,CAAG,SAAUR,CAAW,EACrD,MAAO,CAAC,IAAI,CAACJ,UAAU,CAACI,EAAY,AACxC,EAYAH,EAAS7Y,SAAS,CAACoZ,aAAa,CAAG,SAAUxY,CAAO,EAChD,IAAI2E,EAAQ,IAAI,CAChB,OAAO,IAAItD,QAAQ,SAAUC,CAAO,CAAEC,CAAM,EACxCoD,EAAMtE,IAAI,CAAC,CACPC,KAAM,OACNN,QAASA,CACb,GACA,IAAI6Y,EAAiB3H,GAAyB7O,KAAK,CAACrC,EAAQM,IAAI,CAAC,CACjE,GAAI,CAACuY,EACD,MAAM,AAAIlX,MAAM,8BAA8BwB,MAAM,CAACnD,EAAQM,IAAI,CAAE,MAEvE,IAAI2N,EAAYtJ,EAAMqT,UAAU,CAAChY,EAAQ6E,EAAE,CAAC,CAAG,IAAIgU,EAAe7Y,EAAQA,OAAO,CAC7EA,EAAQuN,UAAU,EAEtBU,EACKU,IAAI,GACJvD,IAAI,CAAC,SAAUvF,CAAE,EAClB,IAAImL,EAAYnL,EAAGmL,SAAS,AAE5B/C,CAAAA,EAAUV,UAAU,CADH1H,EAAG0H,UAAU,CAE9BU,EAAU+C,SAAS,CAAGA,EACtB/C,EAAUT,MAAM,CAAG,CAAA,EACnB7I,EAAMtE,IAAI,CAAC,CACPC,KAAM,YACNN,QAASA,CACb,GACAsB,EAAQ2M,EACZ,GAAG,KAAQ,CAAC1M,EAChB,EACJ,EAIA0W,EAAS7Y,SAAS,CAAC0Z,qBAAqB,CAAG,WAEvC,IAAK,IADDd,EAAa,IAAI,CAACA,UAAU,CACvB/N,EAAK,EAAGpE,EAAK/G,OAAO2G,IAAI,CAACuS,GAAa/N,EAAKpE,EAAGpF,MAAM,CAAEwJ,IAE3D+N,CAAU,CADSnS,CAAE,CAACoE,EAAG,CACD,CAACuG,WAAW,EAE5C,EAeAyH,EAAS7Y,SAAS,CAACoB,EAAE,CAAG,SAAUF,CAAI,CAAE8B,CAAQ,EAC5C,OAAO1C,IAA8EC,QAAQ,CAAC,IAAI,CAAEW,EAAM8B,EAC9G,EAOA6V,EAAS7Y,SAAS,CAAC2Z,mBAAmB,CAAG,SAAU/Y,CAAO,EACtD,IAAIgY,EAAa,IAAI,CAAChY,OAAO,CAACgY,UAAU,CACpCgB,EAAY,IAAI,CAAChB,UAAU,CAC/B,IAAI,CAAC3X,IAAI,CAAC,CACNC,KAAM,sBACNN,QAASA,CACb,GACA,IAAK,IAAI+C,EAAI,EAAGwE,EAAOyQ,EAAWvX,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAClD,GAAIiV,CAAU,CAACjV,EAAE,CAAC8B,EAAE,GAAK7E,EAAQ6E,EAAE,CAAE,CACjCmT,EAAWxU,MAAM,CAACT,EAAG,GACrB,KACJ,CAEAiW,CAAS,CAAChZ,EAAQ6E,EAAE,CAAC,GACrBmU,CAAS,CAAChZ,EAAQ6E,EAAE,CAAC,CAAC2L,WAAW,GACjC,OAAOwI,CAAS,CAAChZ,EAAQ6E,EAAE,CAAC,EAEhCmT,EAAWhX,IAAI,CAAChB,GAChB,IAAI,CAACK,IAAI,CAAC,CACNC,KAAM,2BACNN,QAASA,CACb,EACJ,EAUAiY,EAAStM,OAAO,CAAG,QACZsM,CACX,IAuBIgB,GAAW,AAACvZ,IAA+EuZ,QAAQ,CASnGC,GAAgB,kBAKhBC,GAAiB,qCAKjBC,GAAiB,oCAKjBC,GAAiB,uBAIjBC,GAAiB,0BAQjBC,GAAgB,4CAQhBC,GAAkB,8DAMlBC,GAAoB,gCAMpBC,GAAsB,sCAiB1B,SAASC,GAAmBC,CAAI,EAE5B,IAAK,IADDC,EAAkB,EACb9W,EAAI,EAAGwE,EAAOqS,EAAKnZ,MAAM,CAAEqZ,EAAO,KAAK,EAAGC,EAAkB,EAAGhX,EAAIwE,EAAM,EAAExE,EAAG,CAEnF,GAAI+W,AAAS,MADbA,CAAAA,EAAOF,CAAI,CAAC7W,EAAE,AAAD,EACK,CACV,AAAC8W,GACDE,CAAAA,EAAkBhX,EAAI,CAAA,EAE1B,EAAE8W,EACF,QACJ,CACA,GAAIC,AAAS,MAATA,GAEI,GAACD,EACD,OAAOD,EAAKI,SAAS,CAACD,EAAiBhX,EAGnD,CACA,GAAI8W,EAAkB,EAAG,CACrB,IAAIxO,EAAQ,AAAI1J,MAAM,0BAEtB,OADA0J,EAAM0C,IAAI,CAAG,oBACP1C,CACV,CACA,MAAO,EACX,CAYA,SAAS4O,GAAcL,CAAI,EAEvB,IAAK,IADDnW,EAAQ,GACHV,EAAI,EAAGwE,EAAOqS,EAAKnZ,MAAM,CAAEqZ,EAAO,KAAK,EAAGI,EAAW,CAAA,EAAOnX,EAAIwE,EAAM,EAAExE,EAAG,CAEhF,GAAI+W,AAAS,OADbA,CAAAA,EAAOF,CAAI,CAAC7W,EAAE,AAAD,EACM,CACfmX,EAAW,CAACA,EACZ,QACJ,CACA,GAAIA,EAAU,CACVA,EAAW,CAAA,EACX,QACJ,CACA,GAAIJ,AAAS,MAATA,EACA,IAAIrW,CAAAA,EAAQ,CAAA,EAIR,OAAOmW,EAAKI,SAAS,CAACvW,EAAQ,EAAGV,QAHjCU,EAAQV,CAMpB,CAnBA,IAoBIsI,EAAQ,AAAI1J,MAAM,qBAEtB,OADA0J,EAAM0C,IAAI,CAAG,oBACP1C,CACV,CAgBA,SAAS8O,GAAcP,CAAI,CAAEQ,CAAqB,EAI9C,GADA1I,EAAQkI,EAAKlI,KAAK,CAAC8H,IACR,CACP,IAJA9H,EAII2I,EAAuB3I,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CACrD4I,EAAoB5I,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAClD6I,EAAqB7I,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CACnD8I,EAAkB9I,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAChDoF,EAAQ,CACJxW,KAAM,QACNma,YAAcJ,EACVvG,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,EAC7BgJ,SAAWJ,EACPxG,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,EAC7BoD,UAAYyF,EACRzG,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,EAC7BuD,OAASuF,EACL1G,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,CACjC,EAaJ,OAZI2I,GACAvD,CAAAA,EAAMuD,mBAAmB,CAAG,CAAA,CAAG,EAE/BC,GACAxD,CAAAA,EAAMwD,gBAAgB,CAAG,CAAA,CAAG,EAE5BC,GACAzD,CAAAA,EAAMyD,iBAAiB,CAAG,CAAA,CAAG,EAE7BC,GACA1D,CAAAA,EAAM0D,cAAc,CAAG,CAAA,CAAG,EAEvB1D,CACX,CAGA,GADApF,EAAQkI,EAAKlI,KAAK,CAAC6H,IACR,CACP,IAAIc,EAAsB3I,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CACjC4I,EAAmB5I,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAC9B6I,EAAoB7I,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAC/B8I,EAAiB9I,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAC5BoF,EAAQ,CACJxW,KAAM,QACNma,YAAaE,GAAqBN,EAC9B3I,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,IAAM,EAC7BU,SAAU5G,SAASwG,EACf5I,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,GAAI,IAAM,EACjClF,UAAW6F,GAAqBJ,EAC5B7I,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,IAAM,EAC7B/E,OAAQnB,SAAS0G,EACb9I,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,GAAI,IAAM,CACrC,EAaJ,OAZIK,GACAvD,CAAAA,EAAMuD,mBAAmB,CAAG,CAAA,CAAG,EAE/BC,GACAxD,CAAAA,EAAMwD,gBAAgB,CAAG,CAAA,CAAG,EAE5BC,GACAzD,CAAAA,EAAMyD,iBAAiB,CAAG,CAAA,CAAG,EAE7BC,GACA1D,CAAAA,EAAM0D,cAAc,CAAG,CAAA,CAAG,EAEvB1D,CACX,CAEA,IAAI8D,EAAUC,GAAajB,EACvBQ,GACJ,OAAQQ,AAAmB,IAAnBA,EAAQna,MAAM,EAAU,AAAsB,UAAtB,OAAOma,CAAO,CAAC,EAAE,CAC7CA,CAAO,CAAC,EAAE,CACVA,CACR,CA4DA,SAASE,GAAkBF,CAAO,EAC9B,IAAIG,EAAgBH,EAAQna,MAAM,CAC9Bua,EAAeJ,CAAO,CAACG,EAAgB,EAAE,CAC7C,MAAQH,AAA+B,MAA/BA,CAAO,CAACG,EAAgB,EAAE,EAC9B9B,GAAS+B,IACT,CAAC,CAACA,EAAatJ,KAAK,CAAC,WAC7B,CAkBA,SAASmJ,GAAajB,CAAI,CAAEQ,CAAqB,EAO7C,IANA,IAII1I,EAJAW,EAAiB+H,EACbhB,GACAD,GACJyB,EAAU,EAAE,CAEZnO,EAAO,AAACmN,CAAAA,AAAY,MAAZA,CAAI,CAAC,EAAE,CAAWA,EAAKI,SAAS,CAAC,GAAKJ,CAAG,EAAGhG,IAAI,GACrDnH,GAAM,CAGT,GADAiF,EAAQjF,EAAKiF,KAAK,CAACgI,IACR,CACP,IAAIuB,EAAkBvJ,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAChDwJ,EAAexJ,AAAa,KAAbA,CAAK,CAAC,EAAE,EAAWA,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAC7CyJ,EAAY,CACR7a,KAAM,YACN+C,OAAS4X,EACLnH,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,EAC7BxL,IAAMgV,EACFpH,SAASpC,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,EAAG,KAAO,IAAK,IAC3ClG,SAASpC,CAAK,CAAC,EAAE,CAAE,IAAM,CACjC,CACAuJ,CAAAA,GACAE,CAAAA,EAAUF,cAAc,CAAG,CAAA,CAAG,EAE9BC,GACAC,CAAAA,EAAUD,WAAW,CAAG,CAAA,CAAG,EAE3BJ,GAAkBF,KAClBA,EAAQ1N,GAAG,GACXiO,EAAUC,UAAU,CAAG,CAAA,GAE3BR,EAAQ5Z,IAAI,CAACma,GACb1O,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,GAC3C,QACJ,CAGA,GADAlC,EAAQjF,EAAKiF,KAAK,CAAC+H,IACR,CACP,IAAIwB,EAAiBvJ,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CAC5BwJ,EAAcxJ,AAAgB,MAAhBA,CAAK,CAAC,EAAE,CAAC,EAAE,CACzByJ,EAAY,CACR7a,KAAM,YACN+C,OAAQsX,GAAqBM,EACzBvJ,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,IAAM,EAC7B9T,IAAK4N,SAASoH,EACVxJ,CAAK,CAAC,EAAE,CACRA,CAAK,CAAC,EAAE,CAACsI,SAAS,CAAC,GAAI,IAAM,CACrC,CACAiB,CAAAA,GACAE,CAAAA,EAAUF,cAAc,CAAG,CAAA,CAAG,EAE9BC,GACAC,CAAAA,EAAUD,WAAW,CAAG,CAAA,CAAG,EAE3BJ,GAAkBF,KAClBA,EAAQ1N,GAAG,GACXiO,EAAUC,UAAU,CAAG,CAAA,GAE3BR,EAAQ5Z,IAAI,CAACma,GACb1O,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,GAC3C,QACJ,CAGA,GADAlC,EAAQjF,EAAKiF,KAAK,CAAC4H,IACR,CACPsB,EAAQ5Z,IAAI,CAAC0Q,CAAK,CAAC,EAAE,EACrBjF,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,GAC3C,QACJ,CAGA,GADAlC,EAAQjF,EAAKiF,KAAK,CAACwH,IACR,CACP0B,EAAQ5Z,IAAI,CAAC0Q,AAAa,SAAbA,CAAK,CAAC,EAAE,EACrBjF,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,GAC3C,QACJ,CAGA,GADAlC,EAAQjF,EAAKiF,KAAK,CAACW,GACR,CACP,IAAIgJ,EAASzS,WAAW8I,CAAK,CAAC,EAAE,EAI5BoJ,GAAkBF,KAClBA,EAAQ1N,GAAG,GACXmO,EAAS,CAACA,GAEdT,EAAQ5Z,IAAI,CAACqa,GACb5O,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,GAC3C,QACJ,CAEA,GAAInH,AAAY,MAAZA,CAAI,CAAC,EAAE,CAAU,CACjB,IAAI6O,EAASrB,GAAcxN,GAC3BmO,EAAQ5Z,IAAI,CAACsa,EAAOtB,SAAS,CAAC,EAAG,KACjCvN,EAAOA,EAAKuN,SAAS,CAACsB,EAAO7a,MAAM,CAAG,GAAGmT,IAAI,GAC7C,QACJ,CAGA,GADAlC,EAAQjF,EAAKiF,KAAK,CAAC2H,IACR,CAEP,IAAIkC,EAAc5B,GADlBlN,EAAOA,EAAKuN,SAAS,CAACtI,CAAK,CAAC,EAAE,CAACjR,MAAM,EAAEmT,IAAI,IAE3CgH,EAAQ5Z,IAAI,CAAC,CACTV,KAAM,WACNyN,KAAM2D,CAAK,CAAC,EAAE,CACd8J,KAAMC,AAjLtB,SAAwB7B,CAAI,CAAEQ,CAAqB,EAI/C,IAAK,IAHDoB,EAAO,EAAE,CAAEE,EAAsBtB,EAAwB,IAAM,IAC/DP,EAAkB,EAClB8B,EAAO,GACF5Y,EAAI,EAAGwE,EAAOqS,EAAKnZ,MAAM,CAAEqZ,EAAO,KAAK,EAAG/W,EAAIwE,EAAM,EAAExE,EAG3D,GAAI+W,AAFJA,CAAAA,EAAOF,CAAI,CAAC7W,EAAE,AAAD,IAEA2Y,GACT,CAAC7B,GACD8B,EACAH,EAAKxa,IAAI,CAACmZ,GAAcwB,EAAMvB,IAC9BuB,EAAO,QAGN,GAAI7B,AAAS,MAATA,GACJD,GACA8B,EAMa,MAAT7B,IACL6B,GAAQ7B,EACJA,AAAS,MAATA,EACA,EAAED,EAEGC,AAAS,MAATA,GACL,EAAED,OAZC,CACP,IAAIyB,EAASrB,GAAcL,EAAKI,SAAS,CAACjX,IAC1CyY,EAAKxa,IAAI,CAACsa,GACVvY,GAAKuY,EAAO7a,MAAM,CAAG,CAEzB,CAeJ,MAHI,CAACoZ,GAAmB8B,GACpBH,EAAKxa,IAAI,CAACmZ,GAAcwB,EAAMvB,IAE3BoB,CACX,EA4IqCD,EAAanB,EACtC,GACA3N,EAAOA,EAAKuN,SAAS,CAACuB,EAAY9a,MAAM,CAAG,GAAGmT,IAAI,GAClD,QACJ,CAEA,GAAInH,AAAY,MAAZA,CAAI,CAAC,EAAE,CAAU,CACjB,IAAImP,EAAajC,GAAmBlN,GACpC,GAAImP,EAAY,CACZhB,EACK5Z,IAAI,CAAC6Z,GAAae,EAAYxB,IACnC3N,EAAOA,EAAKuN,SAAS,CAAC4B,EAAWnb,MAAM,CAAG,GAAGmT,IAAI,GACjD,QACJ,CACJ,CAEA,IAAIiI,EAAWjC,EAAKnZ,MAAM,CAAGgM,EAAKhM,MAAM,CAAE4K,EAAQ,AAAI1J,MAAM,yBACpDiY,EAAKI,SAAS,CAAC6B,EAAUA,EAAW,GACpC,iBAAoBA,CAAAA,EAAW,CAAA,EAC/B,UAAYjC,EAAKI,SAAS,CAAC6B,EAAW,EAAGA,EAAW,GAAK,QAEjE,OADAxQ,EAAM0C,IAAI,CAAG,oBACP1C,CACV,CACA,OAAOuP,CACX,CAaA,SAASD,GAAqBf,CAAI,EAE9B,IAAK,IADDvW,EAAS,EACJN,EAAI,EAAGwE,EAAOqS,EAAKnZ,MAAM,CAAEqb,EAAO,KAAK,EAAGC,EAASnC,EAAKnZ,MAAM,CAAG,EAAGsC,EAAIwE,EAAM,EAAExE,EAEjF+Y,AADJA,CAAAA,EAAOlC,EAAKoC,UAAU,CAACjZ,EAAC,GACZ,IAAM+Y,GAAQ,IACtBzY,CAAAA,GAAU,AAACyY,CAAAA,EAAO,EAAC,EAAK9W,KAAKiX,GAAG,CAAC,GAAIF,EAAM,EAE/C,EAAEA,EAEN,OAAO1Y,CACX,CAS6B,IAAI6Y,GAHb,CAChBrB,aAAcA,EAClB,EA0BIsB,GAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAK,CAgHnCC,GARf,CACdC,UAxFJ,SAAmBC,CAAI,EACnB,OAAOA,aAAgBrZ,KAC3B,EAuFIsZ,WA3EJ,SAAoBD,CAAI,EACpB,MAAQ,AAAgB,UAAhB,OAAOA,GACX,CAAEA,CAAAA,aAAgBrZ,KAAI,GACtBqZ,AAAc,aAAdA,EAAKhc,IAAI,AACjB,EAwEIkc,WA5DJ,SAAoBF,CAAI,EACpB,MAAQ,AAAgB,UAAhB,OAAOA,GACXH,GAAUvS,OAAO,CAAC0S,IAAS,CACnC,EA0DIG,QA9CJ,SAAiBH,CAAI,EACjB,MAAQ,AAAgB,UAAhB,OAAOA,GACX,CAAEA,CAAAA,aAAgBrZ,KAAI,GACtBqZ,AAAc,UAAdA,EAAKhc,IAAI,AACjB,EA2CIoc,YA/BJ,SAAqBJ,CAAI,EACrB,MAAQ,AAAgB,UAAhB,OAAOA,GACX,CAAEA,CAAAA,aAAgBrZ,KAAI,GACtBqZ,AAAc,cAAdA,EAAKhc,IAAI,AACjB,EA4BIqc,QAhBJ,SAAiBL,CAAI,EACjB,MAAQ,AAAgB,WAAhB,OAAOA,GACX,AAAgB,UAAhB,OAAOA,GACP,AAAgB,UAAhB,OAAOA,CACf,CAaA,EAkBIM,GAA6BR,GAAaC,SAAS,CAAEQ,GAA8BT,GAAaG,UAAU,CAAEO,GAA8BV,GAAaI,UAAU,CAAEO,GAA2BX,GAAaK,OAAO,CAAEO,GAA+BZ,GAAaM,WAAW,CAAEO,GAA2Bb,GAAaO,OAAO,CAE5TO,GAA2B,AAACxd,IAA+EoH,OAAO,CAMlHqW,GAAwB,KACxBC,GAAY7S,OAAOwK,SAAS,CAAG,eAC/BsI,GAAa9S,OAAOwK,SAAS,CAAG,eAChCuI,GAAW/S,OAAOwK,SAAS,CAC3BwI,GAAmB,CACnB,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,KAAM,EACN,IAAK,EACL,KAAM,CACV,EACIC,GAAqB,CAAC,EACtBC,GAA8B,kBAelC,SAASC,GAAgBzQ,CAAK,EAC1B,OAAQ,OAAOA,GACX,IAAK,UACD,OAAOA,EAAQqQ,GAAWF,EAC9B,KAAK,SACD,OAAOC,EACX,KAAK,SACD,OAAOpQ,CACX,SACI,OAAO4E,GACf,CACJ,CAYA,SAAS8L,GAAgB1Q,CAAK,QAC1B,AAAI,AAAiB,UAAjB,OAAOA,EACAA,EAAM2Q,WAAW,GAAG3K,OAAO,CAACkK,GAAuB,MAEvDlQ,CACX,CAUA,SAASuF,GAASvF,CAAK,EACnB,OAAQ,OAAOA,GACX,IAAK,UACD,MAAOA,GAAAA,CACX,KAAK,SACD,OAAOrE,WAAWqE,EAAMgG,OAAO,CAAC,IAAK,KACzC,KAAK,SACD,OAAOhG,CACX,SACI,OAAO4E,GACf,CACJ,CAoFA,SAASgM,GAAiBC,CAAG,CAAE3c,CAAK,SAEhC,AAAI8b,GAAyBa,GAClBA,EAGPf,GAAyBe,GACjB3c,GAAS4c,GAAeD,EAAK3c,IAAU,EAAE,CAGjD0b,GAA4BiB,GACrBE,GAAgBF,EAAK3c,GAGzB8c,GAAgBrB,GAA2BkB,GAAOA,EAAM,CAACA,EAAI,CAAG3c,EAC3E,CAoCA,SAAS4c,GAAejH,CAAK,CAAE3V,CAAK,EAMhC,IAAK,IALDqE,EAAcrE,EACT8H,cAAc,GACd/F,KAAK,CAAC4T,EAAM2D,WAAW,CAC5B3D,EAAMhC,SAAS,CAAG,GAClBtG,EAAS,EAAE,CACNzL,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEyd,EAAO,KAAK,EAAGnb,EAAIwE,EAAM,EAAExE,EAGlE,IAAK,IAFDob,EAAQhd,EAAMkE,SAAS,CAACG,CAAW,CAACzC,EAAE,CACtC,CAAA,IAAS,EAAE,CACNqF,EAAI0O,EAAM4D,QAAQ,CAAErS,EAAOyO,EAAM7B,MAAM,CAAG,EAAG7M,EAAIC,EAAM,EAAED,EAE1D,AAAgB,UAAhB,MADJ8V,CAAAA,EAAOC,CAAK,CAAC/V,EAAE,AAAD,GAEV8V,AAAY,MAAZA,CAAI,CAAC,EAAE,EACP/c,IAAUA,EAAMK,QAAQ,EAExB0c,CAAAA,EAAO/c,EAAMK,QAAQ,CAAC+G,OAAO,CAAC/C,CAAW,CAACzC,EAAE,CAAEqF,EAAC,EAEnDoG,EAAOxN,IAAI,CAACic,GAAyBiB,GAAQA,EAAOrM,KAG5D,OAAOrD,CACX,CAeA,SAAS4P,GAAkBjD,CAAS,CAAEha,CAAK,EACvC,IAAIU,EAAaV,EAAM8H,cAAc,EAAE,CAACkS,EAAU9X,MAAM,CAAC,CACzD,GAAIxB,EAAY,CACZ,IAAIqc,EAAO/c,EAAMoH,OAAO,CAAC1G,EACrBsZ,EAAUjV,GAAG,EACjB,GAAI,AAAgB,UAAhB,OAAOgY,GACPA,AAAY,MAAZA,CAAI,CAAC,EAAE,EACP/c,IAAUA,EAAMK,QAAQ,CAAE,CAE1B,IAAI2C,EAAShD,EAAMK,QAAQ,CAAC+G,OAAO,CAAC1G,EAChCsZ,EAAUjV,GAAG,EACjB,OAAO+W,GAAyB9Y,GAAUA,EAAS0N,GACvD,CACA,GAAIoL,GAAyBiB,GACzB,OAAO/C,EAAUC,UAAU,CAAG,CAAC8C,EAAOA,CAG9C,CACA,OAAOrM,GACX,CAeA,SAASwM,GAAc7P,CAAM,CAAE2N,CAAS,EAChC3N,CAAAA,EAAO/N,MAAM,CAAG,GAAK0b,EAAU1b,MAAM,CAAG,CAAA,GACxC+N,EAAOxN,IAAI,CAAC6Q,KAEhB,IAAIyM,EAAc9P,EAAOtB,GAAG,GACxBqR,EAAa/P,EAAOtB,GAAG,GACvBsR,EAAWrC,EAAUjP,GAAG,EACxB,CAACgQ,GAAyBoB,IAAiBpB,GAAyBqB,IAAgBrB,GAAyBsB,GAI7GhQ,EAAOxN,IAAI,CAACyd,AAtMpB,SAAwBD,CAAQ,CAAEE,CAAC,CAAE1S,CAAC,MA2B9B7H,EA1BJ,OAAQqa,GACJ,IAAK,IACD,OAAOb,GAAgBe,KAAOf,GAAgB3R,EAClD,KAAK,IACD,GAAI,OAAO0S,GAAM,OAAO1S,EACpB,OAAO2R,GAAgBe,GAAKf,GAAgB3R,GAEhD,OAAO0R,GAAgBgB,GAAKhB,GAAgB1R,EAChD,KAAK,KACD,GAAI,OAAO0S,GAAM,OAAO1S,EACpB,OAAO2R,GAAgBe,IAAMf,GAAgB3R,GAEjD,OAAO0R,GAAgBgB,IAAMhB,GAAgB1R,EACjD,KAAK,IACD,GAAI,OAAO0S,GAAM,OAAO1S,EACpB,OAAO2R,GAAgBe,GAAKf,GAAgB3R,GAEhD,OAAO0R,GAAgBgB,GAAKhB,GAAgB1R,EAChD,KAAK,KACD,GAAI,OAAO0S,GAAM,OAAO1S,EACpB,OAAO2R,GAAgBe,IAAMf,GAAgB3R,GAEjD,OAAO0R,GAAgBgB,IAAMhB,GAAgB1R,EACrD,CAIA,OAHA0S,EAAIlM,GAASkM,GACb1S,EAAIwG,GAASxG,GAELwS,GACJ,IAAK,IACDra,EAASua,EAAI1S,EACb,KACJ,KAAK,IACD7H,EAASua,EAAI1S,EACb,KACJ,KAAK,IACD7H,EAASua,EAAI1S,EACb,KACJ,KAAK,IACD7H,EAASua,EAAI1S,EACb,KACJ,KAAK,IACD7H,EAASa,KAAKiX,GAAG,CAACyC,EAAG1S,GACrB,KACJ,SACI,OAAO6F,GACf,CAEA,OAAQ1N,EAAS,EACba,KAAK2Z,KAAK,CAACxa,AAAS,IAATA,GAAuB,IAClCA,CACR,EAmJmCqa,EAAUD,EAAYD,IAHjD9P,EAAOxN,IAAI,CAAC6Q,IAKpB,CA6BA,SAASoM,GAAerD,CAAO,CAAEzZ,CAAK,EASlC,IAAK,IANDqN,EAAS,EAAE,CAGX2N,EAAY,EAAE,CAEdyC,EAAiB,CAAA,EACZ7b,EAAI,EAAGwE,EAAOqT,EAAQna,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAAG,CAClD,IAAIuZ,EAAO1B,CAAO,CAAC7X,EAAE,CACrB,GAAI+Z,GAA4BR,GAAO,CACnC,GAAIsC,GAAkBtC,AAAS,MAATA,EAGlB9N,EAAOxN,IAAI,CAAC,GACZmb,EAAUnb,IAAI,CAAC,KACf4d,EAAiB,CAAA,MAEhB,CAED,KAAOzC,EAAU1b,MAAM,EACnB8c,EAAgB,CAACpB,CAAS,CAACA,EAAU1b,MAAM,CAAG,EAAE,CAAC,EAC7C8c,EAAgB,CAACjB,EAAK,EAC1B+B,GAAc7P,EAAQ2N,GAE1BA,EAAUnb,IAAI,CAACsb,GACfsC,EAAiB,CAAA,CACrB,CACA,QACJ,CACA,IAAI3R,EAAQ,KAAK,EAEjB,GAAIgQ,GAAyBX,GACzBrP,EAAQqP,OAEP,GAAIU,GAA6BV,GAClCrP,EAAQ9L,EAAQid,GAAkB9B,EAAMnb,GAAS0Q,SAEhD,GAAIgL,GAA4BP,GAAO,CACxC,IAAInY,EAAS6Z,GAAgB1B,EACzBnb,GACJ8L,EAAQgQ,GAAyB9Y,GAAUA,EAAS0N,GACxD,MACS+K,GAA2BN,IAChCrP,CAAAA,EAAQgR,GAAe3B,EAAMnb,EAAK,EAEtC,GAAI,AAAiB,KAAA,IAAV8L,EAKP,OAAO4E,IAJPrD,EAAOxN,IAAI,CAACiM,GACZ2R,EAAiB,CAAA,CAKzB,CAGA,KAAOzC,EAAU1b,MAAM,EACnB4d,GAAc7P,EAAQ2N,UAE1B,AAAI3N,AAAkB,IAAlBA,EAAO/N,MAAM,CACNoR,IAEJrD,CAAM,CAAC,EAAE,AACpB,CAmBA,SAASwP,GAAgBa,CAAe,CAAE1d,CAAK,CAE/Cga,CAAS,EAEL,IAAI2D,EAAYtB,EAAkB,CAACqB,EAAgB9Q,IAAI,CAAC,CACxD,GAAI+Q,EACA,GAAI,CACA,OAAOA,EAAUD,EAAgBrD,IAAI,CAAEra,EAC3C,CACA,MAAO0E,EAAI,CACP,OAAOgM,GACX,CAEJ,IAAIxG,EAAQ,AAAI1J,MAAM,aAAcwB,MAAM,CAAC0b,EAAgB9Q,IAAI,CAAE,gBAEjE,OADA1C,EAAM0C,IAAI,CAAG,sBACP1C,CACV,CAuF6B,IAAI0T,GAXV,CACnBvM,SAAUA,GACVqL,iBAAkBA,GAClBmB,mBAvTJ,SAA4BxD,CAAI,CAAEra,CAAK,EAEnC,IAAK,IADDqN,EAAS,EAAE,CACNzL,EAAI,EAAGwE,EAAOiU,EAAK/a,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAC5CyL,EAAOxN,IAAI,CAAC6c,GAAiBrC,CAAI,CAACzY,EAAE,CAAE5B,IAE1C,OAAOqN,CACX,EAkTIuP,eAAgBA,GAChBK,kBAAmBA,GACnBH,eAAgBA,GAChBT,mBAAoBA,GACpByB,0BAtEJ,SAAmClR,CAAI,CAAEmR,CAAiB,EACtD,OAAQzB,GAA4BvK,IAAI,CAACnF,IACrC,CAACyP,EAAkB,CAACzP,EAAK,EACzB,CAAC,CAAEyP,CAAAA,EAAkB,CAACzP,EAAK,CAAGmR,CAAgB,CACtD,EAmEIC,oBAlDJ,SAASA,EAAoBvE,CAAO,CAAEwE,CAAW,CAAEC,CAAQ,EACnDD,AAAgB,KAAK,IAArBA,GAA0BA,CAAAA,EAAc,CAAA,EACxCC,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EACtC,IAAK,IAAItc,EAAI,EAAGwE,EAAOqT,EAAQna,MAAM,CAAE6b,EAAO,KAAK,EAAGvZ,EAAIwE,EAAM,EAAExE,EAE1DuZ,AADJA,CAAAA,EAAO1B,CAAO,CAAC7X,EAAE,AAAD,YACIE,MAChBkc,EAAoB7C,EAAM8C,EAAaC,GAElCxC,GAA4BP,GACjC6C,EAAoB7C,EAAKd,IAAI,CAAE4D,EAAaC,GAEvCtC,GAAyBT,IAC1BA,EAAKjC,mBAAmB,EACxBiC,CAAAA,EAAK7B,WAAW,EAAI2E,CAAU,EAE9B9C,EAAKhC,gBAAgB,EACrBgC,CAAAA,EAAK5B,QAAQ,EAAI2E,CAAO,EAExB/C,EAAK/B,iBAAiB,EACtB+B,CAAAA,EAAKxH,SAAS,EAAIsK,CAAU,EAE5B9C,EAAK9B,cAAc,EACnB8B,CAAAA,EAAKrH,MAAM,EAAIoK,CAAO,GAGrBrC,GAA6BV,KAC9BA,EAAKrB,cAAc,EACnBqB,CAAAA,EAAKjZ,MAAM,EAAI+b,CAAU,EAEzB9C,EAAKpB,WAAW,EAChBoB,CAAAA,EAAKpW,GAAG,EAAImZ,CAAO,GAI/B,OAAOzE,CACX,CAgBA,EAkBI0E,GAAuBP,GAAyBlB,gBAAgB,CA+CpEkB,GAAyBE,yBAAyB,CAAC,MA1BnD,SAAazD,CAAI,CAAEra,CAAK,EACpB,IAAI8L,EAAQqS,GAAqB9D,CAAI,CAAC,EAAE,CACpCra,GACJ,OAAQ,OAAO8L,GACX,IAAK,SACD,OAAOjI,KAAKua,GAAG,CAACtS,EACpB,KAAK,SAED,IAAK,IADDuB,EAAS,EAAE,CACNzL,EAAI,EAAGwE,EAAO0F,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGzc,EAAIwE,EAAM,EAAExE,EAAG,CAEjE,GAAI,AAAkB,UAAlB,MADJyc,CAAAA,EAASvS,CAAK,CAAClK,EAAE,AAAD,EAEZ,OAAO8O,IAEXrD,EAAOxN,IAAI,CAACgE,KAAKua,GAAG,CAACC,GACzB,CACA,OAAOhR,CAEX,SACI,OAAOqD,GACf,CACJ,GA6BA,IAAI4N,GAAuBV,GAAyBlB,gBAAgB,CAsCpEkB,GAAyBE,yBAAyB,CAAC,MAhBnD,SAASS,EAAIlE,CAAI,CAAEra,CAAK,EACpB,IAAK,IAAI4B,EAAI,EAAGwE,EAAOiU,EAAK/a,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE5D,GAAI,CADJkK,CAAAA,EAAQwS,GAAqBjE,CAAI,CAACzY,EAAE,CAAE5B,EAAK,GAEtC,AAAiB,UAAjB,OAAO8L,GACJ,CAACyS,EAAIzS,EAAO9L,GAChB,MAAO,CAAA,EAGf,MAAO,CAAA,CACX,GA6BA,IAAIwe,GAA6BZ,GAAyBC,kBAAkB,CAuD5ED,GAAyBE,yBAAyB,CAAC,UAjCnD,SAAiBzD,CAAI,CAAEra,CAAK,EAKxB,IAAK,IAJDqN,EAASmR,GAA2BnE,EACpCra,GACAye,EAAQ,EACRzb,EAAS,EACJpB,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACI4F,MAAMsE,KACP,EAAE2S,EACFzb,GAAU8I,GAEd,KACJ,KAAK,SACD,IAAK,IAAI7E,EAAI,EAAGC,EAAO4E,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGpX,EAAIC,EAAM,EAAED,EAExC,UAAlB,MADJoX,CAAAA,EAASvS,CAAK,CAAC7E,EAAE,AAAD,GAEXO,MAAM6W,KACP,EAAEI,EACFzb,GAAUqb,EAI1B,CAEJ,OAAQI,EAASzb,EAASyb,EAAS,CACvC,GA6BA,IAAIC,GAA4Bd,GAAyBlB,gBAAgB,CAsEzEkB,GAAyBE,yBAAyB,CAAC,WAhDnD,SAAkBzD,CAAI,CAAEra,CAAK,EAGzB,IAAK,IAFDye,EAAQ,EACRzb,EAAS,EACJpB,EAAI,EAAGwE,EAAOiU,EAAK/a,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE5D,OAAQ,MADRkK,CAAAA,EAAQ4S,GAA0BrE,CAAI,CAACzY,EAAE,CAAE5B,EAAK,GAE5C,IAAK,UACD,EAAEye,EACFzb,GAAW8I,GAAAA,EACX,QACJ,KAAK,SACItE,MAAMsE,KACP,EAAE2S,EACFzb,GAAU8I,GAEd,QACJ,KAAK,SACD,EAAE2S,EACF,QACJ,SACI,IAAK,IAAIxX,EAAI,EAAGC,EAAO4E,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGpX,EAAIC,EAAM,EAAED,EAE9D,OAAQ,MADRoX,CAAAA,EAASvS,CAAK,CAAC7E,EAAE,AAAD,GAEZ,IAAK,UACD,EAAEwX,EACFzb,GAAWqb,GAAAA,EACX,QACJ,KAAK,SACI7W,MAAM6W,KACP,EAAEI,EACFzb,GAAUqb,GAEd,QACJ,KAAK,SACD,EAAEI,EACF,QACR,CAEJ,QACR,CAEJ,OAAQA,EAASzb,EAASyb,EAAS,CACvC,GA0EAb,GAAyBE,yBAAyB,CAAC,QAxBnD,SAASa,EAAMtE,CAAI,CAAEra,CAAK,EAItB,IAAK,IAHDqN,EAASuQ,GAAyBC,kBAAkB,CAACxD,EACrDra,GACAye,EAAQ,EACH7c,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACG,CAAC4F,MAAMsE,IACP,EAAE2S,EAEN,KACJ,KAAK,SACDA,GAASE,EAAM7S,EAAO9L,EAE9B,CAEJ,OAAOye,CACX,GAgFAb,GAAyBE,yBAAyB,CAAC,SA9BnD,SAASc,EAAOvE,CAAI,CAAEra,CAAK,EAIvB,IAAK,IAHDqN,EAASuQ,GAAyBC,kBAAkB,CAACxD,EACrDra,GACAye,EAAQ,EACH7c,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAAG,CAEjE,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACD,GAAI4F,MAAMsE,GACN,SAEJ,KACJ,KAAK,SACD2S,GAASG,EAAO9S,EAAO9L,GACvB,QACJ,KAAK,SACD,GAAI,CAAC8L,EACD,QAGZ,CACA,EAAE2S,CACN,CACA,OAAOA,CACX,GA6BA,IAAII,GAAsBjB,GAAyBlB,gBAAgB,CAiCnEkB,GAAyBE,yBAAyB,CAAC,KAVnD,SAAYzD,CAAI,CAAEra,CAAK,EACnB,OAAQ6e,GAAoBxE,CAAI,CAAC,EAAE,CAAEra,GACjC6e,GAAoBxE,CAAI,CAAC,EAAE,CAAEra,GAC7B6e,GAAoBxE,CAAI,CAAC,EAAE,CAAEra,EACrC,GA6BA,IAAI8e,GAAwBlB,GAAyBlB,gBAAgB,CAgCrEkB,GAAyBE,yBAAyB,CAAC,OAVnD,SAAczD,CAAI,CAAEra,CAAK,EACrB,IAAI8L,EAAQgT,GAAsBzE,CAAI,CAAC,EAAE,CACrCra,GACJ,MAAQ,AAAiB,UAAjB,OAAO8L,GAAsBtE,MAAMsE,EAC/C,GA6BA,IAAIiT,GAAyBnB,GAAyBC,kBAAkB,CAiDxED,GAAyBE,yBAAyB,CAAC,MA3BnD,SAASkB,EAAI3E,CAAI,CAAEra,CAAK,EAIpB,IAAK,IAHDqN,EAAS0R,GAAuB1E,EAChCra,GACAgD,EAASoG,OAAO6V,iBAAiB,CAC5Brd,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACGkK,EAAQ9I,GACRA,CAAAA,EAAS8I,CAAI,EAEjB,KACJ,KAAK,SAEGA,AADJA,CAAAA,EAAQkT,EAAIlT,EAAK,EACL9I,GACRA,CAAAA,EAAS8I,CAAI,CAGzB,CAEJ,OAAOzC,SAASrG,GAAUA,EAAS,CACvC,GAwFA4a,GAAyBE,yBAAyB,CAAC,SAtCnD,SAAgBzD,CAAI,CAAEra,CAAK,EAIvB,IAAK,IAHDkf,EAAS,EAAE,CACX7R,EAASuQ,GAAyBC,kBAAkB,CAACxD,EACrDra,GACK4B,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACG,AAAC4F,MAAMsE,IACPoT,EAAOrf,IAAI,CAACiM,GAEhB,KACJ,KAAK,SACD,IAAK,IAAI7E,EAAI,EAAGC,EAAO4E,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGpX,EAAIC,EAAM,EAAED,EAE1D,AAAkB,UAAlB,MADJoX,CAAAA,EAASvS,CAAK,CAAC7E,EAAE,AAAD,GAEXO,MAAM6W,IACPa,EAAOrf,IAAI,CAACwe,EAI5B,CApBJ,IAsBII,EAAQS,EAAO5f,MAAM,CACzB,GAAI,CAACmf,EACD,OAAO/N,IAEX,IAAIyO,EAAOtb,KAAKub,KAAK,CAACX,EAAQ,GAC1B,OAAQA,EAAQ,EACZS,CAAM,CAACC,EAAK,CACZ,AAACD,CAAAA,CAAM,CAACC,EAAO,EAAE,CAAGD,CAAM,CAACC,EAAK,AAAD,EAAK,CAEhD,GA6BA,IAAIE,GAAyBzB,GAAyBC,kBAAkB,CAiDxED,GAAyBE,yBAAyB,CAAC,MA3BnD,SAASwB,EAAIjF,CAAI,CAAEra,CAAK,EAIpB,IAAK,IAHDqN,EAASgS,GAAuBhF,EAChCra,GACAgD,EAASoG,OAAOmW,iBAAiB,CAC5B3d,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACGkK,EAAQ9I,GACRA,CAAAA,EAAS8I,CAAI,EAEjB,KACJ,KAAK,SAEGA,AADJA,CAAAA,EAAQwT,EAAIxT,EAAK,EACL9I,GACRA,CAAAA,EAAS8I,CAAI,CAGzB,CAEJ,OAAOzC,SAASrG,GAAUA,EAAS,CACvC,GA6BA,IAAIwc,GAAuB5B,GAAyBlB,gBAAgB,CAwFpE,SAAS+C,GAAWpF,CAAI,CAAEra,CAAK,EAI3B,IAAK,IAHD0f,EAAU,CAAC,EACXrS,EAASuQ,GAAyBC,kBAAkB,CAACxD,EACrDra,GACK4B,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACG,AAAC4F,MAAMsE,IACP4T,CAAAA,CAAO,CAAC5T,EAAM,CAAG,AAAC4T,CAAAA,CAAO,CAAC5T,EAAM,EAAI,CAAA,EAAK,CAAA,EAE7C,KACJ,KAAK,SACD,IAAK,IAAI7E,EAAI,EAAGC,EAAO4E,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGpX,EAAIC,EAAM,EAAED,EAE1D,AAAkB,UAAlB,MADJoX,CAAAA,EAASvS,CAAK,CAAC7E,EAAE,AAAD,GAEXO,MAAM6W,IACPqB,CAAAA,CAAO,CAACrB,EAAO,CAAG,AAACqB,CAAAA,CAAO,CAACrB,EAAO,EAAI,CAAA,EAAK,CAAA,CAI3D,CAEJ,OAAOqB,CACX,CAuDA,SAASC,GAAKtF,CAAI,CAAEra,CAAK,EACrB,IAAI0f,EAAUD,GAAWpF,EACrBra,GACAsE,EAAO3G,OAAO2G,IAAI,CAACob,GACvB,GAAI,CAACpb,EAAKhF,MAAM,CACZ,OAAOoR,IAIX,IAAK,IAFDkP,EAAUnY,WAAWnD,CAAI,CAAC,EAAE,EAC5Bub,EAAYH,CAAO,CAACpb,CAAI,CAAC,EAAE,CAAC,CACvB1C,EAAI,EAAGwE,EAAO9B,EAAKhF,MAAM,CAAE7B,EAAM,KAAK,EAAGqiB,EAAW,KAAK,EAAGrB,EAAQ,KAAK,EAAG7c,EAAIwE,EAAM,EAAExE,EAGzFie,EADJpB,CAAAA,EAAQiB,CAAO,CADfjiB,EAAM6G,CAAI,CAAC1C,EAAE,CACO,AAAD,GAEfge,EAAUnY,WAAWhK,GACrBoiB,EAAYpB,GAEPoB,IAAcpB,GAEfmB,EADJE,CAAAA,EAAWrY,WAAWhK,EAAG,IAErBmiB,EAAUE,EACVD,EAAYpB,GAIxB,OAAOoB,EAAY,EAAID,EAAUlP,GACrC,CAnJAkN,GAAyBE,yBAAyB,CAAC,MAvBnD,SAAazD,CAAI,CAAEra,CAAK,EACpB,IAAI+f,EAASP,GAAqBnF,CAAI,CAAC,EAAE,CACrCra,GACAqe,EAASmB,GAAqBnF,CAAI,CAAC,EAAE,CACrCra,SAOJ,CANI,AAAkB,UAAlB,OAAO+f,GACPA,CAAAA,EAASA,CAAM,CAAC,EAAE,AAAD,EAEjB,AAAkB,UAAlB,OAAO1B,GACPA,CAAAA,EAASA,CAAM,CAAC,EAAE,AAAD,EAEjB,AAAkB,UAAlB,OAAO0B,GACP,AAAkB,UAAlB,OAAO1B,GACPA,AAAW,IAAXA,GACO3N,IAEJqP,EAAS1B,CACpB,GA+JAT,GAAyBE,yBAAyB,CAAC,OAAQ6B,IAC3D/B,GAAyBE,yBAAyB,CAAC,YAtEnD,SAAczD,CAAI,CAAEra,CAAK,EACrB,IAAI0f,EAAUD,GAAWpF,EACrBra,GACAsE,EAAO3G,OAAO2G,IAAI,CAACob,GACvB,GAAI,CAACpb,EAAKhF,MAAM,CACZ,OAAOoR,IAIX,IAAK,IAFDsP,EAAW,CAACvY,WAAWnD,CAAI,CAAC,EAAE,EAAE,CAChCub,EAAYH,CAAO,CAACpb,CAAI,CAAC,EAAE,CAAC,CACvB1C,EAAI,EAAGwE,EAAO9B,EAAKhF,MAAM,CAAE7B,EAAM,KAAK,EAAGghB,EAAQ,KAAK,EAAG7c,EAAIwE,EAAM,EAAExE,EAGtEie,EADJpB,CAAAA,EAAQiB,CAAO,CADfjiB,EAAM6G,CAAI,CAAC1C,EAAE,CACO,AAAD,GAEfoe,EAAW,CAACvY,WAAWhK,GAAK,CAC5BoiB,EAAYpB,GAEPoB,IAAcpB,GACnBuB,EAASngB,IAAI,CAAC4H,WAAWhK,IAGjC,OAAOoiB,EAAY,EAAIG,EAAWtP,GACtC,GAkDAkN,GAAyBE,yBAAyB,CAAC,YAAa6B,IA2BhE,IAAIM,GAAuBrC,GAAyBlB,gBAAgB,CAwCpEkB,GAAyBE,yBAAyB,CAAC,MAlBnD,SAAazD,CAAI,CAAEra,CAAK,EACpB,IAAI8L,EAAQmU,GAAqB5F,CAAI,CAAC,EAAE,CACpCra,GAIJ,OAHI,AAAiB,UAAjB,OAAO8L,GACPA,CAAAA,EAAQA,CAAK,CAAC,EAAE,AAAD,EAEX,OAAOA,GACX,IAAK,UACL,IAAK,SACD,MAAO,CAACA,CAChB,CACA,OAAO4E,GACX,GA6BA,IAAIwP,GAAsBtC,GAAyBlB,gBAAgB,CAyCnEkB,GAAyBE,yBAAyB,CAAC,KAnBnD,SAASqC,EAAG9F,CAAI,CAAEra,CAAK,EACnB,IAAK,IAAI4B,EAAI,EAAGwE,EAAOiU,EAAK/a,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE5D,GAAI,AAAiB,UAAjB,MADJkK,CAAAA,EAAQoU,GAAoB7F,CAAI,CAACzY,EAAE,CAAE5B,EAAK,EAEtC,CAAA,GAAImgB,EAAGrU,EAAO9L,GACV,MAAO,CAAA,CACX,MAEC,GAAI8L,EACL,MAAO,CAAA,EAGf,MAAO,CAAA,CACX,GA6BA,IAAIsU,GAA6BxC,GAAyBC,kBAAkB,CAiD5ED,GAAyBE,yBAAyB,CAAC,UA3BnD,SAASuC,EAAQhG,CAAI,CAAEra,CAAK,EAKxB,IAAK,IAJDqN,EAAS+S,GAA2B/F,EACpCra,GACAgD,EAAS,EACTsd,EAAa,CAAA,EACR1e,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACI4F,MAAMsE,KACPwU,EAAa,CAAA,EACbtd,GAAU8I,GAEd,KACJ,KAAK,SACDwU,EAAa,CAAA,EACbtd,GAAUqd,EAAQvU,EAAO9L,EAEjC,CAEJ,OAAQsgB,EAAatd,EAAS,CAClC,GA0EA4a,GAAyBE,yBAAyB,CAAC,MAxBnD,SAASyC,EAAIlG,CAAI,CAAEra,CAAK,EAIpB,IAAK,IAHDqN,EAASuQ,GAAyBC,kBAAkB,CAACxD,EACrDra,GACAgD,EAAS,EACJpB,EAAI,EAAGwE,EAAOiH,EAAO/N,MAAM,CAAEwM,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAE9D,OAAQ,MADRkK,CAAAA,EAAQuB,CAAM,CAACzL,EAAE,AAAD,GAEZ,IAAK,SACG,AAAC4F,MAAMsE,IACP9I,CAAAA,GAAU8I,CAAI,EAElB,KACJ,KAAK,SACD9I,GAAUud,EAAIzU,EAAO9L,EAE7B,CAEJ,OAAOgD,CACX,GA6BA,IAAIwd,GAAuB5C,GAAyBlB,gBAAgB,CA4DpEkB,GAAyBE,yBAAyB,CAAC,MAtCnD,SAAazD,CAAI,CAAEra,CAAK,EACpB,IAAK,IAAI4B,EAAI,EAAGwE,EAAOiU,EAAK/a,MAAM,CAAEmhB,EAAY,KAAK,EAAG3U,EAAQ,KAAK,EAAGlK,EAAIwE,EAAM,EAAExE,EAEhF,OAAQ,MADRkK,CAAAA,EAAQ0U,GAAqBnG,CAAI,CAACzY,EAAE,CAAE5B,EAAK,GAEvC,IAAK,UACL,IAAK,SACD,GAAI,AAAqB,KAAA,IAAdygB,EACPA,EAAY,CAAC,CAAC3U,OAEb,GAAI,CAAC,CAACA,IAAU2U,EACjB,MAAO,CAAA,EAEX,KACJ,KAAK,SACD,IAAK,IAAIxZ,EAAI,EAAGC,EAAO4E,EAAMxM,MAAM,CAAE+e,EAAS,KAAK,EAAGpX,EAAIC,EAAM,EAAED,EAE9D,OAAQ,MADRoX,CAAAA,EAASvS,CAAK,CAAC7E,EAAE,AAAD,GAEZ,IAAK,UACL,IAAK,SACD,GAAI,AAAqB,KAAA,IAAdwZ,EACPA,EAAY,CAAC,CAACpC,OAEb,GAAI,CAAC,CAACA,IAAWoC,EAClB,MAAO,CAAA,CAGnB,CAGZ,CAEJ,MAAO,CAAA,CACX,GA4BA,IAAIC,GAAgD,WAShD,MAAOA,AARPA,CAAAA,GAAW/iB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EAClC,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EACgBnI,KAAK,CAAC,IAAI,CAAEjB,UAChC,EAoCImf,GAAUH,GAASA,GAASA,GAAS,CAAC,EAAG3F,IAAwB6C,IAA2B3C,IAoB5F6F,IACIpkB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAEAwb,GAA2D,WAS3D,MAAOA,AARPA,CAAAA,GAAsBrjB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EAC7C,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EAC2BnI,KAAK,CAAC,IAAI,CAAEjB,UAC3C,EAGIuf,GAAqB,AAAC1iB,IAA+EG,KAAK,CAW1GwiB,GAA8B,SAAUjb,CAAM,EAa9C,SAASib,EAAariB,CAAO,EACzB,IAAI2E,EAAQ,IAAI,CACZsN,EAAgBmQ,GAAmBC,EAAanQ,cAAc,CAC9DlS,GAWJ,MAJA2E,AANAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,IAAkB,IAAI,AAAD,EAMzChQ,OAAO,CAAG,EAAE,CAClB0C,EAAMuP,OAAO,CAAG,EAAE,CAClBvP,EAAM2d,SAAS,CAAG,EAAE,CACpB3d,EAAM3E,OAAO,CAAGiS,EACTtN,CACX,CA0ZA,OArbAsd,GAAqBI,EAAcjb,GA6CnCib,EAAajjB,SAAS,CAAC6U,MAAM,CAAG,SAAUhG,CAAS,CAAEjO,CAAO,EACpDA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,IAAI,CAACA,OAAO,AAAD,EAC/C,IAAIuiB,EAAuBviB,EAAQuiB,oBAAoB,CACnDC,EAAgBxiB,EAAQwiB,aAAa,CACrCC,EAAe,AAAiC,CAAA,IAAjC,IAAI,CAACziB,OAAO,CAACkV,eAAe,CAC3C9C,EAAepS,EAAQoS,YAAY,CACnCsQ,EAAgB1iB,EAAQ0iB,aAAa,AACrC,CAACtQ,GACDA,CAAAA,EAAgBsQ,AAAkB,MAAlBA,GAAyBH,EACrC,AAAC,IAAKI,cAAc,EAAE,CAAC,EAAE,CACzB,GAAG,EAEP,AAACD,GACDA,CAAAA,EAAiBtQ,AAAiB,MAAjBA,EAAuB,IAAM,GAAG,EAErD,IAAInQ,EAAUgM,EAAUQ,gBAAgB,CAACzO,EAAQ0O,oBAAoB,EACjElJ,EAAc1G,OAAO2G,IAAI,CAACxD,GAC1B2gB,EAAU,EAAE,CACZC,EAAerd,EAAY/E,MAAM,CACjCqiB,EAAW,EAAE,AAEbL,CAAAA,GACAG,EAAQ5hB,IAAI,CAACwE,EAAYI,GAAG,CAAC,SAAU/D,CAAU,EAAI,MAAO,IAAKsB,MAAM,CAACtB,EAAY,IAAO,GAAGkS,IAAI,CAAC2O,IAEvG,IAAK,IAAIK,EAAc,EAAGA,EAAcF,EAAcE,IAAe,CACjE,IAAIlhB,EAAa2D,CAAW,CAACud,EAAY,CACrC1f,EAASpB,CAAO,CAACJ,EAAW,CAC5BmH,EAAe3F,EAAO5C,MAAM,CAC5BuN,EAAaC,EAAU0C,MAAM,CAAC9O,GAC9BmhB,EAAiB,KAAK,CACtBhV,CAAAA,GACAgV,CAAAA,EAAiBhV,EAAWiV,QAAQ,AAAD,EAEvC,IAAK,IAAInhB,EAAW,EAAGA,EAAWkH,EAAclH,IAAY,CACxD,IAAIC,EAAYsB,CAAM,CAACvB,EAAS,CAgBhC,GAfI,AAACghB,CAAQ,CAAChhB,EAAS,EACnBghB,CAAAA,CAAQ,CAAChhB,EAAS,CAAG,EAAE,AAAD,EAGtBkhB,AAAmB,WAAnBA,EACAjhB,EAAY,IAAMA,EAAY,IAEzB,AAAqB,UAArB,OAAOA,EACZA,EAAYmgB,OAAOngB,GAAWkR,OAAO,CAAC,IAAKb,GAEtC,AAAqB,UAArB,OAAOrQ,GACZA,CAAAA,EAAY,IAAKoB,MAAM,CAACpB,EAAW,IAAI,EAE3C+gB,CAAQ,CAAChhB,EAAS,CAACihB,EAAY,CAAGhhB,EAE9BghB,IAAgBF,EAAe,EAAG,CAKlC,IADA,IAAI9f,EAAIggB,EAGJ,AAFGD,CAAQ,CAAChhB,EAAS,CAACrB,MAAM,CAAG,GAE3ByiB,AAAY,KAAK,IADPJ,CAAQ,CAAChhB,EAAS,CAACiB,EAAE,EAInC+f,CAAQ,CAAChhB,EAAS,CAACoL,GAAG,GACtBnK,IAEJ6f,EAAQ5hB,IAAI,CAAC8hB,CAAQ,CAAChhB,EAAS,CAACiS,IAAI,CAAC2O,GACzC,CACJ,CACJ,CACA,OAAOE,EAAQ7O,IAAI,CAACyO,EACxB,EAaAH,EAAajjB,SAAS,CAACkV,KAAK,CAAG,SAAUtU,CAAO,CAAEoB,CAAW,EACzD,IAQI+hB,EAKA9f,EAZAif,EAAYtR,AADA,IAAI,CACMsR,SAAS,CAC/Bc,EAAgBhB,GAAmB,IAAI,CAACpiB,OAAO,CAC/CA,GACAqjB,EAAcD,EAAcC,WAAW,CACvCb,EAAgBY,EAAcZ,aAAa,CAC3CtN,EAAkBkO,EAAclO,eAAe,CAC/CwN,EAAgBU,EAAcV,aAAa,CAE3CY,EAAQ,EACRC,EAAMH,EAAcG,GAAG,CACvBvO,EAAWoO,EAAcpO,QAAQ,CACjCC,EAASmO,EAAcnO,MAAM,CAYjC,GAVAjE,AAdgB,IAAI,CAcV/O,OAAO,CAAG,EAAE,CACtB+O,AAfgB,IAAI,CAeV3Q,IAAI,CAAC,CACXC,KAAM,QACN2B,QAAS+O,AAjBG,IAAI,CAiBG/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,AAnBG,IAAI,CAmBGkD,OAAO,AAC9B,GACIqP,GAAOF,GACPE,CAAAA,EAAMF,EAAYE,EAAG,EAErBA,EAAK,CAgBL,GAfAJ,EAAQI,EACHtQ,OAAO,CAAC,WAAY,MACpBY,KAAK,CAAC2O,GAAiB,MACxB,CAAA,CAACxN,GAAYA,EAAW,CAAA,GACxBA,CAAAA,EAAW,CAAA,EAEX,CAAA,CAACC,GAAUA,GAAUkO,EAAM1iB,MAAM,AAAD,GAChCwU,CAAAA,EAASkO,EAAM1iB,MAAM,CAAG,CAAA,EAExB,AAACiiB,GACD1R,CAAAA,AAnCQ,IAAI,CAmCFwS,oBAAoB,CAC1BxS,AApCI,IAAI,CAoCEyS,cAAc,CAACN,EAAK,EAIlCjO,EAAiB,CAGjB,IAAK,IAFDhB,EAAUiP,CAAK,CAAC,EAAE,CAACtP,KAAK,CAAC6O,GAAiB1R,AAzCtC,IAAI,CAyC4CwS,oBAAoB,EAAI,KAEvEzgB,EAAI,EAAGA,EAAImR,EAAQzT,MAAM,CAAEsC,IAChCmR,CAAO,CAACnR,EAAE,CAAGmR,CAAO,CAACnR,EAAE,CAAC6Q,IAAI,GAAGX,OAAO,CAAC,eAAgB,GAE3DjC,CA9CQ,IAAI,CA8CFkD,OAAO,CAAGA,EACpBc,GACJ,CACA,IAAI0O,EAAS,EACb,IAAKJ,EAAQtO,EAAUsO,GAASrO,EAAQqO,IAChCH,AAAoB,MAApBA,CAAK,CAACG,EAAM,CAAC,EAAE,CACfI,IAGA1S,AAvDI,IAAI,CAwDH2S,WAAW,CAACR,CAAK,CAACG,EAAM,CAAEA,EAAQtO,EAAW0O,EAGtDpB,CAAAA,EAAU7hB,MAAM,EAChB6hB,CAAS,CAAC,EAAE,CAAC7hB,MAAM,EACnB6hB,AAAoB,SAApBA,CAAS,CAAC,EAAE,CAAC,EAAE,EACf,CAACtR,AA9DO,IAAI,CA8DDhR,OAAO,CAACgU,UAAU,EAC7BhD,AA/DQ,IAAI,CA+DFoC,gBAAgB,CAACpC,AA/DnB,IAAI,CA+DyB/O,OAAO,CAAC,EAAE,CAAE,KAAM,CAAA,GAG3D,IAAK,IAAIc,EAAI,EAAGwE,EAAOyJ,AAlEX,IAAI,CAkEiB/O,OAAO,CAACxB,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAAG,CAC5DM,EAAS2N,AAnED,IAAI,CAmEO/O,OAAO,CAACc,EAAE,CAC7B,IAAK,IAAIqF,EAAI,EAAGC,EAAOhF,EAAO5C,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EAC9C,GAAI/E,CAAM,CAAC+E,EAAE,EAAI,AAAqB,UAArB,OAAO/E,CAAM,CAAC+E,EAAE,CAAe,CAC5C,IAAIrG,EAAYiP,AAtEhB,IAAI,CAsEsB6B,aAAa,CAACxP,CAAM,CAAC+E,EAAE,CAC7CrG,CAAAA,aAAqB4P,MACrB5P,CAAAA,EAAYA,EAAUyS,OAAO,EAAC,EAElCxD,AA1EA,IAAI,CA0EM/O,OAAO,CAACc,EAAE,CAACqF,EAAE,CAAGrG,CAC9B,CAER,CACJ,CACAiP,AA/EgB,IAAI,CA+EV3Q,IAAI,CAAC,CACXC,KAAM,aACN2B,QAAS+O,AAjFG,IAAI,CAiFG/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,AAnFG,IAAI,CAmFGkD,OAAO,AAC9B,EACJ,EAIAmO,EAAajjB,SAAS,CAACukB,WAAW,CAAG,SAAUC,CAAS,CAAEC,CAAS,EAC/D,IAAI7S,EAAY,IAAI,CAChB/O,EAAU+O,EAAU/O,OAAO,EAAI,EAAE,CACjCqgB,EAAYtR,EAAUsR,SAAS,CAC/Bzc,EAAKmL,EAAUhR,OAAO,CACtB6U,EAAchP,EAAGgP,WAAW,CAC5BC,EAAYjP,EAAGiP,SAAS,CACxB4N,EAAiB1R,EAAUhR,OAAO,CAAC0iB,aAAa,EAC5C1R,EAAUwS,oBAAoB,CAClCpR,EAAepB,EAAUhR,OAAO,CAACoS,YAAY,AAC7C,CAACA,GAAgBA,IAAiBsQ,GAClCtQ,CAAAA,EAAepB,EAAU8S,mBAAmB,EAAI,GAAE,EAEtD,IAAI/gB,EAAI,EAAGghB,EAAI,GAAIC,EAAQ,GAAIC,EAAe,EAAG5gB,EAAS,EACtD6gB,EAAO,SAAU9b,CAAC,EACd2b,EAAIH,CAAS,CAACxb,EAAE,AACxB,EACI+b,EAAW,SAAU7jB,CAAI,EACjBgiB,EAAU7hB,MAAM,CAAG4C,EAAS,GAC5Bif,EAAUthB,IAAI,CAAC,CAACV,EAAK,EAEzBgiB,CAAS,CAACjf,EAAO,CAACif,CAAS,CAACjf,EAAO,CAAC5C,MAAM,CAAG,EAAE,GAAKH,GACpDgiB,CAAS,CAACjf,EAAO,CAACrC,IAAI,CAACV,EAE/B,EACIU,EAAO,WACH,GAAI6T,EAAcoP,GAAgBA,EAAenP,EAAW,CAExD,EAAEmP,EACND,EAAQ,GACR,MACJ,CAuBA,GArBI,AAAiB,UAAjB,OAAOA,EACH,CAACrb,MAAMC,WAAWob,KAAWxZ,SAASwZ,IACtCA,EAAQpb,WAAWob,GACnBG,EAAS,WAEHxb,MAAMgJ,KAAK2C,KAAK,CAAC0P,IAKvBG,EAAS,WAJTH,EAAQA,EAAM/Q,OAAO,CAAC,MAAO,KAC7BkR,EAAS,SAObA,EAAS,UAETliB,EAAQxB,MAAM,CAAG4C,EAAS,GAC1BpB,EAAQjB,IAAI,CAAC,EAAE,EAIf,AAAiB,UAAjB,OAAOgjB,GACPhT,AAA+B,WAA/BA,EAAU+B,SAAS,CAACiR,IACpB5R,EAAc,CACd,IAAIgS,EAAeJ,EACnBA,EAAQA,EAAM/Q,OAAO,CAACb,EAAc,KAChCpB,AAA+B,WAA/BA,EAAU+B,SAAS,CAACiR,IACpBA,CAAAA,EAAQI,CAAW,CAE3B,CACAniB,CAAO,CAACoB,EAAO,CAACwgB,EAAU,CAAGG,EAC7BA,EAAQ,GACR,EAAE3gB,EACF,EAAE4gB,CACN,EACA,GAAKL,EAAUhQ,IAAI,GAAGnT,MAAM,EAGxBmjB,AAAwB,MAAxBA,EAAUhQ,IAAI,EAAE,CAAC,EAAE,EAGvB,KAAO7Q,EAAI6gB,EAAUnjB,MAAM,CAAEsC,IAAK,CAE9B,GADAmhB,EAAKnhB,GACDghB,AAAM,MAANA,GAEI,CAAC,+BAA+B7Q,IAAI,CAAC0Q,EAAU5J,SAAS,CAACjX,IAAK,YAE9D/B,IAKR,GAAI+iB,AAAM,MAANA,EAEA,IADAG,EAAK,EAAEnhB,GAEH,AADGA,EAAI6gB,EAAUnjB,MAAM,EACnBsjB,AAAM,MAANA,GAGJC,GAASD,EACTG,EAAK,EAAEnhB,QAGNghB,IAAMrB,EACX1hB,IAIAgjB,GAASD,CAEjB,CACA/iB,IACJ,EAOAqhB,EAAajjB,SAAS,CAACqkB,cAAc,CAAG,SAAUN,CAAK,EASnD,IAAK,IANDkB,EAFAC,EAAS,EACTC,EAAS,EAETC,EAAgB,CACZ,IAAK,EACL,IAAK,EACL,IAAM,CACV,EAAGC,EAAatB,EAAM1iB,MAAM,CACvBsC,EAAI,EAAGA,EAAI0hB,EAAY1hB,IAAK,CACjC,IAAI2hB,EAAQ,CAAA,EACRX,EAAI,KAAK,EACTY,EAAK,KAAK,EACVC,EAAK,KAAK,EACVZ,EAAQ,GAEZ,GAAIjhB,EAAI,GACJ,MAGJ,IAAK,IADD6gB,EAAYT,CAAK,CAACpgB,EAAE,CACfqF,EAAI,EAIT,AAJYA,EAAIwb,EAAUnjB,MAAM,GAChCsjB,EAAIH,CAAS,CAACxb,EAAE,CAChBuc,EAAKf,CAAS,CAACxb,EAAI,EAAE,CACrBwc,EAAKhB,CAAS,CAACxb,EAAI,EAAE,CACjB2b,AAAM,MAANA,GAJ8B3b,IAAK,CAQvC,GAAI2b,AAAM,MAANA,EACA,GAAIW,EACA,CAAA,GAAIE,AAAO,MAAPA,GAAcD,AAAO,MAAPA,EAAY,CAC1B,KAAOA,AAAO,MAAPA,GAAcvc,EAAIwb,EAAUnjB,MAAM,EACrCkkB,EAAKf,CAAS,CAAC,EAAExb,EAAE,AAKnB,AAA6B,MAAA,IAAtBoc,CAAa,CAACG,EAAG,EACxBH,CAAa,CAACG,EAAG,GAErBD,EAAQ,CAAA,CACZ,CAAA,MAGAA,EAAQ,CAAA,OAGP,AAA4B,KAAA,IAArBF,CAAa,CAACT,EAAE,EAEvBpb,MAAMgJ,KAAK2C,KAAK,CADrB0P,EAAQA,EAAMpQ,IAAI,KAITjL,CAAAA,MAAM4B,OAAOyZ,KAClB,CAACxZ,SAASD,OAAOyZ,GAAM,GACvBQ,CAAa,CAACT,EAAE,GAJhBS,CAAa,CAACT,EAAE,GAMpBC,EAAQ,IAGRA,GAASD,CAETA,AAAM,CAAA,MAANA,GACAQ,IAEAR,AAAM,MAANA,GACAO,GAER,CACJ,CAsBA,OAlBIE,CAAa,CAAC,IAAI,CAAGA,CAAa,CAAC,IAAI,CACvCH,EAAU,KAELG,CAAa,CAAC,IAAI,CAAGA,CAAa,CAAC,IAAI,CAC5CH,EAAU,KAQVC,EAASC,EACT,IAAI,CAACT,mBAAmB,CAAG,IAG3B,IAAI,CAACA,mBAAmB,CAAG,IAExBO,CACX,EAOAhC,EAAajjB,SAAS,CAACyO,QAAQ,CAAG,WAC9B,OAAOyH,GAAyBD,mBAAmB,CAAC,IAAI,CAACpT,OAAO,CAAE,IAAI,CAACiS,OAAO,CAClF,EASAmO,EAAanQ,cAAc,CAAGiQ,GAAoBA,GAAoB,CAAC,EAAG7M,GAAyBpD,cAAc,EAAG,CAAEsQ,cAAe,IAAK,GACnIH,CACX,EAAE/M,IACFA,GAAyBhT,YAAY,CAAC,MAAO+f,IAyB7C,IAAIwC,IACIhnB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAKAme,GAAqB,AAACplB,IAA+EG,KAAK,CAAEklB,GAAuB,AAACrlB,IAA+EoH,OAAO,CAW1Nke,GAA8B,SAAU5d,CAAM,EAiB9C,SAAS4d,EAAahlB,CAAO,CAAEuN,CAAU,EACrC,IAAI5I,EAAQ,IAAI,CACZsN,EAAgB6S,GAAmBE,EAAa9S,cAAc,CAC9DlS,GAOJ,MALA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,EAAe1E,IAAe,IAAI,AAAD,EACrDvN,OAAO,CAAG+kB,GAAqBxX,GACjCuX,GAAmB7S,EAAe,CAAE1E,WAAYA,CAAW,GAAK0E,EAChEA,EAAcgT,aAAa,EAC3BtgB,EAAMsL,YAAY,CAACjL,AAAkD,IAAlDA,KAAKC,GAAG,CAACgN,EAAciT,eAAe,EAAI,EAAG,IAE7DvgB,CACX,CAyFA,OApHAkgB,GAAqBG,EAAc5d,GA0CnC4d,EAAa5lB,SAAS,CAACuP,IAAI,CAAG,SAAUvN,CAAW,EAC/C,IACIyE,EADAlB,EAAQ,IAAI,CAEZsJ,EAAY,IAAI,CAChBkC,EAASlC,EAAUV,UAAU,CAC7B8B,EAAKpB,EAAUjO,OAAO,CACtBujB,EAAMlU,EAAGkU,GAAG,CACZ4B,EAAS9V,EAAG8V,MAAM,CAClBxV,EAAeN,EAAGM,YAAY,CAC9BpC,EAAa8B,EAAG9B,UAAU,CAO9B,OANAU,EAAU5N,IAAI,CAAC,CACXC,KAAM,OACNijB,IAAKA,EACL7hB,OAAQN,EACR+O,OAAQA,CACZ,GACO9O,QACFC,OAAO,CAAC6jB,EACTC,MAAMD,EAAQ,CACVE,OAAQ,MAACxf,CAAAA,EAAKoI,MAAAA,EAA6C,KAAK,EAAIA,EAAUmC,iBAAiB,AAAD,EAA+B,KAAK,EAAIvK,EAAGwf,MAAM,AACnJ,GAAGja,IAAI,CAAC,SAAUka,CAAQ,EAAI,OAAOA,EAAS1L,IAAI,EAAI,GACtD2J,GAAO,IACNnY,IAAI,CAAC,SAAUmY,CAAG,EAkBnB,OAjBIA,GACA5e,EAAMiM,cAAc,CAAC2S,EAAK,SAAU3kB,CAAG,EAGnC,IAFIiH,EACAwJ,EACArP,EAAU2E,EAAM3E,OAAO,CACvByH,EAAe8F,MAAAA,EAA+C,KAAK,EAAIA,EAAWmC,IAAI,CAAC,SAAU3P,CAAS,EAAI,OAAOA,EAAUnB,GAAG,GAAKA,CAAK,GAE5I2mB,EAAqB,CACjBC,aAAc5mB,EACdsW,gBAAiB,MAACrP,CAAAA,EAAK4B,MAAAA,EAAmD,KAAK,EAAIA,EAAayN,eAAe,AAAD,EAA+BrP,EAAK7F,EAAQkV,eAAe,CACzKmO,YAAa,MAAChU,CAAAA,EAAK5H,MAAAA,EAAmD,KAAK,EAAIA,EAAa4b,WAAW,AAAD,EAA+BhU,EAAKrP,EAAQqjB,WAAW,AACjK,EACJ,OAAO,IAlIiChB,GAkILyC,GAAmBngB,EAAM3E,OAAO,CAAEulB,GACzE,EAAG,SAAUvU,CAAS,CAAEH,CAAI,EACxBG,EAAUsD,KAAK,CAAC,CAAEiP,IAAK1S,CAAK,EAChC,GAEG5C,EACFa,kBAAkB,CAACa,EAAcpC,GACjCnC,IAAI,CAAC,WAAc,OAAOmY,CAAK,EACxC,GACKnY,IAAI,CAAC,SAAUmY,CAAG,EAOnB,OANAtV,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNijB,IAAKA,EACL7hB,OAAQN,EACR+O,OAAQA,CACZ,GACOlC,CACX,GAAG,KAAQ,CAAC,SAAU5C,CAAK,EAOvB,MANA4C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACRiK,MAAOA,EACP8E,OAAQA,CACZ,GACM9E,CACV,EACJ,EAMA2Z,EAAa9S,cAAc,CAAG,CAC1BqR,IAAK,GACL4B,OAAQ,GACRF,cAAe,CAAA,EACfC,gBAAiB,EACjBhQ,gBAAiB,CAAA,CACrB,EACO8P,CACX,EAAE9T,IACFA,GAAyB5O,YAAY,CAAC,MAAO0iB,IAsB7C,IAAIS,IACI5nB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAEA+e,GAA4D,WAS5D,MAAOA,AARPA,CAAAA,GAAuB5mB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EAC9C,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EAC4BnI,KAAK,CAAC,IAAI,CAAEjB,UAC5C,EAIIwI,GAAQ,AAAC3L,IAA+E2L,KAAK,CAAE9H,GAAU,AAAC7D,IAA+E6D,OAAO,CAAEoiB,GAAsB,AAACjmB,IAA+EG,KAAK,CAAE+lB,GAA2B,AAAClmB,IAA+E8E,UAAU,CAWpaqhB,GAA+B,SAAUze,CAAM,EAa/C,SAASye,EAAc7lB,CAAO,EAC1B,IAAI2E,EAAQ,IAAI,CACZsN,EAAgB0T,GAAoBE,EAAc3T,cAAc,CAChElS,GAWJ,MAJA2E,AANAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,IAAkB,IAAI,AAAD,EAMzChQ,OAAO,CAAG,EAAE,CAClB0C,EAAMuP,OAAO,CAAG,EAAE,CAClBvP,EAAM3E,OAAO,CAAGiS,EAChBtN,EAAMxD,KAAK,CAAG,IArkK6BgG,EAskKpCxC,CACX,CAiIA,OA5JA8gB,GAAsBI,EAAeze,GA6CrCye,EAAczmB,SAAS,CAACkV,KAAK,CAAG,SAAUtU,CAAO,CAAEoB,CAAW,EAC1D,IAAI4P,EAAY,IAAI,CAEhBqS,EAAcrjB,AADlBA,CAAAA,EAAU2lB,GAAoB3U,EAAUhR,OAAO,CAAEA,EAAO,EAC9BqjB,WAAW,CACjCyC,EAAc9lB,EAAQ8lB,WAAW,CACjC5Q,EAAkBlV,EAAQkV,eAAe,CACzC1P,EAAcxF,EAAQwF,WAAW,CACjCqL,EAAO7Q,EAAQ6Q,IAAI,CACvB,GAAKA,GAcL,GAXAG,EAAU/O,OAAO,CAAG,EAAE,CACtB+O,EAAU3Q,IAAI,CAAC,CACXC,KAAM,QACN2B,QAAS+O,EAAU/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,EAAUkD,OAAO,AAC9B,GACImP,GACAxS,CAAAA,EAAOwS,EAAYxS,EAAI,EAE3BA,EAAOA,EAAK3N,KAAK,GACb4iB,AAAgB,YAAhBA,EACA,IAAK,IAAI/iB,EAAI,EAAGwE,EAAOsJ,EAAKpQ,MAAM,CAAEsC,EAAIwE,EAAMxE,IAAK,CAC/C,IAAIuZ,EAAOzL,CAAI,CAAC9N,EAAE,CAClB,GAAI,CAAEuZ,CAAAA,aAAgBrZ,KAAI,EACtB,MAEA+N,CAAAA,EAAUkD,OAAO,YAAYjR,OACzBiS,EACAlE,EAAUkD,OAAO,CAAClT,IAAI,CAAC,GAAGmC,MAAM,CAACmZ,EAAKyJ,KAAK,KAEtCvgB,GAAeA,aAAuBvC,OAC3C+N,EAAUkD,OAAO,CAAClT,IAAI,CAACwE,CAAW,CAACzC,EAAE,EAEzCiO,EAAU7P,KAAK,CAAC2E,SAAS,CAACkL,EAAUkD,OAAO,CAACnR,EAAE,EAAIA,EAAEijB,QAAQ,GAAI1J,IAGhEjR,GAAM,+CAAgD,CAAA,EAE9D,MAEC,GAAIya,AAAgB,SAAhBA,EAAwB,CACzB5Q,EACAlE,EAAUkD,OAAO,CAAGrD,EAAKkV,KAAK,GAEzBvgB,GACLwL,CAAAA,EAAUkD,OAAO,CAAG1O,CAAU,EAmClC,IAAK,IADDygB,EAAS,IAAI,CACRnkB,EAAW,EAAGyF,EAAOsJ,EAAKpQ,MAAM,CAAEqB,EAAWyF,EAAMzF,KACxDsN,AAlCU,SAAUtN,CAAQ,CAC5ByF,CAAI,EACA,IAAIrB,EAAM2K,CAAI,CAAC/O,EAAS,CAC5B,GAAIyB,GAAQ2C,GACR,IAAK,IAAI6c,EAAc,EAAG1a,EAAOnC,EAAIzF,MAAM,CAAEsiB,EAAc1a,EAAM0a,IACzD/R,EAAU/O,OAAO,CAACxB,MAAM,CAAGsiB,EAAc,GACzC/R,EAAU/O,OAAO,CAACjB,IAAI,CAAC,EAAE,EAE7BgQ,EAAU/O,OAAO,CAAC8gB,EAAY,CAAC/hB,IAAI,CAACkF,CAAG,CAAC6c,EAAY,EAChD/R,EAAUkD,OAAO,YAAYjR,MAC7BgjB,EAAO9kB,KAAK,CAAC2E,SAAS,CAACkL,EAAUkD,OAAO,CAAC6O,EAAY,EACjDA,EAAYiD,QAAQ,GAAIhV,EAAU/O,OAAO,CAAC8gB,EAAY,EAG1D1X,GAAM,+CAAgD,CAAA,OAI7D,CACD,IAAInB,EAAgB8G,EAAUkD,OAAO,CACrC,GAAIhK,GAAiB,CAAEA,CAAAA,aAAyBjH,KAAI,EAAI,CACpD,IAAIijB,EAAW,CAAC,EAChBN,GAAyB1b,EAAe,SAAUic,CAAa,CAAEpY,CAAI,EACjEmY,CAAQ,CAACnY,EAAK,CAAGoY,EAAczgB,MAAM,CAAC,SAAU0gB,CAAG,CAAExnB,CAAG,EACpD,OAAOwnB,CAAG,CAACxnB,EAAI,AACnB,EAAGsH,EACP,GACAA,EAAMggB,CACV,CACAD,EAAO9kB,KAAK,CAACuK,OAAO,CAAC,CAACxF,EAAI,CAAEpE,EAChC,CACJ,EAGYA,EAAUyF,EAE1B,CACAyJ,EAAU3Q,IAAI,CAAC,CACXC,KAAM,aACN2B,QAAS+O,EAAU/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,EAAUkD,OAAO,AAC9B,GACJ,EAOA2R,EAAczmB,SAAS,CAACyO,QAAQ,CAAG,WAC/B,OAAO,IAAI,CAAC1M,KAAK,AACrB,EASA0kB,EAAc3T,cAAc,CAAGwT,GAAqBA,GAAqB,CAAC,EAAGpQ,GAAyBpD,cAAc,EAAG,CAAE4T,YAAa,MAAO,GACtID,CACX,EAAEvQ,IACFA,GAAyBhT,YAAY,CAAC,OAAQujB,IAsB9C,IAAIQ,IACIxoB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAKA2f,GAAsB,AAAC5mB,IAA+EG,KAAK,CAAE0mB,GAAwB,AAAC7mB,IAA+EoH,OAAO,CAW5N0f,GAA+B,SAAUpf,CAAM,EAgB/C,SAASof,EAAcxmB,CAAO,CAAEuN,CAAU,EACtC,IAAI5I,EAAQ,IAAI,CACZsN,EAAgBqU,GAAoBE,EAActU,cAAc,CAChElS,GAOJ,MALA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,EAAe1E,IAAe,IAAI,AAAD,EACrDvN,OAAO,CAAGumB,GAAsBhZ,GAClC+Y,GAAoBrU,EAAe,CAAE1E,WAAYA,CAAW,GAAK0E,EACjEA,EAAcgT,aAAa,EAC3BtgB,EAAMsL,YAAY,CAACjL,AAAkD,IAAlDA,KAAKC,GAAG,CAACgN,EAAciT,eAAe,EAAI,EAAG,IAE7DvgB,CACX,CAmGA,OA7HA0hB,GAAsBG,EAAepf,GAyCrCof,EAAcpnB,SAAS,CAACuP,IAAI,CAAG,SAAUvN,CAAW,EAChD,IACIyE,EADAlB,EAAQ,IAAI,CAEZsJ,EAAY,IAAI,CAChBkC,EAASlC,EAAUV,UAAU,CAC7B8B,EAAKpB,EAAUjO,OAAO,CACtB6Q,EAAOxB,EAAGwB,IAAI,CACd4V,EAAUpX,EAAGoX,OAAO,CACpB9W,EAAeN,EAAGM,YAAY,CAC9BpC,EAAa8B,EAAG9B,UAAU,CAO9B,OANAU,EAAU5N,IAAI,CAAC,CACXC,KAAM,OACNuQ,KAAMA,EACNnP,OAAQN,EACR+O,OAAQA,CACZ,GACO9O,QACFC,OAAO,CAACmlB,EACTrB,MAAMqB,EAAS,CACXpB,OAAQ,MAACxf,CAAAA,EAAKoI,MAAAA,EAA6C,KAAK,EAAIA,EAAUmC,iBAAiB,AAAD,EAA+B,KAAK,EAAIvK,EAAGwf,MAAM,AACnJ,GAAGja,IAAI,CAAC,SAAUka,CAAQ,EAAI,OAAOA,EAASoB,IAAI,EAAI,GAAG,KAAQ,CAAC,SAAUrb,CAAK,EAC7E4C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACRiK,MAAOA,EACP8E,OAAQA,CACZ,GACAwW,QAAQC,IAAI,CAAC,6BAA6BzjB,MAAM,CAACsjB,EAAS,KAC9D,GACA5V,GAAQ,EAAE,EACTzF,IAAI,CAAC,SAAUyF,CAAI,EAsBpB,OArBIA,GACAlM,EAAMiM,cAAc,CAACC,EAAM,SAAUjS,CAAG,EAKpC,IAJIiH,EACAwJ,EACAC,EACAG,EACAzP,EAAU2E,EAAM3E,OAAO,CACvByH,EAAe8F,MAAAA,EAA+C,KAAK,EAAIA,EAAWmC,IAAI,CAAC,SAAU3P,CAAS,EAAI,OAAOA,EAAUnB,GAAG,GAAKA,CAAK,GAE5I2mB,EAAqB,CACjBC,aAAc5mB,EACd4G,YAAa,MAACK,CAAAA,EAAK4B,MAAAA,EAAmD,KAAK,EAAIA,EAAajC,WAAW,AAAD,EAA+BK,EAAK7F,EAAQwF,WAAW,CAC7J0P,gBAAiB,MAAC7F,CAAAA,EAAK5H,MAAAA,EAAmD,KAAK,EAAIA,EAAayN,eAAe,AAAD,EAA+B7F,EAAKrP,EAAQkV,eAAe,CACzK4Q,YAAa,MAACxW,CAAAA,EAAK7H,MAAAA,EAAmD,KAAK,EAAIA,EAAaqe,WAAW,AAAD,EAA+BxW,EAAKtP,EAAQ8lB,WAAW,CAC7JzC,YAAa,MAAC5T,CAAAA,EAAKhI,MAAAA,EAAmD,KAAK,EAAIA,EAAa4b,WAAW,AAAD,EAA+B5T,EAAKzP,EAAQqjB,WAAW,AACjK,EACJ,OAAO,IA1IkCwC,GA0ILS,GAAoB3hB,EAAM3E,OAAO,CAAEulB,GAC3E,EAAG,SAAUvU,CAAS,CAAEH,CAAI,EACxBG,EAAUsD,KAAK,CAAC,CAAEzD,KAAMA,CAAK,EACjC,GAEG5C,EAAUa,kBAAkB,CAACa,EAAcpC,GAC7CnC,IAAI,CAAC,WAAc,OAAOyF,CAAM,EACzC,GACKzF,IAAI,CAAC,SAAUyF,CAAI,EAOpB,OANA5C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNuQ,KAAMA,EACNnP,OAAQN,EACR+O,OAAQA,CACZ,GACOlC,CACX,GAAG,KAAQ,CAAC,SAAU5C,CAAK,EAOvB,MANA4C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACRiK,MAAOA,EACP8E,OAAQA,CACZ,GACM9E,CACV,EACJ,EAMAmb,EAActU,cAAc,CAAG,CAC3B+S,cAAe,CAAA,EACfC,gBAAiB,EACjBhQ,gBAAiB,CAAA,EACjB4Q,YAAa,MACjB,EACOU,CACX,EAAEtV,IACFA,GAAyB5O,YAAY,CAAC,OAAQkkB,IAyB9C,IAAIK,IACIhpB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAEAmgB,GAAoE,WASpE,MAAOA,AARPA,CAAAA,GAA+BhoB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EACtD,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EACoCnI,KAAK,CAAC,IAAI,CAAEjB,UACpD,EAGIkkB,GAA8B,AAACrnB,IAA+EG,KAAK,CAAEmnB,GAAkC,AAACtnB,IAA+E+E,SAAS,CAWhPwiB,GAAuC,SAAU7f,CAAM,EAavD,SAAS6f,EAAsBjnB,CAAO,EAClC,IAAI2E,EAAQ,IAAI,CACZsN,EAAgB8U,GAA4BE,EAAsB/U,cAAc,CAChFlS,GAKJ,MAHA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,IAAkB,IAAI,AAAD,EACzChQ,OAAO,CAAG,EAAE,CAClB0C,EAAMuiB,MAAM,CAAG,EAAE,CACjBviB,EAAM3E,OAAO,CAAGiS,EACTtN,CACX,CAmFA,OAxGAkiB,GAA8BI,EAAuB7f,GAuCrD6f,EAAsB7nB,SAAS,CAACkV,KAAK,CAAG,SAAUtU,CAAO,CAAEoB,CAAW,EAElE,IADIyE,EAsBAxC,EApBA8jB,EAAeJ,GAA4B/V,AAD/B,IAAI,CACqChR,OAAO,CAC5DA,GACAiC,EAAU,AAAC,CAAA,AAAC,CAAA,MAAC4D,CAAAA,EAAKshB,EAAaT,IAAI,AAAD,EAA+B,KAAK,EAAI7gB,EAAG2I,MAAM,AAAD,GAAM,EAAE,AAAD,EAAG5I,GAAG,CAAC,SAAUvC,CAAM,EAAI,OAAOA,EAAOH,KAAK,EAAI,GAC/I,GAAIjB,AAAmB,IAAnBA,EAAQxB,MAAM,CACd,MAAO,CAAA,CAEXuQ,CAPgB,IAAI,CAOVkW,MAAM,CAAG,EAAE,CACrBlW,AARgB,IAAI,CAQV/O,OAAO,CAAG,EAAE,CACtB+O,AATgB,IAAI,CASV3Q,IAAI,CAAC,CACXC,KAAM,QACN2B,QAAS+O,AAXG,IAAI,CAWG/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,AAbG,IAAI,CAaGkW,MAAM,AAC7B,GAEA,IAAI7D,EAAc8D,EAAa9D,WAAW,CACtCqD,EAAOS,EAAaT,IAAI,AACxBrD,CAAAA,GAAeqD,GACfzkB,CAAAA,EAAUohB,EAAYqD,EAAKlY,MAAM,CAAA,EAGrCwC,AAtBgB,IAAI,CAsBV/O,OAAO,CAAGA,EACpB,IAAK,IAAIc,EAAI,EAAGwE,EAAOtF,EAAQxB,MAAM,CAAEsC,EAAIwE,EAAMxE,IAAK,CAClDM,EAASpB,CAAO,CAACc,EAAE,CACnBiO,AAzBY,IAAI,CAyBNkW,MAAM,CAACnkB,EAAE,CAAIokB,EAAajS,eAAe,CAC/C,GAAG/R,MAAM,CAACE,EAAO0iB,KAAK,IACtBiB,KACJ,IAAK,IAAI5e,EAAI,EAAGC,EAAOhF,EAAO5C,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EAC9C,GAAI/E,CAAM,CAAC+E,EAAE,EAAI,AAAqB,UAArB,OAAO/E,CAAM,CAAC+E,EAAE,CAAe,CAC5C,IAAIrG,EAAYiP,AA9BZ,IAAI,CA8BkB6B,aAAa,CAACxP,CAAM,CAAC+E,EAAE,CAC7CrG,CAAAA,aAAqB4P,MACrB5P,CAAAA,EAAYA,EAAUyS,OAAO,EAAC,EAElCxD,AAlCI,IAAI,CAkCE/O,OAAO,CAACc,EAAE,CAACqF,EAAE,CAAGrG,CAC9B,CAER,CACAiP,AAtCgB,IAAI,CAsCV3Q,IAAI,CAAC,CACXC,KAAM,aACN2B,QAAS+O,AAxCG,IAAI,CAwCG/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,AA1CG,IAAI,CA0CGkW,MAAM,AAC7B,EACJ,EAOAD,EAAsB7nB,SAAS,CAACyO,QAAQ,CAAG,WACvC,OAAOyH,GAAyBD,mBAAmB,CAAC,IAAI,CAACpT,OAAO,CAAE,IAAI,CAACilB,MAAM,CACjF,EASAD,EAAsB/U,cAAc,CAAG4U,GAA6B,CAAC,EAAGxR,GAAyBpD,cAAc,EACxG+U,CACX,EAAE3R,IACFA,GAAyBhT,YAAY,CAAC,eAAgB2kB,IA0BtD,IAAIG,IACIvpB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAKA0gB,GAA8B,AAAC3nB,IAA+EG,KAAK,CAAEynB,GAA6B,AAAC5nB,IAA+E4N,IAAI,CAAEia,GAAgC,AAAC7nB,IAA+EoH,OAAO,CA0B/V0gB,GAAuC,SAAUpgB,CAAM,EAiBvD,SAASogB,EAAsBxnB,CAAO,CAAEuN,CAAU,EAC9C,IAAI5I,EAAQ,IAAI,CACZsN,EAAgBoV,GAA4BG,EAAsBtV,cAAc,CAChFlS,GAIJ,MAFA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,EAAe1E,IAAe,IAAI,AAAD,EACrDvN,OAAO,CAAGunB,GAA8Bha,GAC1C8Z,GAA4BpV,EAAe,CAAE1E,WAAYA,CAAW,GAAK0E,EACtEtN,CACX,CAgGA,OAxHAyiB,GAA8BI,EAAuBpgB,GAuCrDogB,EAAsBpoB,SAAS,CAACuP,IAAI,CAAG,SAAUvN,CAAW,EACxD,IACIyE,EADAlB,EAAQ,IAAI,CAEZsJ,EAAY,IAAI,CAChBkC,EAASlC,EAAUV,UAAU,CAC7B8B,EAAKpB,EAAUjO,OAAO,CACtB2P,EAAeN,EAAGM,YAAY,CAC9BuV,EAAkB7V,EAAG6V,eAAe,CACpCD,EAAgB5V,EAAG4V,aAAa,CAChCwC,EAAepY,EAAGoY,YAAY,CAC9BC,EAAuBrY,EAAGqY,oBAAoB,CAC9Cna,EAAa8B,EAAG9B,UAAU,CAC1Boa,EAAMH,EAAsBI,aAAa,CAACH,EAC1CC,EACAzZ,EAAUjO,OAAO,EAOrB,GANAiO,EAAU5N,IAAI,CAAC,CACXC,KAAM,OACNoB,OAAQN,EACR+O,OAAQA,EACRwX,IAAKA,CACT,GACI,CAACE,IAAIC,QAAQ,CAACH,GACd,MAAM,AAAIhmB,MAAM,gBAAkBgmB,GAEtC,OAAOvC,MAAMuC,EAAK,CAAEtC,OAAQ,MAACxf,CAAAA,EAAKoI,MAAAA,EAA6C,KAAK,EAAIA,EAAUmC,iBAAiB,AAAD,EAA+B,KAAK,EAAIvK,EAAGwf,MAAM,AAAC,GAC/Jja,IAAI,CAAC,SAAUka,CAAQ,EAAI,OAAQA,EAASoB,IAAI,EAAK,GACrDtb,IAAI,CAAC,SAAUsb,CAAI,EACpB,GAlFA,AAAgB,UAAhB,OAkFkBA,GAAAA,GAjFtB,AAAsB,UAAtB,OAAOA,AAiFeA,EAjFVrb,KAAK,EAAiBqb,AAiFZA,EAjFiBrb,KAAK,EAC5C,AAA2B,UAA3B,OAAOqb,AAgFeA,EAhFVrb,KAAK,CAACyQ,IAAI,EACtB,AAA8B,UAA9B,OAAO4K,AA+EeA,EA/EVrb,KAAK,CAAC0c,OAAO,EACzB,AAA6B,UAA7B,OAAOrB,AA8EeA,EA9EVrb,KAAK,CAAC2c,MAAM,CA+EhB,MAAM,AAAIrmB,MAAM+kB,EAAKrb,KAAK,CAAC0c,OAAO,EAiBtC,OAfApjB,EAAMiM,cAAc,CAAC8V,EAAM,SAAU9nB,CAAG,EAGpC,IAFIiH,EACAwJ,EACArP,EAAU2E,EAAM3E,OAAO,CACvByH,EAAe8F,MAAAA,EAA+C,KAAK,EAAIA,EAAWmC,IAAI,CAAC,SAAU3P,CAAS,EAAI,OAAOA,EAAUnB,GAAG,GAAKA,CAAK,GAE5I2mB,EAAqB,CACjBC,aAAc5mB,EACdsW,gBAAiB,MAACrP,CAAAA,EAAK4B,MAAAA,EAAmD,KAAK,EAAIA,EAAayN,eAAe,AAAD,EAA+BrP,EAAK7F,EAAQkV,eAAe,CACzKmO,YAAa,MAAChU,CAAAA,EAAK5H,MAAAA,EAAmD,KAAK,EAAIA,EAAa4b,WAAW,AAAD,EAA+BhU,EAAKrP,EAAQqjB,WAAW,AACjK,EACJ,OAAO,IArJ8C4D,GAqJTI,GAA4B1iB,EAAM3E,OAAO,CAAEulB,GAC3F,EAAG,SAAUvU,CAAS,CAAEH,CAAI,EACxBG,EAAUsD,KAAK,CAAC,CAAEoS,KAAM7V,CAAK,EACjC,GACO5C,EAAUa,kBAAkB,CAACa,EAAcpC,EACtD,GACKnC,IAAI,CAAC,WAWN,OAVA6C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACR+O,OAAQA,EACRwX,IAAKA,CACT,GAEI1C,GACA1U,WAAW,WAAc,OAAOtC,EAAUU,IAAI,EAAI,EAAG3J,AAAoC,IAApCA,KAAKC,GAAG,CAACigB,GAAmB,EAAG,IAEjFjX,CACX,GAAG,KAAQ,CAAC,SAAU5C,CAAK,EAOvB,MANA4C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACRiK,MAAOA,EACP8E,OAAQA,CACZ,GACM9E,CACV,EACJ,EAMAmc,EAAsBtV,cAAc,CAAG,CACnCuV,aAAc,GACdC,qBAAsB,GACtBzC,cAAe,CAAA,EACfC,gBAAiB,EACjBhQ,gBAAiB,CAAA,CACrB,EACOsS,CACX,EAAEtW,IAMSsW,GA2DRA,IAA0BA,CAAAA,GAAwB,CAAC,CAAA,EAhD9CS,GAAW,6BAgCf,SAASC,GAAgBloB,CAAO,EACxBA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAI8U,EAAY9U,EAAQ8U,SAAS,CAC7BG,EAASjV,EAAQiV,MAAM,CACvBkT,EAAyBnoB,EAAQmoB,sBAAsB,CACvDtT,EAAc7U,EAAQ6U,WAAW,CACjCG,EAAWhV,EAAQgV,QAAQ,CAC/B,OAAOmT,GAA2B,AAACF,CAAAA,EAAQ,CAACpT,GAAe,EAAE,EAAI,GAAE,EAC9D7P,CAAAA,KAAKC,GAAG,CAAE+P,GAAY,EAAI,GAAK,CAAA,EAChC,IACCiT,CAAAA,EAAQ,CAACX,GAA2BxS,EAAW,IAAI,EAAI,GAAE,EACzDG,CAAAA,EACGjQ,KAAKC,GAAG,CAACgQ,EAAQ,GACjB,GAAE,CACd,CAnBAuS,GAAsBI,aAAa,CAjBnC,SAAuBQ,CAAM,CAAEC,CAAQ,CAAEroB,CAAO,EACxCA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAI2nB,EAAM,IAAIE,IAAI,iDAAiD1kB,MAAM,CAACklB,EAAU,aAChFvR,EAAQ9W,EAAQsoB,eAAe,CAC3B,QAAUJ,GAAgBloB,EAClC2nB,CAAAA,EAAIY,QAAQ,EAAIzR,EAChB,IAAI0R,EAAeb,EAAIa,YAAY,CASnC,OARAA,EAAapkB,GAAG,CAAC,MAAO,QACnBpE,EAAQsoB,eAAe,GACxBE,EAAapkB,GAAG,CAAC,uBAAwB,oBACzCokB,EAAapkB,GAAG,CAAC,iBAAkB,WACnCokB,EAAapkB,GAAG,CAAC,oBAAqB,sBAE1CokB,EAAapkB,GAAG,CAAC,cAAe,SAChCokB,EAAapkB,GAAG,CAAC,MAAOgkB,GACjBT,EAAIc,IAAI,AACnB,EAqBAjB,GAAsBU,eAAe,CAAGA,GAE5ChX,GAAyB5O,YAAY,CAAC,eAAgBklB,IAyBtD,IAAIkB,IACI7qB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAEAgiB,GAAiE,WASjE,MAAOA,AARPA,CAAAA,GAA4B7pB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EACnD,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EACiCnI,KAAK,CAAC,IAAI,CAAEjB,UACjD,EAGI+lB,GAA2B,AAAClpB,IAA+EG,KAAK,CAiChHgpB,GAAoC,SAAUzhB,CAAM,EAapD,SAASyhB,EAAmB7oB,CAAO,EAC/B,IAAI2E,EAAQ,IAAI,CACZsN,EAAgB2W,GAAyBC,EAAmB3W,cAAc,CAC1ElS,GASJ,MAPA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,IAAkB,IAAI,AAAD,EACzChQ,OAAO,CAAG,EAAE,CAClB0C,EAAMuP,OAAO,CAAG,EAAE,CAClBvP,EAAM3E,OAAO,CAAGiS,EACZA,EAAc6W,YAAY,GAC1BnkB,EAAMmkB,YAAY,CAAG7W,EAAc6W,YAAY,CAC/CnkB,EAAMokB,cAAc,CAAG9W,EAAc6W,YAAY,CAACjkB,EAAE,EAEjDF,CACX,CA6TA,OAtVA+jB,GAA2BG,EAAoBzhB,GA4C/CyhB,EAAmBzpB,SAAS,CAAC6U,MAAM,CAAG,SAAUhG,CAAS,CAAEjO,CAAO,EAC1DA,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,IAAI,CAACA,OAAO,AAAD,EAC/C,IAAIyiB,EAAeziB,AAA4B,CAAA,IAA5BA,EAAQkV,eAAe,CACtC8T,EAAuBhpB,EAAQgpB,oBAAoB,CACnD/mB,EAAUgM,EAAUQ,gBAAgB,CAACzO,EAAQ0O,oBAAoB,EACjElJ,EAAc1G,OAAO2G,IAAI,CAACxD,GAC1BgnB,EAAW,EAAE,CACbpG,EAAerd,EAAY/E,MAAM,CACjCqiB,EAAW,EAAE,CACboG,EAAY,GAEhB,GAAIzG,EAAa,CACb,IAAI0G,EAAgB,EAAE,CAGtB,GAAIH,EAAsB,CACtB,IAAK,IAAI/e,EAAK,EAAgCA,EAAKC,AAAlB1E,EAAgC/E,MAAM,CAAEwJ,IAAM,CAC3E,IAAImf,EAASlf,AADgB1E,CACH,CAACyE,EAAG,CAC1B5G,EAASpB,CAAO,CAACmnB,EAAO,AACxB,CAACnmB,MAAMM,OAAO,CAACF,IAGfA,CAAAA,EAASJ,MAAMN,IAAI,CAACU,EAAM,EAE9B,IAAIgmB,EAAU,AAAChmB,CAAAA,EAAO0iB,KAAK,IAAM,EAAC,EAAGC,QAAQ,EAC7C/jB,CAAAA,CAAO,CAACmnB,EAAO,CAAG/lB,EAClB8lB,EAAcnoB,IAAI,CAACqoB,EACvB,CACAH,EAAY,IAAI,CAACI,kBAAkB,CAAC9jB,EAAa2jB,EAAenpB,EACpE,MAEIkpB,EAAY,IAAI,CAACI,kBAAkB,CAAC,KAAK,EAAG9jB,EAAaxF,EAEjE,CACA,IAAK,IAAI+iB,EAAc,EAAGA,EAAcF,EAAcE,IAIlD,IAAK,IAFD1f,EAASpB,CAAO,CADHuD,CAAW,CAACud,EAAY,CACT,CAC5B/Z,EAAe3F,EAAO5C,MAAM,CACvBqB,EAAW,EAAGA,EAAWkH,EAAclH,IAAY,CACxD,IAAIC,EAAYsB,CAAM,CAACvB,EAAS,AAC5B,AAACghB,CAAAA,CAAQ,CAAChhB,EAAS,EACnBghB,CAAAA,CAAQ,CAAChhB,EAAS,CAAG,EAAE,AAAD,EAIpB,AAAqB,UAArB,OAAOC,GACT,AAAqB,UAArB,OAAOA,GACP,AAAqB,KAAA,IAAdA,GACPA,CAAAA,EAAY,AAACA,CAAAA,GAAa,EAAC,EAAGikB,QAAQ,EAAC,EAE3ClD,CAAQ,CAAChhB,EAAS,CAACihB,EAAY,CAAG,IAAI,CAACwG,oBAAoB,CAACxG,EAAc,KAAO,KAAM,KAAMA,EAAc,GAAK,cAAehhB,GAE3HghB,IAAgBF,EAAe,GAC/BoG,EAASjoB,IAAI,CAAC,OACV8hB,CAAQ,CAAChhB,EAAS,CAACiS,IAAI,CAAC,IACxB,QAEZ,CAEJ,IAAIyV,EAAU,GASd,OALIxpB,EAAQypB,YAAY,EACpBD,CAAAA,EAAU,6CACNxpB,EAAQypB,YAAY,CACpB,YAAW,EAEX,UACJD,EACAN,EACA,UACAD,EAASlV,IAAI,CAAC,IAJV,kBAOZ,EAIA8U,EAAmBzpB,SAAS,CAACmqB,oBAAoB,CAAG,SAAUG,CAAG,CAAEC,CAAO,CAAEC,CAAK,CAAE3c,CAAK,CAAEmF,CAAY,EAClG,IAAIyX,EAAM5c,EACN6c,EAAY,OAAUH,CAAAA,EAAU,IAAMA,EAAU,EAAC,EAarD,MAXI,AAAe,UAAf,OAAOE,GACPA,EAAMA,EAAI7D,QAAQ,GACd5T,AAAiB,MAAjBA,GACAyX,CAAAA,EAAMA,EAAI5W,OAAO,CAAC,IAAKb,EAAY,EAEvC0X,EAAY,UAEN7c,IACN4c,EAAM,GACNC,EAAY,SAET,IAAMJ,EAAOE,CAAAA,EAAQ,IAAMA,EAAQ,EAAC,EACvC,WAAaE,EAAY,KACzBD,EAAM,KAAOH,EAAM,GAC3B,EAIAb,EAAmBzpB,SAAS,CAACkqB,kBAAkB,CAAG,SAAUS,CAAU,CAAEC,CAAU,CAAEhqB,CAAO,EACnF+pB,AAAe,KAAK,IAApBA,GAAyBA,CAAAA,EAAa,EAAE,AAAD,EACvCC,AAAe,KAAK,IAApBA,GAAyBA,CAAAA,EAAa,EAAE,AAAD,EACvChqB,AAAY,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,IAAI,CAACA,OAAO,AAAD,EAC/C,IAMIiqB,EAEAC,EARAlB,EAAuBhpB,EAAQgpB,oBAAoB,CACnDmB,EAAoBnqB,EAAQmqB,iBAAiB,CAC7CC,EAAO,UACPrnB,EAAI,EACJsnB,EAAML,GAAcA,EAAWvpB,MAAM,CAGrC6pB,EAAa,EAMjB,GAAItB,GACAe,GACAC,GACA,CAACO,AA9Lb,SAAoBC,CAAI,CAAEC,CAAI,EAC1B,IAAI1nB,EAAIynB,EAAK/pB,MAAM,CACnB,GAAIgqB,EAAKhqB,MAAM,GAAKsC,EAQhB,MAAO,CAAA,EAPP,KAAO,EAAEA,GACL,GAAIynB,CAAI,CAACznB,EAAE,GAAK0nB,CAAI,CAAC1nB,EAAE,CACnB,MAAO,CAAA,EAOnB,MAAO,CAAA,CACX,EAiLwBgnB,EAAYC,GAAa,CAErC,IADAI,GAAQ,OACDrnB,EAAIsnB,EAAK,EAAEtnB,EAGVknB,AAFJA,CAAAA,EAAMF,CAAU,CAAChnB,EAAE,AAAD,IACXgnB,CAAU,CAAChnB,EAAI,EAAE,CAEpB,EAAEunB,EAEGA,GAGLF,GAAQ,IAAI,CAACb,oBAAoB,CAAC,KAAM,8BAA+B,wBACpDe,CAAAA,EAAa,CAAA,EAAK,IAAKL,GAC1CK,EAAa,IAKTL,IAAQD,CAAU,CAACjnB,EAAE,CACjBonB,GACAD,EAAU,EACVF,EAAWxmB,MAAM,CAACT,EAAG,KAGrBmnB,EAAU,EACVF,CAAU,CAACjnB,EAAE,CAAG,IAIpBmnB,EAAU,EAEdE,GAAQ,IAAI,CAACb,oBAAoB,CAAC,KAAM,8BAA+B,cAClEW,CAAAA,EAAU,EACP,0BAA4BA,EAAU,IACtC,EAAC,EAAID,IAGrBG,GAAQ,OACZ,CAEA,GAAIJ,EAAY,CAEZ,IAAKjnB,AADLqnB,GAAQ,OACHrnB,EAAI,EAAGsnB,EAAML,EAAWvpB,MAAM,CAAEsC,EAAIsnB,EAAK,EAAEtnB,EACxC,AAAyB,KAAA,IAAlBinB,CAAU,CAACjnB,EAAE,EACpBqnB,CAAAA,GAAQ,IAAI,CAACb,oBAAoB,CAAC,KAAM,KAAM,cAAeS,CAAU,CAACjnB,EAAE,CAAA,EAGlFqnB,GAAQ,OACZ,CAEA,OADAA,EAAQ,UAEZ,EAcAvB,EAAmBzpB,SAAS,CAACkV,KAAK,CAAG,SAAUtU,CAAO,CAAEoB,CAAW,EAC/D,IACIa,EAAU,EAAE,CACZiS,EAAU,EAAE,CACZiT,EAAeyB,GAAyB5X,AAH5B,IAAI,CAGkChR,OAAO,CACzDA,GACAiV,EAASkS,EAAalS,MAAM,CAC5BJ,EAAcsS,EAAatS,WAAW,CACtCC,EAAYqS,EAAarS,SAAS,CAClCI,EAAkBiS,EAAajS,eAAe,CAC9CwV,EAAYvD,EAAa2B,YAAY,EAAI,IAAI,CAACA,YAAY,CAC9D,GAAI,CAAE4B,CAAAA,aAAqBC,WAAU,EAAI,YACrC3Z,AAXY,IAAI,CAWN3Q,IAAI,CAAC,CACXC,KAAM,aACN2B,QAASA,EACTP,OAAQN,EACR8S,QAASA,EACT7I,MAAO,wBACX,EAGJ2F,CApBgB,IAAI,CAoBV8X,YAAY,CAAG4B,EACzB1Z,AArBgB,IAAI,CAqBV+X,cAAc,CAAG2B,EAAU7lB,EAAE,CACvC,IAAI,CAACxE,IAAI,CAAC,CACNC,KAAM,QACN2B,QAAS+O,AAxBG,IAAI,CAwBG/O,OAAO,CAC1BP,OAAQN,EACR8S,QAASlD,AA1BG,IAAI,CA0BGkD,OAAO,AAC9B,GACA,IAGIoI,EAHAna,EAAOuoB,EAAUE,oBAAoB,CAAC,MACtCC,EAAY1oB,EAAK1B,MAAM,CACvBqB,EAAW,EAEXkT,EAAWmS,EAAanS,QAAQ,CAEpC,GAAIE,GAAmB2V,EAAW,CAG9B,IAAK,IAFDjnB,EAAQzB,CAAI,CAAC,EAAE,CAAC2oB,QAAQ,CACxBC,EAAcnnB,EAAMnD,MAAM,CACrBsC,EAAI8R,EACT,AADsB9R,EAAIgoB,IACtBhoB,CAAAA,EAAI+R,CAAQ,EADuB/R,IAKnCuZ,CAAAA,AAAiB,OAAjBA,AADJA,CAAAA,EAAO1Y,CAAK,CAACb,EAAE,AAAD,EACLioB,OAAO,EACZ1O,AAAiB,OAAjBA,EAAK0O,OAAO,AAAQ,GACpB9W,EAAQlT,IAAI,CAACsb,EAAK2O,SAAS,CAGnCjW,CAAAA,GACJ,CACA,KAAOlT,EAAW+oB,GAAW,CACzB,GAAI/oB,GAAYkT,GAAYlT,GAAYmT,EAIpC,IAHA,IAAIiW,EAAe/oB,CAAI,CAACL,EAAS,CAACgpB,QAAQ,CACtCK,EAAqBD,EAAazqB,MAAM,CACxCsiB,EAAc,EACXA,EAAcoI,GAAoB,CACrC,IAAIC,EAAsBrI,EAAclO,EACpC3O,EAAMjE,CAAO,CAACmpB,EAAoB,CAEtC,GAAI,AAAC9O,CAAAA,AAAiB,OAAjBA,AADLA,CAAAA,EAAO4O,CAAY,CAACnI,EAAY,AAAD,EACrBiI,OAAO,EACb1O,AAAiB,OAAjBA,EAAK0O,OAAO,AAAQ,GACnBjI,GAAelO,GACZkO,GAAejO,EAAY,CAC3B,AAAC7S,CAAO,CAACmpB,EAAoB,EAC7BnpB,CAAAA,CAAO,CAACmpB,EAAoB,CAAG,EAAE,AAAD,EAEpC,IAAIrpB,EAAYiP,AAjEhB,IAAI,CAiEsB6B,aAAa,CAACyJ,EAAK2O,SAAS,CAClDlpB,CAAAA,aAAqB4P,MACrB5P,CAAAA,EAAYA,EAAUyS,OAAO,EAAC,EAElCvS,CAAO,CAACmpB,EAAoB,CAACtpB,EAAWkT,EAAS,CAAGjT,EAIpD,IADA,IAAIgB,EAAI,EACDjB,EAAWkT,GAAYjS,GAC1BmD,AAAiC,KAAK,IAAtCA,CAAG,CAACpE,EAAWkT,EAAWjS,EAAE,EAC5BmD,CAAG,CAACpE,EAAWkT,EAAWjS,EAAE,CAAG,KAC/BA,GAER,CACAggB,GACJ,CAEJjhB,GACJ,CACA,IAAI,CAACG,OAAO,CAAGA,EACf,IAAI,CAACiS,OAAO,CAAGA,EACf,IAAI,CAAC7T,IAAI,CAAC,CACNC,KAAM,aACN2B,QAASA,EACTP,OAAQN,EACR8S,QAASA,CACb,EACJ,EAOA2U,EAAmBzpB,SAAS,CAACyO,QAAQ,CAAG,WACpC,OAAOyH,GAAyBD,mBAAmB,CAAC,IAAI,CAACpT,OAAO,CAAE,IAAI,CAACiS,OAAO,CAClF,EASA2U,EAAmB3W,cAAc,CAAGyW,GAA0BA,GAA0B,CAAC,EAAGrT,GAAyBpD,cAAc,EAAG,CAAEiY,kBAAmB,CAAA,EAAMnB,qBAAsB,CAAA,CAAK,GACrLH,CACX,EAAEvT,IACFA,GAAyBhT,YAAY,CAAC,YAAaumB,IAyBnD,IAAIwC,IACIxtB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAIA2kB,GAAM,AAAC5rB,IAA+E4rB,GAAG,CAGzFC,GAA2B,AAAC7rB,IAA+EG,KAAK,CAWhH2rB,GAAoC,SAAUpkB,CAAM,EAapD,SAASokB,EAAmBxrB,CAAO,EAC/B,IAAI2E,EAAQ,IAAI,CACZsN,EAAgBsZ,GAAyBC,EAAmBtZ,cAAc,CAC1ElS,GAIJ,MAFA2E,AADAA,CAAAA,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,CAAE2S,IAAkB,IAAI,AAAD,EACzCjB,SAAS,CAAG,IAxEwC6X,GAwEN5W,GACpDtN,EAAM3E,OAAO,CAAGiS,EACTtN,CACX,CAoEA,OAxFA0mB,GAA2BG,EAAoBpkB,GA+B/CokB,EAAmBpsB,SAAS,CAACuP,IAAI,CAAG,SAAUvN,CAAW,EACrD,IAYI0nB,EAZA7a,EAAY,IAAI,CAChB+C,EAAY/C,EAAU+C,SAAS,CAC/B7P,EAAQ8M,EAAU9M,KAAK,CACvB0E,EAAKoI,EAAUjO,OAAO,CACtB2P,EAAe9J,EAAG8J,YAAY,CAC9B+a,EAAY7kB,EAAG1E,KAAK,CAiBxB,GAhBA8M,EAAU5N,IAAI,CAAC,CACXC,KAAM,OACNoB,OAAQN,EACR+O,OAAQ,CAAEhP,MAAOA,CAAM,EACvB2nB,aAAc7a,EAAU6a,YAAY,AACxC,GAEI,AAAqB,UAArB,OAAO4B,GACPzc,EAAUwd,OAAO,CAAGf,EACpB5B,EAAewC,GAAII,QAAQ,CAACC,cAAc,CAACjB,IAI3Czc,EAAUwd,OAAO,CAAG3C,AADpBA,CAAAA,EAAe4B,CAAQ,EACU7lB,EAAE,CAEvCoJ,EAAU6a,YAAY,CAAGA,GAAgB,KAAK,EAC1C,CAAC7a,EAAU6a,YAAY,CAAE,CACzB,IAAIzd,EAAQ,wDAOZ,OANA4C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACRiK,MAAOA,EACP8E,OAAQ,CAAEhP,MAAOA,CAAM,CAC3B,GACOE,QAAQE,MAAM,CAAC,AAAII,MAAM0J,GACpC,CAKA,OAJA2F,EAAUsD,KAAK,CAACiX,GAAyB,CAAEzC,aAAc7a,EAAU6a,YAAY,AAAC,EAAG7a,EAAUjO,OAAO,EAAGoB,GAEvGD,EAAM0G,aAAa,GACnB1G,EAAM4E,UAAU,CAACiL,EAAUnD,QAAQ,GAAGtI,UAAU,IACzC0I,EACFa,kBAAkB,CAACa,GACnBvE,IAAI,CAAC,WAON,OANA6C,EAAU5N,IAAI,CAAC,CACXC,KAAM,YACNoB,OAAQN,EACR+O,OAAQ,CAAEhP,MAAOA,CAAM,EACvB2nB,aAAc7a,EAAU6a,YAAY,AACxC,GACO7a,CACX,EACJ,EAMAud,EAAmBtZ,cAAc,CAAG,CAChC/Q,MAAO,EACX,EACOqqB,CACX,EAAEta,IACFA,GAAyB5O,YAAY,CAAC,YAAakpB,IAuBnD,IAAII,IACI/tB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAWAklB,GAAkE,SAAUhgB,CAAO,CAAEC,CAAI,EACzF,IAIIC,EACAC,EACAC,EANAC,EAAI,CAAEC,MAAO,EACbC,KAAM,WAAa,GAAIH,AAAO,EAAPA,CAAC,CAAC,EAAE,CAAM,MAAMA,CAAC,CAAC,EAAE,CAAE,OAAOA,CAAC,CAAC,EAAE,AAAE,EAC1DI,KAAM,EAAE,CACRC,IAAK,EAAE,AAAC,EAIRC,EAAIzN,OAAO8H,MAAM,CAAC,AAAC,CAAA,AAAoB,YAApB,OAAO4F,SAA0BA,SAAW1N,MAAK,EAAGM,SAAS,EACpF,OAAOmN,EAAEE,IAAI,CAAGC,EAAK,GAAIH,EAAE,KAAQ,CAAGG,EAAK,GAAIH,EAAE,MAAS,CAAGG,EAAK,GAAI,AAAkB,YAAlB,OAAOC,QAA0BJ,CAAAA,CAAC,CAACI,OAAOC,QAAQ,CAAC,CAAG,WAAa,OAAO,IAAI,AAAE,CAAA,EAAIL,EAC1J,SAASG,EAAKpO,CAAC,EAAI,OAAO,SAAUuO,CAAC,MACvBC,EADuC,CAACxO,EAAGuO,EAAE,CAEvD,GAAId,EAAG,MAAM,AAAIgB,UAAU,mCAC3B,KAAOR,GAAMA,CAAAA,EAAI,EAAGO,CAAE,CAAC,EAAE,EAAKZ,CAAAA,EAAI,CAAA,CAAC,EAAIA,GAAG,GAAI,CAC1C,GAAIH,EAAI,EAAGC,GAAMC,CAAAA,EAAIa,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAOd,EAAE,MAAS,CAAGc,CAAE,CAAC,EAAE,CAAGd,EAAE,KAAQ,EAAK,CAAA,AAACC,CAAAA,EAAID,EAAE,MAAS,AAAD,GAAMC,EAAE3M,IAAI,CAAC0M,GAAI,CAAA,EAAKA,EAAES,IAAI,AAAD,GAAM,CAAC,AAACR,CAAAA,EAAIA,EAAE3M,IAAI,CAAC0M,EAAGc,CAAE,CAAC,EAAE,CAAA,EAAGE,IAAI,CAAE,OAAOf,EAE3J,OADID,EAAI,EAAJA,AAAOC,GAAGa,CAAAA,EAAK,CAACA,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAMb,EAAEgB,KAAK,CAAC,AAAD,EAC9BH,CAAE,CAAC,EAAE,EACT,KAAK,EAAG,KAAK,EAAGb,EAAIa,EAAI,KACxB,MAAK,EAAc,OAAXZ,EAAEC,KAAK,GAAW,CAAEc,MAAOH,CAAE,CAAC,EAAE,CAAEE,KAAM,CAAA,CAAM,CACtD,MAAK,EAAGd,EAAEC,KAAK,GAAIH,EAAIc,CAAE,CAAC,EAAE,CAAEA,EAAK,CAAC,EAAE,CAAE,QACxC,MAAK,EAAGA,EAAKZ,EAAEI,GAAG,CAACY,GAAG,GAAIhB,EAAEG,IAAI,CAACa,GAAG,GAAI,QACxC,SACI,GAAI,CAAcjB,CAAAA,EAAIA,AAAhBA,CAAAA,EAAIC,EAAEG,IAAI,AAAD,EAAS5L,MAAM,CAAG,GAAKwL,CAAC,CAACA,EAAExL,MAAM,CAAG,EAAE,AAAD,GAAOqM,CAAAA,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAUA,AAAU,IAAVA,CAAE,CAAC,EAAE,AAAK,EAAI,CAAEZ,EAAI,EAAG,QAAU,CAC3G,GAAIY,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAW,CAAA,CAACb,GAAMa,CAAE,CAAC,EAAE,CAAGb,CAAC,CAAC,EAAE,EAAIa,CAAE,CAAC,EAAE,CAAGb,CAAC,CAAC,EAAE,EAAI,CAAEC,EAAEC,KAAK,CAAGW,CAAE,CAAC,EAAE,CAAE,KAAO,CACrF,GAAIA,AAAU,IAAVA,CAAE,CAAC,EAAE,EAAUZ,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAE,CAAEC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAEA,EAAIa,EAAI,KAAO,CACpE,GAAIb,GAAKC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAE,CAAEC,EAAEC,KAAK,CAAGF,CAAC,CAAC,EAAE,CAAEC,EAAEI,GAAG,CAACtL,IAAI,CAAC8L,GAAK,KAAO,CAC9Db,CAAC,CAAC,EAAE,EAAEC,EAAEI,GAAG,CAACY,GAAG,GACnBhB,EAAEG,IAAI,CAACa,GAAG,GAAI,QACtB,CACAJ,EAAKhB,EAAKxM,IAAI,CAACuM,EAASK,EAC5B,CAAE,MAAOjL,EAAG,CAAE6L,EAAK,CAAC,EAAG7L,EAAE,CAAE+K,EAAI,CAAG,QAAU,CAAED,EAAIE,EAAI,CAAG,CACzD,GAAIa,AAAQ,EAARA,CAAE,CAAC,EAAE,CAAM,MAAMA,CAAE,CAAC,EAAE,CAAE,MAAO,CAAEG,MAAOH,CAAE,CAAC,EAAE,CAAGA,CAAE,CAAC,EAAE,CAAG,KAAK,EAAGE,KAAM,CAAA,CAAK,CArBrB,CAAG,CAuBrE,EAGI8e,GAAsB,AAACpsB,IAA+EG,KAAK,CAU3GksB,GAA+B,SAAU3kB,CAAM,EAgB/C,SAAS2kB,EAAc/rB,CAAO,EAE1B,IAAK,IADDgsB,EAAQ,EAAE,CACL/hB,EAAK,EAAGA,EAAKpH,UAAUpC,MAAM,CAAEwJ,IACpC+hB,CAAK,CAAC/hB,EAAK,EAAE,CAAGpH,SAAS,CAACoH,EAAG,CAFjC,IAIItF,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,AACrCqF,CAAAA,EAAMqnB,KAAK,CAAGA,EACdrnB,EAAM3E,OAAO,CAAG8rB,GAAoBC,EAAc7Z,cAAc,CAAElS,GAElE,IAAK,IADDisB,EAAetnB,EAAM3E,OAAO,CAACgsB,KAAK,EAAI,EAAE,CACnCjpB,EAAI,EAAGwE,EAAO0kB,EAAaxrB,MAAM,CAAEsO,EAAkB,KAAK,EAAGS,EAAgB,KAAK,EAAGzM,EAAIwE,EAAM,EAAExE,EAEjGgM,AADLA,CAAAA,EAAkBkd,CAAY,CAAClpB,EAAE,AAAD,EACXzC,IAAI,EAGzBkP,CAAAA,EAAgBhN,EAAuBH,KAAK,CAAC0M,EAAgBzO,IAAI,CAAC,AAAD,GAE7D0rB,EAAMhrB,IAAI,CAAC,IAAIwO,EAAcT,IAGrC,OAAOpK,CACX,CAkSA,OArUAinB,GAAsBG,EAAe3kB,GAmDrC2kB,EAAc3sB,SAAS,CAAC8sB,GAAG,CAAG,SAAUhsB,CAAQ,CAAEkB,CAAW,EACzD,IAAI,CAACf,IAAI,CAAC,CACNC,KAAM,cACNoB,OAAQN,EACRlB,SAAUA,CACd,GACA,IAAI,CAAC8rB,KAAK,CAAChrB,IAAI,CAACd,GAChB,IAAI,CAACG,IAAI,CAAC,CACNC,KAAM,cACNoB,OAAQN,EACRlB,SAAUA,CACd,EACJ,EAOA6rB,EAAc3sB,SAAS,CAAC+sB,KAAK,CAAG,SAAU/qB,CAAW,EACjD,IAAI,CAACf,IAAI,CAAC,CACNC,KAAM,aACNoB,OAAQN,CACZ,GACA,IAAI,CAAC4qB,KAAK,CAACvrB,MAAM,CAAG,EACpB,IAAI,CAACJ,IAAI,CAAC,CACNC,KAAM,kBACNoB,OAAQN,CACZ,EACJ,EAcA2qB,EAAc3sB,SAAS,CAAC8B,MAAM,CAAG,SAAUC,CAAK,CAAEC,CAAW,MAtJWyK,EAASoD,EAAYC,EAAGC,EAuJ5F,OAvJoEtD,EAuJvC,IAAI,CAvJ4CoD,EAuJ1C,KAAK,EAvJiDC,EAuJ9C,KAAK,EAvJ4CC,EAuJzC,WAC/C,IAAIid,EACA5qB,EACAuB,EACAwE,EACA8kB,EACJ,OAAOR,GAAwB,IAAI,CAAE,SAAUhmB,CAAE,EAC7C,OAAQA,EAAGsG,KAAK,EACZ,KAAK,EACDigB,EAAa,IAAI,CAACpsB,OAAO,CAACssB,OAAO,CAC7B,IAAI,CAACN,KAAK,CAAC9oB,KAAK,GAAGopB,OAAO,GAC1B,IAAI,CAACN,KAAK,CAAC9oB,KAAK,GAChB/B,EAAMK,QAAQ,GAAKL,GACnBA,CAAAA,EAAMK,QAAQ,CAAGL,EAAMM,KAAK,CAAC,CAAA,EAAOL,EAAW,EAEnDI,EAAWL,EACX4B,EAAI,EAAGwE,EAAO6kB,EAAU3rB,MAAM,CAC9BoF,EAAGsG,KAAK,CAAG,CACf,MAAK,EACD,GAAI,CAAEpJ,CAAAA,EAAIwE,CAAG,EAAI,MAAO,CAAC,EAAa,EAAE,AACxC1B,CAAAA,EAAGsG,KAAK,CAAG,CACf,MAAK,EAED,OADAtG,EAAGwG,IAAI,CAACrL,IAAI,CAAC,CAAC,EAAG,GAAK,EAAE,EACjB,CAAC,EAAaorB,CAAS,CAACrpB,EAAE,CAAC7B,MAAM,CAACM,EAAUJ,GAAa,AACpE,MAAK,EAED,OADAyE,EAAGuG,IAAI,GACA,CAAC,EAAa,EAAE,AAC3B,MAAK,EAOD,MANAigB,EAAUxmB,EAAGuG,IAAI,GACjB,IAAI,CAAC/L,IAAI,CAAC,CACNC,KAAM,QACNoB,OAAQN,EACRD,MAAOA,CACX,GACMkrB,CACV,MAAK,EACD7qB,EAAWA,EAASA,QAAQ,CAC5BqE,EAAGsG,KAAK,CAAG,CACf,MAAK,EAED,MADA,EAAEpJ,EACK,CAAC,EAAa,EAAE,AAC3B,MAAK,EAED,OADA5B,EAAMK,QAAQ,CAAGA,EACV,CAAC,EAAcL,EAAM,AACpC,CACJ,EACJ,EAnMG,GAAK+N,CAAAA,GAAMA,CAAAA,EAAI7N,OAAM,CAAC,EAAG,SAAUC,CAAO,CAAEC,CAAM,EACrD,SAASsO,EAAU5C,CAAK,EAAI,GAAI,CAAE6C,EAAKX,EAAU1C,IAAI,CAACQ,GAAS,CAAE,MAAOhM,EAAG,CAAEM,EAAON,EAAI,CAAE,CAC1F,SAAS8O,EAAS9C,CAAK,EAAI,GAAI,CAAE6C,EAAKX,EAAU,KAAQ,CAAClC,GAAS,CAAE,MAAOhM,EAAG,CAAEM,EAAON,EAAI,CAAE,CAC7F,SAAS6O,EAAK3L,CAAM,MAJT8I,CAIa9I,CAAAA,EAAO6I,IAAI,CAAG1L,EAAQ6C,EAAO8I,KAAK,EAAI+C,AAJnC/C,CAAAA,CAAhBA,EAIyD9I,EAAO8I,KAAK,YAJpCiC,EAAIjC,EAAQ,IAAIiC,EAAE,SAAU5N,CAAO,EAAIA,EAAQ2L,EAAQ,EAAC,EAIlB7B,IAAI,CAACyE,EAAWE,EAAW,CAC7GD,EAAK,AAACX,CAAAA,EAAYA,EAAUrL,KAAK,CAAC+H,EAASoD,GAAc,EAAE,CAAA,EAAGxC,IAAI,GACtE,EA+LA,EAyBAsf,EAAc3sB,SAAS,CAACwC,UAAU,CAAG,SAAUT,CAAK,CAAEU,CAAU,CAAEC,CAAQ,CAAEC,CAAS,CAAEX,CAAW,EAC9F,IAAIgrB,EAAa,IAAI,CAACpsB,OAAO,CAACssB,OAAO,CAC7B,IAAI,CAACN,KAAK,CAACM,OAAO,GAClB,IAAI,CAACN,KAAK,CAClB,GAAII,EAAU3rB,MAAM,CAAE,CAElB,IAAK,IADDgB,EAAQN,EAAMM,KAAK,GACdsB,EAAI,EAAGwE,EAAO6kB,EAAU3rB,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACjDqpB,CAAS,CAACrpB,EAAE,CAACnB,UAAU,CAACH,EAAOI,EAAYC,EAAUC,EAAWX,GAChEK,EAAQA,EAAMD,QAAQ,AAE1BL,CAAAA,EAAMK,QAAQ,CAAGC,CACrB,CACA,OAAON,CACX,EAsBA4qB,EAAc3sB,SAAS,CAAC4C,aAAa,CAAG,SAAUb,CAAK,CAAEc,CAAO,CAAEH,CAAQ,CAAEV,CAAW,EACnF,IAAIgrB,EAAa,IAAI,CAACpsB,OAAO,CAACssB,OAAO,CAC7B,IAAI,CAACN,KAAK,CAACM,OAAO,GAClB,IAAI,CAACN,KAAK,CAAC9oB,KAAK,GACxB,GAAIkpB,EAAU3rB,MAAM,CAAE,CAElB,IAAK,IADDgB,EAAQN,EAAMM,KAAK,GACdsB,EAAI,EAAGwE,EAAO6kB,EAAU3rB,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACjDqpB,CAAS,CAACrpB,EAAE,CAACf,aAAa,CAACP,EAAOQ,EAASH,EAAUV,GACrDK,EAAQA,EAAMD,QAAQ,AAE1BL,CAAAA,EAAMK,QAAQ,CAAGC,CACrB,CACA,OAAON,CACX,EAsBA4qB,EAAc3sB,SAAS,CAAC8C,UAAU,CAAG,SAAUf,CAAK,CAAEgB,CAAI,CAAEL,CAAQ,CAAEV,CAAW,EAC7E,IAAIgrB,EAAa,IAAI,CAACpsB,OAAO,CAACssB,OAAO,CAC7B,IAAI,CAACN,KAAK,CAACM,OAAO,GAClB,IAAI,CAACN,KAAK,CAAC9oB,KAAK,GACxB,GAAIkpB,EAAU3rB,MAAM,CAAE,CAElB,IAAK,IADDgB,EAAQN,EAAMM,KAAK,GACdsB,EAAI,EAAGwE,EAAO6kB,EAAU3rB,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACjDqpB,CAAS,CAACrpB,EAAE,CAACb,UAAU,CAACT,EAAOU,EAAML,EAAUV,GAC/CK,EAAQA,EAAMD,QAAQ,AAE1BL,CAAAA,EAAMK,QAAQ,CAAGC,CACrB,CACA,OAAON,CACX,EAkBA4qB,EAAc3sB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAE9D4qB,AADY,IAAI,CACV3rB,IAAI,CAAC,CACPC,KAAM,SACNoB,OAAQN,EACRD,MAAOA,CACX,GAKA,IAAK,IAJDirB,EAAaJ,AANL,IAAI,CAMOhsB,OAAO,CAACssB,OAAO,CAC9BN,AAPI,IAAI,CAOFA,KAAK,CAACM,OAAO,GACnBN,AARI,IAAI,CAQFA,KAAK,CAAC9oB,KAAK,GACrB1B,EAAWL,EAAMK,QAAQ,CACpBuB,EAAI,EAAGwE,EAAO6kB,EAAU3rB,MAAM,CAAEP,EAAW,KAAK,EAAG6C,EAAIwE,EAAM,EAAExE,EAEpEvB,EAAWtB,AADAksB,CAAS,CAACrpB,EAAE,CACH3C,WAAW,CAACoB,EAAUJ,GAAaI,QAAQ,CAQnE,OANAL,EAAMK,QAAQ,CAAGA,EACjBwqB,AAfY,IAAI,CAeV3rB,IAAI,CAAC,CACPC,KAAM,cACNoB,OAAQN,EACRD,MAAOA,CACX,GACOA,CACX,EAUA4qB,EAAc3sB,SAAS,CAACmtB,MAAM,CAAG,SAAUrsB,CAAQ,CAAEkB,CAAW,EAC5D,IAAIgrB,EAAY,IAAI,CAACJ,KAAK,CAC1B,IAAI,CAAC3rB,IAAI,CAAC,CACNC,KAAM,iBACNoB,OAAQN,EACRlB,SAAUA,CACd,GACAksB,EAAU5oB,MAAM,CAAC4oB,EAAUxiB,OAAO,CAAC1J,GAAW,GAC9C,IAAI,CAACG,IAAI,CAAC,CACNC,KAAM,sBACNoB,OAAQN,EACRlB,SAAUA,CACd,EACJ,EASA6rB,EAAc7Z,cAAc,CAAG,CAC3B5R,KAAM,OACV,EACOyrB,CACX,EAAEvpB,GACFA,EAAuBF,YAAY,CAAC,QAASypB,IAuB7C,IAAIS,IACI3uB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAIA8lB,GAAuB,AAAC/sB,IAA+EG,KAAK,CAW5G6sB,GAAgC,SAAUtlB,CAAM,EAahD,SAASslB,EAAe1sB,CAAO,EAC3B,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,CAErC,OADAqF,EAAM3E,OAAO,CAAGysB,GAAqBC,EAAexa,cAAc,CAAElS,GAC7D2E,CACX,CAkMA,OAlNA6nB,GAAuBE,EAAgBtlB,GA4CvCslB,EAAettB,SAAS,CAACwC,UAAU,CAAG,SAAUT,CAAK,CAAEU,CAAU,CAAEC,CAAQ,CAAEC,CAAS,CAAEX,CAAW,EAC/F,IAAII,EAAWL,EAAMK,QAAQ,CACzBmrB,EAAmBnrB,EAASkI,aAAa,CAAC,cAC1C7H,GAOJ,OANI,AAA4B,KAAA,IAArB8qB,EACPnrB,EAASuE,UAAU,CAAC,IAAI,CAAC3F,WAAW,CAACe,EAAMM,KAAK,IAAI8D,UAAU,GAAI,KAAK,EAAGnE,GAG1EI,EAASmJ,OAAO,CAAC,GAAGxH,MAAM,CAACrB,GAAW6qB,EAAkB5qB,EAAWX,GAEhED,CACX,EAoBAurB,EAAettB,SAAS,CAAC4C,aAAa,CAAG,SAAUb,CAAK,CAAEc,CAAO,CAAEH,CAAQ,CAAEV,CAAW,EACpF,IAAII,EAAWL,EAAMK,QAAQ,CACzBorB,EAAuBprB,EAAS6D,SAAS,CAAC,gBAAkB,EAAE,CAC9DG,EAAcrE,EAAM8H,cAAc,GAClC4jB,EAAS1rB,EAAMsI,WAAW,KAAOmjB,EAAoBnsB,MAAM,CAC/D,GAAI,CAACosB,EACD,CAAA,IAAK,IAAI9pB,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnD,GAAIyC,CAAW,CAACzC,EAAE,GAAK6pB,CAAmB,CAAC7pB,EAAE,CAAE,CAC3C8pB,EAAQ,CAAA,EACR,KACJ,CACJ,CAEJ,GAAIA,EACA,OAAO,IAAI,CAACzsB,WAAW,CAACe,EAAOC,GAEnCoE,EAAc1G,OAAO2G,IAAI,CAACxD,GAC1B,IAAK,IAAIc,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAE4C,EAAS,KAAK,EAAGxB,EAAa,KAAK,EAAG8qB,EAAmB,KAAK,EAAG5pB,EAAIwE,EAAM,EAAExE,EAAG,CAEvHM,EAASpB,CAAO,CADhBJ,EAAa2D,CAAW,CAACzC,EAAE,CACC,CAC5B4pB,EAAoBnrB,EAASkI,aAAa,CAAC,cAAe7H,IACtDL,EAASiI,WAAW,GACxB,IAAK,IAAIrB,EAAI,EAAG0kB,EAAKhrB,EAAUuG,EAAOhF,EAAO5C,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EAAG,EAAE0kB,EAClEtrB,EAASmJ,OAAO,CAAC,GAAGxH,MAAM,CAAC2pB,GAAKH,EAAkBtpB,CAAM,CAAC+E,EAAE,CAAEhH,EAErE,CACA,OAAOD,CACX,EAoBAurB,EAAettB,SAAS,CAAC8C,UAAU,CAAG,SAAUf,CAAK,CAAEgB,CAAI,CAAEL,CAAQ,CAAEV,CAAW,EAC9E,IAAIoE,EAAcrE,EAAM8H,cAAc,GAClCzH,EAAWL,EAAMK,QAAQ,CACzBorB,EAAuBprB,EAAS6D,SAAS,CAAC,gBAAkB,EAAE,CAC9DwnB,EAAS1rB,EAAMsI,WAAW,KAAOmjB,EAAoBnsB,MAAM,CAC/D,GAAI,CAACosB,EACD,CAAA,IAAK,IAAI9pB,EAAI,EAAGwE,EAAO/B,EAAY/E,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACnD,GAAIyC,CAAW,CAACzC,EAAE,GAAK6pB,CAAmB,CAAC7pB,EAAE,CAAE,CAC3C8pB,EAAQ,CAAA,EACR,KACJ,CACJ,CAEJ,GAAIA,EACA,OAAO,IAAI,CAACzsB,WAAW,CAACe,EAAOC,GAEnC,IAAK,IAAI2B,EAAI,EAAGgH,EAAKjI,EAAUyF,EAAOpF,EAAK1B,MAAM,CAAEyF,EAAM,KAAK,EAAGnD,EAAIwE,EAAM,EAAExE,EAAG,EAAEgH,EAE9E,GAAI7D,AADJA,CAAAA,EAAM/D,CAAI,CAACY,EAAE,AAAD,YACOE,MACfzB,EAASsE,SAAS,CAAC,GAAG3C,MAAM,CAAC4G,GAAK7D,QAGlC,IAAK,IAAIkC,EAAI,EAAGC,EAAO7C,EAAY/E,MAAM,CAAE2H,EAAIC,EAAM,EAAED,EACnD5G,EAASmJ,OAAO,CAAC,GAAGxH,MAAM,CAAC4G,GAAK3B,EAAGlC,CAAG,CAACV,CAAW,CAAC4C,EAAE,CAAC,CAAEhH,GAIpE,OAAOD,CACX,EAaAurB,EAAettB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAE/DlB,AADe,IAAI,CACVG,IAAI,CAAC,CAAEC,KAAM,SAAUoB,OAAQN,EAAaD,MAAOA,CAAM,GAClE,IAAIK,EAAWL,EAAMK,QAAQ,CAC7B,GAAIL,EAAMkJ,UAAU,CAAC,CAAC,cAAc,EAAG,CAKnC,IAAK,IAJD0iB,EAAqB,AAAC5rB,CAAAA,EAAM0G,aAAa,CAAC,CAAC,cAAc,GAAK,CAAC,CAAA,EAC1DrC,WAAW,EAAI,EAAE,CACtBvD,EAAU,CAAC,EACXuD,EAAc,EAAE,CACXzC,EAAI,EAAGwE,EAAOwlB,EAAkBtsB,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EACzDyC,EAAYxE,IAAI,CAAC,GAAK+rB,CAAiB,CAAChqB,EAAE,EAE9C,IAAK,IAAIA,EAAI,EAAGwE,EAAOpG,EAAMsI,WAAW,GAAIvD,EAAM,KAAK,EAAGnD,EAAIwE,EAAM,EAAExE,EAE9DmD,AADJA,CAAAA,EAAM/E,EAAMwE,MAAM,CAAC5C,EAAC,GAEhBd,CAAAA,CAAO,CAACuD,CAAW,CAACzC,EAAE,CAAC,CAAGmD,CAAE,EAGpC1E,EAASqG,aAAa,GACtBrG,EAASuE,UAAU,CAAC9D,EACxB,KACK,CAED,IAAK,IADDA,EAAU,CAAC,EACNc,EAAI,EAAGwE,EAAOpG,EAAMsI,WAAW,GAAIvD,EAAM,KAAK,EAAGnD,EAAIwE,EAAM,EAAExE,EAE9DmD,AADJA,CAAAA,EAAM/E,EAAMwE,MAAM,CAAC5C,EAAC,GAEhBd,CAAAA,CAAO,CAAC,GAAGkB,MAAM,CAACJ,GAAG,CAAGmD,CAAE,CAGlCjE,CAAAA,EAAQuD,WAAW,CAAGrE,EAAM8H,cAAc,GAC1CzH,EAASqG,aAAa,GACtBrG,EAASuE,UAAU,CAAC9D,EACxB,CAEA,OADA/B,AAhCe,IAAI,CAgCVG,IAAI,CAAC,CAAEC,KAAM,cAAeoB,OAAQN,EAAaD,MAAOA,CAAM,GAChEA,CACX,EASAurB,EAAexa,cAAc,CAAG,CAC5B5R,KAAM,QACV,EACOosB,CACX,EAAElqB,GACFA,EAAuBF,YAAY,CAAC,SAAUoqB,IAsB9C,IAAIM,IACInvB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAEAsmB,GAA2D,WAS3D,MAAOA,AARPA,CAAAA,GAAsBnuB,OAAOgjB,MAAM,EAAI,SAAS7V,CAAC,EAC7C,IAAK,IAAI8V,EAAGhf,EAAI,EAAGzE,EAAIuE,UAAUpC,MAAM,CAAEsC,EAAIzE,EAAGyE,IAE5C,IAAK,IAAI2D,KADTqb,EAAIlf,SAAS,CAACE,EAAE,CACKjE,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACyiB,EAAGrb,IACzDuF,CAAAA,CAAC,CAACvF,EAAE,CAAGqb,CAAC,CAACrb,EAAE,AAAD,EAElB,OAAOuF,CACX,CAAA,EAC2BnI,KAAK,CAAC,IAAI,CAAEjB,UAC3C,EAgBIqqB,GAA8B,SAAU9lB,CAAM,EAO9C,SAAS8lB,EAAaltB,CAAO,EACzB,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,CAErC,OADAqF,EAAM3E,OAAO,CAAGitB,GAAoBA,GAAoB,CAAC,EAAGC,EAAahb,cAAc,EAAGlS,GACnF2E,CACX,CA6HA,OAvIAqoB,GAAqBE,EAAc9lB,GAgBnC8lB,EAAa9tB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAE7DlB,AADe,IAAI,CACVG,IAAI,CAAC,CAAEC,KAAM,SAAUoB,OAAQN,EAAaD,MAAOA,CAAM,GAKlE,IAAK,IAJDiZ,EAAwBla,AAFb,IAAI,CAEkBF,OAAO,CAACoa,qBAAqB,CAC9D+S,EAAkBjtB,AAHP,IAAI,CAGYF,OAAO,CAACmtB,cAAc,EAC7ChsB,EAAM8H,cAAc,GACxBzH,EAAWL,EAAMK,QAAQ,CACpBuB,EAAI,EAAGwE,EAAO4lB,EAAe1sB,MAAM,CAAEoB,EAAa,KAAK,EAAGkB,EAAIwE,EAAM,EAAExE,EAC3ElB,EAAasrB,CAAc,CAACpqB,EAAE,CAC1BoqB,EAAevjB,OAAO,CAAC/H,IAAe,GACtCL,EAASsE,SAAS,CAACjE,EAAY3B,AATxB,IAAI,CAS6BktB,aAAa,CAACjsB,EAAOU,IAIrE,IAAK,IADDwrB,EAAkBntB,AAZP,IAAI,CAYYF,OAAO,CAACqtB,cAAc,EAAI,EAAE,CAClDtqB,EAAI,EAAGwE,EAAO8lB,EAAe5sB,MAAM,CAAE6sB,EAAgB,KAAK,EAAG1S,EAAU,KAAK,EAAG7X,EAAIwE,EAAM,EAAExE,EAChGuqB,EAAgBD,CAAc,CAACtqB,EAAE,CACjC6X,EAAUsB,GAAsBrB,YAAY,CAACyS,EAAc1S,OAAO,CAAER,GACpE5Y,EAASsE,SAAS,CAACwnB,EAAcjqB,MAAM,CAAEnD,AAhB9B,IAAI,CAgBmCqtB,oBAAoB,CAAC3S,EAASzZ,EAAOmsB,EAAcE,QAAQ,CAAEF,EAAc1V,MAAM,GAGvI,OADA1X,AAlBe,IAAI,CAkBVG,IAAI,CAAC,CAAEC,KAAM,cAAeoB,OAAQN,EAAaD,MAAOA,CAAM,GAChEA,CACX,EAkBA+rB,EAAa9tB,SAAS,CAACguB,aAAa,CAAG,SAAUjsB,CAAK,CAAEU,CAAU,CAAEC,CAAQ,EACpEA,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EAKtC,IAAK,IAJDsY,EAAwB,IAAI,CAACpa,OAAO,CAACoa,qBAAqB,CAC1D/W,EAAS,AAAClC,CAAAA,EAAMkE,SAAS,CAACxD,EAC1B,CAAA,IAAS,EAAE,AAAD,EACLqB,KAAK,CAACpB,EAAW,EAAIA,EAAW,GAChCiB,EAAI,EAAGwE,EAAOlE,EAAO5C,MAAM,CAAEgtB,EAAe,EAAE,CAAoBvP,EAAO,KAAK,EAAGnb,EAAIwE,EAAM,EAAExE,EAElG,GAAI,AAAgB,UAAhB,MADJmb,CAAAA,EAAO7a,CAAM,CAACN,EAAE,AAAD,GAEXmb,AAAY,MAAZA,CAAI,CAAC,EAAE,CACP,GAAI,CAEAuP,EAAgBC,AAN2C,KAM3BxP,EAC5BuP,EACAvR,GAAsBrB,YAAY,CAACqD,EAAKlE,SAAS,CAAC,GAAII,GAE1D/W,CAAM,CAACN,EAAE,CACLgc,GAAyBd,cAAc,CAACwP,EAActsB,EAC9D,CACA,MAAO0E,EAAI,CACPxC,CAAM,CAACN,EAAE,CAAG8O,GAChB,CAGR,OAAOxO,CACX,EAsBA6pB,EAAa9tB,SAAS,CAACmuB,oBAAoB,CAAG,SAAU3S,CAAO,CAAEzZ,CAAK,CAAEqsB,CAAQ,CAAE5V,CAAM,EAChF4V,AAAa,KAAK,IAAlBA,GAAuBA,CAAAA,EAAW,CAAA,EAClC5V,AAAW,KAAK,IAAhBA,GAAqBA,CAAAA,EAASzW,EAAMsI,WAAW,EAAC,EACpD+jB,EAAWA,GAAY,EAAIA,EAAW,EACtC5V,EAASA,GAAU,EAAIA,EAASzW,EAAMsI,WAAW,GAAKmO,EAGtD,IAAK,IAFDvU,EAAS,EAAE,CACX7B,EAAWL,EAAMK,QAAQ,CACpBuB,EAAI,EAAGwE,EAAQqQ,EAAS4V,EAAWzqB,EAAIwE,EAAM,EAAExE,EACpD,GAAI,CACAM,CAAM,CAACN,EAAE,CAAGgc,GAAyBd,cAAc,CAACrD,EAASpZ,EACjE,CACA,MAAOqE,EAAI,CACPxC,CAAM,CAACN,EAAE,CAAG8O,GAChB,QACQ,CACJ+I,EAAUmE,GAAyBI,mBAAmB,CAACvE,EAAS,EAAG,EACvE,CAEJ,OAAOvX,CACX,EAUA6pB,EAAahb,cAAc,CAAG,CAC1B5R,KAAM,OACN8Z,sBAAuB,CAAA,CAC3B,EACO8S,CACX,EAAE1qB,GACFA,EAAuBF,YAAY,CAAC,OAAQ4qB,IAuB5C,IAAIS,IACI9vB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAIAinB,GAAsB,AAACluB,IAA+EG,KAAK,CAU3GguB,GAA+B,SAAUzmB,CAAM,EAa/C,SAASymB,EAAc7tB,CAAO,EAC1B,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,CAErC,OADAqF,EAAM3E,OAAO,CAAG4tB,GAAoBC,EAAc3b,cAAc,CAAElS,GAC3D2E,CACX,CA+FA,OA/GAgpB,GAAsBE,EAAezmB,GAkCrCymB,EAAczuB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAE9DlB,AADe,IAAI,CACVG,IAAI,CAAC,CAAEC,KAAM,SAAUoB,OAAQN,EAAaD,MAAOA,CAAM,GAClE,IAAI2sB,EAAU,EAAE,CACZjoB,EAAK3F,AAHM,IAAI,CAGDF,OAAO,CACrB+tB,EAAWloB,EAAGkoB,QAAQ,CACtBC,EAASnoB,EAAGmoB,MAAM,CAClBC,EAASpoB,EAAGooB,MAAM,CACtB,GAAID,EAAOvtB,MAAM,CAAE,CAIf,IAAK,IAHDe,EAAWL,EAAMK,QAAQ,CACzBS,EAAUd,EAAMoE,UAAU,GAC1BpD,EAAO,EAAE,CACJY,EAAI,EAAGwE,EAAOymB,EAAOvtB,MAAM,CAAEqW,EAAQ,KAAK,EAAGoX,EAAc,KAAK,EAAGnrB,EAAIwE,EAAM,EAAExE,EAEpF,GADA+T,EAAQkX,CAAM,CAACjrB,EAAE,CACbkrB,CAAAA,GACA,OAAOnX,EAAMqX,QAAQ,EAAK,OAAOrX,EAAMsX,QAAQ,EAG/CrrB,EAAI,GAAK,CAACgrB,IACVvsB,EAAS2D,UAAU,GACnB3D,EAASkK,OAAO,CAACvJ,GACjBX,EAAS8J,qBAAqB,CAACwiB,EAAS,CAAA,GACxC7rB,EAAUT,EAAS+D,UAAU,GAC7BpD,EAAO,EAAE,CACT2rB,EAAU,EAAE,EAEhBI,EAAejsB,CAAO,CAAC6U,EAAMzT,MAAM,CAAC,EAAI,EAAE,CAC1C,IAAK,IAAI+E,EAAI,EAAGC,EAAO6lB,EAAYztB,MAAM,CAAEyd,EAAO,KAAK,EAA4C9V,EAAIC,EAAM,EAAED,EAE3G,OAAQ,OADD8lB,CAAW,CAAC9lB,EAAE,EAEjB,QACI,QACJ,KAAK,UACL,IAAK,SACL,IAAK,SAET,EAsBR5G,EAAS2D,UAAU,GACnB3D,EAASkK,OAAO,CAACvJ,GACjBX,EAAS8J,qBAAqB,CAACwiB,EACnC,CAEA,OADA5tB,AA7De,IAAI,CA6DVG,IAAI,CAAC,CAAEC,KAAM,cAAeoB,OAAQN,EAAaD,MAAOA,CAAM,GAChEA,CACX,EASA0sB,EAAc3b,cAAc,CAAG,CAC3B5R,KAAM,QACN0tB,OAAQ,EAAE,AACd,EACOH,CACX,EAAErrB,GACFA,EAAuBF,YAAY,CAAC,QAASurB,IAuB7C,IAAIQ,IACIxwB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAKA2nB,GAAqB,AAAC5uB,IAA+EG,KAAK,CAU1G0uB,GAA8B,SAAUnnB,CAAM,EAa9C,SAASmnB,EAAavuB,CAAO,EACzB,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,CAErC,OADAqF,EAAM3E,OAAO,CAAGsuB,GAAmBC,EAAarc,cAAc,CAAElS,GACzD2E,CACX,CAuPA,OAvQA0pB,GAAqBE,EAAcnnB,GAsBnCmnB,EAAaC,SAAS,CAAG,SAAU9vB,CAAC,CAAE6H,CAAC,EACnC,MAAQ,AAAC7H,CAAAA,GAAK,CAAA,EAAM6H,CAAAA,GAAK,CAAA,EAAK,GAC1B,CAAA,CAAA,AAAC7H,CAAAA,GAAK,CAAA,EAAM6H,CAAAA,GAAK,CAAA,CAAC,CAE1B,EACAgoB,EAAaE,UAAU,CAAG,SAAU/vB,CAAC,CAAE6H,CAAC,EACpC,MAAQ,AAACA,CAAAA,GAAK,CAAA,EAAM7H,CAAAA,GAAK,CAAA,EAAK,GAC1B,CAAA,CAAA,AAAC6H,CAAAA,GAAK,CAAA,EAAM7H,CAAAA,GAAK,CAAA,CAAC,CAE1B,EACA6vB,EAAaG,cAAc,CAAG,SAAUC,CAAS,CAAEC,CAAa,SAC5D,AAAIA,EACA,AAAID,AAAc,SAAdA,EACO,SAAUjwB,CAAC,CAAE6H,CAAC,EAAI,MAAO,CAACqoB,EAAclwB,EAAG6H,EAAI,EAEnDqoB,EAEHD,AAAc,QAAdA,EACJJ,EAAaC,SAAS,CACtBD,EAAaE,UAAU,AAC/B,EAiBAF,EAAanvB,SAAS,CAACyvB,gBAAgB,CAAG,SAAU1tB,CAAK,EAGrD,IAAK,IAFDgB,EAAOhB,EAAMqI,OAAO,GACpBslB,EAAgB,EAAE,CACb/rB,EAAI,EAAGwE,EAAOpF,EAAK1B,MAAM,CAAEsC,EAAIwE,EAAM,EAAExE,EAC5C+rB,EAAc9tB,IAAI,CAAC,CACfuN,MAAOxL,EACPmD,IAAK/D,CAAI,CAACY,EAAE,AAChB,GAEJ,OAAO+rB,CACX,EAuBAP,EAAanvB,SAAS,CAACwC,UAAU,CAAG,SAAUT,CAAK,CAAEU,CAAU,CAAEC,CAAQ,CAAEC,CAAS,CAAEX,CAAW,EAC7F,IACIyE,EAAK3F,AADM,IAAI,CACDF,OAAO,CACrB+uB,EAAgBlpB,EAAGkpB,aAAa,CAChCC,EAAgBnpB,EAAGmpB,aAAa,CAgBpC,OAfIntB,IAAektB,IACXC,GACA7tB,EAAMK,QAAQ,CAACmJ,OAAO,CAAC9I,EAAYC,EAAUC,GAC7CZ,EAAMK,QAAQ,CAACsE,SAAS,CAACkpB,EAAe9uB,AAPjC,IAAI,CAQNE,WAAW,CAAC,IAvkPkB+G,EAukPC,CAChClF,QAASd,EACJoE,UAAU,CAAC,CAACwpB,EAAeC,EAAc,CAClD,IACKxtB,QAAQ,CACR6D,SAAS,CAAC2pB,KAGf9uB,AAhBO,IAAI,CAgBFE,WAAW,CAACe,EAAOC,IAG7BD,CACX,EAoBAotB,EAAanvB,SAAS,CAAC4C,aAAa,CAAG,SAAUb,CAAK,CAAEc,CAAO,CAAEH,CAAQ,CAAEV,CAAW,EAClF,IACIyE,EAAK3F,AADM,IAAI,CACDF,OAAO,CACrB+uB,EAAgBlpB,EAAGkpB,aAAa,CAChCC,EAAgBnpB,EAAGmpB,aAAa,CAChCxpB,EAAc1G,OAAO2G,IAAI,CAACxD,GAiB9B,OAhBIuD,EAAYoE,OAAO,CAACmlB,GAAiB,KACjCC,GACA/sB,CAAO,CAACuD,CAAW,CAAC,EAAE,CAAC,CAAC/E,MAAM,EAC9BU,EAAMK,QAAQ,CAACuE,UAAU,CAAC9D,EAASH,GACnCX,EAAMK,QAAQ,CAACsE,SAAS,CAACkpB,EAAe9uB,AATjC,IAAI,CAUNE,WAAW,CAAC,IAlnPkB+G,EAknPC,CAChClF,QAASd,EACJoE,UAAU,CAAC,CAACwpB,EAAeC,EAAc,CAClD,IACKxtB,QAAQ,CACR6D,SAAS,CAAC2pB,KAGf9uB,AAlBO,IAAI,CAkBFE,WAAW,CAACe,EAAOC,IAG7BD,CACX,EAoBAotB,EAAanvB,SAAS,CAAC8C,UAAU,CAAG,SAAUf,CAAK,CAAEgB,CAAI,CAAEL,CAAQ,CAAEV,CAAW,EAC5E,IACIyE,EAAK3F,AADM,IAAI,CACDF,OAAO,CACrB+uB,EAAgBlpB,EAAGkpB,aAAa,CAChCC,EAAgBnpB,EAAGmpB,aAAa,CAepC,OAdIA,GACA7sB,EAAK1B,MAAM,EACXU,EAAMK,QAAQ,CAACkK,OAAO,CAACvJ,EAAML,GAC7BX,EAAMK,QAAQ,CAACsE,SAAS,CAACkpB,EAAe9uB,AAP7B,IAAI,CAQVE,WAAW,CAAC,IA3pPsB+G,EA2pPH,CAChClF,QAASd,EACJoE,UAAU,CAAC,CAACwpB,EAAeC,EAAc,CAClD,IACKxtB,QAAQ,CACR6D,SAAS,CAAC2pB,KAGf9uB,AAhBW,IAAI,CAgBNE,WAAW,CAACe,EAAOC,GAEzBD,CACX,EAaAotB,EAAanvB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAG7DlB,AADe,IAAI,CACVG,IAAI,CAAC,CAAEC,KAAM,SAAUoB,OAAQN,EAAaD,MAAOA,CAAM,GAClE,IAHI0E,EAGAL,EAAcrE,EAAM8H,cAAc,GAClCnE,EAAW3D,EAAMsI,WAAW,GAC5BqlB,EAAgB,IAAI,CAACD,gBAAgB,CAAC1tB,GACtCkO,EAAKnP,AALM,IAAI,CAKDF,OAAO,CACrB2uB,EAAYtf,EAAGsf,SAAS,CACxBI,EAAgB1f,EAAG0f,aAAa,CAChCC,EAAgB3f,EAAG2f,aAAa,CAChCJ,EAAgBvf,EAAG4f,OAAO,CAC1BA,EAAUV,EAAaG,cAAc,CAACC,EACtCC,GACAM,EAAqB1pB,EAAYoE,OAAO,CAACmlB,GACzCvtB,EAAWL,EAAMK,QAAQ,CAI7B,GAHI0tB,AAAuB,KAAvBA,GACAJ,EAAcxgB,IAAI,CAAC,SAAU5P,CAAC,CAAE6H,CAAC,EAAI,OAAO0oB,EAAQvwB,EAAEwH,GAAG,CAACgpB,EAAmB,CAAE3oB,EAAEL,GAAG,CAACgpB,EAAmB,CAAG,GAE3GF,EAAe,CAEf,IAAK,IADD3rB,EAAS,EAAE,CACNN,EAAI,EAAGA,EAAI+B,EAAU,EAAE/B,EAC5BM,CAAM,CAACyrB,CAAa,CAAC/rB,EAAE,CAACwL,KAAK,CAAC,CAAGxL,EAErCvB,EAASuE,UAAU,CAAEF,CAAAA,AAASA,CAATA,EAAK,CAAC,CAAA,CAAK,CAACmpB,EAAc,CAAG3rB,EAAQwC,CAAC,EAC/D,KACK,CAID,IAAK,IAHDspB,EAAkB,EAAE,CACpBhtB,EAAO,EAAE,CACTitB,EAAe,KAAK,EACfrsB,EAAI,EAAGA,EAAI+B,EAAU,EAAE/B,EAC5BqsB,EAAeN,CAAa,CAAC/rB,EAAE,CAC/BosB,EAAgBnuB,IAAI,CAACQ,EAAS+H,mBAAmB,CAAC6lB,EAAa7gB,KAAK,GACpEpM,EAAKnB,IAAI,CAACouB,EAAalpB,GAAG,EAE9B1E,EAASkK,OAAO,CAACvJ,EAAM,GACvBX,EAAS8J,qBAAqB,CAAC6jB,EACnC,CAEA,OADAjvB,AApCe,IAAI,CAoCVG,IAAI,CAAC,CAAEC,KAAM,cAAeoB,OAAQN,EAAaD,MAAOA,CAAM,GAChEA,CACX,EASAotB,EAAarc,cAAc,CAAG,CAC1B5R,KAAM,OACNquB,UAAW,OACXI,cAAe,GACnB,EACOR,CACX,EAAE/rB,GACFA,EAAuBF,YAAY,CAAC,OAAQisB,IAsB5C,IAAIc,IACIxxB,EAAgB,SAAUY,CAAC,CAC3B8H,CAAC,EAOD,MAAO1I,AANHA,CAAAA,EAAgBiB,OAAO0H,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaxD,OAAS,SAAUxE,CAAC,CAC1D8H,CAAC,EAAI9H,EAAEgI,SAAS,CAAGF,CAAG,GACd,SAAU9H,CAAC,CACnB8H,CAAC,EAAI,IAAK,IAAIG,KAAKH,EAAOzH,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACiH,EAC/DG,IAAIjI,CAAAA,CAAC,CAACiI,EAAE,CAAGH,CAAC,CAACG,EAAE,AAAD,CAAG,CAAA,EACIjI,EAAG8H,EAC5B,EACO,SAAU9H,CAAC,CAAE8H,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIwG,UAAU,uBAAyBmV,OAAO3b,GAAK,iCAE7D,SAASI,IAAO,IAAI,CAACzC,WAAW,CAAGzF,CAAG,CADtCZ,EAAcY,EAAG8H,GAEjB9H,EAAEW,SAAS,CAAGmH,AAAM,OAANA,EAAazH,OAAO8H,MAAM,CAACL,GAAMI,CAAAA,EAAGvH,SAAS,CAAGmH,EAAEnH,SAAS,CAAE,IAAIuH,CAAG,CACtF,GAIA2oB,GAA4B,AAAC5vB,IAA+E6c,UAAU,CAAEgT,GAAuB,AAAC7vB,IAA+EG,KAAK,CASpO2vB,GAAgC,SAAUpoB,CAAM,EAahD,SAASooB,EAAexvB,CAAO,EAC3B,IAAI2E,EAAQyC,EAAO9H,IAAI,CAAC,IAAI,GAAK,IAAI,CAErC,OADAqF,EAAM3E,OAAO,CAAGuvB,GAAqBC,EAAetd,cAAc,CAAElS,GAC7D2E,CACX,CA2HA,OA3IA0qB,GAAuBG,EAAgBpoB,GA4BvCooB,EAAeC,OAAO,CAAG,SAAUC,CAAS,EACxC,IAAI/qB,EAAQ,IAAI,CAChB,GAAI2qB,GAA0BI,GAC1B,OAAOA,EAEX,IAAI5iB,EAAK4iB,EAAUlR,QAAQ,CAC3B,OAAQ1R,GACJ,IAAK,MACD,IAAI6iB,EAASD,EAAUE,UAAU,CAAChqB,GAAG,CAAC,SAAUme,CAAC,EAAI,OAAOpf,EAAM8qB,OAAO,CAAC1L,EAAI,GAC9E,OAAO,SAAU7d,CAAG,CAAE/E,CAAK,CAAE4B,CAAC,EAAI,OAAO4sB,EAAOlY,KAAK,CAAC,SAAUoY,CAAI,EAAI,OAAOA,EAAK3pB,EAAK/E,EAAO4B,EAAI,EAAI,CAE5G,KAAK,KACD,IAAI+sB,EAASJ,EAAUE,UAAU,CAAChqB,GAAG,CAAC,SAAUme,CAAC,EAAI,OAAOpf,EAAM8qB,OAAO,CAAC1L,EAAI,GAC9E,OAAO,SAAU7d,CAAG,CAAE/E,CAAK,CAAE4B,CAAC,EAAI,OAAO+sB,EAAOC,IAAI,CAAC,SAAUF,CAAI,EAAI,OAAOA,EAAK3pB,EAAK/E,EAAO4B,EAAI,EAAI,CAE3G,KAAK,MACD,IAAIitB,EAAQ,IAAI,CAACP,OAAO,CAACC,EAAUA,SAAS,EAC5C,OAAO,SAAUxpB,CAAG,CAAE/E,CAAK,CAAE4B,CAAC,EAAI,MAAO,CAACitB,EAAM9pB,EAAK/E,EAAO4B,EAAI,CAExE,CACA,IAAIktB,EAAMP,EAAU7tB,UAAU,CAC1BoL,EAAQyiB,EAAUziB,KAAK,CAC3B,OAAQH,GACJ,IAAK,KAED,OAAO,SAAU5G,CAAG,EAAI,OAAOA,CAAG,CAAC+pB,EAAI,EAAIhjB,CAAO,CACtD,KAAK,MACD,OAAO,SAAU/G,CAAG,EAAI,OAAOA,CAAG,CAAC+pB,EAAI,GAAKhjB,CAAO,CACvD,KAAK,KAED,OAAO,SAAU/G,CAAG,EAAI,OAAOA,CAAG,CAAC+pB,EAAI,EAAIhjB,CAAO,CACtD,KAAK,MACD,OAAO,SAAU/G,CAAG,EAAI,OAAOA,CAAG,CAAC+pB,EAAI,GAAKhjB,CAAO,CACvD,KAAK,IACD,OAAO,SAAU/G,CAAG,EAAI,MAAO,AAACA,CAAAA,CAAG,CAAC+pB,EAAI,EAAI,CAAA,EAAMhjB,CAAAA,GAAS,CAAA,CAAI,CACnE,KAAK,KACD,OAAO,SAAU/G,CAAG,EAAI,MAAO,AAACA,CAAAA,CAAG,CAAC+pB,EAAI,EAAI,CAAA,GAAOhjB,CAAAA,GAAS,CAAA,CAAI,CACpE,KAAK,IACD,OAAO,SAAU/G,CAAG,EAAI,MAAO,AAACA,CAAAA,CAAG,CAAC+pB,EAAI,EAAI,CAAA,EAAMhjB,CAAAA,GAAS,CAAA,CAAI,CACnE,KAAK,KACD,OAAO,SAAU/G,CAAG,EAAI,MAAO,AAACA,CAAAA,CAAG,CAAC+pB,EAAI,EAAI,CAAA,GAAOhjB,CAAAA,GAAS,CAAA,CAAI,CACxE,CACA,IAAIijB,EAAaR,EAAUQ,UAAU,CACjCxb,EAAM,SAAUmV,CAAG,EACf,IAAI9H,EAAI,GAAK8H,EACjB,OAAO,AAACqG,MAAAA,GAA+CA,EAAqBnO,EAAEnE,WAAW,GAAKmE,CAClG,QACA,AACS,aADDjV,EAEO,SAAU5G,CAAG,EAAI,OAAOwO,EAAIxO,CAAG,CAAC+pB,EAAI,EAAE3nB,QAAQ,CAACoM,EAAIzH,GAAS,EAE5D,SAAU/G,CAAG,EAAI,OAAOwO,EAAIxO,CAAG,CAAC+pB,EAAI,CAAC,CAACnjB,EAAG,CAAC4H,EAAIzH,GAAS,CAE1E,EAkBAuiB,EAAepwB,SAAS,CAACgB,WAAW,CAAG,SAAUe,CAAK,CAAEC,CAAW,EAE/DlB,AADe,IAAI,CACVG,IAAI,CAAC,CAAEC,KAAM,SAAUoB,OAAQN,EAAaD,MAAOA,CAAM,GAClE,IAAIuuB,EAAYxvB,AAFD,IAAI,CAEMF,OAAO,CAAC0vB,SAAS,CAC1C,GAAI,CAACA,EAED,OAAOvuB,EAOX,IAAK,IALDgvB,EAAWX,EAAeC,OAAO,CAACC,GAElCluB,EAAWL,EAAMK,QAAQ,CACzBW,EAAO,EAAE,CACT2rB,EAAU,EAAE,CACP/qB,EAAI,EAAGwE,EAAOpG,EAAMsI,WAAW,GAAI1G,EAAIwE,EAAM,EAAExE,EAAG,CACvD,IAAImD,EAAM/E,EAAM0I,YAAY,CAAC9G,GACxBmD,GAGDiqB,EAASjqB,EAAK/E,EAAO4B,KACrBZ,EAAKnB,IAAI,CAACkF,GACV4nB,EAAQ9sB,IAAI,CAACQ,EAAS+H,mBAAmB,CAACxG,IAElD,CAKA,OAJAvB,EAAS2D,UAAU,GACnB3D,EAASkK,OAAO,CAACvJ,GACjBX,EAAS8J,qBAAqB,CAACwiB,GAC/B5tB,AAzBe,IAAI,CAyBVG,IAAI,CAAC,CAAEC,KAAM,cAAeoB,OAAQN,EAAaD,MAAOA,CAAM,GAChEA,CACX,EASAquB,EAAetd,cAAc,CAAG,CAC5B5R,KAAM,QACV,EACOkvB,CACX,EAAEhtB,GACFA,EAAuBF,YAAY,CAAC,SAAUktB,IA6B9C,IAAIY,GAAK1wB,GACT0wB,CAAAA,GAAEtyB,aAAa,CAAGsyB,GAAEtyB,aAAa,EAAIoT,GACrCkf,GAAEryB,aAAa,CAAGqyB,GAAEryB,aAAa,EAAIuX,GACrC8a,GAAE7a,UAAU,CAAG6a,GAAE7a,UAAU,EAAIuC,GAC/BsY,GAAEzyB,YAAY,CAAGyyB,GAAEzyB,YAAY,EAAI6E,EACnC4tB,GAAEnY,QAAQ,CAAGmY,GAAEnY,QAAQ,EA5qM2BA,GA6qMlDmY,GAAEjpB,SAAS,CAAGipB,GAAEjpB,SAAS,EAh9P0BA,EAi9PnDipB,GAAEpO,OAAO,CAAGoO,GAAEpO,OAAO,EA/oH+BA,GAgpHvB,IAAIxiB,GAAmBE,IAG1C,OADYH,EAAoB,OAAU,AAE3C,GAET"}