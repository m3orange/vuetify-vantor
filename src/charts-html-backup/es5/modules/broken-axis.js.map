{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/broken-axis\n * @requires highcharts\n *\n * (c) 2009-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"StackItem\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/broken-axis\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"StackItem\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/broken-axis\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"StackItem\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"StackItem\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__184__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 184:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__184__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ broken_axis_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"StackItem\"],\"commonjs\":[\"highcharts\",\"StackItem\"],\"commonjs2\":[\"highcharts\",\"StackItem\"],\"root\":[\"Highcharts\",\"StackItem\"]}\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_ = __webpack_require__(184);\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default = /*#__PURE__*/__webpack_require__.n(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_);\n;// ./code/es5/es-modules/Core/Axis/BrokenAxis.js\n/* *\n *\n *  (c) 2009-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick;\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Axis with support of broken data rows.\n * @private\n */\nvar BrokenAxis;\n(function (BrokenAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds support for broken axes.\n     * @private\n     */\n    function compose(AxisClass, SeriesClass) {\n        if (!AxisClass.keepProps.includes('brokenAxis')) {\n            AxisClass.keepProps.push('brokenAxis');\n            addEvent(AxisClass, 'init', onAxisInit);\n            addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n            addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            var seriesProto = SeriesClass.prototype;\n            seriesProto.drawBreaks = seriesDrawBreaks;\n            seriesProto.gappedPath = seriesGappedPath;\n            addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n            addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n        }\n        return AxisClass;\n    }\n    BrokenAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAxisAfterInit() {\n        if (typeof this.brokenAxis !== 'undefined') {\n            this.brokenAxis.setBreaks(this.options.breaks, false);\n        }\n    }\n    /**\n     * Force Axis to be not-ordinal when breaks are defined.\n     * @private\n     */\n    function onAxisAfterSetOptions() {\n        var _a;\n        var axis = this;\n        // Too early for axis.brokenAxis?.hasBreaks.\n        if (Object.keys(((_a = axis.options.breaks) === null || _a === void 0 ? void 0 : _a[0]) || {}).length) {\n            axis.options.ordinal = false;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisAfterSetTickPositions() {\n        var axis = this,\n            brokenAxis = axis.brokenAxis;\n        if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n            var tickPositions = axis.tickPositions,\n                info = axis.tickPositions.info,\n                newPositions = [];\n            for (var i = 0; i < tickPositions.length; i++) {\n                if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                    newPositions.push(tickPositions[i]);\n                }\n            }\n            axis.tickPositions = newPositions;\n            axis.tickPositions.info = info;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInit() {\n        var axis = this;\n        if (!axis.brokenAxis) {\n            axis.brokenAxis = new Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterGeneratePoints() {\n        var _a,\n            _b;\n        var _c = this,\n            isDirty = _c.isDirty,\n            connectNulls = _c.options.connectNulls,\n            points = _c.points,\n            xAxis = _c.xAxis,\n            yAxis = _c.yAxis;\n        // Set, or reset visibility of the points. Axis.setBreaks marks\n        // the series as isDirty\n        if (isDirty) {\n            var i = points.length;\n            while (i--) {\n                var point = points[i];\n                // Respect nulls inside the break (#4275)\n                var nullGap = point.y === null && connectNulls === false;\n                var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x,\n                    true)) ||\n                        ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y,\n                    true))));\n                // Set point.visible if in any break.\n                // If not in break, reset visible to original value.\n                point.visible = isPointInBreak ?\n                    false :\n                    point.options.visible !== false;\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterRender() {\n        this.drawBreaks(this.xAxis, ['x']);\n        this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n    }\n    /**\n     * @private\n     */\n    function seriesDrawBreaks(axis, keys) {\n        var _a;\n        var series = this,\n            points = series.points;\n        var breaks,\n            threshold,\n            y;\n        if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n            var brokenAxis_1 = axis.brokenAxis;\n            keys.forEach(function (key) {\n                breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                threshold = axis.isXAxis ?\n                    axis.min :\n                    pick(series.options.threshold, axis.min);\n                points.forEach(function (point) {\n                    var _a;\n                    y = (_a = point['stack' + key.toUpperCase()]) !== null && _a !== void 0 ? _a : point[key];\n                    breaks.forEach(function (brk) {\n                        if (isNumber(threshold) && isNumber(y)) {\n                            var eventName = '';\n                            if ((threshold < brk.from && y > brk.to) ||\n                                (threshold > brk.from && y < brk.from)) {\n                                eventName = 'pointBreak';\n                            }\n                            else if ((threshold < brk.from &&\n                                y > brk.from &&\n                                y < brk.to) || (threshold > brk.from &&\n                                y > brk.to &&\n                                y < brk.from)) {\n                                eventName = 'pointInBreak';\n                            }\n                            if (eventName) {\n                                fireEvent(axis, eventName, { point: point, brk: brk });\n                            }\n                        }\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * Extend getGraphPath by identifying gaps in the data so that we\n     * can draw a gap in the line or area. This was moved from ordinal\n     * axis module to broken axis module as of #5045.\n     *\n     * @private\n     * @function Highcharts.Series#gappedPath\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Gapped path\n     */\n    function seriesGappedPath() {\n        var currentDataGrouping = this.currentDataGrouping,\n            groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize,\n            points = this.points.slice(),\n            yAxis = this.yAxis;\n        var gapSize = this.options.gapSize,\n            i = points.length - 1,\n            stack;\n        /**\n         * Defines when to display a gap in the graph, together with the\n         * [gapUnit](plotOptions.series.gapUnit) option.\n         *\n         * In case when `dataGrouping` is enabled, points can be grouped\n         * into a larger time span. This can make the grouped points to\n         * have a greater distance than the absolute value of `gapSize`\n         * property, which will result in disappearing graph completely.\n         * To prevent this situation the mentioned distance between\n         * grouped points is used instead of previously defined\n         * `gapSize`.\n         *\n         * In practice, this option is most often used to visualize gaps\n         * in time series. In a stock chart, intraday data is available\n         * for daytime hours, while gaps will appear in nights and\n         * weekends.\n         *\n         * @see [gapUnit](plotOptions.series.gapUnit)\n         * @see [xAxis.breaks](#xAxis.breaks)\n         *\n         * @sample {highstock} stock/plotoptions/series-gapsize/\n         * Setting the gap size to 2 introduces gaps for weekends in\n         * daily datasets.\n         *\n         * @type      {number}\n         * @default   0\n         * @product   highstock\n         * @requires  modules/broken-axis\n         * @apioption plotOptions.series.gapSize\n         */\n        /**\n         * Together with [gapSize](plotOptions.series.gapSize), this\n         * option defines where to draw gaps in the graph.\n         *\n         * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n         * means that if the distance between two points is greater than\n         * 5 times that of the two closest points, the graph will be\n         * broken.\n         *\n         * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n         * axis values, which on a datetime axis is milliseconds. This\n         * also applies to the navigator series that inherits gap\n         * options from the base series.\n         *\n         * @see [gapSize](plotOptions.series.gapSize)\n         *\n         * @type       {string}\n         * @default    relative\n         * @since      5.0.13\n         * @product    highstock\n         * @validvalue [\"relative\", \"value\"]\n         * @requires   modules/broken-axis\n         * @apioption  plotOptions.series.gapUnit\n         */\n        if (gapSize && i > 0) { // #5008\n            // Gap unit is relative\n            if (this.options.gapUnit !== 'value') {\n                gapSize *= this.basePointRange;\n            }\n            // Setting a new gapSize in case dataGrouping is enabled\n            // (#7686)\n            if (groupingSize &&\n                groupingSize > gapSize &&\n                // Except when DG is forced (e.g. from other series)\n                // and has lower granularity than actual points (#11351)\n                groupingSize >= this.basePointRange) {\n                gapSize = groupingSize;\n            }\n            // Extension for ordinal breaks\n            var current = void 0,\n                next = void 0;\n            while (i--) {\n                // Reassign next if it is not visible\n                if (!(next && next.visible !== false)) {\n                    next = points[i + 1];\n                }\n                current = points[i];\n                // Skip iteration if one of the points is not visible\n                if (next.visible === false || current.visible === false) {\n                    continue;\n                }\n                if (next.x - current.x > gapSize) {\n                    var xRange = (current.x + next.x) / 2;\n                    points.splice(// Insert after this one\n                    i + 1, 0, {\n                        isNull: true,\n                        x: xRange\n                    });\n                    // For stacked chart generate empty stack items, #6546\n                    if (yAxis.stacking && this.options.stacking) {\n                        stack = yAxis.stacking.stacks[this.stackKey][xRange] = new (highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default())(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                        stack.total = 0;\n                    }\n                }\n                // Assign current to next for the upcoming iteration\n                next = current;\n            }\n        }\n        // Call base method\n        return this.getGraphPath(points);\n    }\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Provides support for broken axes.\n     * @private\n     * @class\n     */\n    var Additions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Additions(axis) {\n                this.axis = axis;\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        Additions.isInBreak = function (brk, val) {\n            var repeat = brk.repeat || Infinity,\n                from = brk.from,\n                length = brk.to - brk.from,\n                test = (val >= from ?\n                    (val - from) % repeat :\n                    repeat - ((from - val) % repeat));\n            var ret;\n            if (!brk.inclusive) {\n                ret = test < length && test !== 0;\n            }\n            else {\n                ret = test <= length;\n            }\n            return ret;\n        };\n        /**\n         * @private\n         */\n        Additions.lin2Val = function (val) {\n            var axis = this,\n                threshold = axis.min || 0,\n                brokenAxis = axis.brokenAxis,\n                breakArray = brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.breakArray;\n            if (!(breakArray === null || breakArray === void 0 ? void 0 : breakArray.length) || !isNumber(val)) {\n                return val;\n            }\n            var nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (var _i = 0, breakArray_1 = breakArray; _i < breakArray_1.length; _i++) {\n                    var brk = breakArray_1[_i];\n                    if (brk.from > nval) {\n                        // Skip all breaks after the nval.\n                        break;\n                    }\n                    else if (brk.to <= nval && brk.to > threshold) {\n                        nval += brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval += brk.len;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (var _a = 0, breakArray_2 = breakArray; _a < breakArray_2.length; _a++) {\n                    var brk = breakArray_2[_a];\n                    if (brk.from > threshold) {\n                        // Skip all breaks above the threshold.\n                        break;\n                    }\n                    else if (brk.from >= nval && brk.from < threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval -= brk.len;\n                    }\n                }\n            }\n            return nval;\n        };\n        /**\n         * @private\n         */\n        Additions.val2Lin = function (val) {\n            var axis = this,\n                threshold = axis.min || 0,\n                brokenAxis = axis.brokenAxis,\n                breakArray = brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.breakArray;\n            if (!(breakArray === null || breakArray === void 0 ? void 0 : breakArray.length) || !isNumber(val)) {\n                return val;\n            }\n            var nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (var _i = 0, breakArray_3 = breakArray; _i < breakArray_3.length; _i++) {\n                    var brk = breakArray_3[_i];\n                    if (brk.to <= val && brk.to > threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (brk.from > val) {\n                        // Skip all breaks after the val.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval -= (val - brk.from);\n                        break;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (var _a = 0, breakArray_4 = breakArray; _a < breakArray_4.length; _a++) {\n                    var brk = breakArray_4[_a];\n                    if (brk.from >= val && brk.from < threshold) {\n                        nval += brk.len;\n                    }\n                    else if (brk.from > threshold) {\n                        // Skip all breaks before the threshold.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval += (brk.to - val);\n                        break;\n                    }\n                }\n            }\n            return nval;\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first break found where the x is larger then break.from\n         * and smaller then break.to.\n         *\n         * @param {number} x\n         * The number which should be within a break.\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n         * The array of breaks to search within.\n         *\n         * @return {Highcharts.XAxisBreaksOptions|undefined}\n         * Returns the first break found that matches, returns false if no break\n         * is found.\n         */\n        Additions.prototype.findBreakAt = function (x, breaks) {\n            return find(breaks, function (b) {\n                return b.from < x && x < b.to;\n            });\n        };\n        /**\n         * @private\n         */\n        Additions.prototype.isInAnyBreak = function (val, testKeep) {\n            var brokenAxis = this,\n                axis = brokenAxis.axis,\n                breaks = axis.options.breaks || [];\n            var i = breaks.length,\n                inbrk,\n                keep,\n                ret;\n            if (i && isNumber(val)) {\n                while (i--) {\n                    if (Additions.isInBreak(breaks[i], val)) {\n                        inbrk = true;\n                        if (!keep) {\n                            keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                        }\n                    }\n                }\n                if (inbrk && testKeep) {\n                    ret = inbrk && !keep;\n                }\n                else {\n                    ret = inbrk;\n                }\n            }\n            return ret;\n        };\n        /**\n         * Dynamically set or unset breaks in an axis. This function in lighter\n         * than using Axis.update, and it also preserves animation.\n         *\n         * @private\n         * @function Highcharts.Axis#setBreaks\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n         * The breaks to add. When `undefined` it removes existing breaks.\n         *\n         * @param {boolean} [redraw=true]\n         * Whether to redraw the chart immediately.\n         */\n        Additions.prototype.setBreaks = function (breaks, redraw) {\n            var _a;\n            var brokenAxis = this,\n                axis = brokenAxis.axis,\n                time = axis.chart.time,\n                hasBreaks = isArray(breaks) &&\n                    !!Object.keys((breaks === null || breaks === void 0 ? void 0 : breaks[0]) || {}).length;\n            axis.isDirty = ((_a = brokenAxis.hasBreaks) !== null && _a !== void 0 ? _a : false) !== hasBreaks;\n            brokenAxis.hasBreaks = hasBreaks;\n            // Compile string dates\n            breaks === null || breaks === void 0 ? void 0 : breaks.forEach(function (brk) {\n                brk.from = time.parse(brk.from) || 0;\n                brk.to = time.parse(brk.to) || 0;\n            });\n            if (breaks !== axis.options.breaks) {\n                axis.options.breaks = axis.userOptions.breaks = breaks;\n            }\n            axis.forceRedraw = true; // Force recalculation in setScale\n            // Recalculate series related to the axis.\n            axis.series.forEach(function (series) {\n                series.isDirty = true;\n            });\n            if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                // Revert to prototype functions\n                delete axis.val2lin;\n                delete axis.lin2val;\n            }\n            if (hasBreaks) {\n                axis.userOptions.ordinal = false;\n                axis.lin2val = Additions.lin2Val;\n                axis.val2lin = Additions.val2Lin;\n                axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                    var _a;\n                    // If trying to set extremes inside a break, extend min to\n                    // after, and max to before the break ( #3857 )\n                    // but not for gantt (#13898);\n                    if (brokenAxis.hasBreaks && !((_a = axis.treeGrid) === null || _a === void 0 ? void 0 : _a.tree)) {\n                        var breaks_1 = (this.brokenAxis.breakArray || []);\n                        var axisBreak = void 0;\n                        while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                            newMin = axisBreak.to;\n                        }\n                        while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                            newMax = axisBreak.from;\n                        }\n                        // If both min and max is within the same break.\n                        if (newMax < newMin) {\n                            newMax = newMin;\n                        }\n                    }\n                    axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                };\n                axis.setAxisTranslation = function () {\n                    var _a,\n                        _b,\n                        _c,\n                        _d,\n                        _e,\n                        _f;\n                    axis.constructor.prototype.setAxisTranslation.call(this);\n                    brokenAxis.unitLength = void 0;\n                    if (brokenAxis.hasBreaks) {\n                        var breaks_2 = axis.options.breaks || [],\n                            breakArrayTemp_1 = [],\n                            breakArray_5 = [],\n                            pointRangePadding = (_a = axis.pointRangePadding) !== null && _a !== void 0 ? _a : 0;\n                        var length_1 = 0,\n                            inBrk_1,\n                            repeat_1,\n                            min_1 = (_b = axis.userMin) !== null && _b !== void 0 ? _b : axis.min,\n                            max_1 = (_c = axis.userMax) !== null && _c !== void 0 ? _c : axis.max,\n                            dataMin_1 = (_d = axis.dataMin) !== null && _d !== void 0 ? _d : min_1,\n                            dataMax_1 = (_e = axis.dataMax) !== null && _e !== void 0 ? _e : max_1,\n                            start_1,\n                            i_1;\n                        if (isNumber(axis.threshold)) {\n                            dataMin_1 = Math.min(dataMin_1 !== null && dataMin_1 !== void 0 ? dataMin_1 : axis.threshold, axis.threshold);\n                            dataMax_1 = Math.max(dataMax_1 !== null && dataMax_1 !== void 0 ? dataMax_1 : axis.threshold, axis.threshold);\n                        }\n                        // Min & max check (#4247) but not for gantt (#13898)\n                        if (!((_f = axis.treeGrid) === null || _f === void 0 ? void 0 : _f.tree)) {\n                            breaks_2.forEach(function (brk) {\n                                repeat_1 = brk.repeat || Infinity;\n                                if (isNumber(min_1) && isNumber(max_1)) {\n                                    if (Additions.isInBreak(brk, min_1)) {\n                                        min_1 += ((brk.to % repeat_1) -\n                                            (min_1 % repeat_1));\n                                    }\n                                    if (Additions.isInBreak(brk, max_1)) {\n                                        max_1 -= ((max_1 % repeat_1) -\n                                            (brk.from % repeat_1));\n                                    }\n                                }\n                            });\n                        }\n                        // Construct an array holding all breaks in the axis\n                        // for the current data range.\n                        if (isNumber(dataMin_1) && isNumber(dataMax_1)) {\n                            breaks_2.forEach(function (brk) {\n                                start_1 = brk.from;\n                                repeat_1 = brk.repeat || Infinity;\n                                while (start_1 - repeat_1 > dataMin_1) {\n                                    start_1 -= repeat_1;\n                                }\n                                while (start_1 < dataMin_1) {\n                                    start_1 += repeat_1;\n                                }\n                                for (i_1 = start_1; i_1 < dataMax_1; i_1 += repeat_1) {\n                                    breakArrayTemp_1.push({\n                                        value: i_1,\n                                        move: 'in'\n                                    });\n                                    breakArrayTemp_1.push({\n                                        value: i_1 + brk.to - brk.from,\n                                        move: 'out',\n                                        size: brk.breakSize\n                                    });\n                                }\n                            });\n                        }\n                        breakArrayTemp_1.sort(function (a, b) {\n                            return ((a.value === b.value) ?\n                                ((a.move === 'in' ? 0 : 1) -\n                                    (b.move === 'in' ? 0 : 1)) :\n                                a.value - b.value);\n                        });\n                        // Simplify the breaks\n                        inBrk_1 = 0;\n                        start_1 = dataMin_1;\n                        breakArrayTemp_1.forEach(function (brk) {\n                            inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                            if (inBrk_1 === 1 && brk.move === 'in') {\n                                start_1 = brk.value;\n                            }\n                            if (inBrk_1 === 0 && isNumber(start_1)) {\n                                breakArray_5.push({\n                                    from: start_1,\n                                    to: brk.value,\n                                    len: brk.value - start_1 - (brk.size || 0)\n                                });\n                                if (isNumber(min_1) && isNumber(max_1) &&\n                                    start_1 < max_1 && brk.value > min_1) {\n                                    // Sum break gaps in the visible range\n                                    length_1 += (brk.value -\n                                        start_1 -\n                                        (brk.size || 0));\n                                }\n                            }\n                        });\n                        brokenAxis.breakArray = breakArray_5;\n                        // Used with staticScale, and below the actual axis\n                        // length, when breaks are subtracted.\n                        if (isNumber(min_1) &&\n                            isNumber(max_1) &&\n                            isNumber(axis.min)) {\n                            brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                pointRangePadding;\n                            fireEvent(axis, 'afterBreaks');\n                            if (axis.staticScale) {\n                                axis.transA = axis.staticScale;\n                            }\n                            else if (brokenAxis.unitLength) {\n                                axis.transA *=\n                                    (max_1 - axis.min + pointRangePadding) /\n                                        brokenAxis.unitLength;\n                            }\n                            if (pointRangePadding) {\n                                axis.minPixelPadding =\n                                    axis.transA * (axis.minPointOffset || 0);\n                            }\n                            axis.min = min_1;\n                            axis.max = max_1;\n                        }\n                    }\n                };\n            }\n            if (pick(redraw, true)) {\n                axis.chart.redraw();\n            }\n        };\n        return Additions;\n    }());\n    BrokenAxis.Additions = Additions;\n})(BrokenAxis || (BrokenAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Axis_BrokenAxis = (BrokenAxis);\n\n;// ./code/es5/es-modules/masters/modules/broken-axis.js\n\n\n\n\nvar G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nG.BrokenAxis = G.BrokenAxis || Axis_BrokenAxis;\nG.BrokenAxis.compose(G.Axis, G.Series);\n/* harmony default export */ var broken_axis_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__184__","BrokenAxis","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","broken_axis_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default","addEvent","find","fireEvent","isArray","isNumber","pick","onAxisAfterInit","brokenAxis","setBreaks","options","breaks","onAxisAfterSetOptions","_a","keys","axis","length","ordinal","onAxisAfterSetTickPositions","hasBreaks","tickPositions","info","newPositions","i","isInAnyBreak","push","onAxisInit","Additions","onSeriesAfterGeneratePoints","_b","isDirty","_c","connectNulls","points","xAxis","yAxis","point","isPointInBreak","y","x","visible","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","threshold","series","brokenAxis_1","forEach","breakArray","isXAxis","min","toUpperCase","brk","eventName","from","to","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","slice","gapUnit","basePointRange","current","next","xRange","splice","isNull","stacking","stack","stacks","stackKey","stackLabels","total","getGraphPath","compose","AxisClass","SeriesClass","keepProps","includes","seriesProto","gappedPath","isInBreak","val","ret","repeat","Infinity","test","inclusive","lin2Val","nval","_i","breakArray_1","len","breakArray_2","val2Lin","breakArray_3","breakArray_4","findBreakAt","b","testKeep","inbrk","keep","showPoints","redraw","time","chart","parse","userOptions","forceRedraw","val2lin","lin2val","setExtremes","newMin","newMax","animation","eventArguments","treeGrid","tree","breaks_1","axisBreak","constructor","setAxisTranslation","unitLength","_d","_e","_f","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayTemp_1","breakArray_5","pointRangePadding","length_1","min_1","userMin","max_1","userMax","max","dataMin_1","dataMin","dataMax_1","dataMax","Math","value","move","size","breakSize","sort","staticScale","transA","minPixelPadding","minPointOffset","Axis_BrokenAxis","G","Axis","Series"],"mappings":"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"}