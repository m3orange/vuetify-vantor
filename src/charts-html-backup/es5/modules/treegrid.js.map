{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v12.4.0 (2025-09-04)\n * @module highcharts/modules/treegrid\n * @requires highcharts\n *\n * Tree Grid\n *\n * (c) 2016-2025 Jon Arild Nygard\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"StackItem\"], require(\"highcharts\")[\"Axis\"], require(\"highcharts\")[\"Color\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/modules/treegrid\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"StackItem\"], [\"highcharts/highcharts\",\"Axis\"], [\"highcharts/highcharts\",\"Color\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/modules/treegrid\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"StackItem\"], require(\"highcharts\")[\"Axis\"], require(\"highcharts\")[\"Color\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"StackItem\"], root[\"Highcharts\"][\"Axis\"], root[\"Highcharts\"][\"Color\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__184__, __WEBPACK_EXTERNAL_MODULE__532__, __WEBPACK_EXTERNAL_MODULE__620__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 184:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__184__;\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__532__;\n\n/***/ }),\n\n/***/ 620:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__620__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ treegrid_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"StackItem\"],\"commonjs\":[\"highcharts\",\"StackItem\"],\"commonjs2\":[\"highcharts\",\"StackItem\"],\"root\":[\"Highcharts\",\"StackItem\"]}\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_ = __webpack_require__(184);\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default = /*#__PURE__*/__webpack_require__.n(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_);\n;// ./code/es5/es-modules/Core/Axis/BrokenAxis.js\n/* *\n *\n *  (c) 2009-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick;\n/* *\n *\n *  Composition\n *\n * */\n/**\n * Axis with support of broken data rows.\n * @private\n */\nvar BrokenAxis;\n(function (BrokenAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Adds support for broken axes.\n     * @private\n     */\n    function compose(AxisClass, SeriesClass) {\n        if (!AxisClass.keepProps.includes('brokenAxis')) {\n            AxisClass.keepProps.push('brokenAxis');\n            addEvent(AxisClass, 'init', onAxisInit);\n            addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n            addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            var seriesProto = SeriesClass.prototype;\n            seriesProto.drawBreaks = seriesDrawBreaks;\n            seriesProto.gappedPath = seriesGappedPath;\n            addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n            addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n        }\n        return AxisClass;\n    }\n    BrokenAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAxisAfterInit() {\n        if (typeof this.brokenAxis !== 'undefined') {\n            this.brokenAxis.setBreaks(this.options.breaks, false);\n        }\n    }\n    /**\n     * Force Axis to be not-ordinal when breaks are defined.\n     * @private\n     */\n    function onAxisAfterSetOptions() {\n        var _a;\n        var axis = this;\n        // Too early for axis.brokenAxis?.hasBreaks.\n        if (Object.keys(((_a = axis.options.breaks) === null || _a === void 0 ? void 0 : _a[0]) || {}).length) {\n            axis.options.ordinal = false;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisAfterSetTickPositions() {\n        var axis = this,\n            brokenAxis = axis.brokenAxis;\n        if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n            var tickPositions = axis.tickPositions,\n                info = axis.tickPositions.info,\n                newPositions = [];\n            for (var i = 0; i < tickPositions.length; i++) {\n                if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                    newPositions.push(tickPositions[i]);\n                }\n            }\n            axis.tickPositions = newPositions;\n            axis.tickPositions.info = info;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInit() {\n        var axis = this;\n        if (!axis.brokenAxis) {\n            axis.brokenAxis = new Additions(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterGeneratePoints() {\n        var _a,\n            _b;\n        var _c = this,\n            isDirty = _c.isDirty,\n            connectNulls = _c.options.connectNulls,\n            points = _c.points,\n            xAxis = _c.xAxis,\n            yAxis = _c.yAxis;\n        // Set, or reset visibility of the points. Axis.setBreaks marks\n        // the series as isDirty\n        if (isDirty) {\n            var i = points.length;\n            while (i--) {\n                var point = points[i];\n                // Respect nulls inside the break (#4275)\n                var nullGap = point.y === null && connectNulls === false;\n                var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x,\n                    true)) ||\n                        ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y,\n                    true))));\n                // Set point.visible if in any break.\n                // If not in break, reset visible to original value.\n                point.visible = isPointInBreak ?\n                    false :\n                    point.options.visible !== false;\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    function onSeriesAfterRender() {\n        this.drawBreaks(this.xAxis, ['x']);\n        this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n    }\n    /**\n     * @private\n     */\n    function seriesDrawBreaks(axis, keys) {\n        var _a;\n        var series = this,\n            points = series.points;\n        var breaks,\n            threshold,\n            y;\n        if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n            var brokenAxis_1 = axis.brokenAxis;\n            keys.forEach(function (key) {\n                breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                threshold = axis.isXAxis ?\n                    axis.min :\n                    pick(series.options.threshold, axis.min);\n                points.forEach(function (point) {\n                    var _a;\n                    y = (_a = point['stack' + key.toUpperCase()]) !== null && _a !== void 0 ? _a : point[key];\n                    breaks.forEach(function (brk) {\n                        if (isNumber(threshold) && isNumber(y)) {\n                            var eventName = '';\n                            if ((threshold < brk.from && y > brk.to) ||\n                                (threshold > brk.from && y < brk.from)) {\n                                eventName = 'pointBreak';\n                            }\n                            else if ((threshold < brk.from &&\n                                y > brk.from &&\n                                y < brk.to) || (threshold > brk.from &&\n                                y > brk.to &&\n                                y < brk.from)) {\n                                eventName = 'pointInBreak';\n                            }\n                            if (eventName) {\n                                fireEvent(axis, eventName, { point: point, brk: brk });\n                            }\n                        }\n                    });\n                });\n            });\n        }\n    }\n    /**\n     * Extend getGraphPath by identifying gaps in the data so that we\n     * can draw a gap in the line or area. This was moved from ordinal\n     * axis module to broken axis module as of #5045.\n     *\n     * @private\n     * @function Highcharts.Series#gappedPath\n     *\n     * @return {Highcharts.SVGPathArray}\n     * Gapped path\n     */\n    function seriesGappedPath() {\n        var currentDataGrouping = this.currentDataGrouping,\n            groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize,\n            points = this.points.slice(),\n            yAxis = this.yAxis;\n        var gapSize = this.options.gapSize,\n            i = points.length - 1,\n            stack;\n        /**\n         * Defines when to display a gap in the graph, together with the\n         * [gapUnit](plotOptions.series.gapUnit) option.\n         *\n         * In case when `dataGrouping` is enabled, points can be grouped\n         * into a larger time span. This can make the grouped points to\n         * have a greater distance than the absolute value of `gapSize`\n         * property, which will result in disappearing graph completely.\n         * To prevent this situation the mentioned distance between\n         * grouped points is used instead of previously defined\n         * `gapSize`.\n         *\n         * In practice, this option is most often used to visualize gaps\n         * in time series. In a stock chart, intraday data is available\n         * for daytime hours, while gaps will appear in nights and\n         * weekends.\n         *\n         * @see [gapUnit](plotOptions.series.gapUnit)\n         * @see [xAxis.breaks](#xAxis.breaks)\n         *\n         * @sample {highstock} stock/plotoptions/series-gapsize/\n         * Setting the gap size to 2 introduces gaps for weekends in\n         * daily datasets.\n         *\n         * @type      {number}\n         * @default   0\n         * @product   highstock\n         * @requires  modules/broken-axis\n         * @apioption plotOptions.series.gapSize\n         */\n        /**\n         * Together with [gapSize](plotOptions.series.gapSize), this\n         * option defines where to draw gaps in the graph.\n         *\n         * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n         * means that if the distance between two points is greater than\n         * 5 times that of the two closest points, the graph will be\n         * broken.\n         *\n         * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n         * axis values, which on a datetime axis is milliseconds. This\n         * also applies to the navigator series that inherits gap\n         * options from the base series.\n         *\n         * @see [gapSize](plotOptions.series.gapSize)\n         *\n         * @type       {string}\n         * @default    relative\n         * @since      5.0.13\n         * @product    highstock\n         * @validvalue [\"relative\", \"value\"]\n         * @requires   modules/broken-axis\n         * @apioption  plotOptions.series.gapUnit\n         */\n        if (gapSize && i > 0) { // #5008\n            // Gap unit is relative\n            if (this.options.gapUnit !== 'value') {\n                gapSize *= this.basePointRange;\n            }\n            // Setting a new gapSize in case dataGrouping is enabled\n            // (#7686)\n            if (groupingSize &&\n                groupingSize > gapSize &&\n                // Except when DG is forced (e.g. from other series)\n                // and has lower granularity than actual points (#11351)\n                groupingSize >= this.basePointRange) {\n                gapSize = groupingSize;\n            }\n            // Extension for ordinal breaks\n            var current = void 0,\n                next = void 0;\n            while (i--) {\n                // Reassign next if it is not visible\n                if (!(next && next.visible !== false)) {\n                    next = points[i + 1];\n                }\n                current = points[i];\n                // Skip iteration if one of the points is not visible\n                if (next.visible === false || current.visible === false) {\n                    continue;\n                }\n                if (next.x - current.x > gapSize) {\n                    var xRange = (current.x + next.x) / 2;\n                    points.splice(// Insert after this one\n                    i + 1, 0, {\n                        isNull: true,\n                        x: xRange\n                    });\n                    // For stacked chart generate empty stack items, #6546\n                    if (yAxis.stacking && this.options.stacking) {\n                        stack = yAxis.stacking.stacks[this.stackKey][xRange] = new (highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default())(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                        stack.total = 0;\n                    }\n                }\n                // Assign current to next for the upcoming iteration\n                next = current;\n            }\n        }\n        // Call base method\n        return this.getGraphPath(points);\n    }\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Provides support for broken axes.\n     * @private\n     * @class\n     */\n    var Additions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Additions(axis) {\n                this.axis = axis;\n        }\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        Additions.isInBreak = function (brk, val) {\n            var repeat = brk.repeat || Infinity,\n                from = brk.from,\n                length = brk.to - brk.from,\n                test = (val >= from ?\n                    (val - from) % repeat :\n                    repeat - ((from - val) % repeat));\n            var ret;\n            if (!brk.inclusive) {\n                ret = test < length && test !== 0;\n            }\n            else {\n                ret = test <= length;\n            }\n            return ret;\n        };\n        /**\n         * @private\n         */\n        Additions.lin2Val = function (val) {\n            var axis = this,\n                threshold = axis.min || 0,\n                brokenAxis = axis.brokenAxis,\n                breakArray = brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.breakArray;\n            if (!(breakArray === null || breakArray === void 0 ? void 0 : breakArray.length) || !isNumber(val)) {\n                return val;\n            }\n            var nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (var _i = 0, breakArray_1 = breakArray; _i < breakArray_1.length; _i++) {\n                    var brk = breakArray_1[_i];\n                    if (brk.from > nval) {\n                        // Skip all breaks after the nval.\n                        break;\n                    }\n                    else if (brk.to <= nval && brk.to > threshold) {\n                        nval += brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval += brk.len;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (var _a = 0, breakArray_2 = breakArray; _a < breakArray_2.length; _a++) {\n                    var brk = breakArray_2[_a];\n                    if (brk.from > threshold) {\n                        // Skip all breaks above the threshold.\n                        break;\n                    }\n                    else if (brk.from >= nval && brk.from < threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (Additions.isInBreak(brk, nval)) {\n                        nval -= brk.len;\n                    }\n                }\n            }\n            return nval;\n        };\n        /**\n         * @private\n         */\n        Additions.val2Lin = function (val) {\n            var axis = this,\n                threshold = axis.min || 0,\n                brokenAxis = axis.brokenAxis,\n                breakArray = brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.breakArray;\n            if (!(breakArray === null || breakArray === void 0 ? void 0 : breakArray.length) || !isNumber(val)) {\n                return val;\n            }\n            var nval = val;\n            // Axis min is the anchor point. Above it, break gaps impact the\n            // result differently than below.\n            if (val > threshold) {\n                for (var _i = 0, breakArray_3 = breakArray; _i < breakArray_3.length; _i++) {\n                    var brk = breakArray_3[_i];\n                    if (brk.to <= val && brk.to > threshold) {\n                        nval -= brk.len;\n                    }\n                    else if (brk.from > val) {\n                        // Skip all breaks after the val.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval -= (val - brk.from);\n                        break;\n                    }\n                }\n            }\n            else if (val < threshold) {\n                for (var _a = 0, breakArray_4 = breakArray; _a < breakArray_4.length; _a++) {\n                    var brk = breakArray_4[_a];\n                    if (brk.from >= val && brk.from < threshold) {\n                        nval += brk.len;\n                    }\n                    else if (brk.from > threshold) {\n                        // Skip all breaks before the threshold.\n                        break;\n                    }\n                    else if (Additions.isInBreak(brk, val)) {\n                        nval += (brk.to - val);\n                        break;\n                    }\n                }\n            }\n            return nval;\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first break found where the x is larger then break.from\n         * and smaller then break.to.\n         *\n         * @param {number} x\n         * The number which should be within a break.\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n         * The array of breaks to search within.\n         *\n         * @return {Highcharts.XAxisBreaksOptions|undefined}\n         * Returns the first break found that matches, returns false if no break\n         * is found.\n         */\n        Additions.prototype.findBreakAt = function (x, breaks) {\n            return find(breaks, function (b) {\n                return b.from < x && x < b.to;\n            });\n        };\n        /**\n         * @private\n         */\n        Additions.prototype.isInAnyBreak = function (val, testKeep) {\n            var brokenAxis = this,\n                axis = brokenAxis.axis,\n                breaks = axis.options.breaks || [];\n            var i = breaks.length,\n                inbrk,\n                keep,\n                ret;\n            if (i && isNumber(val)) {\n                while (i--) {\n                    if (Additions.isInBreak(breaks[i], val)) {\n                        inbrk = true;\n                        if (!keep) {\n                            keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                        }\n                    }\n                }\n                if (inbrk && testKeep) {\n                    ret = inbrk && !keep;\n                }\n                else {\n                    ret = inbrk;\n                }\n            }\n            return ret;\n        };\n        /**\n         * Dynamically set or unset breaks in an axis. This function in lighter\n         * than using Axis.update, and it also preserves animation.\n         *\n         * @private\n         * @function Highcharts.Axis#setBreaks\n         *\n         * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n         * The breaks to add. When `undefined` it removes existing breaks.\n         *\n         * @param {boolean} [redraw=true]\n         * Whether to redraw the chart immediately.\n         */\n        Additions.prototype.setBreaks = function (breaks, redraw) {\n            var _a;\n            var brokenAxis = this,\n                axis = brokenAxis.axis,\n                time = axis.chart.time,\n                hasBreaks = isArray(breaks) &&\n                    !!Object.keys((breaks === null || breaks === void 0 ? void 0 : breaks[0]) || {}).length;\n            axis.isDirty = ((_a = brokenAxis.hasBreaks) !== null && _a !== void 0 ? _a : false) !== hasBreaks;\n            brokenAxis.hasBreaks = hasBreaks;\n            // Compile string dates\n            breaks === null || breaks === void 0 ? void 0 : breaks.forEach(function (brk) {\n                brk.from = time.parse(brk.from) || 0;\n                brk.to = time.parse(brk.to) || 0;\n            });\n            if (breaks !== axis.options.breaks) {\n                axis.options.breaks = axis.userOptions.breaks = breaks;\n            }\n            axis.forceRedraw = true; // Force recalculation in setScale\n            // Recalculate series related to the axis.\n            axis.series.forEach(function (series) {\n                series.isDirty = true;\n            });\n            if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                // Revert to prototype functions\n                delete axis.val2lin;\n                delete axis.lin2val;\n            }\n            if (hasBreaks) {\n                axis.userOptions.ordinal = false;\n                axis.lin2val = Additions.lin2Val;\n                axis.val2lin = Additions.val2Lin;\n                axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                    var _a;\n                    // If trying to set extremes inside a break, extend min to\n                    // after, and max to before the break ( #3857 )\n                    // but not for gantt (#13898);\n                    if (brokenAxis.hasBreaks && !((_a = axis.treeGrid) === null || _a === void 0 ? void 0 : _a.tree)) {\n                        var breaks_1 = (this.brokenAxis.breakArray || []);\n                        var axisBreak = void 0;\n                        while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                            newMin = axisBreak.to;\n                        }\n                        while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                            newMax = axisBreak.from;\n                        }\n                        // If both min and max is within the same break.\n                        if (newMax < newMin) {\n                            newMax = newMin;\n                        }\n                    }\n                    axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                };\n                axis.setAxisTranslation = function () {\n                    var _a,\n                        _b,\n                        _c,\n                        _d,\n                        _e,\n                        _f;\n                    axis.constructor.prototype.setAxisTranslation.call(this);\n                    brokenAxis.unitLength = void 0;\n                    if (brokenAxis.hasBreaks) {\n                        var breaks_2 = axis.options.breaks || [],\n                            breakArrayTemp_1 = [],\n                            breakArray_5 = [],\n                            pointRangePadding = (_a = axis.pointRangePadding) !== null && _a !== void 0 ? _a : 0;\n                        var length_1 = 0,\n                            inBrk_1,\n                            repeat_1,\n                            min_1 = (_b = axis.userMin) !== null && _b !== void 0 ? _b : axis.min,\n                            max_1 = (_c = axis.userMax) !== null && _c !== void 0 ? _c : axis.max,\n                            dataMin_1 = (_d = axis.dataMin) !== null && _d !== void 0 ? _d : min_1,\n                            dataMax_1 = (_e = axis.dataMax) !== null && _e !== void 0 ? _e : max_1,\n                            start_1,\n                            i_1;\n                        if (isNumber(axis.threshold)) {\n                            dataMin_1 = Math.min(dataMin_1 !== null && dataMin_1 !== void 0 ? dataMin_1 : axis.threshold, axis.threshold);\n                            dataMax_1 = Math.max(dataMax_1 !== null && dataMax_1 !== void 0 ? dataMax_1 : axis.threshold, axis.threshold);\n                        }\n                        // Min & max check (#4247) but not for gantt (#13898)\n                        if (!((_f = axis.treeGrid) === null || _f === void 0 ? void 0 : _f.tree)) {\n                            breaks_2.forEach(function (brk) {\n                                repeat_1 = brk.repeat || Infinity;\n                                if (isNumber(min_1) && isNumber(max_1)) {\n                                    if (Additions.isInBreak(brk, min_1)) {\n                                        min_1 += ((brk.to % repeat_1) -\n                                            (min_1 % repeat_1));\n                                    }\n                                    if (Additions.isInBreak(brk, max_1)) {\n                                        max_1 -= ((max_1 % repeat_1) -\n                                            (brk.from % repeat_1));\n                                    }\n                                }\n                            });\n                        }\n                        // Construct an array holding all breaks in the axis\n                        // for the current data range.\n                        if (isNumber(dataMin_1) && isNumber(dataMax_1)) {\n                            breaks_2.forEach(function (brk) {\n                                start_1 = brk.from;\n                                repeat_1 = brk.repeat || Infinity;\n                                while (start_1 - repeat_1 > dataMin_1) {\n                                    start_1 -= repeat_1;\n                                }\n                                while (start_1 < dataMin_1) {\n                                    start_1 += repeat_1;\n                                }\n                                for (i_1 = start_1; i_1 < dataMax_1; i_1 += repeat_1) {\n                                    breakArrayTemp_1.push({\n                                        value: i_1,\n                                        move: 'in'\n                                    });\n                                    breakArrayTemp_1.push({\n                                        value: i_1 + brk.to - brk.from,\n                                        move: 'out',\n                                        size: brk.breakSize\n                                    });\n                                }\n                            });\n                        }\n                        breakArrayTemp_1.sort(function (a, b) {\n                            return ((a.value === b.value) ?\n                                ((a.move === 'in' ? 0 : 1) -\n                                    (b.move === 'in' ? 0 : 1)) :\n                                a.value - b.value);\n                        });\n                        // Simplify the breaks\n                        inBrk_1 = 0;\n                        start_1 = dataMin_1;\n                        breakArrayTemp_1.forEach(function (brk) {\n                            inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                            if (inBrk_1 === 1 && brk.move === 'in') {\n                                start_1 = brk.value;\n                            }\n                            if (inBrk_1 === 0 && isNumber(start_1)) {\n                                breakArray_5.push({\n                                    from: start_1,\n                                    to: brk.value,\n                                    len: brk.value - start_1 - (brk.size || 0)\n                                });\n                                if (isNumber(min_1) && isNumber(max_1) &&\n                                    start_1 < max_1 && brk.value > min_1) {\n                                    // Sum break gaps in the visible range\n                                    length_1 += (brk.value -\n                                        start_1 -\n                                        (brk.size || 0));\n                                }\n                            }\n                        });\n                        brokenAxis.breakArray = breakArray_5;\n                        // Used with staticScale, and below the actual axis\n                        // length, when breaks are subtracted.\n                        if (isNumber(min_1) &&\n                            isNumber(max_1) &&\n                            isNumber(axis.min)) {\n                            brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                pointRangePadding;\n                            fireEvent(axis, 'afterBreaks');\n                            if (axis.staticScale) {\n                                axis.transA = axis.staticScale;\n                            }\n                            else if (brokenAxis.unitLength) {\n                                axis.transA *=\n                                    (max_1 - axis.min + pointRangePadding) /\n                                        brokenAxis.unitLength;\n                            }\n                            if (pointRangePadding) {\n                                axis.minPixelPadding =\n                                    axis.transA * (axis.minPointOffset || 0);\n                            }\n                            axis.min = min_1;\n                            axis.max = max_1;\n                        }\n                    }\n                };\n            }\n            if (pick(redraw, true)) {\n                axis.chart.redraw();\n            }\n        };\n        return Additions;\n    }());\n    BrokenAxis.Additions = Additions;\n})(BrokenAxis || (BrokenAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Axis_BrokenAxis = (BrokenAxis);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Axis\"],\"commonjs\":[\"highcharts\",\"Axis\"],\"commonjs2\":[\"highcharts\",\"Axis\"],\"root\":[\"Highcharts\",\"Axis\"]}\nvar highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_ = __webpack_require__(532);\nvar highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default = /*#__PURE__*/__webpack_require__.n(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_);\n;// ./code/es5/es-modules/Core/Axis/GridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Lars A. V. Cabrera\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar dateFormats = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).dateFormats;\n\nvar GridAxis_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined, erase = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).erase, GridAxis_find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, GridAxis_isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, GridAxis_isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, GridAxis_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, timeUnits = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).timeUnits, wrap = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).wrap;\n/* *\n *\n *  Enums\n *\n * */\n/**\n * Enum for which side the axis is on. Maps to axis.side.\n * @private\n */\nvar GridAxisSide;\n(function (GridAxisSide) {\n    GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n    GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n    GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n    GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n})(GridAxisSide || (GridAxisSide = {}));\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction argsToArray(args) {\n    return Array.prototype.slice.call(args, 1);\n}\n/**\n * @private\n */\nfunction isObject(x) {\n    // Always use strict mode\n    return highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject(x, true);\n}\n/**\n * @private\n */\nfunction applyGridOptions(axis) {\n    var options = axis.options;\n    // Center-align by default\n    /*\n    if (!options.labels) {\n        options.labels = {};\n    }\n    */\n    options.labels.align = GridAxis_pick(options.labels.align, 'center');\n    // @todo: Check against tickLabelPlacement between/on etc\n    /* Prevents adding the last tick label if the axis is not a category\n       axis.\n       Since numeric labels are normally placed at starts and ends of a\n       range of value, and this module makes the label point at the value,\n       an \"extra\" label would appear. */\n    if (!axis.categories) {\n        options.showLastLabel = false;\n    }\n    // Prevents rotation of labels when squished, as rotating them would not\n    // help.\n    axis.labelRotation = 0;\n    options.labels.rotation = 0;\n    // Allow putting ticks closer than their data points.\n    options.minTickInterval = 1;\n}\n/**\n * Extends axis class with grid support.\n * @private\n */\nfunction compose(AxisClass, ChartClass, TickClass) {\n    if (!AxisClass.keepProps.includes('grid')) {\n        AxisClass.keepProps.push('grid');\n        AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n        wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n        wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n        // Add event handlers\n        GridAxis_addEvent(AxisClass, 'init', onInit);\n        GridAxis_addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n        GridAxis_addEvent(AxisClass, 'afterInit', onAfterInit);\n        GridAxis_addEvent(AxisClass, 'afterRender', onAfterRender);\n        GridAxis_addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n        GridAxis_addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n        GridAxis_addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n        GridAxis_addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n        GridAxis_addEvent(AxisClass, 'trimTicks', onTrimTicks);\n        GridAxis_addEvent(AxisClass, 'destroy', onDestroy);\n        GridAxis_addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n        GridAxis_addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n        GridAxis_addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n    }\n    return AxisClass;\n}\n/**\n * Get the largest label width and height.\n *\n * @private\n * @function Highcharts.Axis#getMaxLabelDimensions\n *\n * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n * All the ticks on one axis.\n *\n * @param {Array<number|string>} tickPositions\n * All the tick positions on one axis.\n *\n * @return {Highcharts.SizeObject}\n * Object containing the properties height and width.\n *\n * @todo Move this to the generic axis implementation, as it is used there.\n */\nfunction getMaxLabelDimensions(ticks, tickPositions) {\n    var dimensions = {\n            width: 0,\n            height: 0\n        };\n    tickPositions.forEach(function (pos) {\n        var tick = ticks[pos];\n        var labelHeight = 0,\n            labelWidth = 0,\n            label;\n        if (isObject(tick)) {\n            label = isObject(tick.label) ? tick.label : {};\n            // Find width and height of label\n            labelHeight = label.getBBox ? label.getBBox().height : 0;\n            if (label.textStr && !GridAxis_isNumber(label.textPxLength)) {\n                label.textPxLength = label.getBBox().width;\n            }\n            labelWidth = GridAxis_isNumber(label.textPxLength) ?\n                // Math.round ensures crisp lines\n                Math.round(label.textPxLength) :\n                0;\n            if (label.textStr) {\n                // Set the tickWidth same as the label width after ellipsis\n                // applied #10281\n                labelWidth = Math.round(label.getBBox().width);\n            }\n            // Update the result if width and/or height are larger\n            dimensions.height = Math.max(labelHeight, dimensions.height);\n            dimensions.width = Math.max(labelWidth, dimensions.width);\n        }\n    });\n    // For tree grid, add indentation\n    if (this.type === 'treegrid' &&\n        this.treeGrid &&\n        this.treeGrid.mapOfPosToGridNode) {\n        var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n        dimensions.width += (this.options.labels.indentation *\n            (treeDepth - 1));\n    }\n    return dimensions;\n}\n/**\n * Handle columns and getOffset.\n * @private\n */\nfunction wrapGetOffset(proceed) {\n    var grid = this.grid, \n        // On the left side we handle the columns first because the offset is\n        // calculated from the plot area and out\n        columnsFirst = this.side === 3;\n    if (!columnsFirst) {\n        proceed.apply(this);\n    }\n    if (!(grid === null || grid === void 0 ? void 0 : grid.isColumn)) {\n        var columns = (grid === null || grid === void 0 ? void 0 : grid.columns) || [];\n        if (columnsFirst) {\n            columns = columns.slice().reverse();\n        }\n        columns\n            .forEach(function (column) {\n            column.getOffset();\n        });\n    }\n    if (columnsFirst) {\n        proceed.apply(this);\n    }\n}\n/**\n * @private\n */\nfunction onAfterGetTitlePosition(e) {\n    var axis = this;\n    var options = axis.options;\n    var gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        // Compute anchor points for each of the title align options\n        var axisTitle = axis.axisTitle,\n            axisHeight = axis.height,\n            horiz = axis.horiz,\n            axisLeft = axis.left,\n            offset = axis.offset,\n            opposite = axis.opposite,\n            options_1 = axis.options,\n            axisTop = axis.top,\n            axisWidth = axis.width;\n        var tickSize = axis.tickSize();\n        var titleWidth = axisTitle === null || axisTitle === void 0 ? void 0 : axisTitle.getBBox().width;\n        var xOption = options_1.title.x;\n        var yOption = options_1.title.y;\n        var titleMargin = GridAxis_pick(options_1.title.margin,\n            horiz ? 5 : 10);\n        var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n        var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n        // TODO account for alignment\n        // the position in the perpendicular direction of the axis\n        var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                (horiz ? 1 : -1) * // Horizontal axis reverses the margin\n                    (opposite ? -1 : 1) * // So does opposite axes\n                    crispCorr +\n                (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n        e.titlePosition.x = horiz ?\n            axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n            offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n        e.titlePosition.y = horiz ?\n            (offAxis -\n                (opposite ? axisHeight : 0) +\n                (opposite ? titleFontSize : -titleFontSize) / 2 +\n                offset +\n                yOption) :\n            axisTop - titleMargin + yOption;\n    }\n}\n/**\n * @private\n */\nfunction onAfterInit() {\n    var axis = this;\n    var chart = axis.chart,\n        _a = axis.options.grid,\n        gridOptions = _a === void 0 ? {} : _a,\n        userOptions = axis.userOptions;\n    if (gridOptions.enabled) {\n        applyGridOptions(axis);\n    }\n    if (gridOptions.columns) {\n        var columns = axis.grid.columns = [];\n        var columnIndex = axis.grid.columnIndex = 0;\n        // Handle columns, each column is a grid axis\n        while (++columnIndex < gridOptions.columns.length) {\n            var columnOptions = merge(userOptions,\n                gridOptions.columns[columnIndex], {\n                    isInternal: true,\n                    linkedTo: 0,\n                    // Disable by default the scrollbar on the grid axis\n                    scrollbar: {\n                        enabled: false\n                    }\n                }, \n                // Avoid recursion\n                {\n                    grid: {\n                        columns: void 0\n                    }\n                });\n            var column = new (highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default())(axis.chart,\n                columnOptions, 'yAxis');\n            column.grid.isColumn = true;\n            column.grid.columnIndex = columnIndex;\n            // Remove column axis from chart axes array, and place it\n            // in the columns array.\n            erase(chart.axes, column);\n            erase(chart[axis.coll] || [], column);\n            columns.push(column);\n        }\n    }\n}\n/**\n * Draw an extra line on the far side of the outermost axis,\n * creating floor/roof/wall of a grid. And some padding.\n * ```\n * Make this:\n *             (axis.min) __________________________ (axis.max)\n *                           |    |    |    |    |\n * Into this:\n *             (axis.min) __________________________ (axis.max)\n *                        ___|____|____|____|____|__\n * ```\n * @private\n */\nfunction onAfterRender() {\n    var _a,\n        _b;\n    var axis = this,\n        axisTitle = axis.axisTitle,\n        grid = axis.grid,\n        options = axis.options,\n        gridOptions = options.grid || {};\n    if (gridOptions.enabled === true) {\n        var min = axis.min || 0,\n            max = axis.max || 0,\n            firstTick = axis.ticks[axis.tickPositions[0]];\n        // Adjust the title max width to the column width (#19657)\n        if (axisTitle &&\n            !axis.chart.styledMode &&\n            (firstTick === null || firstTick === void 0 ? void 0 : firstTick.slotWidth) &&\n            !axis.options.title.style.width) {\n            axisTitle.css({ width: \"\" + firstTick.slotWidth + \"px\" });\n        }\n        // @todo actual label padding (top, bottom, left, right)\n        axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n        // Remove right wall before rendering if updating\n        if (axis.rightWall) {\n            axis.rightWall.destroy();\n        }\n        /*\n        Draw an extra axis line on outer axes\n                    >\n        Make this:    |______|______|______|___\n\n                    > _________________________\n        Into this:    |______|______|______|__|\n                                                */\n        if (((_a = axis.grid) === null || _a === void 0 ? void 0 : _a.isOuterAxis()) && axis.axisLine) {\n            var lineWidth = options.lineWidth;\n            if (lineWidth) {\n                var linePath = axis.getLinePath(lineWidth),\n                    startPoint = linePath[0],\n                    endPoint = linePath[1], \n                    // Negate distance if top or left axis\n                    // Subtract 1px to draw the line at the end of the tick\n                    tickLength = (axis.tickSize('tick') || [1])[0],\n                    distance = tickLength * ((axis.side === GridAxisSide.top ||\n                        axis.side === GridAxisSide.left) ? -1 : 1);\n                // If axis is horizontal, reposition line path vertically\n                if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                    if (axis.horiz) {\n                        startPoint[2] += distance;\n                        endPoint[2] += distance;\n                    }\n                    else {\n                        startPoint[1] += distance;\n                        endPoint[1] += distance;\n                    }\n                }\n                // If it doesn't exist, add an upper and lower border\n                // for the vertical grid axis.\n                if (!axis.horiz && axis.chart.marginRight) {\n                    var upperBorderStartPoint = startPoint,\n                        upperBorderEndPoint = [\n                            'L',\n                            axis.left,\n                            startPoint[2] || 0\n                        ],\n                        upperBorderPath = [\n                            upperBorderStartPoint,\n                            upperBorderEndPoint\n                        ],\n                        lowerBorderEndPoint = [\n                            'L',\n                            axis.chart.chartWidth - axis.chart.marginRight,\n                            axis.toPixels(max + axis.tickmarkOffset)\n                        ],\n                        lowerBorderStartPoint = [\n                            'M',\n                            endPoint[1] || 0,\n                            axis.toPixels(max + axis.tickmarkOffset)\n                        ],\n                        lowerBorderPath = [\n                            lowerBorderStartPoint,\n                            lowerBorderEndPoint\n                        ];\n                    if (!axis.grid.upperBorder && min % 1 !== 0) {\n                        axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                    }\n                    if (axis.grid.upperBorder) {\n                        axis.grid.upperBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.upperBorder.animate({\n                            d: upperBorderPath\n                        });\n                    }\n                    if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                        axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                    }\n                    if (axis.grid.lowerBorder) {\n                        axis.grid.lowerBorder.attr({\n                            stroke: options.lineColor,\n                            'stroke-width': options.lineWidth\n                        });\n                        axis.grid.lowerBorder.animate({\n                            d: lowerBorderPath\n                        });\n                    }\n                }\n                // Render an extra line parallel to the existing axes, to\n                // close the grid.\n                if (!axis.grid.axisLineExtra) {\n                    axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                }\n                else {\n                    axis.grid.axisLineExtra.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth\n                    });\n                    axis.grid.axisLineExtra.animate({\n                        d: linePath\n                    });\n                }\n                // Show or hide the line depending on options.showEmpty\n                axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n            }\n        }\n        ((grid === null || grid === void 0 ? void 0 : grid.columns) || []).forEach(function (column) { return column.render(); });\n        // Manipulate the tick mark visibility\n        // based on the axis.max- allows smooth scrolling.\n        if (!axis.horiz &&\n            axis.chart.hasRendered &&\n            (axis.scrollbar || ((_b = axis.linkedParent) === null || _b === void 0 ? void 0 : _b.scrollbar)) &&\n            axis.tickPositions.length) {\n            var tickmarkOffset = axis.tickmarkOffset,\n                lastTick = axis.tickPositions[axis.tickPositions.length - 1],\n                firstTick_1 = axis.tickPositions[0];\n            var label = void 0,\n                tickMark = void 0;\n            while ((label = axis.hiddenLabels.pop()) && label.element) {\n                label.show(); // #15453\n            }\n            while ((tickMark = axis.hiddenMarks.pop()) &&\n                tickMark.element) {\n                tickMark.show(); // #16439\n            }\n            // Hide/show first tick label.\n            label = axis.ticks[firstTick_1].label;\n            if (label) {\n                if (min - firstTick_1 > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            // Hide/show last tick mark/label.\n            label = axis.ticks[lastTick].label;\n            if (label) {\n                if (lastTick - max > tickmarkOffset) {\n                    axis.hiddenLabels.push(label.hide());\n                }\n                else {\n                    label.show();\n                }\n            }\n            var mark = axis.ticks[lastTick].mark;\n            if (mark &&\n                lastTick - max < tickmarkOffset &&\n                lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                axis.hiddenMarks.push(mark.hide());\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetAxisTranslation() {\n    var _a;\n    var axis = this;\n    var tickInfo = (_a = axis.tickPositions) === null || _a === void 0 ? void 0 : _a.info;\n    var options = axis.options;\n    var gridOptions = options.grid || {};\n    var userLabels = axis.userOptions.labels || {};\n    // Fire this only for the Gantt type chart, #14868.\n    if (gridOptions.enabled) {\n        if (axis.horiz) {\n            axis.series.forEach(function (series) {\n                series.options.pointRange = 0;\n            });\n            // Lower level time ticks, like hours or minutes, represent\n            // points in time and not ranges. These should be aligned\n            // left in the grid cell by default. The same applies to\n            // years of higher order.\n            if (tickInfo &&\n                options.dateTimeLabelFormats &&\n                options.labels &&\n                !defined(userLabels.align) &&\n                (options.dateTimeLabelFormats[tickInfo.unitName]\n                    .range === false ||\n                    tickInfo.count > 1 // Years\n                )) {\n                options.labels.align = 'left';\n                if (!defined(userLabels.x)) {\n                    options.labels.x = 3;\n                }\n            }\n        }\n        else {\n            // Don't trim ticks which not in min/max range but\n            // they are still in the min/max plus tickInterval.\n            if (this.type !== 'treegrid' &&\n                axis.grid &&\n                axis.grid.columns) {\n                this.minPointOffset = this.tickInterval;\n            }\n        }\n    }\n}\n/**\n * Creates a left and right wall on horizontal axes:\n * - Places leftmost tick at the start of the axis, to create a left\n *   wall\n * - Ensures that the rightmost tick is at the end of the axis, to\n *   create a right wall.\n * @private\n */\nfunction onAfterSetOptions(e) {\n    var options = this.options,\n        userOptions = e.userOptions,\n        gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n    var gridAxisOptions;\n    if (gridOptions.enabled === true) {\n        // Merge the user options into default grid axis options so\n        // that when a user option is set, it takes precedence.\n        gridAxisOptions = merge(true, {\n            className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n            dateTimeLabelFormats: {\n                hour: {\n                    list: ['%[HM]', '%[H]']\n                },\n                day: {\n                    list: ['%[AeB]', '%[aeb]', '%[E]']\n                },\n                week: {\n                    list: ['Week %W', 'W%W']\n                },\n                month: {\n                    list: ['%[B]', '%[b]', '%o']\n                }\n            },\n            grid: {\n                borderWidth: 1\n            },\n            labels: {\n                padding: 2,\n                style: {\n                    fontSize: '0.9em'\n                }\n            },\n            margin: 0,\n            title: {\n                text: null,\n                reserveSpace: false,\n                rotation: 0,\n                style: {\n                    textOverflow: 'ellipsis'\n                }\n            },\n            // In a grid axis, only allow one unit of certain types,\n            // for example we shouldn't have one grid cell spanning\n            // two days.\n            units: [[\n                    'millisecond', // Unit name\n                    [1, 10, 100]\n                ], [\n                    'second',\n                    [1, 10]\n                ], [\n                    'minute',\n                    [1, 5, 15]\n                ], [\n                    'hour',\n                    [1, 6]\n                ], [\n                    'day',\n                    [1]\n                ], [\n                    'week',\n                    [1]\n                ], [\n                    'month',\n                    [1]\n                ], [\n                    'year',\n                    null\n                ]]\n        }, userOptions);\n        // X-axis specific options\n        if (this.coll === 'xAxis') {\n            // For linked axes, tickPixelInterval is used only if\n            // the tickPositioner below doesn't run or returns\n            // undefined (like multiple years)\n            if (defined(userOptions.linkedTo) &&\n                !defined(userOptions.tickPixelInterval)) {\n                gridAxisOptions.tickPixelInterval = 350;\n            }\n            // For the secondary grid axis, use the primary axis'\n            // tick intervals and return ticks one level higher.\n            if (\n            // Check for tick pixel interval in options\n            !defined(userOptions.tickPixelInterval) &&\n                // Only for linked axes\n                defined(userOptions.linkedTo) &&\n                !defined(userOptions.tickPositioner) &&\n                !defined(userOptions.tickInterval) &&\n                !defined(userOptions.units)) {\n                gridAxisOptions.tickPositioner = function (min, max) {\n                    var _a,\n                        _b;\n                    var parentInfo = (_b = (_a = this.linkedParent) === null || _a === void 0 ? void 0 : _a.tickPositions) === null || _b === void 0 ? void 0 : _b.info;\n                    if (parentInfo) {\n                        var units = (gridAxisOptions.units || []);\n                        var unitIdx = void 0,\n                            count = 1,\n                            unitName = 'year';\n                        for (var i = 0; i < units.length; i++) {\n                            var unit_1 = units[i];\n                            if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                unitIdx = i;\n                                break;\n                            }\n                        }\n                        // Get the first allowed count on the next unit.\n                        var unit = (GridAxis_isNumber(unitIdx) && units[unitIdx + 1]);\n                        if (unit) {\n                            unitName = unit[0] || 'year';\n                            var counts = unit[1];\n                            count = (counts === null || counts === void 0 ? void 0 : counts[0]) || 1;\n                            // In case the base X axis shows years, make the\n                            // secondary axis show ten times the years (#11427)\n                        }\n                        else if (parentInfo.unitName === 'year') {\n                            // `unitName` is 'year'\n                            count = parentInfo.count * 10;\n                        }\n                        var unitRange = timeUnits[unitName];\n                        this.tickInterval = unitRange * count;\n                        return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                    }\n                };\n            }\n        }\n        // Now merge the combined options into the axis options\n        merge(true, this.options, gridAxisOptions);\n        if (this.horiz) {\n            /*               _________________________\n            Make this:    ___|_____|_____|_____|__|\n                            ^                     ^\n                            _________________________\n            Into this:    |_____|_____|_____|_____|\n                                ^                 ^    */\n            options.minPadding = GridAxis_pick(userOptions.minPadding, 0);\n            options.maxPadding = GridAxis_pick(userOptions.maxPadding, 0);\n        }\n        // If borderWidth is set, then use its value for tick and\n        // line width.\n        if (GridAxis_isNumber(options.grid.borderWidth)) {\n            options.tickWidth = options.lineWidth =\n                gridOptions.borderWidth;\n        }\n    }\n}\n/**\n * @private\n */\nfunction onAfterSetOptions2(e) {\n    var axis = this;\n    var userOptions = e.userOptions;\n    var gridOptions = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.grid) || {};\n    var columns = gridOptions.columns;\n    // Add column options to the parent axis. Children has their column options\n    // set on init in onGridAxisAfterInit.\n    if (gridOptions.enabled && columns) {\n        merge(true, axis.options, columns[0]);\n    }\n}\n/**\n * Handle columns and setScale.\n * @private\n */\nfunction onAfterSetScale() {\n    var axis = this;\n    (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n}\n/**\n * Draw vertical axis ticks extra long to create cell floors and roofs.\n * Overrides the tickLength for vertical axes.\n * @private\n */\nfunction onAfterTickSize(e) {\n    var _a = this,\n        horiz = _a.horiz,\n        maxLabelDimensions = _a.maxLabelDimensions,\n        _b = _a.options.grid,\n        gridOptions = _b === void 0 ? {} : _b;\n    if (gridOptions.enabled && maxLabelDimensions) {\n        var labelPadding = this.options.labels.distance * 2;\n        var distance = horiz ?\n                (gridOptions.cellHeight ||\n                    labelPadding + maxLabelDimensions.height) :\n                labelPadding + maxLabelDimensions.width;\n        if (GridAxis_isArray(e.tickSize)) {\n            e.tickSize[0] = distance;\n        }\n        else {\n            e.tickSize = [distance, 0];\n        }\n    }\n}\n/**\n * @private\n */\nfunction onChartAfterSetChartSize() {\n    this.axes.forEach(function (axis) {\n        var _a;\n        (((_a = axis.grid) === null || _a === void 0 ? void 0 : _a.columns) || []).forEach(function (column) {\n            column.setAxisSize();\n            column.setAxisTranslation();\n        });\n    });\n}\n/**\n * @private\n */\nfunction onDestroy(e) {\n    var grid = this.grid;\n    (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n    grid.columns = void 0;\n}\n/**\n * Wraps axis init to draw cell walls on vertical axes.\n * @private\n */\nfunction onInit(e) {\n    var axis = this;\n    var userOptions = e.userOptions || {};\n    var gridOptions = userOptions.grid || {};\n    if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n        userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n    }\n    if (!axis.grid) {\n        axis.grid = new GridAxisAdditions(axis);\n    }\n    axis.hiddenLabels = [];\n    axis.hiddenMarks = [];\n}\n/**\n * Center tick labels in cells.\n * @private\n */\nfunction onTickAfterGetLabelPosition(e) {\n    var tick = this,\n        label = tick.label,\n        axis = tick.axis,\n        reversed = axis.reversed,\n        chart = axis.chart,\n        options = axis.options,\n        gridOptions = options.grid || {},\n        labelOpts = axis.options.labels,\n        align = labelOpts.align, \n        // `verticalAlign` is currently not supported for axis.labels.\n        verticalAlign = 'middle', // LabelOpts.verticalAlign,\n        side = GridAxisSide[axis.side],\n        tickmarkOffset = e.tickmarkOffset,\n        tickPositions = axis.tickPositions,\n        tickPos = tick.pos - tickmarkOffset,\n        nextTickPos = (GridAxis_isNumber(tickPositions[e.index + 1]) ?\n            tickPositions[e.index + 1] - tickmarkOffset :\n            (axis.max || 0) + tickmarkOffset),\n        tickSize = axis.tickSize('tick'),\n        tickWidth = tickSize ? tickSize[0] : 0,\n        crispCorr = tickSize ? tickSize[1] / 2 : 0;\n    // Only center tick labels in grid axes\n    if (gridOptions.enabled === true) {\n        var bottom = void 0,\n            top_1,\n            left = void 0,\n            right = void 0;\n        // Calculate top and bottom positions of the cell.\n        if (side === 'top') {\n            bottom = axis.top + axis.offset;\n            top_1 = bottom - tickWidth;\n        }\n        else if (side === 'bottom') {\n            top_1 = chart.chartHeight - axis.bottom + axis.offset;\n            bottom = top_1 + tickWidth;\n        }\n        else {\n            bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n            top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n        }\n        // Calculate left and right positions of the cell.\n        if (side === 'right') {\n            left = chart.chartWidth - axis.right + axis.offset;\n            right = left + tickWidth;\n        }\n        else if (side === 'left') {\n            right = axis.left + axis.offset;\n            left = right - tickWidth;\n        }\n        else {\n            left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n            right = Math.min(// #15742\n            Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n        }\n        tick.slotWidth = right - left;\n        // Calculate the positioning of the label based on\n        // alignment.\n        e.pos.x = (align === 'left' ?\n            left :\n            align === 'right' ?\n                right :\n                left + ((right - left) / 2) // Default to center\n        );\n        e.pos.y = (verticalAlign === 'top' ?\n            top_1 :\n            verticalAlign === 'bottom' ?\n                bottom :\n                top_1 + ((bottom - top_1) / 2) // Default to middle\n        );\n        if (label) {\n            var lblMetrics = chart.renderer.fontMetrics(label),\n                labelHeight = label.getBBox().height;\n            // Adjustment to y position to align the label correctly.\n            // Would be better to have a setter or similar for this.\n            if (!labelOpts.useHTML) {\n                var lines = Math.round(labelHeight / lblMetrics.h);\n                e.pos.y += (\n                // Center the label\n                // TODO: why does this actually center the label?\n                ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                    // Adjust for height of additional lines.\n                    -(((lines - 1) * lblMetrics.h) / 2));\n            }\n            else {\n                e.pos.y += (\n                // Readjust yCorr in htmlUpdateTransform\n                lblMetrics.b +\n                    // Adjust for height of html label\n                    -(labelHeight / 2));\n            }\n        }\n        e.pos.x += (axis.horiz && labelOpts.x) || 0;\n    }\n}\n/**\n * @private\n */\nfunction onTickLabelFormat(ctx) {\n    var _a;\n    var axis = ctx.axis,\n        value = ctx.value;\n    if ((_a = axis.options.grid) === null || _a === void 0 ? void 0 : _a.enabled) {\n        var tickPos = axis.tickPositions;\n        var series = (axis.linkedParent || axis).series[0];\n        var isFirst = value === tickPos[0];\n        var isLast = value === tickPos[tickPos.length - 1];\n        var point = series && GridAxis_find(series.options.data,\n            function (p) {\n                return p[axis.isXAxis ? 'x' : 'y'] === value;\n        });\n        var pointCopy = void 0;\n        if (point && series.is('gantt')) {\n            // For the Gantt set point aliases to the pointCopy\n            // to do not change the original point\n            pointCopy = merge(point);\n            highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().seriesTypes.gantt.prototype.pointClass\n                .setGanttPointAliases(pointCopy, axis.chart);\n        }\n        // Make additional properties available for the\n        // formatter\n        ctx.isFirst = isFirst;\n        ctx.isLast = isLast;\n        ctx.point = pointCopy;\n    }\n}\n/**\n * Makes tick labels which are usually ignored in a linked axis\n * displayed if they are within range of linkedParent.min.\n * ```\n *                        _____________________________\n *                        |   |       |       |       |\n * Make this:             |   |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n *                        _____________________________\n *                        |   |       |       |       |\n * Into this:             | 1 |   2   |   3   |   4   |\n *                        |___|_______|_______|_______|\n *                          ^\n * ```\n * @private\n * @todo Does this function do what the drawing says? Seems to affect\n *       ticks and not the labels directly?\n */\nfunction onTrimTicks() {\n    var _a,\n        _b;\n    var axis = this,\n        options = axis.options,\n        gridOptions = options.grid || {},\n        categoryAxis = axis.categories,\n        tickPositions = axis.tickPositions,\n        firstPos = tickPositions[0],\n        secondPos = tickPositions[1],\n        lastPos = tickPositions[tickPositions.length - 1],\n        beforeLastPos = tickPositions[tickPositions.length - 2],\n        linkedMin = (_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.min,\n        linkedMax = (_b = axis.linkedParent) === null || _b === void 0 ? void 0 : _b.max,\n        min = linkedMin || axis.min,\n        max = linkedMax || axis.max,\n        tickInterval = axis.tickInterval,\n        startLessThanMin = ( // #19845\n        GridAxis_isNumber(min) &&\n            min >= firstPos + tickInterval &&\n            min < secondPos),\n        endMoreThanMin = (GridAxis_isNumber(min) &&\n            firstPos < min &&\n            firstPos + tickInterval > min),\n        startLessThanMax = (GridAxis_isNumber(max) &&\n            lastPos > max &&\n            lastPos - tickInterval < max),\n        endMoreThanMax = (GridAxis_isNumber(max) &&\n            max <= lastPos - tickInterval &&\n            max > beforeLastPos);\n    if (gridOptions.enabled === true &&\n        !categoryAxis &&\n        (axis.isXAxis || axis.isLinked)) {\n        if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n            tickPositions[0] = min;\n        }\n        if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n            tickPositions[tickPositions.length - 1] = max;\n        }\n    }\n}\n/**\n * Avoid altering tickInterval when reserving space.\n * @private\n */\nfunction wrapUnsquish(proceed) {\n    var axis = this;\n    var _a = axis.options.grid,\n        gridOptions = _a === void 0 ? {} : _a;\n    if (gridOptions.enabled === true && axis.categories) {\n        return axis.tickInterval;\n    }\n    return proceed.apply(axis, argsToArray(arguments));\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Additions for grid axes.\n * @private\n * @class\n */\nvar GridAxisAdditions = /** @class */ (function () {\n    /* *\n    *\n    *  Constructors\n    *\n    * */\n    function GridAxisAdditions(axis) {\n        this.axis = axis;\n    }\n    /* *\n    *\n    *  Functions\n    *\n    * */\n    /**\n     * Checks if an axis is the outer axis in its dimension. Since\n     * axes are placed outwards in order, the axis with the highest\n     * index is the outermost axis.\n     *\n     * Example: If there are multiple x-axes at the top of the chart,\n     * this function returns true if the axis supplied is the last\n     * of the x-axes.\n     *\n     * @private\n     *\n     * @return {boolean}\n     * True if the axis is the outermost axis in its dimension; false if\n     * not.\n     */\n    GridAxisAdditions.prototype.isOuterAxis = function () {\n        var _a;\n        var axis = this.axis;\n        var chart = axis.chart;\n        var columnIndex = axis.grid.columnIndex;\n        var columns = (((_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.grid.columns) ||\n                axis.grid.columns ||\n                []);\n        var parentAxis = columnIndex ? axis.linkedParent : axis;\n        var thisIndex = -1,\n            lastIndex = 0;\n        // On the left side, when we have columns (not only multiple axes), the\n        // main axis is to the left\n        if (axis.side === 3 && !chart.inverted && columns.length) {\n            return !axis.linkedParent;\n        }\n        (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n            if (otherAxis.side === axis.side &&\n                !otherAxis.options.isInternal) {\n                lastIndex = index;\n                if (otherAxis === parentAxis) {\n                    // Get the index of the axis in question\n                    thisIndex = index;\n                }\n            }\n        });\n        return (lastIndex === thisIndex &&\n            (GridAxis_isNumber(columnIndex) ?\n                columns.length === columnIndex :\n                true));\n    };\n    /**\n     * Add extra border based on the provided path.\n     * @private\n     * @param {SVGPath} path\n     * The path of the border.\n     * @return {Highcharts.SVGElement}\n     * Border\n     */\n    GridAxisAdditions.prototype.renderBorder = function (path) {\n        var axis = this.axis,\n            renderer = axis.chart.renderer,\n            options = axis.options,\n            extraBorderLine = renderer.path(path)\n                .addClass('highcharts-axis-line')\n                .add(axis.axisGroup);\n        if (!renderer.styledMode) {\n            extraBorderLine.attr({\n                stroke: options.lineColor,\n                'stroke-width': options.lineWidth,\n                zIndex: 7\n            });\n        }\n        return extraBorderLine;\n    };\n    return GridAxisAdditions;\n}());\n/* *\n *\n *  Registry\n *\n * */\n// First letter of the day of the week, e.g. 'M' for 'Monday'.\ndateFormats.E = function (timestamp) {\n    return this.dateFormat('%a', timestamp, true).charAt(0);\n};\n// Adds week date format\ndateFormats.W = function (timestamp) {\n    var d = this.toParts(timestamp),\n        firstDay = (d[7] + 6) % 7,\n        thursday = d.slice(0);\n    thursday[2] = d[2] - firstDay + 3;\n    var firstThursday = this.toParts(this.makeTime(thursday[0], 0, 1));\n    if (firstThursday[7] !== 4) {\n        d[1] = 0; // Set month to January\n        d[2] = 1 + (11 - firstThursday[7]) % 7;\n    }\n    var thursdayTS = this.makeTime(thursday[0],\n        thursday[1],\n        thursday[2]),\n        firstThursdayTS = this.makeTime(firstThursday[0],\n        firstThursday[1],\n        firstThursday[2]);\n    return (1 +\n        Math.floor((thursdayTS - firstThursdayTS) / 604800000)).toString();\n};\n/* *\n *\n *  Default Export\n *\n * */\nvar GridAxis = {\n    compose: compose\n};\n/* harmony default export */ var Axis_GridAxis = (GridAxis);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * @productdesc {gantt}\n * For grid axes (like in Gantt charts),\n * it is possible to declare as a list to provide different\n * formats depending on available space.\n *\n * Defaults to:\n * ```js\n * {\n *     hour: { list: ['%H:%M', '%H'] },\n *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n *     week: { list: ['Week %W', 'W%W'] },\n *     month: { list: ['%B', '%b', '%o'] }\n * }\n * ```\n *\n * @sample {gantt} gantt/grid-axis/date-time-label-formats\n *         Gantt chart with custom axis date format.\n *\n * @apioption xAxis.dateTimeLabelFormats\n */\n/**\n * Set grid options for the axis labels. Requires Highcharts Gantt.\n *\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid\n */\n/**\n * Enable grid on the axis labels. Defaults to true for Gantt charts.\n *\n * @type      {boolean}\n * @default   true\n * @since     6.2.0\n * @product   gantt\n * @apioption xAxis.grid.enabled\n */\n/**\n * Set specific options for each column (or row for horizontal axes) in the\n * grid. Each extra column/row is its own axis, and the axis options can be set\n * here.\n *\n * @sample gantt/demo/left-axis-table\n *         Left axis as a table\n * @sample gantt/demo/treegrid-columns\n *         Collapsible tree grid with columns\n *\n * @type      {Array<Highcharts.XAxisOptions>}\n * @apioption xAxis.grid.columns\n */\n/**\n * Set border color for the label grid lines.\n *\n * @type      {Highcharts.ColorString}\n * @default   #e6e6e6\n * @apioption xAxis.grid.borderColor\n */\n/**\n * Set border width of the label grid lines.\n *\n * @type      {number}\n * @default   1\n * @apioption xAxis.grid.borderWidth\n */\n/**\n * Set cell height for grid axis labels. By default this is calculated from font\n * size. This option only applies to horizontal axes. For vertical axes, check\n * the [#yAxis.staticScale](yAxis.staticScale) option.\n *\n * @sample gantt/grid-axis/cellheight\n *         Gant chart with custom cell height\n * @type      {number}\n * @apioption xAxis.grid.cellHeight\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es5/es-modules/Gantt/Tree.js\n/* *\n *\n *  (c) 2016-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* *\n *\n *  Imports\n *\n * */\n\nvar extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, Tree_isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, Tree_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates an object map from parent id to children's index.\n *\n * @private\n * @function Highcharts.Tree#getListOfParents\n *\n * @param {Array<*>} data\n *        List of points set in options. `Array.parent` is parent id of point.\n *\n * @return {Highcharts.Dictionary<Array<*>>}\n * Map from parent id to children index in data\n */\nfunction getListOfParents(data) {\n    var root = '',\n        ids = [],\n        listOfParents = data.reduce(function (prev,\n        curr) {\n            var _a = curr.parent,\n        parent = _a === void 0 ? '' : _a,\n        id = curr.id;\n        if (typeof prev[parent] === 'undefined') {\n            prev[parent] = [];\n        }\n        prev[parent].push(curr);\n        if (id) {\n            ids.push(id);\n        }\n        return prev;\n    }, {});\n    Object.keys(listOfParents).forEach(function (node) {\n        var _a;\n        if ((node !== root) && (ids.indexOf(node) === -1)) {\n            var adoptedByRoot = listOfParents[node].map(function (orphan) {\n                    var parentExcluded = __rest(orphan,\n                []); // #15196\n                    return parentExcluded;\n            });\n            (_a = listOfParents[root]).push.apply(_a, adoptedByRoot);\n            delete listOfParents[node];\n        }\n    });\n    return listOfParents;\n}\n/** @private */\nfunction getNode(id, parent, level, data, mapOfIdToChildren, options) {\n    var after = options && options.after,\n        before = options && options.before,\n        node = {\n            data: data,\n            depth: level - 1,\n            id: id,\n            level: level,\n            parent: (parent || '')\n        };\n    var descendants = 0,\n        height = 0,\n        start,\n        end;\n    // Allow custom logic before the children has been created.\n    if (typeof before === 'function') {\n        before(node, options);\n    }\n    // Call getNode recursively on the children. Calculate the height of the\n    // node, and the number of descendants.\n    var children = ((mapOfIdToChildren[id] || [])).map(function (child) {\n            var node = getNode(child.id,\n        id, (level + 1),\n        child,\n        mapOfIdToChildren,\n        options),\n        childStart = child.start || NaN,\n        childEnd = (child.milestone === true ?\n                childStart :\n                child.end ||\n                    NaN);\n        // Start should be the lowest child.start.\n        start = ((!Tree_isNumber(start) || childStart < start) ?\n            childStart :\n            start);\n        // End should be the largest child.end.\n        // If child is milestone, then use start as end.\n        end = ((!Tree_isNumber(end) || childEnd > end) ?\n            childEnd :\n            end);\n        descendants = descendants + 1 + node.descendants;\n        height = Math.max(node.height + 1, height);\n        return node;\n    });\n    // Calculate start and end for point if it is not already explicitly set.\n    if (data) {\n        data.start = Tree_pick(data.start, start);\n        data.end = Tree_pick(data.end, end);\n    }\n    extend(node, {\n        children: children,\n        descendants: descendants,\n        height: height\n    });\n    // Allow custom logic after the children has been created.\n    if (typeof after === 'function') {\n        after(node, options);\n    }\n    return node;\n}\n/** @private */\nfunction getTree(data, options) {\n    return getNode('', null, 1, null, getListOfParents(data), options);\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar Tree = {\n    getNode: getNode,\n    getTree: getTree\n};\n/* harmony default export */ var Gantt_Tree = (Tree);\n\n;// ./code/es5/es-modules/Core/Axis/TreeGrid/TreeGridTick.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nvar TreeGridTick_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, correctFloat = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).correctFloat, removeEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).removeEvent, TreeGridTick_isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, TreeGridTick_isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, TreeGridTick_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, TreeGridTick_wrap = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).wrap;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onTickInit() {\n    var tick = this;\n    if (!tick.treeGrid) {\n        tick.treeGrid = new TreeGridTickAdditions(tick);\n    }\n}\n/**\n * @private\n */\nfunction onTickHover(label) {\n    label.addClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({\n            textDecoration: 'underline'\n        });\n    }\n}\n/**\n * @private\n */\nfunction onTickHoverExit(label, options) {\n    var css = TreeGridTick_isObject(options.style) ? options.style : {};\n    label.removeClass('highcharts-treegrid-node-active');\n    if (!label.renderer.styledMode) {\n        label.css({ textDecoration: (css.textDecoration || 'none') });\n    }\n}\n/**\n * @private\n */\nfunction renderLabelIcon(tick, params) {\n    var _a;\n    var treeGrid = tick.treeGrid,\n        isNew = !treeGrid.labelIcon,\n        renderer = params.renderer,\n        labelBox = params.xy,\n        options = params.options,\n        width = options.width || 0,\n        height = options.height || 0,\n        padding = ((_a = options.padding) !== null && _a !== void 0 ? _a : tick.axis.linkedParent) ? 0 : 5,\n        iconCenter = {\n            x: labelBox.x - (width / 2) - padding,\n            y: labelBox.y - (height / 2)\n        },\n        rotation = params.collapsed ? 90 : 180,\n        shouldRender = params.show && TreeGridTick_isNumber(iconCenter.y);\n    var icon = treeGrid.labelIcon;\n    if (!icon) {\n        treeGrid.labelIcon = icon = renderer\n            .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n            .addClass('highcharts-label-icon')\n            .add(params.group);\n    }\n    // Set the new position, and show or hide\n    icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n    // Presentational attributes\n    if (!renderer.styledMode) {\n        icon\n            .attr({\n            cursor: 'pointer',\n            'fill': TreeGridTick_pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n            'stroke-width': 1,\n            stroke: options.lineColor,\n            strokeWidth: options.lineWidth || 0\n        });\n    }\n    // Update the icon positions\n    icon[isNew ? 'attr' : 'animate']({\n        translateX: iconCenter.x,\n        translateY: iconCenter.y,\n        rotation: rotation\n    });\n}\n/**\n * @private\n */\nfunction wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n    var _a;\n    var tick = this,\n        lbOptions = TreeGridTick_pick((_a = tick.options) === null || _a === void 0 ? void 0 : _a.labels,\n        labelOptions),\n        pos = tick.pos,\n        axis = tick.axis,\n        isTreeGrid = axis.type === 'treegrid',\n        result = proceed.apply(tick,\n        [x,\n        y,\n        label,\n        horiz,\n        lbOptions,\n        tickmarkOffset,\n        index,\n        step]);\n    var mapOfPosToGridNode,\n        node,\n        level;\n    if (isTreeGrid) {\n        var _b = (lbOptions && TreeGridTick_isObject(lbOptions.symbol,\n            true) ?\n                lbOptions.symbol :\n                {}),\n            _c = _b.width,\n            width = _c === void 0 ? 0 : _c,\n            _d = _b.padding,\n            padding = _d === void 0 ? axis.linkedParent ? 0 : 5 : _d,\n            indentation = (lbOptions && TreeGridTick_isNumber(lbOptions.indentation) ?\n                lbOptions.indentation :\n                0);\n        mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n        node = mapOfPosToGridNode === null || mapOfPosToGridNode === void 0 ? void 0 : mapOfPosToGridNode[pos];\n        level = (node === null || node === void 0 ? void 0 : node.depth) || 1;\n        result.x += (\n        // Add space for symbols\n        (width + (padding * 2)) +\n            // Apply indentation\n            ((level - 1) * indentation));\n    }\n    return result;\n}\n/**\n * @private\n */\nfunction wrapRenderLabel(proceed) {\n    var tick = this, pos = tick.pos, axis = tick.axis, label = tick.label, tickGrid = tick.treeGrid, tickOptions = tick.options, icon = tickGrid === null || tickGrid === void 0 ? void 0 : tickGrid.labelIcon, labelElement = label === null || label === void 0 ? void 0 : label.element, axisGrid = axis.treeGrid, axisOptions = axis.options, chart = axis.chart, tickPositions = axis.tickPositions, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = TreeGridTick_pick(tickOptions === null || tickOptions === void 0 ? void 0 : tickOptions.labels, axisOptions === null || axisOptions === void 0 ? void 0 : axisOptions.labels), symbolOptions = (labelOptions && TreeGridTick_isObject(labelOptions.symbol, true) ?\n            labelOptions.symbol :\n            {}), node = mapOfPosToGridNode === null || mapOfPosToGridNode === void 0 ? void 0 : mapOfPosToGridNode[pos], _a = node || {}, descendants = _a.descendants, depth = _a.depth, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axis.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n    var collapsed,\n        addClassName,\n        removeClassName;\n    if (isTreeGridElement && node) {\n        // Add class name for hierarchical styling.\n        label\n            .removeClass(new RegExp(prefixLevelClass + '.*'))\n            .addClass(prefixLevelClass + level);\n    }\n    proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n    if (isTreeGridElement && hasDescendants) {\n        collapsed = axisGrid.isCollapsed(node);\n        renderLabelIcon(tick, {\n            color: (!styledMode &&\n                label.styles.color ||\n                ''),\n            collapsed: collapsed,\n            group: label.parentGroup,\n            options: symbolOptions,\n            renderer: label.renderer,\n            show: shouldRender,\n            xy: label.xy\n        });\n        // Add class name for the node.\n        addClassName = prefixClassName +\n            (collapsed ? 'collapsed' : 'expanded');\n        removeClassName = prefixClassName +\n            (collapsed ? 'expanded' : 'collapsed');\n        label\n            .addClass(addClassName)\n            .removeClass(removeClassName);\n        if (!styledMode) {\n            label.css({\n                cursor: 'pointer'\n            });\n        }\n        // Add events to both label text and icon\n        [label, icon].forEach(function (object) {\n            if (object && !object.attachedTreeGridEvents) {\n                // On hover\n                TreeGridTick_addEvent(object.element, 'mouseover', function () {\n                    onTickHover(label);\n                });\n                // On hover out\n                TreeGridTick_addEvent(object.element, 'mouseout', function () {\n                    onTickHoverExit(label, labelOptions);\n                });\n                TreeGridTick_addEvent(object.element, 'click', function () {\n                    tickGrid.toggleCollapse();\n                });\n                object.attachedTreeGridEvents = true;\n            }\n        });\n    }\n    else if (icon) {\n        removeEvent(labelElement);\n        label === null || label === void 0 ? void 0 : label.css({ cursor: 'default' });\n        icon.destroy();\n        tickGrid.labelIcon = void 0;\n    }\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nvar TreeGridTickAdditions = /** @class */ (function () {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    function TreeGridTickAdditions(tick) {\n        this.tick = tick;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    TreeGridTickAdditions.compose = function (TickClass) {\n        var tickProto = TickClass.prototype;\n        if (!tickProto.toggleCollapse) {\n            TreeGridTick_addEvent(TickClass, 'init', onTickInit);\n            TreeGridTick_wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n            TreeGridTick_wrap(tickProto, 'renderLabel', wrapRenderLabel);\n            // Backwards compatibility\n            tickProto.collapse = function (redraw) {\n                this.treeGrid.collapse(redraw);\n            };\n            tickProto.expand = function (redraw) {\n                this.treeGrid.expand(redraw);\n            };\n            tickProto.toggleCollapse = function (redraw) {\n                this.treeGrid.toggleCollapse(redraw);\n            };\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Collapse the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#collapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    TreeGridTickAdditions.prototype.collapse = function (redraw) {\n        var _a = this.tick,\n            pos = _a.pos,\n            axis = _a.axis,\n            treeGrid = axis.treeGrid,\n            brokenAxis = axis.brokenAxis,\n            posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.collapse(posMappedNodes[pos]), redraw !== null && redraw !== void 0 ? redraw : true);\n        }\n    };\n    /**\n     * Destroy remaining labelIcon if exist.\n     *\n     * @private\n     * @function Highcharts.Tick#destroy\n     */\n    TreeGridTickAdditions.prototype.destroy = function () {\n        var _a;\n        (_a = this.labelIcon) === null || _a === void 0 ? void 0 : _a.destroy();\n    };\n    /**\n     * Expand the grid cell. Used when axis is of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#expand\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    TreeGridTickAdditions.prototype.expand = function (redraw) {\n        var _a = this.tick,\n            pos = _a.pos,\n            axis = _a.axis,\n            treeGrid = axis.treeGrid,\n            brokenAxis = axis.brokenAxis,\n            posMappedNodes = treeGrid.mapOfPosToGridNode;\n        if (brokenAxis && posMappedNodes) {\n            brokenAxis.setBreaks(treeGrid.expand(posMappedNodes[pos]), redraw !== null && redraw !== void 0 ? redraw : true);\n        }\n    };\n    /**\n     * Toggle the collapse/expand state of the grid cell. Used when axis is\n     * of type treegrid.\n     *\n     * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n     *\n     * @private\n     * @function Highcharts.Tick#toggleCollapse\n     *\n     * @param {boolean} [redraw=true]\n     * Whether to redraw the chart or wait for an explicit call to\n     * {@link Highcharts.Chart#redraw}\n     */\n    TreeGridTickAdditions.prototype.toggleCollapse = function (redraw) {\n        var _a,\n            _b;\n        if (redraw === void 0) { redraw = true; }\n        var _c = this.tick,\n            axis = _c.axis,\n            pos = _c.pos,\n            brokenAxis = axis.brokenAxis,\n            treeGrid = axis.treeGrid;\n        if (brokenAxis && treeGrid.mapOfPosToGridNode) {\n            var scrollMode = !!(axis.scrollbar && axis.staticScale),\n                maxPx = axis.pos + axis.len +\n                    (treeGrid.pendingSizeAdjustment || 0);\n            treeGrid.pendingSizeAdjustment = 0;\n            brokenAxis.setBreaks(treeGrid.toggleCollapse(treeGrid.mapOfPosToGridNode[pos]), scrollMode && redraw);\n            if (scrollMode) {\n                var adjustedMax = axis.toValue(axis.toPixels(axis.dataMax));\n                var newMaxVal = axis.toValue(maxPx) - axis.tickmarkOffset,\n                    newMinVal = (_a = axis.userMin) !== null && _a !== void 0 ? _a : axis.min;\n                // If dataMax is in a break.\n                treeGrid.adjustedMax = adjustedMax !== axis.dataMax ?\n                    adjustedMax - axis.tickmarkOffset :\n                    void 0;\n                if (newMaxVal > axis.dataMax) {\n                    var missingPx = maxPx -\n                            axis.toPixels(axis.dataMax + axis.tickmarkOffset);\n                    newMaxVal = (_b = treeGrid.adjustedMax) !== null && _b !== void 0 ? _b : axis.dataMax;\n                    // Check if enough space available on the min end.\n                    newMinVal = axis.toValue(axis.toPixels(newMinVal - axis.tickmarkOffset) - missingPx) + axis.tickmarkOffset;\n                    if (newMinVal < axis.dataMin) {\n                        missingPx = axis.toPixels(axis.dataMin) -\n                            axis.toPixels(newMinVal);\n                        newMinVal = axis.dataMin;\n                        treeGrid.pendingSizeAdjustment = missingPx;\n                    }\n                }\n                axis.setExtremes(correctFloat(newMinVal), correctFloat(newMaxVal), false, false, { trigger: 'toggleCollapse' });\n            }\n            if (redraw) {\n                axis.chart.redraw();\n            }\n        }\n    };\n    return TreeGridTickAdditions;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var TreeGridTick = (TreeGridTickAdditions);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Color\"],\"commonjs\":[\"highcharts\",\"Color\"],\"commonjs2\":[\"highcharts\",\"Color\"],\"root\":[\"Highcharts\",\"Color\"]}\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_ = __webpack_require__(620);\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default = /*#__PURE__*/__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);\n;// ./code/es5/es-modules/Series/TreeUtilities.js\n/* *\n *\n *  (c) 2014-2025 Highsoft AS\n *\n *  Authors: Jon Arild Nygard / Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar TreeUtilities_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, TreeUtilities_isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, TreeUtilities_isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, TreeUtilities_isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, TreeUtilities_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, TreeUtilities_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, relativeLength = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).relativeLength;\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable valid-jsdoc */\n/**\n * @private\n */\nfunction getColor(node, options) {\n    var index = options.index,\n        mapOptionsToLevel = options.mapOptionsToLevel,\n        parentColor = options.parentColor,\n        parentColorIndex = options.parentColorIndex,\n        series = options.series,\n        colors = options.colors,\n        siblings = options.siblings,\n        points = series.points,\n        chartOptionsChart = series.chart.options.chart;\n    var getColorByPoint,\n        point,\n        level,\n        colorByPoint,\n        colorIndexByPoint,\n        color,\n        colorIndex;\n    /**\n     * @private\n     */\n    var variateColor = function (color) {\n            var colorVariation = level && level.colorVariation;\n        if (colorVariation &&\n            colorVariation.key === 'brightness' &&\n            index &&\n            siblings) {\n            return highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse(color).brighten(colorVariation.to * (index / siblings)).get();\n        }\n        return color;\n    };\n    if (node) {\n        point = points[node.i];\n        level = mapOptionsToLevel[node.level] || {};\n        getColorByPoint = point && level.colorByPoint;\n        if (getColorByPoint) {\n            colorIndexByPoint = point.index % (colors ?\n                colors.length :\n                chartOptionsChart.colorCount);\n            colorByPoint = colors && colors[colorIndexByPoint];\n        }\n        // Select either point color, level color or inherited color.\n        if (!series.chart.styledMode) {\n            color = TreeUtilities_pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n        }\n        colorIndex = TreeUtilities_pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n    }\n    return {\n        color: color,\n        colorIndex: colorIndex\n    };\n}\n/**\n * Creates a map from level number to its given options.\n *\n * @private\n *\n * @param {Object} params\n * Object containing parameters.\n * - `defaults` Object containing default options. The default options are\n *   merged with the userOptions to get the final options for a specific\n *   level.\n * - `from` The lowest level number.\n * - `levels` User options from series.levels.\n * - `to` The highest level number.\n *\n * @return {Highcharts.Dictionary<object>|null}\n * Returns a map from level number to its given options.\n */\nfunction getLevelOptions(params) {\n    var result = {};\n    var defaults,\n        converted,\n        i,\n        from,\n        to,\n        levels;\n    if (TreeUtilities_isObject(params)) {\n        from = TreeUtilities_isNumber(params.from) ? params.from : 1;\n        levels = params.levels;\n        converted = {};\n        defaults = TreeUtilities_isObject(params.defaults) ? params.defaults : {};\n        if (TreeUtilities_isArray(levels)) {\n            converted = levels.reduce(function (obj, item) {\n                var level,\n                    levelIsConstant,\n                    options;\n                if (TreeUtilities_isObject(item) && TreeUtilities_isNumber(item.level)) {\n                    options = TreeUtilities_merge({}, item);\n                    levelIsConstant = TreeUtilities_pick(options.levelIsConstant, defaults.levelIsConstant);\n                    // Delete redundant properties.\n                    delete options.levelIsConstant;\n                    delete options.level;\n                    // Calculate which level these options apply to.\n                    level = item.level + (levelIsConstant ? 0 : from - 1);\n                    if (TreeUtilities_isObject(obj[level])) {\n                        TreeUtilities_merge(true, obj[level], options); // #16329\n                    }\n                    else {\n                        obj[level] = options;\n                    }\n                }\n                return obj;\n            }, {});\n        }\n        to = TreeUtilities_isNumber(params.to) ? params.to : 1;\n        for (i = 0; i <= to; i++) {\n            result[i] = TreeUtilities_merge({}, defaults, TreeUtilities_isObject(converted[i]) ? converted[i] : {});\n        }\n    }\n    return result;\n}\n/**\n * @private\n * @todo Combine buildTree and buildNode with setTreeValues\n * @todo Remove logic from Treemap and make it utilize this mixin.\n */\nfunction setTreeValues(tree, options) {\n    var before = options.before,\n        idRoot = options.idRoot,\n        mapIdToNode = options.mapIdToNode,\n        nodeRoot = mapIdToNode[idRoot],\n        levelIsConstant = (options.levelIsConstant !== false),\n        points = options.points,\n        point = points[tree.i],\n        optionsPoint = point && point.options || {},\n        children = [];\n    var childrenTotal = 0;\n    tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n    tree.name = TreeUtilities_pick(point && point.name, '');\n    tree.visible = (idRoot === tree.id ||\n        options.visible === true);\n    if (typeof before === 'function') {\n        tree = before(tree, options);\n    }\n    // First give the children some values\n    tree.children.forEach(function (child, i) {\n        var newOptions = TreeUtilities_extend({},\n            options);\n        TreeUtilities_extend(newOptions, {\n            index: i,\n            siblings: tree.children.length,\n            visible: tree.visible\n        });\n        child = setTreeValues(child, newOptions);\n        children.push(child);\n        if (child.visible) {\n            childrenTotal += child.val;\n        }\n    });\n    // Set the values\n    var value = TreeUtilities_pick(optionsPoint.value,\n        childrenTotal);\n    tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n    tree.children = children;\n    tree.childrenTotal = childrenTotal;\n    tree.isLeaf = tree.visible && !childrenTotal;\n    tree.val = value;\n    return tree;\n}\n/**\n * Update the rootId property on the series. Also makes sure that it is\n * accessible to exporting.\n *\n * @private\n *\n * @param {Object} series\n * The series to operate on.\n *\n * @return {string}\n * Returns the resulting rootId after update.\n */\nfunction updateRootId(series) {\n    var rootId,\n        options;\n    if (TreeUtilities_isObject(series)) {\n        // Get the series options.\n        options = TreeUtilities_isObject(series.options) ? series.options : {};\n        // Calculate the rootId.\n        rootId = TreeUtilities_pick(series.rootNode, options.rootId, '');\n        // Set rootId on series.userOptions to pick it up in exporting.\n        if (TreeUtilities_isObject(series.userOptions)) {\n            series.userOptions.rootId = rootId;\n        }\n        // Set rootId on series to pick it up on next update.\n        series.rootNode = rootId;\n    }\n    return rootId;\n}\n/**\n * Get the node width, which relies on the plot width and the nodeDistance\n * option.\n *\n * @private\n */\nfunction getNodeWidth(series, columnCount) {\n    var chart = series.chart,\n        options = series.options,\n        _a = options.nodeDistance,\n        nodeDistance = _a === void 0 ? 0 : _a,\n        _b = options.nodeWidth,\n        nodeWidth = _b === void 0 ? 0 : _b,\n        _c = chart.plotSizeX,\n        plotSizeX = _c === void 0 ? 1 : _c;\n    // Node width auto means they are evenly distributed along the width of\n    // the plot area\n    if (nodeWidth === 'auto') {\n        if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n            var fraction = parseFloat(nodeDistance) / 100,\n                total = columnCount + fraction * (columnCount - 1);\n            return plotSizeX / total;\n        }\n        var nDistance = Number(nodeDistance);\n        return ((plotSizeX + nDistance) /\n            (columnCount || 1)) - nDistance;\n    }\n    return relativeLength(nodeWidth, plotSizeX);\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar TreeUtilities = {\n    getColor: getColor,\n    getLevelOptions: getLevelOptions,\n    getNodeWidth: getNodeWidth,\n    setTreeValues: setTreeValues,\n    updateRootId: updateRootId\n};\n/* harmony default export */ var Series_TreeUtilities = (TreeUtilities);\n\n;// ./code/es5/es-modules/Core/Axis/TreeGrid/TreeGridAxis.js\n/* *\n *\n *  (c) 2016 Highsoft AS\n *  Authors: Jon Arild Nygard\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\n\nvar TreeGridAxis_getLevelOptions = Series_TreeUtilities.getLevelOptions;\n\nvar TreeGridAxis_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, TreeGridAxis_isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, splat = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).splat, TreeGridAxis_find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, TreeGridAxis_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, TreeGridAxis_isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, isString = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isString, TreeGridAxis_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, TreeGridAxis_removeEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).removeEvent, TreeGridAxis_wrap = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).wrap;\n/* *\n *\n *  Variables\n *\n * */\nvar TickConstructor;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Creates a break object from a node.\n *\n * @param {Object} node\n * The node to create a break object from.\n *\n * @private\n */\nfunction getBreakFromNode(node) {\n    return {\n        from: node.collapseStart || 0,\n        to: node.collapseEnd || 0,\n        showPoints: false\n    };\n}\n/**\n * Creates a tree structure of the data, and the treegrid. Calculates\n * categories, and y-values of points based on the tree.\n *\n * @private\n * @function getTreeGridFromData\n *\n * @param {Array<Highcharts.GanttPointOptions>} data\n * All the data points to display in the axis.\n *\n * @param {boolean} uniqueNames\n * Whether or not the data node with the same name should share grid cell. If\n * true they do share cell. False by default.\n *\n * @param {number} numberOfSeries\n *\n * @return {Object}\n * Returns an object containing categories, mapOfIdToNode,\n * mapOfPosToGridNode, and tree.\n *\n * @todo There should be only one point per line.\n * @todo It should be optional to have one category per point, or merge\n *       cells\n * @todo Add unit-tests.\n */\nfunction getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n    var categories = [],\n        collapsedNodes = [],\n        mapOfIdToNode = {},\n        uniqueNamesEnabled = uniqueNames || false;\n    var mapOfPosToGridNode = {},\n        posIterator = -1;\n    // Build the tree from the series data.\n    var treeParams = {\n            // After the children has been created.\n            after: function (node) {\n                var gridNode = mapOfPosToGridNode[node.pos];\n            var height = 0,\n                descendants = 0;\n            gridNode.children.forEach(function (child) {\n                descendants += (child.descendants || 0) + 1;\n                height = Math.max((child.height || 0) + 1, height);\n            });\n            gridNode.descendants = descendants;\n            gridNode.height = height;\n            if (gridNode.collapsed) {\n                collapsedNodes.push(gridNode);\n            }\n        },\n        // Before the children has been created.\n        before: function (node) {\n            var data = TreeGridAxis_isObject(node.data,\n                true) ?\n                    node.data :\n                    {},\n                name = isString(data.name) ? data.name : '',\n                parentNode = mapOfIdToNode[node.parent],\n                parentGridNode = (TreeGridAxis_isObject(parentNode,\n                true) ?\n                    mapOfPosToGridNode[parentNode.pos] :\n                    null),\n                hasSameName = function (x) {\n                    return x.name === name;\n            };\n            var gridNode,\n                pos;\n            // If not unique names, look for sibling node with the same name\n            if (uniqueNamesEnabled &&\n                TreeGridAxis_isObject(parentGridNode, true) &&\n                !!(gridNode = TreeGridAxis_find(parentGridNode.children, hasSameName))) {\n                // If there is a gridNode with the same name, reuse position\n                pos = gridNode.pos;\n                // Add data node to list of nodes in the grid node.\n                gridNode.nodes.push(node);\n            }\n            else {\n                // If it is a new grid node, increment position.\n                pos = posIterator++;\n            }\n            // Add new grid node to map.\n            if (!mapOfPosToGridNode[pos]) {\n                mapOfPosToGridNode[pos] = gridNode = {\n                    depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                    name: name,\n                    id: data.id,\n                    nodes: [node],\n                    children: [],\n                    pos: pos\n                };\n                // If not root, then add name to categories.\n                if (pos !== -1) {\n                    categories.push(name);\n                }\n                // Add name to list of children.\n                if (TreeGridAxis_isObject(parentGridNode, true)) {\n                    parentGridNode.children.push(gridNode);\n                }\n            }\n            // Add data node to map\n            if (isString(node.id)) {\n                mapOfIdToNode[node.id] = node;\n            }\n            // If one of the points are collapsed, then start the grid node\n            // in collapsed state.\n            if (gridNode && data.collapsed === true) {\n                gridNode.collapsed = true;\n            }\n            // Assign pos to data node\n            node.pos = pos;\n        }\n    };\n    var updateYValuesAndTickPos = function (map,\n        numberOfSeries) {\n            var setValues = function (gridNode,\n        start,\n        result) {\n                var nodes = gridNode.nodes,\n        padding = 0.5;\n            var end = start + (start === -1 ? 0 : numberOfSeries - 1);\n            var diff = (end - start) / 2,\n                pos = start + diff;\n            nodes.forEach(function (node) {\n                var data = node.data;\n                if (TreeGridAxis_isObject(data, true)) {\n                    // Update point\n                    data.y = start + (data.seriesIndex || 0);\n                    // Remove the property once used\n                    delete data.seriesIndex;\n                }\n                node.pos = pos;\n            });\n            result[pos] = gridNode;\n            gridNode.pos = pos;\n            gridNode.tickmarkOffset = diff + padding;\n            gridNode.collapseStart = end + padding;\n            gridNode.children.forEach(function (child) {\n                setValues(child, end + 1, result);\n                end = (child.collapseEnd || 0) - padding;\n            });\n            // Set collapseEnd to the end of the last child node.\n            gridNode.collapseEnd = end + padding;\n            return result;\n        };\n        return setValues(map['-1'], -1, {});\n    };\n    // Create tree from data\n    var tree = Gantt_Tree.getTree(data,\n        treeParams);\n    // Update y values of data, and set calculate tick positions.\n    mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n    // Return the resulting data.\n    return {\n        categories: categories,\n        mapOfIdToNode: mapOfIdToNode,\n        mapOfPosToGridNode: mapOfPosToGridNode,\n        collapsedNodes: collapsedNodes,\n        tree: tree\n    };\n}\n/**\n * Builds the tree of categories and calculates its positions.\n * @private\n * @param {Object} e Event object\n * @param {Object} e.target The chart instance which the event was fired on.\n * @param {object[]} e.target.axes The axes of the chart.\n */\nfunction onBeforeRender(e) {\n    var chart = e.target,\n        axes = chart.axes;\n    axes.filter(function (axis) { return axis.type === 'treegrid'; }).forEach(function (axis) {\n        var _a;\n        var options = axis.options,\n            labelOptions = options.labels,\n            uniqueNames = axis.uniqueNames,\n            max = chart.time.parse(options.max), \n            // Check whether any of series is rendering for the first\n            // time, visibility has changed, or its data is dirty, and\n            // only then update. #10570, #10580. Also check if\n            // mapOfPosToGridNode exists. #10887\n            isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n                axis.series.some(function (series) {\n                    return !series.hasRendered ||\n                        series.isDirtyData ||\n                        series.isDirty;\n            }));\n        var numberOfSeries = 0,\n            data,\n            treeGrid;\n        if (isDirty) {\n            var seriesHasPrimitivePoints_1 = [];\n            // Concatenate data from all series assigned to this axis.\n            data = axis.series.reduce(function (arr, s) {\n                var seriesData = (s.options.data || []),\n                    firstPoint = seriesData[0], \n                    // Check if the first point is a simple array of values.\n                    // If so we assume that this is the case for all points.\n                    foundPrimitivePoint = Array.isArray(firstPoint) &&\n                        !firstPoint.find(function (value) { return (typeof value === 'object'); });\n                seriesHasPrimitivePoints_1.push(foundPrimitivePoint);\n                if (s.visible) {\n                    // Push all data to array\n                    seriesData.forEach(function (pointOptions) {\n                        var _a;\n                        // For using keys, or when using primitive points,\n                        // rebuild the data structure\n                        if (foundPrimitivePoint || ((_a = s.options.keys) === null || _a === void 0 ? void 0 : _a.length)) {\n                            pointOptions = s.pointClass.prototype\n                                .optionsToObject\n                                .call({ series: s }, pointOptions);\n                            s.pointClass.setGanttPointAliases(pointOptions, chart);\n                        }\n                        if (TreeGridAxis_isObject(pointOptions, true)) {\n                            // Set series index on data. Removed again\n                            // after use.\n                            pointOptions.seriesIndex = numberOfSeries;\n                            arr.push(pointOptions);\n                        }\n                    });\n                    // Increment series index\n                    if (uniqueNames === true) {\n                        numberOfSeries++;\n                    }\n                }\n                return arr;\n            }, []);\n            // If max is higher than set data - add a\n            // dummy data to render categories #10779\n            if (max && data.length < max) {\n                for (var i = data.length; i <= max; i++) {\n                    data.push({\n                        // Use the zero-width character\n                        // to avoid conflict with uniqueNames\n                        name: i + '\\u200B'\n                    });\n                }\n            }\n            // `setScale` is fired after all the series is initialized,\n            // which is an ideal time to update the axis.categories.\n            treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n            // Assign values to the axis.\n            axis.categories = treeGrid.categories;\n            axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n            axis.hasNames = true;\n            axis.treeGrid.tree = treeGrid.tree;\n            // Update yData now that we have calculated the y values\n            axis.series.forEach(function (series, index) {\n                var axisData = (series.options.data || []).map(function (d) {\n                        var _a;\n                    if (seriesHasPrimitivePoints_1[index] ||\n                        (TreeGridAxis_isArray(d) && ((_a = series.options.keys) === null || _a === void 0 ? void 0 : _a.length))) {\n                        // Get the axisData from the data array used to\n                        // build the treeGrid where has been modified\n                        data.forEach(function (point) {\n                            var toArray = splat(d);\n                            if (toArray.indexOf(point.x || 0) >= 0 &&\n                                toArray.indexOf(point.x2 || 0) >= 0) {\n                                d = point;\n                            }\n                        });\n                    }\n                    return TreeGridAxis_isObject(d, true) ? TreeGridAxis_merge(d) : d;\n                });\n                // Avoid destroying points when series is not visible\n                if (series.visible) {\n                    series.setData(axisData, false);\n                }\n            });\n            // Calculate the label options for each level in the tree.\n            axis.treeGrid.mapOptionsToLevel =\n                TreeGridAxis_getLevelOptions({\n                    defaults: labelOptions,\n                    from: 1,\n                    levels: labelOptions === null || labelOptions === void 0 ? void 0 : labelOptions.levels,\n                    to: (_a = axis.treeGrid.tree) === null || _a === void 0 ? void 0 : _a.height\n                });\n            // Setting initial collapsed nodes\n            if (e.type === 'beforeRender') {\n                axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n            }\n        }\n    });\n}\n/**\n * Generates a tick for initial positioning.\n *\n * @private\n * @function Highcharts.GridAxis#generateTick\n *\n * @param {Function} proceed\n * The original generateTick function.\n *\n * @param {number} pos\n * The tick position in axis values.\n */\nfunction wrapGenerateTick(proceed, pos) {\n    var axis = this,\n        mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {},\n        isTreeGrid = axis.type === 'treegrid',\n        ticks = axis.ticks;\n    var tick = ticks[pos],\n        levelOptions,\n        options,\n        gridNode;\n    if (isTreeGrid &&\n        axis.treeGrid.mapOfPosToGridNode) {\n        gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n        levelOptions = mapOptionsToLevel[gridNode.depth];\n        if (levelOptions) {\n            options = {\n                labels: levelOptions\n            };\n        }\n        if (!tick &&\n            TickConstructor) {\n            ticks[pos] = tick =\n                new TickConstructor(axis, pos, void 0, void 0, {\n                    category: gridNode.name,\n                    tickmarkOffset: gridNode.tickmarkOffset,\n                    options: options\n                });\n        }\n        else {\n            // Update labels depending on tick interval\n            tick.parameters.category = gridNode.name;\n            tick.options = options;\n            tick.addLabel();\n        }\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * @private\n */\nfunction wrapInit(proceed, chart, userOptions, coll) {\n    var axis = this,\n        isTreeGrid = userOptions.type === 'treegrid';\n    if (!axis.treeGrid) {\n        axis.treeGrid = new TreeGridAxisAdditions(axis);\n    }\n    // Set default and forced options for TreeGrid\n    if (isTreeGrid) {\n        // Add event for updating the categories of a treegrid.\n        // NOTE Preferably these events should be set on the axis.\n        TreeGridAxis_addEvent(chart, 'beforeRender', onBeforeRender);\n        TreeGridAxis_addEvent(chart, 'beforeRedraw', onBeforeRender);\n        // Add new collapsed nodes on addseries\n        TreeGridAxis_addEvent(chart, 'addSeries', function (e) {\n            if (e.options.data) {\n                var treeGrid = getTreeGridFromData(e.options.data,\n                    userOptions.uniqueNames || false, 1);\n                axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n            }\n        });\n        // Collapse all nodes in axis.treegrid.collapsednodes\n        // where collapsed equals true.\n        TreeGridAxis_addEvent(axis, 'foundExtremes', function () {\n            var _a;\n            (_a = axis.treeGrid.collapsedNodes) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n                var breaks = axis.treeGrid.collapse(node);\n                if (axis.brokenAxis) {\n                    axis.brokenAxis.setBreaks(breaks, false);\n                    // Remove the node from the axis collapsedNodes\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes = axis.treeGrid\n                            .collapsedNodes\n                            .filter(function (n) { return ((node.collapseStart !==\n                            n.collapseStart) ||\n                            node.collapseEnd !== n.collapseEnd); });\n                    }\n                }\n            });\n        });\n        // If staticScale is not defined on the yAxis\n        // and chart height is set, set axis.isDirty\n        // to ensure collapsing works (#12012)\n        TreeGridAxis_addEvent(axis, 'afterBreaks', function () {\n            if (axis.coll === 'yAxis' &&\n                !axis.staticScale &&\n                axis.chart.options.chart.height) {\n                axis.isDirty = true;\n            }\n        });\n        userOptions = TreeGridAxis_merge({\n            // Default options\n            grid: {\n                enabled: true\n            },\n            // TODO: add support for align in treegrid.\n            labels: {\n                align: 'left',\n                /**\n                * Set options on specific levels in a tree grid axis. Takes\n                * precedence over labels options.\n                *\n                * @sample {gantt} gantt/treegrid-axis/labels-levels\n                *         Levels on TreeGrid Labels\n                *\n                * @type      {Array<*>}\n                * @product   gantt\n                * @apioption yAxis.labels.levels\n                *\n                * @private\n                */\n                levels: [{\n                        /**\n                        * Specify the level which the options within this object\n                        * applies to.\n                        *\n                        * @type      {number}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels.level\n                        *\n                        * @private\n                        */\n                        level: void 0\n                    }, {\n                        level: 1,\n                        /**\n                         * @type      {Highcharts.CSSObject}\n                         * @product   gantt\n                         * @apioption yAxis.labels.levels.style\n                         *\n                         * @private\n                         */\n                        style: {\n                            /** @ignore-option */\n                            fontWeight: 'bold'\n                        }\n                    }],\n                /**\n                 * The symbol for the collapse and expand icon in a\n                 * treegrid.\n                 *\n                 * @product      gantt\n                 * @optionparent yAxis.labels.symbol\n                 *\n                 * @private\n                 */\n                symbol: {\n                    /**\n                     * The symbol type. Points to a definition function in\n                     * the `Highcharts.Renderer.symbols` collection.\n                     *\n                     * @type {Highcharts.SymbolKeyValue}\n                     *\n                     * @private\n                     */\n                    type: 'triangle',\n                    x: -5,\n                    y: -5,\n                    height: 10,\n                    width: 10\n                }\n            },\n            uniqueNames: false\n        }, userOptions, {\n            // Forced options\n            reversed: true\n        });\n    }\n    // Now apply the original function with the original arguments, which are\n    // sliced off this function's arguments\n    proceed.apply(axis, [chart, userOptions, coll]);\n    if (isTreeGrid) {\n        axis.hasNames = true;\n        axis.options.showLastLabel = true;\n    }\n}\n/**\n * Set the tick positions, tickInterval, axis min and max.\n *\n * @private\n * @function Highcharts.GridAxis#setTickInterval\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapSetTickInterval(proceed) {\n    var _a,\n        _b,\n        _c,\n        _d,\n        _e,\n        _f,\n        _g;\n    var axis = this,\n        options = axis.options,\n        time = axis.chart.time,\n        linkedParent = typeof options.linkedTo === 'number' ?\n            (_a = this.chart[axis.coll]) === null || _a === void 0 ? void 0 : _a[options.linkedTo] :\n            void 0,\n        isTreeGrid = axis.type === 'treegrid';\n    if (isTreeGrid) {\n        axis.min = (_c = (_b = axis.userMin) !== null && _b !== void 0 ? _b : time.parse(options.min)) !== null && _c !== void 0 ? _c : axis.dataMin;\n        axis.max = (_e = (_d = axis.userMax) !== null && _d !== void 0 ? _d : time.parse(options.max)) !== null && _e !== void 0 ? _e : axis.dataMax;\n        TreeGridAxis_fireEvent(axis, 'foundExtremes');\n        // `setAxisTranslation` modifies the min and max according to axis\n        // breaks.\n        axis.setAxisTranslation();\n        axis.tickInterval = 1;\n        axis.tickmarkOffset = 0.5;\n        axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n            axis.treeGrid.getTickPositions() :\n            [];\n        if (linkedParent) {\n            var linkedParentExtremes = linkedParent.getExtremes();\n            axis.min = (_f = linkedParentExtremes.min) !== null && _f !== void 0 ? _f : linkedParentExtremes.dataMin;\n            axis.max = (_g = linkedParentExtremes.max) !== null && _g !== void 0 ? _g : linkedParentExtremes.dataMax;\n            axis.tickPositions = linkedParent.tickPositions;\n        }\n        axis.linkedParent = linkedParent;\n    }\n    else {\n        proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/**\n * Wrap axis redraw to remove TreeGrid events from ticks\n *\n * @private\n * @function Highcharts.GridAxis#redraw\n *\n * @param {Function} proceed\n * The original setTickInterval function.\n */\nfunction wrapRedraw(proceed) {\n    var axis = this,\n        isTreeGrid = this.type === 'treegrid';\n    if (isTreeGrid && axis.visible) {\n        axis.tickPositions.forEach(function (pos) {\n            var _a;\n            var tick = axis.ticks[pos];\n            if ((_a = tick.label) === null || _a === void 0 ? void 0 : _a.attachedTreeGridEvents) {\n                TreeGridAxis_removeEvent(tick.label.element);\n                tick.label.attachedTreeGridEvents = false;\n            }\n        });\n    }\n    proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n}\n/* *\n *\n *  Classes\n *\n * */\n/**\n * @private\n * @class\n */\nvar TreeGridAxisAdditions = /** @class */ (function () {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    /**\n     * @private\n     */\n    function TreeGridAxisAdditions(axis) {\n        this.pendingSizeAdjustment = 0;\n        this.axis = axis;\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    TreeGridAxisAdditions.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n        if (!AxisClass.keepProps.includes('treeGrid')) {\n            var axisProps = AxisClass.prototype;\n            AxisClass.keepProps.push('treeGrid');\n            TreeGridAxis_wrap(axisProps, 'generateTick', wrapGenerateTick);\n            TreeGridAxis_wrap(axisProps, 'init', wrapInit);\n            TreeGridAxis_wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n            TreeGridAxis_wrap(axisProps, 'redraw', wrapRedraw);\n            // Make utility functions available for testing.\n            axisProps.utils = {\n                getNode: Gantt_Tree.getNode\n            };\n            if (!TickConstructor) {\n                TickConstructor = TickClass;\n            }\n        }\n        Axis_GridAxis.compose(AxisClass, ChartClass, TickClass);\n        Axis_BrokenAxis.compose(AxisClass, SeriesClass);\n        TreeGridTick.compose(TickClass);\n        return AxisClass;\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Set the collapse status.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     */\n    TreeGridAxisAdditions.prototype.setCollapsedStatus = function (node) {\n        var axis = this.axis,\n            chart = axis.chart;\n        axis.series.forEach(function (series) {\n            var data = series.options.data;\n            if (node.id && data) {\n                var point = chart.get(node.id),\n                    dataPoint = data[series.data.indexOf(point)];\n                if (point && dataPoint) {\n                    point.collapsed = node.collapsed;\n                    dataPoint.collapsed = node.collapsed;\n                }\n            }\n        });\n    };\n    /**\n     * Calculates the new axis breaks to collapse a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to collapse.\n     *\n     * @param {number} pos\n     * The tick position to collapse.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    TreeGridAxisAdditions.prototype.collapse = function (node) {\n        var axis = this.axis,\n            breaks = axis.options.breaks || [],\n            obj = getBreakFromNode(node);\n        breaks.push(obj);\n        // Change the collapsed flag #13838\n        node.collapsed = true;\n        axis.treeGrid.setCollapsedStatus(node);\n        return breaks;\n    };\n    /**\n     * Calculates the new axis breaks to expand a node.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to expand.\n     *\n     * @param {number} pos\n     * The tick position to expand.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    TreeGridAxisAdditions.prototype.expand = function (node) {\n        var _a;\n        var axis = this.axis,\n            obj = getBreakFromNode(node);\n        // Change the collapsed flag #13838\n        node.collapsed = false;\n        axis.treeGrid.setCollapsedStatus(node);\n        // Remove the break from the axis breaks array.\n        return ((_a = axis.options.breaks) === null || _a === void 0 ? void 0 : _a.reduce(function (arr, b) {\n            if (b.to !== obj.to || b.from !== obj.from) {\n                arr.push(b);\n            }\n            return arr;\n        }, [])) || [];\n    };\n    /**\n     * Creates a list of positions for the ticks on the axis. Filters out\n     * positions that are outside min and max, or is inside an axis break.\n     *\n     * @private\n     *\n     * @return {Array<number>}\n     * List of positions.\n     */\n    TreeGridAxisAdditions.prototype.getTickPositions = function () {\n        var axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n        return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n            var _a;\n            var pos = +key;\n            if (pos >= roundedMin &&\n                pos <= roundedMax &&\n                !((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(pos))) {\n                arr.push(pos);\n            }\n            return arr;\n        }, []);\n    };\n    /**\n     * Check if a node is collapsed.\n     *\n     * @private\n     *\n     * @param {Object} node\n     * The node to check if is collapsed.\n     *\n     * @return {boolean}\n     * Returns true if collapsed, false if expanded.\n     */\n    TreeGridAxisAdditions.prototype.isCollapsed = function (node) {\n        var axis = this.axis,\n            breaks = (axis.options.breaks || []),\n            obj = getBreakFromNode(node);\n        return breaks.some(function (b) {\n            return b.from === obj.from && b.to === obj.to;\n        });\n    };\n    /**\n     * Calculates the new axis breaks after toggling the collapse/expand\n     * state of a node. If it is collapsed it will be expanded, and if it is\n     * expanded it will be collapsed.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} axis\n     * The axis to check against.\n     *\n     * @param {Highcharts.GridNode} node\n     * The node to toggle.\n     *\n     * @return {Array<object>}\n     * Returns an array of the new breaks for the axis.\n     */\n    TreeGridAxisAdditions.prototype.toggleCollapse = function (node) {\n        return (this.isCollapsed(node) ?\n            this.expand(node) :\n            this.collapse(node));\n    };\n    return TreeGridAxisAdditions;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var TreeGridAxis = (TreeGridAxisAdditions);\n\n;// ./code/es5/es-modules/masters/modules/treegrid.js\n\n\n\n\nvar G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nTreeGridAxis.compose(G.Axis, G.Chart, G.Series, G.Tick);\n/* harmony default export */ var treegrid_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__184__","__WEBPACK_EXTERNAL_MODULE__532__","__WEBPACK_EXTERNAL_MODULE__620__","GridAxisSide","BrokenAxis","TickConstructor","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","treegrid_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default","addEvent","find","fireEvent","isArray","isNumber","pick","onAxisAfterInit","brokenAxis","setBreaks","options","breaks","onAxisAfterSetOptions","_a","keys","axis","length","ordinal","onAxisAfterSetTickPositions","hasBreaks","tickPositions","info","newPositions","i","isInAnyBreak","push","onAxisInit","Additions","onSeriesAfterGeneratePoints","_b","isDirty","_c","connectNulls","points","xAxis","yAxis","point","isPointInBreak","y","x","visible","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","threshold","series","brokenAxis_1","forEach","breakArray","isXAxis","min","toUpperCase","brk","eventName","from","to","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","slice","gapUnit","basePointRange","current","next","xRange","splice","isNull","stacking","stack","stacks","stackKey","stackLabels","total","getGraphPath","compose","AxisClass","SeriesClass","keepProps","includes","seriesProto","gappedPath","isInBreak","val","ret","repeat","Infinity","test","inclusive","lin2Val","nval","_i","breakArray_1","len","breakArray_2","val2Lin","breakArray_3","breakArray_4","findBreakAt","b","testKeep","inbrk","keep","showPoints","redraw","time","chart","parse","userOptions","forceRedraw","val2lin","lin2val","setExtremes","newMin","newMax","animation","eventArguments","treeGrid","tree","breaks_1","axisBreak","constructor","setAxisTranslation","unitLength","_d","_e","_f","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayTemp_1","breakArray_5","pointRangePadding","length_1","min_1","userMin","max_1","userMax","max","dataMin_1","dataMin","dataMax_1","dataMax","Math","value","move","size","breakSize","sort","staticScale","transA","minPixelPadding","minPointOffset","Axis_BrokenAxis","highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_","highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default","dateFormats","GridAxis_addEvent","defined","erase","GridAxis_find","GridAxis_isArray","GridAxis_isNumber","merge","GridAxis_pick","timeUnits","wrap","isObject","getMaxLabelDimensions","ticks","dimensions","width","height","pos","label","tick","labelHeight","labelWidth","getBBox","textStr","textPxLength","round","type","mapOfPosToGridNode","treeDepth","labels","indentation","wrapGetOffset","proceed","grid","columnsFirst","side","apply","isColumn","columns","reverse","column","getOffset","onAfterGetTitlePosition","e","gridOptions","enabled","axisTitle","axisHeight","horiz","axisLeft","left","offset","opposite","options_1","axisTop","top","axisWidth","tickSize","titleWidth","xOption","title","yOption","titleMargin","margin","titleFontSize","renderer","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","align","categories","showLastLabel","labelRotation","rotation","minTickInterval","columnIndex","columnOptions","isInternal","linkedTo","scrollbar","axes","coll","onAfterRender","firstTick","styledMode","slotWidth","style","css","maxLabelDimensions","rightWall","destroy","isOuterAxis","axisLine","lineWidth","linePath","getLinePath","startPoint","endPoint","distance","tickLength","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","chartWidth","toPixels","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","attr","stroke","lineColor","animate","lowerBorder","axisLineExtra","showAxis","render","hasRendered","linkedParent","lastTick","firstTick_1","tickMark","hiddenLabels","pop","element","show","hiddenMarks","hide","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","pointRange","dateTimeLabelFormats","unitName","range","count","tickInterval","onAfterSetOptions","gridAxisOptions","className","hour","list","day","week","month","borderWidth","padding","fontSize","text","reserveSpace","textOverflow","units","tickPixelInterval","tickPositioner","parentInfo","unitIdx","unit_1","unit","counts","unitRange","getTimeTicks","startOfWeek","minPadding","maxPadding","tickWidth","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","labelPadding","cellHeight","onChartAfterSetChartSize","setAxisSize","onDestroy","keepEvents","onInit","borderColor","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","reversed","labelOpts","tickPos","nextTickPos","index","crispCorr","top_1","right","chartHeight","translate","lblMetrics","useHTML","lines","h","onTickLabelFormat","ctx","isFirst","data","p","pointCopy","is","seriesTypes","gantt","pointClass","setGanttPointAliases","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","startOnTick","endOnTick","wrapUnsquish","args","arguments","Array","parentAxis","thisIndex","lastIndex","inverted","otherAxis","path","extraBorderLine","addClass","add","axisGroup","zIndex","E","timestamp","dateFormat","charAt","W","toParts","firstDay","thursday","firstThursday","makeTime","floor","thursdayTS","toString","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","extend","Tree_isNumber","Tree_pick","getNode","id","parent","level","mapOfIdToChildren","start","end","after","before","node","depth","descendants","children","map","child","childStart","NaN","childEnd","milestone","Gantt_Tree","getTree","ids","listOfParents","reduce","prev","curr","adoptedByRoot","orphan","TreeGridTick_addEvent","correctFloat","removeEvent","TreeGridTick_isObject","TreeGridTick_isNumber","TreeGridTick_pick","TreeGridTick_wrap","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","step","lbOptions","isTreeGrid","result","symbol","wrapRenderLabel","params","isNew","labelBox","iconCenter","shouldRender","icon","collapsed","tickGrid","tickOptions","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","prefixClassName","prefixLevelClass","removeClass","RegExp","isCollapsed","color","styles","group","parentGroup","xy","symbols","cursor","strokeWidth","translateX","translateY","object","attachedTreeGridEvents","textDecoration","toggleCollapse","TickClass","tickProto","collapse","expand","posMappedNodes","scrollMode","maxPx","pendingSizeAdjustment","adjustedMax","toValue","newMaxVal","newMinVal","missingPx","trigger","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_","TreeUtilities_isArray","TreeUtilities_isNumber","TreeUtilities_isObject","TreeUtilities_merge","TreeUtilities_pick","TreeGridAxis_getLevelOptions","relativeLength","defaults","converted","levels","item","levelIsConstant","TreeGridAxis_addEvent","TreeGridAxis_isArray","splat","TreeGridAxis_find","TreeGridAxis_fireEvent","TreeGridAxis_isObject","isString","TreeGridAxis_merge","TreeGridAxis_removeEvent","TreeGridAxis_wrap","getBreakFromNode","collapseStart","collapseEnd","getTreeGridFromData","uniqueNames","numberOfSeries","setValues","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","name","parentNode","parentGridNode","nodes","diff","seriesIndex","onBeforeRender","target","filter","some","isDirtyData","seriesHasPrimitivePoints_1","arr","seriesData","firstPoint","foundPrimitivePoint","pointOptions","optionsToObject","hasNames","axisData","toArray","x2","setData","mapOptionsToLevel","wrapGenerateTick","levelOptions","category","parameters","addLabel","wrapInit","TreeGridAxisAdditions","concat","fontWeight","wrapSetTickInterval","_g","getTickPositions","linkedParentExtremes","getExtremes","wrapRedraw","ChartClass","axisProps","utils","TreeGridTick","setCollapsedStatus","dataPoint","roundedMin","roundedMax","ceil","G","TreeGridAxis","Axis","Chart","Series","Tick"],"mappings":"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"}